// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "VirtualMachine",
    group: "Compute",
    properties: ({ getId }) => ({
      name: "testvm",
      properties: {
        hardwareProfile: {
          vmSize: "Standard_B1s",
        },
        osProfile: {
          computerName: "testvm",
          adminUsername: "fredericheem",
          linuxConfiguration: {
            disablePasswordAuthentication: true,
            ssh: {
              publicKeys: [
                {
                  path: "/home/fredericheem/.ssh/authorized_keys",
                  keyData:
                    "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/+ZCfuXkRdiRcNjERsbmuqtKBY+ctRVd/q06VNRGxqAGI+DGnc55eMxvhh1ptdjuNg6HA7yufumrj9AmxrKEtGmRfseeVUy3th7FphEKKYCkpb8zxIEdfRr5r374gl3QxrxeKzk2YgsCQAfwfaD+ZlNQyKHWgnfwFCGEh3ciL5eSQP5xittjJap35l17kwygtCYxPcA+5DlAjDtonLGzypw/Bnb8U6TutWiHsK5Jx4iYVo4rsPmy6MsTZUx0gAKf0jvRpROK4TOHUAfio05jxfDVfE2hOZAvYFas5fKOCI8in/xaVy/hoW3rFU7OvPWfyNv7+5IE6ytI59c5e9PMXJ9IVcQmiPkfTfK91YsYcyknf6SXdTjs0aPWRpCp+UpDr98qt8xqTMujI1RA075719T1I3OUO7+w/prFLUPkEHbOLnfJ1kzam6kX87OkEG6OwIqR3A7Sw1q3EmRfDppzBOw8Oaapla+52DMLeJ6j1eLNLyBcsrgVTbOLYyZXbORMLvr0FwiAmbUPBSPKFIT12N10dElScihA2YI1g6SS5nNZAiyU16T0zL9teXYEYlupXo7T5Dc44m7xiiuzx4xibh8MprUTDUKoHSmTTSZ9psggaYcrZZQKmO8P7Et8t44iEyZ7W8xpByHxRrqmuCrqx9dIopk8fXhnQA/sP/EbX5Q== frederic.heem@gmail.com\n",
                },
              ],
            },
            enableVMAgentPlatformUpdates: false,
          },
          adminPassword: process.env.MULTICLOUD_TESTVM_ADMIN_PASSWORD,
        },
        storageProfile: {
          imageReference: {
            publisher: "Canonical",
            offer: "UbuntuServer",
            sku: "18.04-LTS",
            version: "latest",
          },
          osDisk: {
            osType: "Linux",
            name: "testvm_OsDisk_1_789464e5ed484165bc2b95a27b4d069b",
            createOption: "FromImage",
            caching: "ReadWrite",
            managedDisk: {
              storageAccountType: "Premium_LRS",
            },
            deleteOption: "Detach",
            diskSizeGB: 30,
          },
        },
        networkProfile: {
          networkInterfaces: [
            {
              id: getId({
                type: "NetworkInterface",
                group: "Network",
                name: "multicloud::testvmVMNic",
              }),
            },
          ],
        },
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
      networkInterfaces: ["multicloud::testvmVMNic"],
    }),
  },
  {
    type: "NetworkInterface",
    group: "Network",
    properties: ({}) => ({
      name: "testvmVMNic",
      properties: {
        ipConfigurations: [
          {
            name: "ipconfigtestvm",
            properties: {
              privateIPAllocationMethod: "Dynamic",
            },
          },
        ],
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
      virtualNetwork: "multicloud::azure",
      publicIpAddress: "multicloud::vmtest-pip",
      securityGroup: "multicloud::testvmNSG",
      subnet: "multicloud::azure::vm",
    }),
  },
  {
    type: "NetworkSecurityGroup",
    group: "Network",
    properties: ({}) => ({
      name: "testvmNSG",
      properties: {
        securityRules: [
          {
            name: "default-allow-ssh",
            properties: {
              protocol: "Tcp",
              sourcePortRange: "*",
              destinationPortRange: "22",
              sourceAddressPrefix: "*",
              destinationAddressPrefix: "*",
              access: "Allow",
              priority: 1000,
              direction: "Inbound",
              sourcePortRanges: [],
              destinationPortRanges: [],
              sourceAddressPrefixes: [],
              destinationAddressPrefixes: [],
            },
          },
        ],
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
    }),
  },
  {
    type: "PublicIPAddress",
    group: "Network",
    properties: ({}) => ({
      name: "ergw-pip",
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
    }),
  },
  {
    type: "PublicIPAddress",
    group: "Network",
    properties: ({}) => ({
      name: "vmtest-pip",
      sku: {
        name: "Standard",
      },
      properties: {
        publicIPAllocationMethod: "Static",
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
    }),
  },
  {
    type: "PublicIPAddress",
    group: "Network",
    properties: ({}) => ({
      name: "vpngw-a-pip",
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
    }),
  },
  {
    type: "PublicIPAddress",
    group: "Network",
    properties: ({}) => ({
      name: "vpngw-b-pip",
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
    }),
  },
  {
    type: "Subnet",
    group: "Network",
    properties: ({}) => ({
      name: "GatewaySubnet",
      properties: {
        addressPrefix: "192.168.1.0/24",
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
      virtualNetwork: "multicloud::azure",
    }),
  },
  {
    type: "Subnet",
    group: "Network",
    properties: ({}) => ({
      name: "vm",
      properties: {
        addressPrefix: "192.168.2.0/24",
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
      virtualNetwork: "multicloud::azure",
    }),
  },
  {
    type: "VirtualNetwork",
    group: "Network",
    properties: ({}) => ({
      name: "azure",
      properties: {
        addressSpace: {
          addressPrefixes: ["192.168.0.0/16"],
        },
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
    }),
  },
  {
    type: "VirtualNetworkGateway",
    group: "Network",
    properties: ({ config }) => ({
      name: "vpngw",
      location: config.location,
      properties: {
        ipConfigurations: [
          {
            properties: {
              privateIPAllocationMethod: "Dynamic",
            },
            name: "vnetGatewayConfig0",
          },
          {
            properties: {
              privateIPAllocationMethod: "Dynamic",
            },
            name: "vnetGatewayConfig1",
          },
        ],
        gatewayType: "Vpn",
        vpnType: "RouteBased",
        vpnGatewayGeneration: "Generation1",
        enableBgp: true,
        enablePrivateIpAddress: false,
        activeActive: true,
        disableIPSecReplayProtection: false,
        sku: {
          name: "VpnGw1",
          tier: "VpnGw1",
        },
        vpnClientConfiguration: {
          vpnClientProtocols: ["OpenVPN", "IkeV2"],
          vpnAuthenticationTypes: [],
        },
        bgpSettings: {
          asn: 65001,
          bgpPeeringAddress: "192.168.1.4,192.168.1.5",
          peerWeight: 0,
          bgpPeeringAddresses: [
            {
              customBgpIpAddresses: [],
            },
            {
              customBgpIpAddresses: [],
            },
          ],
        },
        enableBgpRouteTranslationForNat: false,
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
    }),
  },
  {
    type: "Workspace",
    group: "OperationalInsights",
    properties: ({ config }) => ({
      name: "log21789",
      location: config.location,
      properties: {
        sku: {
          name: "PerGB2018",
        },
        retentionInDays: 30,
        features: {
          legacy: 0,
          searchVersion: 1,
        },
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "multicloud",
    }),
  },
  {
    type: "ResourceGroup",
    group: "Resources",
    properties: ({}) => ({
      name: "multicloud",
    }),
  },
];
