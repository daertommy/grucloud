// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "ResourceGroup",
    group: "Resources",
    properties: ({}) => ({
      name: "rg-app-node",
    }),
  },
  {
    type: "AppServicePlan",
    group: "Web",
    properties: ({}) => ({
      name: "app-service-plan-linux-cheap",
      kind: "linux",
      properties: {
        reserved: true,
      },
      sku: {
        name: "F1",
        tier: "Free",
        size: "F1",
        family: "F",
        capacity: 1,
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "rg-app-node",
    }),
  },
  {
    type: "WebApp",
    group: "Web",
    properties: ({}) => ({
      name: "grucloud-test",
      kind: "app,linux",
      properties: {
        enabled: true,
        reserved: true,
        siteConfig: {
          numberOfWorkers: 1,
          defaultDocuments: [
            "Default.htm",
            "Default.html",
            "Default.asp",
            "index.htm",
            "index.html",
            "iisstart.htm",
            "default.aspx",
            "index.php",
            "hostingstart.html",
          ],
          netFrameworkVersion: "v4.0",
          phpVersion: "",
          pythonVersion: "",
          nodeVersion: "",
          powerShellVersion: "",
          linuxFxVersion: "NODE|16-lts",
          requestTracingEnabled: false,
          remoteDebuggingEnabled: false,
          remoteDebuggingVersion: "VS2019",
          httpLoggingEnabled: false,
          acrUseManagedIdentityCreds: false,
          logsDirectorySizeLimit: 35,
          detailedErrorLoggingEnabled: false,
          documentRoot: "site\\wwwroot",
          use32BitWorkerProcess: true,
          webSocketsEnabled: false,
          alwaysOn: false,
          appCommandLine: "",
          managedPipelineMode: "Integrated",
          virtualApplications: [
            {
              virtualPath: "/",
              physicalPath: "site\\wwwroot",
              preloadEnabled: false,
            },
          ],
          loadBalancing: "LeastRequests",
          autoHealEnabled: false,
          vnetName: "",
          vnetRouteAllEnabled: false,
          vnetPrivatePortsCount: 0,
          scmIpSecurityRestrictionsUseMain: false,
          http20Enabled: false,
          minTlsVersion: "1.2",
          scmMinTlsVersion: "1.0",
          preWarmedInstanceCount: 0,
          functionAppScaleLimit: 0,
          functionsRuntimeScaleMonitoringEnabled: false,
          minimumElasticInstanceCount: 0,
          azureStorageAccounts: {},
        },
        clientAffinityEnabled: false,
        clientCertEnabled: false,
        clientCertMode: "Required",
        hostNamesDisabled: false,
        containerSize: 0,
        dailyMemoryTimeQuota: 0,
        httpsOnly: false,
        redundancyMode: "None",
        storageAccountRequired: false,
        keyVaultReferenceIdentity: "SystemAssigned",
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "rg-app-node",
      appServicePlan: "rg-app-node::app-service-plan-linux-cheap",
    }),
  },
];
