// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

const createResources = ({ provider }) => {
  provider.Resources.makeResourceGroup({
    name: "rg-storage-web",
    properties: ({}) => ({
      name: "rg-storage-web",
    }),
  });

  provider.Storage.makeBlob({
    properties: ({}) => ({
      name: "index.html",
      properties: {
        contentType: "text/html",
      },
      source: "assets/index.html",
    }),
    dependencies: () => ({
      resourceGroup: "rg-storage-web",
      container: "rg-storage-web::gcstorageweb::$web",
    }),
  });

  provider.Storage.makeBlobContainer({
    name: "rg-storage-web::gcstorageweb::$web",
    properties: ({}) => ({
      name: "$web",
      properties: {
        defaultEncryptionScope: "$account-encryption-key",
        denyEncryptionScopeOverride: false,
        publicAccess: "None",
        immutableStorageWithVersioning: {
          enabled: false,
        },
      },
    }),
    dependencies: () => ({
      resourceGroup: "rg-storage-web",
      account: "rg-storage-web::gcstorageweb",
    }),
  });

  provider.Storage.makeBlobServiceProperties({
    name: "rg-storage-web::gcstorageweb",
    properties: ({}) => ({
      name: "gcstorageweb",
      properties: {
        staticWebsite: {
          enabled: true,
          indexDocument: "index.html",
        },
        deleteRetentionPolicy: {
          enabled: true,
          days: 7,
        },
      },
    }),
    dependencies: () => ({
      resourceGroup: "rg-storage-web",
      account: "rg-storage-web::gcstorageweb",
    }),
  });

  provider.Storage.makeStorageAccount({
    name: "rg-storage-web::gcstorageweb",
    properties: ({}) => ({
      name: "gcstorageweb",
      sku: {
        name: "Standard_RAGRS",
      },
      kind: "StorageV2",
      location: "canadacentral",
      properties: {
        encryption: {
          services: {
            blob: {
              enabled: true,
              keyType: "Account",
            },
            file: {
              enabled: true,
              keyType: "Account",
            },
          },
          requireInfrastructureEncryption: false,
        },
        networkAcls: {
          virtualNetworkRules: [],
          ipRules: [],
        },
        accessTier: "Hot",
        supportsHttpsTrafficOnly: true,
        allowBlobPublicAccess: true,
        minimumTlsVersion: "TLS1_2",
        allowSharedKeyAccess: true,
        allowCrossTenantReplication: true,
        defaultToOAuthAuthentication: false,
      },
    }),
    dependencies: () => ({
      resourceGroup: "rg-storage-web",
    }),
  });
};

exports.createResources = createResources;
