// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

const createResources = ({ provider }) => {
  provider.DBforPostgreSQL.makeConfiguration({
    name: "rg-postgres::gc-server::shared_preload_libraries",
    properties: ({}) => ({
      name: "shared_preload_libraries",
      properties: {
        value: "pg_cron,pg_stat_statements",
        source: "user-override",
      },
    }),
    dependencies: () => ({
      resourceGroup: "rg-postgres",
      server: "rg-postgres::gc-server",
    }),
  });

  provider.DBforPostgreSQL.makeFirewallRule({
    name: "rg-postgres::gc-server::allowallazureservicesandresourceswithinazureips_2022-1-19_17-30-21",
    properties: ({}) => ({
      name: "allowallazureservicesandresourceswithinazureips_2022-1-19_17-30-21",
      properties: {
        startIpAddress: "0.0.0.0",
        endIpAddress: "0.0.0.0",
      },
    }),
    dependencies: () => ({
      resourceGroup: "rg-postgres",
      server: "rg-postgres::gc-server",
    }),
  });

  provider.DBforPostgreSQL.makeFlexibleServer({
    name: "rg-postgres::gc-server",
    properties: ({}) => ({
      name: "gc-server",
      sku: {
        name: "Standard_B1ms",
        tier: "Burstable",
      },
      properties: {
        administratorLogin: "GcAdmin",
        version: "13",
        storage: {
          storageSizeGB: 32,
        },
        administratorLoginPassword:
          process.env.RG_POSTGRES_GC_SERVER_ADMINISTRATOR_LOGIN_PASSWORD,
      },
    }),
    dependencies: () => ({
      resourceGroup: "rg-postgres",
    }),
  });

  provider.Resources.makeResourceGroup({
    name: "rg-postgres",
    properties: ({}) => ({
      name: "rg-postgres",
    }),
  });
};

exports.createResources = createResources;
