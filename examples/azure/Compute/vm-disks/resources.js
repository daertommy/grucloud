// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Disk",
    group: "Compute",
    properties: ({ config }) => ({
      name: "vm_datadisk_0",
      location: config.location,
      sku: {
        name: "Premium_LRS",
      },
      properties: {
        creationData: {
          createOption: "Empty",
        },
        diskSizeGB: 1,
        diskIOPSReadWrite: 120,
        diskMBpsReadWrite: 25,
        encryption: {
          type: "EncryptionAtRestWithPlatformKey",
        },
        networkAccessPolicy: "AllowAll",
        tier: "P1",
        publicNetworkAccess: "Enabled",
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "rg-vm-disks",
    }),
  },
  {
    type: "SshPublicKey",
    group: "Compute",
    properties: ({ config }) => ({
      name: "keypair",
      location: config.location,
      properties: {
        publicKey:
          "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDML7vLyGtMh/cmqV31Kx7xJbAk\r\nmVFUgaB3cRs7QTj9FzAJywGnF+YAB6Kg/7KhGNrbeddMH7Dal2t3GeGhWuJHQXrb\r\nPI6+XrkkNZBIgea0/yk2/DLcrbsXeO+vF21R/qXgSrbK1F4hG7UYl0XIXxlpf3XR\r\nmni+Cr0TTc0lrjUk+CsxxEX/tBUI03C2hMwppe2j2bMeNMN93jpj63Z0BDIS8laf\r\nZPrnHZconfgKwVx6DzpV303SpaVkyxisWTKlIhuKKcN4LDxtpt+emWhYxCfx6scr\r\nW3zBnfhK0WvZJihP2Dr5j+CrMzP1SByyzJGiz69IlnoRK1yTyP6kM4Nc3RfnE/xJ\r\ny9XPFXBF6aPWm6zQTeUjcb6AHPy84kixX5l87LGYxHMfipyEoEYTEEN6RmgO2mpk\r\nzvuL27ewD/FMd+uigx0vd6SfdJR4dyc5WkCA8PkmpVbFtSR995hvTuVgaknAG1wd\r\noAVIBoekRLIwca9DcIOjTqaU0EWF8Gkt8FDhkIE= generated-by-azure\r\n",
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "rg-vm-disks",
    }),
  },
  {
    type: "VirtualMachine",
    group: "Compute",
    properties: ({ getId }) => ({
      name: "vm",
      properties: {
        hardwareProfile: {
          vmSize: "Standard_B1ls",
        },
        osProfile: {
          computerName: "vm",
          adminUsername: "azureuser",
          linuxConfiguration: {
            disablePasswordAuthentication: true,
            ssh: {
              publicKeys: [
                {
                  path: "/home/azureuser/.ssh/authorized_keys",
                },
              ],
            },
            enableVMAgentPlatformUpdates: false,
          },
          adminPassword: process.env.RG_VM_DISKS_VM_ADMIN_PASSWORD,
        },
        storageProfile: {
          imageReference: {
            publisher: "canonical",
            offer: "0001-com-ubuntu-server-focal",
            sku: "20_04-lts",
            version: "latest",
          },
          osDisk: {
            osType: "Linux",
            name: "vm_disk1_9d916b60fd7048329e3979079f2abdf7",
            createOption: "FromImage",
            caching: "ReadWrite",
            managedDisk: {
              storageAccountType: "Premium_LRS",
            },
            deleteOption: "Detach",
            diskSizeGB: 30,
          },
          dataDisks: [
            {
              lun: 0,
              name: "vm_DataDisk_0",
              createOption: "Attach",
              caching: "None",
              writeAcceleratorEnabled: false,
              managedDisk: {
                storageAccountType: "Premium_LRS",
                id: getId({
                  type: "Disk",
                  group: "Compute",
                  name: "rg-vm-disks::vm_datadisk_0",
                }),
              },
              deleteOption: "Detach",
              diskSizeGB: 1,
              toBeDetached: false,
            },
          ],
        },
        diagnosticsProfile: {
          bootDiagnostics: {
            enabled: true,
          },
        },
        networkProfile: {
          networkInterfaces: [
            {
              id: getId({
                type: "NetworkInterface",
                group: "Network",
                name: "rg-vm-disks::vm537",
              }),
            },
          ],
        },
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "rg-vm-disks",
      disks: ["rg-vm-disks::vm_datadisk_0"],
      sshPublicKeys: ["rg-vm-disks::keypair"],
      networkInterfaces: ["rg-vm-disks::vm537"],
    }),
  },
  {
    type: "NetworkInterface",
    group: "Network",
    properties: ({}) => ({
      name: "vm537",
      properties: {
        ipConfigurations: [
          {
            name: "ipconfig1",
            properties: {
              privateIPAllocationMethod: "Dynamic",
            },
          },
        ],
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "rg-vm-disks",
      virtualNetwork: "rg-vm-disks::virtual-network",
      publicIpAddress: "rg-vm-disks::vm-ip",
      securityGroup: "rg-vm-disks::vm-nsg",
      subnet: "rg-vm-disks::virtual-network::default",
    }),
  },
  {
    type: "NetworkSecurityGroup",
    group: "Network",
    properties: ({}) => ({
      name: "vm-nsg",
      properties: {
        securityRules: [
          {
            name: "SSH",
            properties: {
              protocol: "TCP",
              sourcePortRange: "*",
              destinationPortRange: "22",
              sourceAddressPrefix: "*",
              destinationAddressPrefix: "*",
              access: "Allow",
              priority: 300,
              direction: "Inbound",
              sourcePortRanges: [],
              destinationPortRanges: [],
              sourceAddressPrefixes: [],
              destinationAddressPrefixes: [],
            },
          },
        ],
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "rg-vm-disks",
    }),
  },
  {
    type: "PublicIPAddress",
    group: "Network",
    properties: ({}) => ({
      name: "vm-ip",
    }),
    dependencies: ({}) => ({
      resourceGroup: "rg-vm-disks",
    }),
  },
  {
    type: "Subnet",
    group: "Network",
    properties: ({}) => ({
      name: "default",
      properties: {
        addressPrefix: "10.0.0.0/24",
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "rg-vm-disks",
      virtualNetwork: "rg-vm-disks::virtual-network",
    }),
  },
  {
    type: "VirtualNetwork",
    group: "Network",
    properties: ({}) => ({
      name: "virtual-network",
      properties: {
        addressSpace: {
          addressPrefixes: ["10.0.0.0/16"],
        },
      },
    }),
    dependencies: ({}) => ({
      resourceGroup: "rg-vm-disks",
    }),
  },
  {
    type: "ResourceGroup",
    group: "Resources",
    properties: ({}) => ({
      name: "rg-vm-disks",
    }),
  },
];
