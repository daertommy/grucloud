// Generated by gcp2gc
const { GoogleProvider } = require("@grucloud/provider-google");

const createResources = ({ provider }) => {
  provider.storage.makeBucket({
    name: "grucloud-test",
    properties: ({ config }) => ({
      storageClass: "STANDARD",
      iamConfiguration: {
        bucketPolicyOnly: {
          enabled: false,
        },
        uniformBucketLevelAccess: {
          enabled: false,
        },
        publicAccessPrevention: "unspecified",
      },
      iam: {
        bindings: [
          {
            role: "roles/storage.legacyBucketOwner",
            members: [
              "projectEditor:grucloud-test",
              "projectOwner:grucloud-test",
            ],
          },
          {
            role: "roles/storage.legacyBucketReader",
            members: ["projectViewer:grucloud-test"],
          },
        ],
      },
    }),
  });

  provider.storage.makeObject({
    name: "myfile",
    properties: ({ config }) => ({
      contentType: "text/json",
      storageClass: "STANDARD",
    }),
    dependencies: ({ resources }) => ({
      bucket: resources.storage.Bucket.grucloudTest,
    }),
  });
};

exports.createResources = createResources;

exports.createStack = async ({ createProvider }) => {
  const provider = createProvider(GoogleProvider, {
    config: require("./config"),
  });
  createResources({
    provider,
  });

  return {
    provider,
  };
};
