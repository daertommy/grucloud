// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

const createResources = ({ provider }) => {
  provider.iam.makeServiceAccount({
    name: "sa-test-vm",
    properties: ({}) => ({
      serviceAccount: {
        displayName: "SA dev",
        description: "Managed By GruCloud",
      },
    }),
  });

  provider.compute.makeFirewall({
    name: "firewall-22-80-433",
    properties: ({}) => ({
      description: "Managed By GruCloud",
      priority: 1000,
      sourceRanges: ["0.0.0.0/0"],
      allowed: [
        {
          IPProtocol: "tcp",
          ports: ["22", "80", "433"],
        },
      ],
      direction: "INGRESS",
      logConfig: {
        enable: false,
      },
    }),
  });

  provider.compute.makeFirewall({
    name: "firewall-icmp",
    properties: ({}) => ({
      description: "Managed By GruCloud",
      priority: 1000,
      sourceRanges: ["0.0.0.0/0"],
      allowed: [
        {
          IPProtocol: "icmp",
        },
      ],
      direction: "INGRESS",
      logConfig: {
        enable: false,
      },
    }),
  });

  provider.compute.makeAddress({
    name: "ip-webserver",
    properties: ({}) => ({
      description: "Managed By GruCloud",
    }),
  });

  provider.compute.makeDisk({
    name: "disk",
    properties: ({}) => ({
      sizeGb: "20",
      type: "pd-standard",
    }),
  });

  provider.compute.makeVmInstance({
    name: "webserver",
    properties: ({}) => ({
      machineType: "f1-micro",
      metadata: {
        items: [
          {
            key: "enable-oslogin",
            value: "True",
          },
        ],
      },
      sourceImage:
        "projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20210927",
    }),
    dependencies: () => ({
      ip: "ip-webserver",
      disks: ["disk"],
    }),
  });
};

exports.createResources = createResources;
