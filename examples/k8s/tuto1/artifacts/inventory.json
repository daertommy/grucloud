{
    "command": "list",
    "commandOptions": {
        "graph": true,
        "title": "tuto1",
        "dotFile": "/Users/fredericheem/grucloud/examples/k8s/tuto1/artifacts/diagram-live.dot"
    },
    "programOptions": {
        "json": "artifacts/inventory.json",
        "noOpen": true,
        "workingDirectory": "/Users/fredericheem/grucloud/examples/k8s/tuto1"
    },
    "result": {
        "error": false,
        "results": [
            {
                "providerName": "k8s",
                "kind": "livesPerType",
                "error": false,
                "results": [
                    {
                        "resources": [
                            {
                                "groupType": "::Deployment",
                                "group": "",
                                "type": "Deployment",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "coredns",
                                        "namespace": "kube-system",
                                        "uid": "de0690c5-850d-4608-a5aa-84a3ab15f18a",
                                        "resourceVersion": "593",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-21T15:32:35Z",
                                        "labels": {
                                            "k8s-app": "kube-dns"
                                        },
                                        "annotations": {
                                            "deployment.kubernetes.io/revision": "1"
                                        }
                                    },
                                    "spec": {
                                        "replicas": 1,
                                        "selector": {
                                            "matchLabels": {
                                                "k8s-app": "kube-dns"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "creationTimestamp": null,
                                                "labels": {
                                                    "k8s-app": "kube-dns"
                                                }
                                            },
                                            "spec": {
                                                "volumes": [
                                                    {
                                                        "name": "config-volume",
                                                        "configMap": {
                                                            "name": "coredns",
                                                            "items": [
                                                                {
                                                                    "key": "Corefile",
                                                                    "path": "Corefile"
                                                                }
                                                            ],
                                                            "defaultMode": 420
                                                        }
                                                    }
                                                ],
                                                "containers": [
                                                    {
                                                        "name": "coredns",
                                                        "image": "k8s.gcr.io/coredns/coredns:v1.8.0",
                                                        "args": [
                                                            "-conf",
                                                            "/etc/coredns/Corefile"
                                                        ],
                                                        "ports": [
                                                            {
                                                                "name": "dns",
                                                                "containerPort": 53,
                                                                "protocol": "UDP"
                                                            },
                                                            {
                                                                "name": "dns-tcp",
                                                                "containerPort": 53,
                                                                "protocol": "TCP"
                                                            },
                                                            {
                                                                "name": "metrics",
                                                                "containerPort": 9153,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "resources": {
                                                            "limits": {
                                                                "memory": "170Mi"
                                                            },
                                                            "requests": {
                                                                "cpu": "100m",
                                                                "memory": "70Mi"
                                                            }
                                                        },
                                                        "volumeMounts": [
                                                            {
                                                                "name": "config-volume",
                                                                "readOnly": true,
                                                                "mountPath": "/etc/coredns"
                                                            }
                                                        ],
                                                        "livenessProbe": {
                                                            "httpGet": {
                                                                "path": "/health",
                                                                "port": 8080,
                                                                "scheme": "HTTP"
                                                            },
                                                            "initialDelaySeconds": 60,
                                                            "timeoutSeconds": 5,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 5
                                                        },
                                                        "readinessProbe": {
                                                            "httpGet": {
                                                                "path": "/ready",
                                                                "port": 8181,
                                                                "scheme": "HTTP"
                                                            },
                                                            "timeoutSeconds": 1,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 3
                                                        },
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "imagePullPolicy": "IfNotPresent",
                                                        "securityContext": {
                                                            "capabilities": {
                                                                "add": [
                                                                    "NET_BIND_SERVICE"
                                                                ],
                                                                "drop": [
                                                                    "all"
                                                                ]
                                                            },
                                                            "readOnlyRootFilesystem": true,
                                                            "allowPrivilegeEscalation": false
                                                        }
                                                    }
                                                ],
                                                "restartPolicy": "Always",
                                                "terminationGracePeriodSeconds": 30,
                                                "dnsPolicy": "Default",
                                                "nodeSelector": {
                                                    "kubernetes.io/os": "linux"
                                                },
                                                "serviceAccountName": "coredns",
                                                "serviceAccount": "coredns",
                                                "securityContext": {},
                                                "schedulerName": "default-scheduler",
                                                "tolerations": [
                                                    {
                                                        "key": "CriticalAddonsOnly",
                                                        "operator": "Exists"
                                                    },
                                                    {
                                                        "key": "node-role.kubernetes.io/master",
                                                        "effect": "NoSchedule"
                                                    },
                                                    {
                                                        "key": "node-role.kubernetes.io/control-plane",
                                                        "effect": "NoSchedule"
                                                    }
                                                ],
                                                "priorityClassName": "system-cluster-critical"
                                            }
                                        },
                                        "strategy": {
                                            "type": "RollingUpdate",
                                            "rollingUpdate": {
                                                "maxUnavailable": 1,
                                                "maxSurge": "25%"
                                            }
                                        },
                                        "revisionHistoryLimit": 10,
                                        "progressDeadlineSeconds": 600
                                    },
                                    "status": {
                                        "observedGeneration": 2,
                                        "replicas": 1,
                                        "updatedReplicas": 1,
                                        "readyReplicas": 1,
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "type": "Available",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-21T15:32:48Z",
                                                "lastTransitionTime": "2021-08-21T15:32:48Z",
                                                "reason": "MinimumReplicasAvailable",
                                                "message": "Deployment has minimum availability."
                                            },
                                            {
                                                "type": "Progressing",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-21T15:33:29Z",
                                                "lastTransitionTime": "2021-08-21T15:32:48Z",
                                                "reason": "NewReplicaSetAvailable",
                                                "message": "ReplicaSet \"coredns-558bd4d5db\" has successfully progressed."
                                            }
                                        ]
                                    }
                                },
                                "name": "coredns",
                                "id": "coredns",
                                "meta": {
                                    "name": "coredns",
                                    "namespace": "kube-system",
                                    "uid": "de0690c5-850d-4608-a5aa-84a3ab15f18a",
                                    "resourceVersion": "593",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-21T15:32:35Z",
                                    "labels": {
                                        "k8s-app": "kube-dns"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "1"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Deployment::kube-system::coredns",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::coredns"
                            },
                            {
                                "groupType": "::Deployment",
                                "group": "",
                                "type": "Deployment",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-controller",
                                        "namespace": "ingress-nginx",
                                        "uid": "1e206432-1d75-4f39-91b2-43dbb98bf52d",
                                        "resourceVersion": "2058",
                                        "generation": 1,
                                        "creationTimestamp": "2021-08-21T15:47:36Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "deployment.kubernetes.io/revision": "1",
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"minReadySeconds\":0,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\",\"gcp-auth-skip-secret\":\"true\"}},\"spec\":{\"containers\":[{\"args\":[\"/nginx-ingress-controller\",\"--ingress-class=nginx\",\"--configmap=$(POD_NAMESPACE)/ingress-nginx-controller\",\"--report-node-internal-ip-address\",\"--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services\",\"--udp-services-configmap=$(POD_NAMESPACE)/udp-services\",\"--validating-webhook=:8443\",\"--validating-webhook-certificate=/usr/local/certificates/cert\",\"--validating-webhook-key=/usr/local/certificates/key\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LD_PRELOAD\",\"value\":\"/usr/local/lib/libmimalloc.so\"}],\"image\":\"k8s.gcr.io/ingress-nginx/controller:v0.44.0@sha256:3dd0fac48073beaca2d67a78c746c7593f9c575168a17139a9955a82c63c4b9a\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/wait-shutdown\"]}}},\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"controller\",\"ports\":[{\"containerPort\":80,\"hostPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":443,\"hostPort\":443,\"name\":\"https\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"webhook\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"runAsUser\":101},\"volumeMounts\":[{\"mountPath\":\"/usr/local/certificates/\",\"name\":\"webhook-cert\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"serviceAccountName\":\"ingress-nginx\",\"volumes\":[{\"name\":\"webhook-cert\",\"secret\":{\"secretName\":\"ingress-nginx-admission\"}}]}}}}\n"
                                        }
                                    },
                                    "spec": {
                                        "replicas": 1,
                                        "selector": {
                                            "matchLabels": {
                                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                                "app.kubernetes.io/component": "controller",
                                                "app.kubernetes.io/instance": "ingress-nginx",
                                                "app.kubernetes.io/name": "ingress-nginx"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "creationTimestamp": null,
                                                "labels": {
                                                    "addonmanager.kubernetes.io/mode": "Reconcile",
                                                    "app.kubernetes.io/component": "controller",
                                                    "app.kubernetes.io/instance": "ingress-nginx",
                                                    "app.kubernetes.io/name": "ingress-nginx",
                                                    "gcp-auth-skip-secret": "true"
                                                }
                                            },
                                            "spec": {
                                                "volumes": [
                                                    {
                                                        "name": "webhook-cert",
                                                        "secret": {
                                                            "secretName": "ingress-nginx-admission",
                                                            "defaultMode": 420
                                                        }
                                                    }
                                                ],
                                                "containers": [
                                                    {
                                                        "name": "controller",
                                                        "image": "k8s.gcr.io/ingress-nginx/controller:v0.44.0@sha256:3dd0fac48073beaca2d67a78c746c7593f9c575168a17139a9955a82c63c4b9a",
                                                        "args": [
                                                            "/nginx-ingress-controller",
                                                            "--ingress-class=nginx",
                                                            "--configmap=$(POD_NAMESPACE)/ingress-nginx-controller",
                                                            "--report-node-internal-ip-address",
                                                            "--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services",
                                                            "--udp-services-configmap=$(POD_NAMESPACE)/udp-services",
                                                            "--validating-webhook=:8443",
                                                            "--validating-webhook-certificate=/usr/local/certificates/cert",
                                                            "--validating-webhook-key=/usr/local/certificates/key"
                                                        ],
                                                        "ports": [
                                                            {
                                                                "name": "http",
                                                                "hostPort": 80,
                                                                "containerPort": 80,
                                                                "protocol": "TCP"
                                                            },
                                                            {
                                                                "name": "https",
                                                                "hostPort": 443,
                                                                "containerPort": 443,
                                                                "protocol": "TCP"
                                                            },
                                                            {
                                                                "name": "webhook",
                                                                "containerPort": 8443,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "env": [
                                                            {
                                                                "name": "POD_NAME",
                                                                "valueFrom": {
                                                                    "fieldRef": {
                                                                        "apiVersion": "v1",
                                                                        "fieldPath": "metadata.name"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "name": "POD_NAMESPACE",
                                                                "valueFrom": {
                                                                    "fieldRef": {
                                                                        "apiVersion": "v1",
                                                                        "fieldPath": "metadata.namespace"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "name": "LD_PRELOAD",
                                                                "value": "/usr/local/lib/libmimalloc.so"
                                                            }
                                                        ],
                                                        "resources": {
                                                            "requests": {
                                                                "cpu": "100m",
                                                                "memory": "90Mi"
                                                            }
                                                        },
                                                        "volumeMounts": [
                                                            {
                                                                "name": "webhook-cert",
                                                                "readOnly": true,
                                                                "mountPath": "/usr/local/certificates/"
                                                            }
                                                        ],
                                                        "livenessProbe": {
                                                            "httpGet": {
                                                                "path": "/healthz",
                                                                "port": 10254,
                                                                "scheme": "HTTP"
                                                            },
                                                            "initialDelaySeconds": 10,
                                                            "timeoutSeconds": 1,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 5
                                                        },
                                                        "readinessProbe": {
                                                            "httpGet": {
                                                                "path": "/healthz",
                                                                "port": 10254,
                                                                "scheme": "HTTP"
                                                            },
                                                            "initialDelaySeconds": 10,
                                                            "timeoutSeconds": 1,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 3
                                                        },
                                                        "lifecycle": {
                                                            "preStop": {
                                                                "exec": {
                                                                    "command": [
                                                                        "/wait-shutdown"
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "imagePullPolicy": "IfNotPresent",
                                                        "securityContext": {
                                                            "capabilities": {
                                                                "add": [
                                                                    "NET_BIND_SERVICE"
                                                                ],
                                                                "drop": [
                                                                    "ALL"
                                                                ]
                                                            },
                                                            "runAsUser": 101,
                                                            "allowPrivilegeEscalation": true
                                                        }
                                                    }
                                                ],
                                                "restartPolicy": "Always",
                                                "terminationGracePeriodSeconds": 30,
                                                "dnsPolicy": "ClusterFirst",
                                                "serviceAccountName": "ingress-nginx",
                                                "serviceAccount": "ingress-nginx",
                                                "securityContext": {},
                                                "schedulerName": "default-scheduler"
                                            }
                                        },
                                        "strategy": {
                                            "type": "RollingUpdate",
                                            "rollingUpdate": {
                                                "maxUnavailable": 1,
                                                "maxSurge": "25%"
                                            }
                                        },
                                        "revisionHistoryLimit": 10,
                                        "progressDeadlineSeconds": 600
                                    },
                                    "status": {
                                        "observedGeneration": 1,
                                        "replicas": 1,
                                        "updatedReplicas": 1,
                                        "readyReplicas": 1,
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "type": "Available",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-21T15:47:36Z",
                                                "lastTransitionTime": "2021-08-21T15:47:36Z",
                                                "reason": "MinimumReplicasAvailable",
                                                "message": "Deployment has minimum availability."
                                            },
                                            {
                                                "type": "Progressing",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-21T15:47:56Z",
                                                "lastTransitionTime": "2021-08-21T15:47:36Z",
                                                "reason": "NewReplicaSetAvailable",
                                                "message": "ReplicaSet \"ingress-nginx-controller-59b45fb494\" has successfully progressed."
                                            }
                                        ]
                                    }
                                },
                                "name": "ingress-nginx-controller",
                                "id": "ingress-nginx-controller",
                                "meta": {
                                    "name": "ingress-nginx-controller",
                                    "namespace": "ingress-nginx",
                                    "uid": "1e206432-1d75-4f39-91b2-43dbb98bf52d",
                                    "resourceVersion": "2058",
                                    "generation": 1,
                                    "creationTimestamp": "2021-08-21T15:47:36Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "1",
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"minReadySeconds\":0,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\",\"gcp-auth-skip-secret\":\"true\"}},\"spec\":{\"containers\":[{\"args\":[\"/nginx-ingress-controller\",\"--ingress-class=nginx\",\"--configmap=$(POD_NAMESPACE)/ingress-nginx-controller\",\"--report-node-internal-ip-address\",\"--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services\",\"--udp-services-configmap=$(POD_NAMESPACE)/udp-services\",\"--validating-webhook=:8443\",\"--validating-webhook-certificate=/usr/local/certificates/cert\",\"--validating-webhook-key=/usr/local/certificates/key\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LD_PRELOAD\",\"value\":\"/usr/local/lib/libmimalloc.so\"}],\"image\":\"k8s.gcr.io/ingress-nginx/controller:v0.44.0@sha256:3dd0fac48073beaca2d67a78c746c7593f9c575168a17139a9955a82c63c4b9a\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/wait-shutdown\"]}}},\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"controller\",\"ports\":[{\"containerPort\":80,\"hostPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":443,\"hostPort\":443,\"name\":\"https\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"webhook\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"runAsUser\":101},\"volumeMounts\":[{\"mountPath\":\"/usr/local/certificates/\",\"name\":\"webhook-cert\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"serviceAccountName\":\"ingress-nginx\",\"volumes\":[{\"name\":\"webhook-cert\",\"secret\":{\"secretName\":\"ingress-nginx-admission\"}}]}}}}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Deployment::ingress-nginx::ingress-nginx-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx-controller"
                            },
                            {
                                "groupType": "::Deployment",
                                "group": "",
                                "type": "Deployment",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "nginx-deployment",
                                        "namespace": "myapp",
                                        "uid": "d804ef82-476d-4ef4-827f-40d006210472",
                                        "resourceVersion": "4338",
                                        "generation": 1,
                                        "creationTimestamp": "2021-08-21T15:58:57Z",
                                        "labels": {
                                            "app": "nginx-label"
                                        },
                                        "annotations": {
                                            "Name": "nginx-deployment",
                                            "deployment.kubernetes.io/revision": "1",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-k8s-tuto1",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "replicas": 1,
                                        "selector": {
                                            "matchLabels": {
                                                "app": "nginx-label"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "creationTimestamp": null,
                                                "labels": {
                                                    "app": "nginx-label"
                                                }
                                            },
                                            "spec": {
                                                "containers": [
                                                    {
                                                        "name": "nginx",
                                                        "image": "nginx:1.14.2",
                                                        "ports": [
                                                            {
                                                                "containerPort": 80,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "resources": {},
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "imagePullPolicy": "IfNotPresent"
                                                    }
                                                ],
                                                "restartPolicy": "Always",
                                                "terminationGracePeriodSeconds": 30,
                                                "dnsPolicy": "ClusterFirst",
                                                "securityContext": {},
                                                "schedulerName": "default-scheduler"
                                            }
                                        },
                                        "strategy": {
                                            "type": "RollingUpdate",
                                            "rollingUpdate": {
                                                "maxUnavailable": "25%",
                                                "maxSurge": "25%"
                                            }
                                        },
                                        "revisionHistoryLimit": 10,
                                        "progressDeadlineSeconds": 600
                                    },
                                    "status": {
                                        "observedGeneration": 1,
                                        "replicas": 1,
                                        "updatedReplicas": 1,
                                        "readyReplicas": 1,
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "type": "Available",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-21T15:58:58Z",
                                                "lastTransitionTime": "2021-08-21T15:58:58Z",
                                                "reason": "MinimumReplicasAvailable",
                                                "message": "Deployment has minimum availability."
                                            },
                                            {
                                                "type": "Progressing",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-21T15:58:58Z",
                                                "lastTransitionTime": "2021-08-21T15:58:57Z",
                                                "reason": "NewReplicaSetAvailable",
                                                "message": "ReplicaSet \"nginx-deployment-66cdc8d56b\" has successfully progressed."
                                            }
                                        ]
                                    }
                                },
                                "name": "nginx-deployment",
                                "id": "nginx-deployment",
                                "meta": {
                                    "name": "nginx-deployment",
                                    "namespace": "myapp",
                                    "uid": "d804ef82-476d-4ef4-827f-40d006210472",
                                    "resourceVersion": "4338",
                                    "generation": 1,
                                    "creationTimestamp": "2021-08-21T15:58:57Z",
                                    "labels": {
                                        "app": "nginx-label"
                                    },
                                    "annotations": {
                                        "Name": "nginx-deployment",
                                        "deployment.kubernetes.io/revision": "1",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-k8s-tuto1",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "myapp",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Deployment::myapp::nginx-deployment",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "myapp::nginx-deployment"
                            }
                        ],
                        "groupType": "::Deployment",
                        "type": "Deployment",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "default",
                                        "uid": "62c7c640-fb0b-4c9a-bfc7-23a0e40a137b",
                                        "resourceVersion": "206",
                                        "creationTimestamp": "2021-08-21T15:32:33Z",
                                        "labels": {
                                            "kubernetes.io/metadata.name": "default"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "default",
                                "id": "default",
                                "meta": {
                                    "name": "default",
                                    "uid": "62c7c640-fb0b-4c9a-bfc7-23a0e40a137b",
                                    "resourceVersion": "206",
                                    "creationTimestamp": "2021-08-21T15:32:33Z",
                                    "labels": {
                                        "kubernetes.io/metadata.name": "default"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::default",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "default"
                            },
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx",
                                        "uid": "8e1ebafa-90b5-4feb-bd72-82194ecc4650",
                                        "resourceVersion": "1856",
                                        "creationTimestamp": "2021-08-21T15:47:36Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx",
                                            "kubernetes.io/metadata.name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\"}}\n"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "ingress-nginx",
                                "id": "ingress-nginx",
                                "meta": {
                                    "name": "ingress-nginx",
                                    "uid": "8e1ebafa-90b5-4feb-bd72-82194ecc4650",
                                    "resourceVersion": "1856",
                                    "creationTimestamp": "2021-08-21T15:47:36Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx",
                                        "kubernetes.io/metadata.name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\"}}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::ingress-nginx",
                                "managedByUs": false,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "ingress-nginx"
                            },
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kube-node-lease",
                                        "uid": "bdb15bae-20bf-4f6b-839d-24886d7ae787",
                                        "resourceVersion": "67",
                                        "creationTimestamp": "2021-08-21T15:32:32Z",
                                        "labels": {
                                            "kubernetes.io/metadata.name": "kube-node-lease"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "kube-node-lease",
                                "id": "kube-node-lease",
                                "meta": {
                                    "name": "kube-node-lease",
                                    "uid": "bdb15bae-20bf-4f6b-839d-24886d7ae787",
                                    "resourceVersion": "67",
                                    "creationTimestamp": "2021-08-21T15:32:32Z",
                                    "labels": {
                                        "kubernetes.io/metadata.name": "kube-node-lease"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::kube-node-lease",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-node-lease"
                            },
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kube-public",
                                        "uid": "3f0b78fb-ffd5-4212-9f40-7577db025fea",
                                        "resourceVersion": "62",
                                        "creationTimestamp": "2021-08-21T15:32:32Z",
                                        "labels": {
                                            "kubernetes.io/metadata.name": "kube-public"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "kube-public",
                                "id": "kube-public",
                                "meta": {
                                    "name": "kube-public",
                                    "uid": "3f0b78fb-ffd5-4212-9f40-7577db025fea",
                                    "resourceVersion": "62",
                                    "creationTimestamp": "2021-08-21T15:32:32Z",
                                    "labels": {
                                        "kubernetes.io/metadata.name": "kube-public"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::kube-public",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-public"
                            },
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kube-system",
                                        "uid": "37328aab-dbeb-4824-8ca1-5b898179f28c",
                                        "resourceVersion": "20",
                                        "creationTimestamp": "2021-08-21T15:32:32Z",
                                        "labels": {
                                            "kubernetes.io/metadata.name": "kube-system"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "kube-system",
                                "id": "kube-system",
                                "meta": {
                                    "name": "kube-system",
                                    "uid": "37328aab-dbeb-4824-8ca1-5b898179f28c",
                                    "resourceVersion": "20",
                                    "creationTimestamp": "2021-08-21T15:32:32Z",
                                    "labels": {
                                        "kubernetes.io/metadata.name": "kube-system"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::kube-system",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system"
                            },
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "myapp",
                                        "uid": "33068851-66e1-42ae-9969-807afe901c51",
                                        "resourceVersion": "4304",
                                        "creationTimestamp": "2021-08-21T15:58:57Z",
                                        "labels": {
                                            "kubernetes.io/metadata.name": "myapp"
                                        },
                                        "annotations": {
                                            "Name": "myapp",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-k8s-tuto1",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "myapp",
                                "id": "myapp",
                                "meta": {
                                    "name": "myapp",
                                    "uid": "33068851-66e1-42ae-9969-807afe901c51",
                                    "resourceVersion": "4304",
                                    "creationTimestamp": "2021-08-21T15:58:57Z",
                                    "labels": {
                                        "kubernetes.io/metadata.name": "myapp"
                                    },
                                    "annotations": {
                                        "Name": "myapp",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-k8s-tuto1",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::myapp",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "myapp"
                            }
                        ],
                        "groupType": "::Namespace",
                        "type": "Namespace",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-controller",
                                        "namespace": "ingress-nginx",
                                        "uid": "30fd1cf5-c3f4-40be-9c8e-c9fab179c847",
                                        "resourceVersion": "1881",
                                        "creationTimestamp": "2021-08-21T15:47:36Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":\"http\"},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"type\":\"NodePort\"}}\n"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "http",
                                                "protocol": "TCP",
                                                "port": 80,
                                                "targetPort": "http",
                                                "nodePort": 31615
                                            },
                                            {
                                                "name": "https",
                                                "protocol": "TCP",
                                                "port": 443,
                                                "targetPort": "https",
                                                "nodePort": 31106
                                            }
                                        ],
                                        "selector": {
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "clusterIP": "10.102.100.44",
                                        "clusterIPs": [
                                            "10.102.100.44"
                                        ],
                                        "type": "NodePort",
                                        "sessionAffinity": "None",
                                        "externalTrafficPolicy": "Cluster",
                                        "ipFamilies": [
                                            "IPv4"
                                        ],
                                        "ipFamilyPolicy": "SingleStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "ingress-nginx-controller",
                                "id": "ingress-nginx-controller",
                                "meta": {
                                    "name": "ingress-nginx-controller",
                                    "namespace": "ingress-nginx",
                                    "uid": "30fd1cf5-c3f4-40be-9c8e-c9fab179c847",
                                    "resourceVersion": "1881",
                                    "creationTimestamp": "2021-08-21T15:47:36Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":\"http\"},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"type\":\"NodePort\"}}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::ingress-nginx::ingress-nginx-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx-controller"
                            },
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-controller-admission",
                                        "namespace": "ingress-nginx",
                                        "uid": "7158b4bd-37fa-4f06-b327-d3649784e08e",
                                        "resourceVersion": "1875",
                                        "creationTimestamp": "2021-08-21T15:47:36Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller-admission\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"ports\":[{\"name\":\"https-webhook\",\"port\":443,\"targetPort\":\"webhook\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"type\":\"ClusterIP\"}}\n"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "https-webhook",
                                                "protocol": "TCP",
                                                "port": 443,
                                                "targetPort": "webhook"
                                            }
                                        ],
                                        "selector": {
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "clusterIP": "10.96.234.7",
                                        "clusterIPs": [
                                            "10.96.234.7"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None",
                                        "ipFamilies": [
                                            "IPv4"
                                        ],
                                        "ipFamilyPolicy": "SingleStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "ingress-nginx-controller-admission",
                                "id": "ingress-nginx-controller-admission",
                                "meta": {
                                    "name": "ingress-nginx-controller-admission",
                                    "namespace": "ingress-nginx",
                                    "uid": "7158b4bd-37fa-4f06-b327-d3649784e08e",
                                    "resourceVersion": "1875",
                                    "creationTimestamp": "2021-08-21T15:47:36Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller-admission\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"ports\":[{\"name\":\"https-webhook\",\"port\":443,\"targetPort\":\"webhook\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"type\":\"ClusterIP\"}}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::ingress-nginx::ingress-nginx-controller-admission",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx-controller-admission"
                            },
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kube-dns",
                                        "namespace": "kube-system",
                                        "uid": "2545c280-7854-4a05-9c92-d9b612a4e20a",
                                        "resourceVersion": "272",
                                        "creationTimestamp": "2021-08-21T15:32:35Z",
                                        "labels": {
                                            "k8s-app": "kube-dns",
                                            "kubernetes.io/cluster-service": "true",
                                            "kubernetes.io/name": "CoreDNS"
                                        },
                                        "annotations": {
                                            "prometheus.io/port": "9153",
                                            "prometheus.io/scrape": "true"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "dns",
                                                "protocol": "UDP",
                                                "port": 53,
                                                "targetPort": 53
                                            },
                                            {
                                                "name": "dns-tcp",
                                                "protocol": "TCP",
                                                "port": 53,
                                                "targetPort": 53
                                            },
                                            {
                                                "name": "metrics",
                                                "protocol": "TCP",
                                                "port": 9153,
                                                "targetPort": 9153
                                            }
                                        ],
                                        "selector": {
                                            "k8s-app": "kube-dns"
                                        },
                                        "clusterIP": "10.96.0.10",
                                        "clusterIPs": [
                                            "10.96.0.10"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None",
                                        "ipFamilies": [
                                            "IPv4"
                                        ],
                                        "ipFamilyPolicy": "SingleStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "kube-dns",
                                "id": "kube-dns",
                                "meta": {
                                    "name": "kube-dns",
                                    "namespace": "kube-system",
                                    "uid": "2545c280-7854-4a05-9c92-d9b612a4e20a",
                                    "resourceVersion": "272",
                                    "creationTimestamp": "2021-08-21T15:32:35Z",
                                    "labels": {
                                        "k8s-app": "kube-dns",
                                        "kubernetes.io/cluster-service": "true",
                                        "kubernetes.io/name": "CoreDNS"
                                    },
                                    "annotations": {
                                        "prometheus.io/port": "9153",
                                        "prometheus.io/scrape": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::kube-system::kube-dns",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::kube-dns"
                            },
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubelet",
                                        "namespace": "kube-system",
                                        "uid": "6483bd0f-887e-40d1-9792-45a78b9bbf5b",
                                        "resourceVersion": "3393",
                                        "creationTimestamp": "2021-08-21T15:54:40Z",
                                        "labels": {
                                            "app.kubernetes.io/managed-by": "prometheus-operator",
                                            "app.kubernetes.io/name": "kubelet",
                                            "k8s-app": "kubelet"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "https-metrics",
                                                "protocol": "TCP",
                                                "port": 10250,
                                                "targetPort": 10250
                                            },
                                            {
                                                "name": "http-metrics",
                                                "protocol": "TCP",
                                                "port": 10255,
                                                "targetPort": 10255
                                            },
                                            {
                                                "name": "cadvisor",
                                                "protocol": "TCP",
                                                "port": 4194,
                                                "targetPort": 4194
                                            }
                                        ],
                                        "clusterIP": "None",
                                        "clusterIPs": [
                                            "None"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None",
                                        "ipFamilies": [
                                            "IPv4",
                                            "IPv6"
                                        ],
                                        "ipFamilyPolicy": "RequireDualStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "kubelet",
                                "id": "kubelet",
                                "meta": {
                                    "name": "kubelet",
                                    "namespace": "kube-system",
                                    "uid": "6483bd0f-887e-40d1-9792-45a78b9bbf5b",
                                    "resourceVersion": "3393",
                                    "creationTimestamp": "2021-08-21T15:54:40Z",
                                    "labels": {
                                        "app.kubernetes.io/managed-by": "prometheus-operator",
                                        "app.kubernetes.io/name": "kubelet",
                                        "k8s-app": "kubelet"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::kube-system::kubelet",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::kubelet"
                            },
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubernetes",
                                        "namespace": "default",
                                        "uid": "ec785877-fa9f-45e5-913e-0048ecaf8a43",
                                        "resourceVersion": "208",
                                        "creationTimestamp": "2021-08-21T15:32:33Z",
                                        "labels": {
                                            "component": "apiserver",
                                            "provider": "kubernetes"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "https",
                                                "protocol": "TCP",
                                                "port": 443,
                                                "targetPort": 8443
                                            }
                                        ],
                                        "clusterIP": "10.96.0.1",
                                        "clusterIPs": [
                                            "10.96.0.1"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None",
                                        "ipFamilies": [
                                            "IPv4"
                                        ],
                                        "ipFamilyPolicy": "SingleStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "kubernetes",
                                "id": "kubernetes",
                                "meta": {
                                    "name": "kubernetes",
                                    "namespace": "default",
                                    "uid": "ec785877-fa9f-45e5-913e-0048ecaf8a43",
                                    "resourceVersion": "208",
                                    "creationTimestamp": "2021-08-21T15:32:33Z",
                                    "labels": {
                                        "component": "apiserver",
                                        "provider": "kubernetes"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::default::kubernetes",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "default::kubernetes"
                            },
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "nginx-service",
                                        "namespace": "myapp",
                                        "uid": "b1fc5ca4-a9f2-4982-9b1b-d1fd5300ff78",
                                        "resourceVersion": "4313",
                                        "creationTimestamp": "2021-08-21T15:58:57Z",
                                        "annotations": {
                                            "Name": "nginx-service",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-k8s-tuto1",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "protocol": "TCP",
                                                "port": 80,
                                                "targetPort": 80,
                                                "nodePort": 30020
                                            }
                                        ],
                                        "selector": {
                                            "app": "nginx-label"
                                        },
                                        "clusterIP": "10.103.194.45",
                                        "clusterIPs": [
                                            "10.103.194.45"
                                        ],
                                        "type": "NodePort",
                                        "sessionAffinity": "None",
                                        "externalTrafficPolicy": "Cluster",
                                        "ipFamilies": [
                                            "IPv4"
                                        ],
                                        "ipFamilyPolicy": "SingleStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "nginx-service",
                                "id": "nginx-service",
                                "meta": {
                                    "name": "nginx-service",
                                    "namespace": "myapp",
                                    "uid": "b1fc5ca4-a9f2-4982-9b1b-d1fd5300ff78",
                                    "resourceVersion": "4313",
                                    "creationTimestamp": "2021-08-21T15:58:57Z",
                                    "annotations": {
                                        "Name": "nginx-service",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-k8s-tuto1",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "myapp",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::myapp::nginx-service",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "myapp::nginx-service"
                            }
                        ],
                        "groupType": "::Service",
                        "type": "Service",
                        "group": "",
                        "providerName": "k8s"
                    }
                ]
            }
        ],
        "kind": "livesPerProvider"
    }
}