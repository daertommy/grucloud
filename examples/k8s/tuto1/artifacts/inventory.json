{
    "command": "list",
    "commandOptions": {
        "graph": true,
        "title": "tuto1",
        "dotFile": "/Users/fredericheem/grucloud/examples/k8s/tuto1/artifacts/diagram-live.dot"
    },
    "programOptions": {
        "json": "artifacts/inventory.json",
        "noOpen": true,
        "workingDirectory": "/Users/fredericheem/grucloud/examples/k8s/tuto1"
    },
    "result": {
        "error": false,
        "results": [
            {
                "providerName": "k8s",
                "kind": "livesPerType",
                "error": false,
                "results": [
                    {
                        "resources": [
                            {
                                "group": "",
                                "type": "Deployment",
                                "name": "coredns",
                                "meta": {
                                    "name": "coredns",
                                    "namespace": "kube-system",
                                    "uid": "33749fea-b58d-4a30-870a-33843240adfc",
                                    "resourceVersion": "523",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-14T22:40:36Z",
                                    "labels": {
                                        "k8s-app": "kube-dns"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "1"
                                    }
                                },
                                "id": "coredns",
                                "providerName": "k8s",
                                "groupType": "::Deployment",
                                "live": {
                                    "metadata": {
                                        "name": "coredns",
                                        "namespace": "kube-system",
                                        "uid": "33749fea-b58d-4a30-870a-33843240adfc",
                                        "resourceVersion": "523",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-14T22:40:36Z",
                                        "labels": {
                                            "k8s-app": "kube-dns"
                                        },
                                        "annotations": {
                                            "deployment.kubernetes.io/revision": "1"
                                        }
                                    },
                                    "spec": {
                                        "replicas": 1,
                                        "selector": {
                                            "matchLabels": {
                                                "k8s-app": "kube-dns"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "creationTimestamp": null,
                                                "labels": {
                                                    "k8s-app": "kube-dns"
                                                }
                                            },
                                            "spec": {
                                                "volumes": [
                                                    {
                                                        "name": "config-volume",
                                                        "configMap": {
                                                            "name": "coredns",
                                                            "items": [
                                                                {
                                                                    "key": "Corefile",
                                                                    "path": "Corefile"
                                                                }
                                                            ],
                                                            "defaultMode": 420
                                                        }
                                                    }
                                                ],
                                                "containers": [
                                                    {
                                                        "name": "coredns",
                                                        "image": "k8s.gcr.io/coredns:1.7.0",
                                                        "args": [
                                                            "-conf",
                                                            "/etc/coredns/Corefile"
                                                        ],
                                                        "ports": [
                                                            {
                                                                "name": "dns",
                                                                "containerPort": 53,
                                                                "protocol": "UDP"
                                                            },
                                                            {
                                                                "name": "dns-tcp",
                                                                "containerPort": 53,
                                                                "protocol": "TCP"
                                                            },
                                                            {
                                                                "name": "metrics",
                                                                "containerPort": 9153,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "resources": {
                                                            "limits": {
                                                                "memory": "170Mi"
                                                            },
                                                            "requests": {
                                                                "cpu": "100m",
                                                                "memory": "70Mi"
                                                            }
                                                        },
                                                        "volumeMounts": [
                                                            {
                                                                "name": "config-volume",
                                                                "readOnly": true,
                                                                "mountPath": "/etc/coredns"
                                                            }
                                                        ],
                                                        "livenessProbe": {
                                                            "httpGet": {
                                                                "path": "/health",
                                                                "port": 8080,
                                                                "scheme": "HTTP"
                                                            },
                                                            "initialDelaySeconds": 60,
                                                            "timeoutSeconds": 5,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 5
                                                        },
                                                        "readinessProbe": {
                                                            "httpGet": {
                                                                "path": "/ready",
                                                                "port": 8181,
                                                                "scheme": "HTTP"
                                                            },
                                                            "timeoutSeconds": 1,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 3
                                                        },
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "imagePullPolicy": "IfNotPresent",
                                                        "securityContext": {
                                                            "capabilities": {
                                                                "add": [
                                                                    "NET_BIND_SERVICE"
                                                                ],
                                                                "drop": [
                                                                    "all"
                                                                ]
                                                            },
                                                            "readOnlyRootFilesystem": true,
                                                            "allowPrivilegeEscalation": false
                                                        }
                                                    }
                                                ],
                                                "restartPolicy": "Always",
                                                "terminationGracePeriodSeconds": 30,
                                                "dnsPolicy": "Default",
                                                "nodeSelector": {
                                                    "kubernetes.io/os": "linux"
                                                },
                                                "serviceAccountName": "coredns",
                                                "serviceAccount": "coredns",
                                                "securityContext": {},
                                                "schedulerName": "default-scheduler",
                                                "tolerations": [
                                                    {
                                                        "key": "CriticalAddonsOnly",
                                                        "operator": "Exists"
                                                    },
                                                    {
                                                        "key": "node-role.kubernetes.io/master",
                                                        "effect": "NoSchedule"
                                                    },
                                                    {
                                                        "key": "node-role.kubernetes.io/control-plane",
                                                        "effect": "NoSchedule"
                                                    }
                                                ],
                                                "priorityClassName": "system-cluster-critical"
                                            }
                                        },
                                        "strategy": {
                                            "type": "RollingUpdate",
                                            "rollingUpdate": {
                                                "maxUnavailable": 1,
                                                "maxSurge": "25%"
                                            }
                                        },
                                        "revisionHistoryLimit": 10,
                                        "progressDeadlineSeconds": 600
                                    },
                                    "status": {
                                        "observedGeneration": 2,
                                        "replicas": 1,
                                        "updatedReplicas": 1,
                                        "readyReplicas": 1,
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "type": "Available",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-14T22:40:54Z",
                                                "lastTransitionTime": "2021-08-14T22:40:54Z",
                                                "reason": "MinimumReplicasAvailable",
                                                "message": "Deployment has minimum availability."
                                            },
                                            {
                                                "type": "Progressing",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-14T22:41:08Z",
                                                "lastTransitionTime": "2021-08-14T22:40:54Z",
                                                "reason": "NewReplicaSetAvailable",
                                                "message": "ReplicaSet \"coredns-74ff55c5b\" has successfully progressed."
                                            }
                                        ]
                                    }
                                },
                                "uri": "k8s::Deployment::kube-system::coredns",
                                "displayName": "kube-system::coredns",
                                "cannotBeDeleted": true,
                                "isOurMinion": false,
                                "managedByUs": false,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true
                            },
                            {
                                "group": "",
                                "type": "Deployment",
                                "name": "ingress-nginx-controller",
                                "meta": {
                                    "name": "ingress-nginx-controller",
                                    "namespace": "kube-system",
                                    "uid": "8389fc4f-ed5d-491a-b75c-ed73a6b8a8ec",
                                    "resourceVersion": "637",
                                    "generation": 1,
                                    "creationTimestamp": "2021-08-14T22:40:39Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx",
                                        "app.kubernetes.io/part-of": "kube-system"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "1",
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\",\"app.kubernetes.io/part-of\":\"kube-system\"},\"name\":\"ingress-nginx-controller\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\",\"gcp-auth-skip-secret\":\"true\"}},\"spec\":{\"containers\":[{\"args\":[\"/nginx-ingress-controller\",\"--configmap=$(POD_NAMESPACE)/nginx-load-balancer-conf\",\"--report-node-internal-ip-address\",\"--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services\",\"--udp-services-configmap=$(POD_NAMESPACE)/udp-services\",\"--validating-webhook=:8443\",\"--validating-webhook-certificate=/usr/local/certificates/cert\",\"--validating-webhook-key=/usr/local/certificates/key\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"us.gcr.io/k8s-artifacts-prod/ingress-nginx/controller:v0.40.2@sha256:46ba23c3fbaafd9e5bd01ea85b2f921d9f2217be082580edc22e6c704a83f02f\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/wait-shutdown\"]}}},\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"controller\",\"ports\":[{\"containerPort\":80,\"hostPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":443,\"hostPort\":443,\"name\":\"https\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"webhook\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"runAsUser\":101},\"volumeMounts\":[{\"mountPath\":\"/usr/local/certificates/\",\"name\":\"webhook-cert\",\"readOnly\":true}]}],\"serviceAccountName\":\"ingress-nginx\",\"volumes\":[{\"name\":\"webhook-cert\",\"secret\":{\"secretName\":\"ingress-nginx-admission\"}}]}}}}\n"
                                    }
                                },
                                "id": "ingress-nginx-controller",
                                "providerName": "k8s",
                                "groupType": "::Deployment",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-controller",
                                        "namespace": "kube-system",
                                        "uid": "8389fc4f-ed5d-491a-b75c-ed73a6b8a8ec",
                                        "resourceVersion": "637",
                                        "generation": 1,
                                        "creationTimestamp": "2021-08-14T22:40:39Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx",
                                            "app.kubernetes.io/part-of": "kube-system"
                                        },
                                        "annotations": {
                                            "deployment.kubernetes.io/revision": "1",
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\",\"app.kubernetes.io/part-of\":\"kube-system\"},\"name\":\"ingress-nginx-controller\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\",\"gcp-auth-skip-secret\":\"true\"}},\"spec\":{\"containers\":[{\"args\":[\"/nginx-ingress-controller\",\"--configmap=$(POD_NAMESPACE)/nginx-load-balancer-conf\",\"--report-node-internal-ip-address\",\"--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services\",\"--udp-services-configmap=$(POD_NAMESPACE)/udp-services\",\"--validating-webhook=:8443\",\"--validating-webhook-certificate=/usr/local/certificates/cert\",\"--validating-webhook-key=/usr/local/certificates/key\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"us.gcr.io/k8s-artifacts-prod/ingress-nginx/controller:v0.40.2@sha256:46ba23c3fbaafd9e5bd01ea85b2f921d9f2217be082580edc22e6c704a83f02f\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/wait-shutdown\"]}}},\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"controller\",\"ports\":[{\"containerPort\":80,\"hostPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":443,\"hostPort\":443,\"name\":\"https\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"webhook\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"runAsUser\":101},\"volumeMounts\":[{\"mountPath\":\"/usr/local/certificates/\",\"name\":\"webhook-cert\",\"readOnly\":true}]}],\"serviceAccountName\":\"ingress-nginx\",\"volumes\":[{\"name\":\"webhook-cert\",\"secret\":{\"secretName\":\"ingress-nginx-admission\"}}]}}}}\n"
                                        }
                                    },
                                    "spec": {
                                        "replicas": 1,
                                        "selector": {
                                            "matchLabels": {
                                                "app.kubernetes.io/component": "controller",
                                                "app.kubernetes.io/instance": "ingress-nginx",
                                                "app.kubernetes.io/name": "ingress-nginx"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "creationTimestamp": null,
                                                "labels": {
                                                    "addonmanager.kubernetes.io/mode": "Reconcile",
                                                    "app.kubernetes.io/component": "controller",
                                                    "app.kubernetes.io/instance": "ingress-nginx",
                                                    "app.kubernetes.io/name": "ingress-nginx",
                                                    "gcp-auth-skip-secret": "true"
                                                }
                                            },
                                            "spec": {
                                                "volumes": [
                                                    {
                                                        "name": "webhook-cert",
                                                        "secret": {
                                                            "secretName": "ingress-nginx-admission",
                                                            "defaultMode": 420
                                                        }
                                                    }
                                                ],
                                                "containers": [
                                                    {
                                                        "name": "controller",
                                                        "image": "us.gcr.io/k8s-artifacts-prod/ingress-nginx/controller:v0.40.2@sha256:46ba23c3fbaafd9e5bd01ea85b2f921d9f2217be082580edc22e6c704a83f02f",
                                                        "args": [
                                                            "/nginx-ingress-controller",
                                                            "--configmap=$(POD_NAMESPACE)/nginx-load-balancer-conf",
                                                            "--report-node-internal-ip-address",
                                                            "--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services",
                                                            "--udp-services-configmap=$(POD_NAMESPACE)/udp-services",
                                                            "--validating-webhook=:8443",
                                                            "--validating-webhook-certificate=/usr/local/certificates/cert",
                                                            "--validating-webhook-key=/usr/local/certificates/key"
                                                        ],
                                                        "ports": [
                                                            {
                                                                "name": "http",
                                                                "hostPort": 80,
                                                                "containerPort": 80,
                                                                "protocol": "TCP"
                                                            },
                                                            {
                                                                "name": "https",
                                                                "hostPort": 443,
                                                                "containerPort": 443,
                                                                "protocol": "TCP"
                                                            },
                                                            {
                                                                "name": "webhook",
                                                                "containerPort": 8443,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "env": [
                                                            {
                                                                "name": "POD_NAME",
                                                                "valueFrom": {
                                                                    "fieldRef": {
                                                                        "apiVersion": "v1",
                                                                        "fieldPath": "metadata.name"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "name": "POD_NAMESPACE",
                                                                "valueFrom": {
                                                                    "fieldRef": {
                                                                        "apiVersion": "v1",
                                                                        "fieldPath": "metadata.namespace"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "resources": {
                                                            "requests": {
                                                                "cpu": "100m",
                                                                "memory": "90Mi"
                                                            }
                                                        },
                                                        "volumeMounts": [
                                                            {
                                                                "name": "webhook-cert",
                                                                "readOnly": true,
                                                                "mountPath": "/usr/local/certificates/"
                                                            }
                                                        ],
                                                        "livenessProbe": {
                                                            "httpGet": {
                                                                "path": "/healthz",
                                                                "port": 10254,
                                                                "scheme": "HTTP"
                                                            },
                                                            "initialDelaySeconds": 10,
                                                            "timeoutSeconds": 1,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 3
                                                        },
                                                        "readinessProbe": {
                                                            "httpGet": {
                                                                "path": "/healthz",
                                                                "port": 10254,
                                                                "scheme": "HTTP"
                                                            },
                                                            "initialDelaySeconds": 10,
                                                            "timeoutSeconds": 1,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 3
                                                        },
                                                        "lifecycle": {
                                                            "preStop": {
                                                                "exec": {
                                                                    "command": [
                                                                        "/wait-shutdown"
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "imagePullPolicy": "IfNotPresent",
                                                        "securityContext": {
                                                            "capabilities": {
                                                                "add": [
                                                                    "NET_BIND_SERVICE"
                                                                ],
                                                                "drop": [
                                                                    "ALL"
                                                                ]
                                                            },
                                                            "runAsUser": 101,
                                                            "allowPrivilegeEscalation": true
                                                        }
                                                    }
                                                ],
                                                "restartPolicy": "Always",
                                                "terminationGracePeriodSeconds": 30,
                                                "dnsPolicy": "ClusterFirst",
                                                "serviceAccountName": "ingress-nginx",
                                                "serviceAccount": "ingress-nginx",
                                                "securityContext": {},
                                                "schedulerName": "default-scheduler"
                                            }
                                        },
                                        "strategy": {
                                            "type": "RollingUpdate",
                                            "rollingUpdate": {
                                                "maxUnavailable": 1,
                                                "maxSurge": 1
                                            }
                                        },
                                        "revisionHistoryLimit": 10,
                                        "progressDeadlineSeconds": 600
                                    },
                                    "status": {
                                        "observedGeneration": 1,
                                        "replicas": 1,
                                        "updatedReplicas": 1,
                                        "readyReplicas": 1,
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "type": "Available",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-14T22:40:54Z",
                                                "lastTransitionTime": "2021-08-14T22:40:54Z",
                                                "reason": "MinimumReplicasAvailable",
                                                "message": "Deployment has minimum availability."
                                            },
                                            {
                                                "type": "Progressing",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-14T22:42:40Z",
                                                "lastTransitionTime": "2021-08-14T22:40:54Z",
                                                "reason": "NewReplicaSetAvailable",
                                                "message": "ReplicaSet \"ingress-nginx-controller-65cf89dc4f\" has successfully progressed."
                                            }
                                        ]
                                    }
                                },
                                "uri": "k8s::Deployment::kube-system::ingress-nginx-controller",
                                "displayName": "kube-system::ingress-nginx-controller",
                                "cannotBeDeleted": true,
                                "isOurMinion": false,
                                "managedByUs": false,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true
                            },
                            {
                                "group": "",
                                "type": "Deployment",
                                "name": "nginx-deployment",
                                "meta": {
                                    "name": "nginx-deployment",
                                    "namespace": "myapp",
                                    "uid": "cf211fa4-c266-423c-b19f-40146ad1f02d",
                                    "resourceVersion": "106617",
                                    "generation": 1,
                                    "creationTimestamp": "2021-08-16T03:17:37Z",
                                    "labels": {
                                        "app": "nginx-label"
                                    },
                                    "annotations": {
                                        "Name": "nginx-deployment",
                                        "deployment.kubernetes.io/revision": "1",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-k8s-tuto1",
                                        "gc-stage": "dev"
                                    }
                                },
                                "id": "nginx-deployment",
                                "providerName": "k8s",
                                "groupType": "::Deployment",
                                "live": {
                                    "metadata": {
                                        "name": "nginx-deployment",
                                        "namespace": "myapp",
                                        "uid": "cf211fa4-c266-423c-b19f-40146ad1f02d",
                                        "resourceVersion": "106617",
                                        "generation": 1,
                                        "creationTimestamp": "2021-08-16T03:17:37Z",
                                        "labels": {
                                            "app": "nginx-label"
                                        },
                                        "annotations": {
                                            "Name": "nginx-deployment",
                                            "deployment.kubernetes.io/revision": "1",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-k8s-tuto1",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "replicas": 1,
                                        "selector": {
                                            "matchLabels": {
                                                "app": "nginx-label"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "creationTimestamp": null,
                                                "labels": {
                                                    "app": "nginx-label"
                                                }
                                            },
                                            "spec": {
                                                "containers": [
                                                    {
                                                        "name": "nginx",
                                                        "image": "nginx:1.14.2",
                                                        "ports": [
                                                            {
                                                                "containerPort": 80,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "resources": {},
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "imagePullPolicy": "IfNotPresent"
                                                    }
                                                ],
                                                "restartPolicy": "Always",
                                                "terminationGracePeriodSeconds": 30,
                                                "dnsPolicy": "ClusterFirst",
                                                "securityContext": {},
                                                "schedulerName": "default-scheduler"
                                            }
                                        },
                                        "strategy": {
                                            "type": "RollingUpdate",
                                            "rollingUpdate": {
                                                "maxUnavailable": "25%",
                                                "maxSurge": "25%"
                                            }
                                        },
                                        "revisionHistoryLimit": 10,
                                        "progressDeadlineSeconds": 600
                                    },
                                    "status": {
                                        "observedGeneration": 1,
                                        "replicas": 1,
                                        "updatedReplicas": 1,
                                        "readyReplicas": 1,
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "type": "Available",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-16T03:17:38Z",
                                                "lastTransitionTime": "2021-08-16T03:17:38Z",
                                                "reason": "MinimumReplicasAvailable",
                                                "message": "Deployment has minimum availability."
                                            },
                                            {
                                                "type": "Progressing",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-16T03:17:38Z",
                                                "lastTransitionTime": "2021-08-16T03:17:37Z",
                                                "reason": "NewReplicaSetAvailable",
                                                "message": "ReplicaSet \"nginx-deployment-66cdc8d56b\" has successfully progressed."
                                            }
                                        ]
                                    }
                                },
                                "uri": "k8s::Deployment::myapp::nginx-deployment",
                                "displayName": "myapp::nginx-deployment",
                                "cannotBeDeleted": false,
                                "isOurMinion": true,
                                "managedByUs": true,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "myapp",
                                "dependencies": [],
                                "show": true
                            }
                        ],
                        "groupType": "::Deployment",
                        "type": "Deployment",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "group": "",
                                "type": "Namespace",
                                "name": "default",
                                "meta": {
                                    "name": "default",
                                    "uid": "afa5f26c-a27e-4caf-b6c6-29116f4e0dfa",
                                    "resourceVersion": "200",
                                    "creationTimestamp": "2021-08-14T22:40:34Z"
                                },
                                "id": "default",
                                "providerName": "k8s",
                                "groupType": "::Namespace",
                                "live": {
                                    "metadata": {
                                        "name": "default",
                                        "uid": "afa5f26c-a27e-4caf-b6c6-29116f4e0dfa",
                                        "resourceVersion": "200",
                                        "creationTimestamp": "2021-08-14T22:40:34Z"
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "uri": "k8s::Namespace::default",
                                "displayName": "default",
                                "cannotBeDeleted": true,
                                "isOurMinion": false,
                                "managedByUs": false,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true
                            },
                            {
                                "group": "",
                                "type": "Namespace",
                                "name": "kube-node-lease",
                                "meta": {
                                    "name": "kube-node-lease",
                                    "uid": "dfa6128e-facc-484d-89c6-d536c11f7a49",
                                    "resourceVersion": "63",
                                    "creationTimestamp": "2021-08-14T22:40:33Z"
                                },
                                "id": "kube-node-lease",
                                "providerName": "k8s",
                                "groupType": "::Namespace",
                                "live": {
                                    "metadata": {
                                        "name": "kube-node-lease",
                                        "uid": "dfa6128e-facc-484d-89c6-d536c11f7a49",
                                        "resourceVersion": "63",
                                        "creationTimestamp": "2021-08-14T22:40:33Z"
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "uri": "k8s::Namespace::kube-node-lease",
                                "displayName": "kube-node-lease",
                                "cannotBeDeleted": true,
                                "isOurMinion": false,
                                "managedByUs": false,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true
                            },
                            {
                                "group": "",
                                "type": "Namespace",
                                "name": "kube-public",
                                "meta": {
                                    "name": "kube-public",
                                    "uid": "be8b810d-2974-49f8-a547-51e2af348398",
                                    "resourceVersion": "58",
                                    "creationTimestamp": "2021-08-14T22:40:33Z"
                                },
                                "id": "kube-public",
                                "providerName": "k8s",
                                "groupType": "::Namespace",
                                "live": {
                                    "metadata": {
                                        "name": "kube-public",
                                        "uid": "be8b810d-2974-49f8-a547-51e2af348398",
                                        "resourceVersion": "58",
                                        "creationTimestamp": "2021-08-14T22:40:33Z"
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "uri": "k8s::Namespace::kube-public",
                                "displayName": "kube-public",
                                "cannotBeDeleted": true,
                                "isOurMinion": false,
                                "managedByUs": false,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true
                            },
                            {
                                "group": "",
                                "type": "Namespace",
                                "name": "kube-system",
                                "meta": {
                                    "name": "kube-system",
                                    "uid": "c4886311-ad1c-4c89-abbf-b1998f5a7ec2",
                                    "resourceVersion": "24",
                                    "creationTimestamp": "2021-08-14T22:40:33Z"
                                },
                                "id": "kube-system",
                                "providerName": "k8s",
                                "groupType": "::Namespace",
                                "live": {
                                    "metadata": {
                                        "name": "kube-system",
                                        "uid": "c4886311-ad1c-4c89-abbf-b1998f5a7ec2",
                                        "resourceVersion": "24",
                                        "creationTimestamp": "2021-08-14T22:40:33Z"
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "uri": "k8s::Namespace::kube-system",
                                "displayName": "kube-system",
                                "cannotBeDeleted": true,
                                "isOurMinion": false,
                                "managedByUs": false,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true
                            },
                            {
                                "group": "",
                                "type": "Namespace",
                                "name": "myapp",
                                "meta": {
                                    "name": "myapp",
                                    "uid": "34085863-d8ee-456a-b664-6daf0e24c219",
                                    "resourceVersion": "106585",
                                    "creationTimestamp": "2021-08-16T03:17:37Z",
                                    "annotations": {
                                        "Name": "myapp",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-k8s-tuto1",
                                        "gc-stage": "dev"
                                    }
                                },
                                "id": "myapp",
                                "providerName": "k8s",
                                "groupType": "::Namespace",
                                "live": {
                                    "metadata": {
                                        "name": "myapp",
                                        "uid": "34085863-d8ee-456a-b664-6daf0e24c219",
                                        "resourceVersion": "106585",
                                        "creationTimestamp": "2021-08-16T03:17:37Z",
                                        "annotations": {
                                            "Name": "myapp",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-k8s-tuto1",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "uri": "k8s::Namespace::myapp",
                                "displayName": "myapp",
                                "cannotBeDeleted": false,
                                "isOurMinion": true,
                                "managedByUs": true,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true
                            }
                        ],
                        "groupType": "::Namespace",
                        "type": "Namespace",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "group": "",
                                "type": "Service",
                                "name": "ingress-nginx-controller-admission",
                                "meta": {
                                    "name": "ingress-nginx-controller-admission",
                                    "namespace": "kube-system",
                                    "uid": "d7005eeb-5e3b-460d-862a-a75bb59b235d",
                                    "resourceVersion": "295",
                                    "creationTimestamp": "2021-08-14T22:40:40Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller-admission\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"name\":\"https-webhook\",\"port\":443,\"targetPort\":\"webhook\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"}}}\n"
                                    }
                                },
                                "id": "ingress-nginx-controller-admission",
                                "providerName": "k8s",
                                "groupType": "::Service",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-controller-admission",
                                        "namespace": "kube-system",
                                        "uid": "d7005eeb-5e3b-460d-862a-a75bb59b235d",
                                        "resourceVersion": "295",
                                        "creationTimestamp": "2021-08-14T22:40:40Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller-admission\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"name\":\"https-webhook\",\"port\":443,\"targetPort\":\"webhook\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"}}}\n"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "https-webhook",
                                                "protocol": "TCP",
                                                "port": 443,
                                                "targetPort": "webhook"
                                            }
                                        ],
                                        "selector": {
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "clusterIP": "10.108.73.4",
                                        "clusterIPs": [
                                            "10.108.73.4"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "uri": "k8s::Service::kube-system::ingress-nginx-controller-admission",
                                "displayName": "kube-system::ingress-nginx-controller-admission",
                                "cannotBeDeleted": true,
                                "isOurMinion": false,
                                "managedByUs": false,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true
                            },
                            {
                                "group": "",
                                "type": "Service",
                                "name": "kube-dns",
                                "meta": {
                                    "name": "kube-dns",
                                    "namespace": "kube-system",
                                    "uid": "4f41fcbc-cb5d-407f-970f-4a1e47d664cb",
                                    "resourceVersion": "234",
                                    "creationTimestamp": "2021-08-14T22:40:36Z",
                                    "labels": {
                                        "k8s-app": "kube-dns",
                                        "kubernetes.io/cluster-service": "true",
                                        "kubernetes.io/name": "KubeDNS"
                                    },
                                    "annotations": {
                                        "prometheus.io/port": "9153",
                                        "prometheus.io/scrape": "true"
                                    }
                                },
                                "id": "kube-dns",
                                "providerName": "k8s",
                                "groupType": "::Service",
                                "live": {
                                    "metadata": {
                                        "name": "kube-dns",
                                        "namespace": "kube-system",
                                        "uid": "4f41fcbc-cb5d-407f-970f-4a1e47d664cb",
                                        "resourceVersion": "234",
                                        "creationTimestamp": "2021-08-14T22:40:36Z",
                                        "labels": {
                                            "k8s-app": "kube-dns",
                                            "kubernetes.io/cluster-service": "true",
                                            "kubernetes.io/name": "KubeDNS"
                                        },
                                        "annotations": {
                                            "prometheus.io/port": "9153",
                                            "prometheus.io/scrape": "true"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "dns",
                                                "protocol": "UDP",
                                                "port": 53,
                                                "targetPort": 53
                                            },
                                            {
                                                "name": "dns-tcp",
                                                "protocol": "TCP",
                                                "port": 53,
                                                "targetPort": 53
                                            },
                                            {
                                                "name": "metrics",
                                                "protocol": "TCP",
                                                "port": 9153,
                                                "targetPort": 9153
                                            }
                                        ],
                                        "selector": {
                                            "k8s-app": "kube-dns"
                                        },
                                        "clusterIP": "10.96.0.10",
                                        "clusterIPs": [
                                            "10.96.0.10"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "uri": "k8s::Service::kube-system::kube-dns",
                                "displayName": "kube-system::kube-dns",
                                "cannotBeDeleted": true,
                                "isOurMinion": false,
                                "managedByUs": false,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true
                            },
                            {
                                "group": "",
                                "type": "Service",
                                "name": "kubelet",
                                "meta": {
                                    "name": "kubelet",
                                    "namespace": "kube-system",
                                    "uid": "269fa637-85f0-4dbb-89f2-5ad781966025",
                                    "resourceVersion": "2145",
                                    "creationTimestamp": "2021-08-14T22:54:33Z",
                                    "labels": {
                                        "app.kubernetes.io/managed-by": "prometheus-operator",
                                        "app.kubernetes.io/name": "kubelet",
                                        "k8s-app": "kubelet"
                                    }
                                },
                                "id": "kubelet",
                                "providerName": "k8s",
                                "groupType": "::Service",
                                "live": {
                                    "metadata": {
                                        "name": "kubelet",
                                        "namespace": "kube-system",
                                        "uid": "269fa637-85f0-4dbb-89f2-5ad781966025",
                                        "resourceVersion": "2145",
                                        "creationTimestamp": "2021-08-14T22:54:33Z",
                                        "labels": {
                                            "app.kubernetes.io/managed-by": "prometheus-operator",
                                            "app.kubernetes.io/name": "kubelet",
                                            "k8s-app": "kubelet"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "https-metrics",
                                                "protocol": "TCP",
                                                "port": 10250,
                                                "targetPort": 10250
                                            },
                                            {
                                                "name": "http-metrics",
                                                "protocol": "TCP",
                                                "port": 10255,
                                                "targetPort": 10255
                                            },
                                            {
                                                "name": "cadvisor",
                                                "protocol": "TCP",
                                                "port": 4194,
                                                "targetPort": 4194
                                            }
                                        ],
                                        "clusterIP": "None",
                                        "clusterIPs": [
                                            "None"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "uri": "k8s::Service::kube-system::kubelet",
                                "displayName": "kube-system::kubelet",
                                "cannotBeDeleted": true,
                                "isOurMinion": false,
                                "managedByUs": false,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true
                            },
                            {
                                "group": "",
                                "type": "Service",
                                "name": "kubernetes",
                                "meta": {
                                    "name": "kubernetes",
                                    "namespace": "default",
                                    "uid": "7a24c8b4-7aa1-4883-93d1-82b5024e2a80",
                                    "resourceVersion": "202",
                                    "creationTimestamp": "2021-08-14T22:40:35Z",
                                    "labels": {
                                        "component": "apiserver",
                                        "provider": "kubernetes"
                                    }
                                },
                                "id": "kubernetes",
                                "providerName": "k8s",
                                "groupType": "::Service",
                                "live": {
                                    "metadata": {
                                        "name": "kubernetes",
                                        "namespace": "default",
                                        "uid": "7a24c8b4-7aa1-4883-93d1-82b5024e2a80",
                                        "resourceVersion": "202",
                                        "creationTimestamp": "2021-08-14T22:40:35Z",
                                        "labels": {
                                            "component": "apiserver",
                                            "provider": "kubernetes"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "https",
                                                "protocol": "TCP",
                                                "port": 443,
                                                "targetPort": 8443
                                            }
                                        ],
                                        "clusterIP": "10.96.0.1",
                                        "clusterIPs": [
                                            "10.96.0.1"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "uri": "k8s::Service::default::kubernetes",
                                "displayName": "default::kubernetes",
                                "cannotBeDeleted": true,
                                "isOurMinion": false,
                                "managedByUs": false,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true
                            },
                            {
                                "group": "",
                                "type": "Service",
                                "name": "nginx-service",
                                "meta": {
                                    "name": "nginx-service",
                                    "namespace": "myapp",
                                    "uid": "c9d04acd-aed1-4608-9373-91013f984f92",
                                    "resourceVersion": "106594",
                                    "creationTimestamp": "2021-08-16T03:17:37Z",
                                    "annotations": {
                                        "Name": "nginx-service",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-k8s-tuto1",
                                        "gc-stage": "dev"
                                    }
                                },
                                "id": "nginx-service",
                                "providerName": "k8s",
                                "groupType": "::Service",
                                "live": {
                                    "metadata": {
                                        "name": "nginx-service",
                                        "namespace": "myapp",
                                        "uid": "c9d04acd-aed1-4608-9373-91013f984f92",
                                        "resourceVersion": "106594",
                                        "creationTimestamp": "2021-08-16T03:17:37Z",
                                        "annotations": {
                                            "Name": "nginx-service",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-k8s-tuto1",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "protocol": "TCP",
                                                "port": 80,
                                                "targetPort": 80,
                                                "nodePort": 30020
                                            }
                                        ],
                                        "selector": {
                                            "app": "nginx-label"
                                        },
                                        "clusterIP": "10.111.162.14",
                                        "clusterIPs": [
                                            "10.111.162.14"
                                        ],
                                        "type": "NodePort",
                                        "sessionAffinity": "None",
                                        "externalTrafficPolicy": "Cluster"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "uri": "k8s::Service::myapp::nginx-service",
                                "displayName": "myapp::nginx-service",
                                "cannotBeDeleted": false,
                                "isOurMinion": true,
                                "managedByUs": true,
                                "managedByOther": false,
                                "isDefault": false,
                                "namespace": "myapp",
                                "dependencies": [],
                                "show": true
                            }
                        ],
                        "groupType": "::Service",
                        "type": "Service",
                        "group": "",
                        "providerName": "k8s"
                    }
                ]
            }
        ],
        "kind": "livesPerProvider"
    }
}