// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "RouteTable",
    group: "EC2",
    name: "VpcauroraisolatedSubnet1RouteTableA8F6E99C",
    dependencies: ({}) => ({
      vpc: "Vpc8378EB38",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "VpcauroraisolatedSubnet2RouteTableBF363B67",
    dependencies: ({}) => ({
      vpc: "Vpc8378EB38",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({}) => ({
      routeTable: "Vpc8378EB38::VpcauroraisolatedSubnet1RouteTableA8F6E99C",
      subnet: "Vpc8378EB38::VpcauroraisolatedSubnet1Subnet5370B90B",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({}) => ({
      routeTable: "Vpc8378EB38::VpcauroraisolatedSubnet2RouteTableBF363B67",
      subnet: "Vpc8378EB38::VpcauroraisolatedSubnet2SubnetCB56E2A8",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "VpcauroraisolatedSubnet1Subnet5370B90B",
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}a`,
      NewBits: 1,
      NetworkNumber: 0,
    }),
    dependencies: ({}) => ({
      vpc: "Vpc8378EB38",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "VpcauroraisolatedSubnet2SubnetCB56E2A8",
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}b`,
      NewBits: 1,
      NetworkNumber: 1,
    }),
    dependencies: ({}) => ({
      vpc: "Vpc8378EB38",
    }),
  },
  {
    type: "Vpc",
    group: "EC2",
    name: "Vpc8378EB38",
    properties: ({}) => ({
      CidrBlock: "10.0.0.0/16",
      DnsHostnames: true,
    }),
  },
  {
    type: "DBCluster",
    group: "RDS",
    properties: ({}) => ({
      BackupRetentionPeriod: 1,
      DatabaseName: "dbname",
      DBClusterIdentifier: "aurora-serverless",
      DeletionProtection: false,
      Engine: "aurora",
      EngineMode: "serverless",
      EngineVersion: "5.6.mysql_aurora.1.22.3",
      HttpEndpointEnabled: false,
      IAMDatabaseAuthenticationEnabled: false,
      MasterUsername: process.env.AURORA_SERVERLESS_MASTER_USERNAME,
      Port: 3306,
      PreferredBackupWindow: "03:02-03:32",
      PreferredMaintenanceWindow: "tue:06:58-tue:07:28",
      ScalingConfiguration: {
        AutoPause: true,
        MaxCapacity: 2,
        MinCapacity: 2,
        SecondsBeforeTimeout: 300,
        SecondsUntilAutoPause: 3600,
        TimeoutAction: "RollbackCapacityChange",
      },
      MasterUserPassword: process.env.AURORA_SERVERLESS_MASTER_USER_PASSWORD,
    }),
    dependencies: ({}) => ({
      dbSubnetGroup: "aurora-serverless-subnet-group",
      secret: "demordsservice-demostage-credentials",
    }),
  },
  {
    type: "DBSubnetGroup",
    group: "RDS",
    properties: ({}) => ({
      DBSubnetGroupDescription: "Subnet group to access aurora",
      DBSubnetGroupName: "aurora-serverless-subnet-group",
    }),
    dependencies: ({}) => ({
      subnets: [
        "Vpc8378EB38::VpcauroraisolatedSubnet1Subnet5370B90B",
        "Vpc8378EB38::VpcauroraisolatedSubnet2SubnetCB56E2A8",
      ],
    }),
  },
  {
    type: "Secret",
    group: "SecretsManager",
    properties: ({ generatePassword }) => ({
      Name: "demordsservice-demostage-credentials",
      SecretString: {
        password: generatePassword({ length: 32 }),
        port: 3306,
        username: "demousername",
      },
    }),
  },
];
