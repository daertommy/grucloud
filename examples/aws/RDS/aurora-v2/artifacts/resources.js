// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Vpc",
    group: "EC2",
    name: "pg-vpc",
    properties: ({}) => ({
      CidrBlock: "10.0.0.0/16",
    }),
  },
  {
    type: "InternetGateway",
    group: "EC2",
    name: "pg-igw",
    dependencies: () => ({
      vpc: "pg-vpc",
    }),
  },
  {
    type: "NatGateway",
    group: "EC2",
    name: "pg-nat-public1-us-east-1a",
    dependencies: () => ({
      subnet: "pg-subnet-public1-us-east-1a",
      eip: "pg-eip-us-east-1a",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "pg-subnet-private1-us-east-1a",
    properties: ({ config }) => ({
      CidrBlock: "10.0.128.0/20",
      AvailabilityZone: `${config.region}a`,
    }),
    dependencies: () => ({
      vpc: "pg-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "pg-subnet-private2-us-east-1b",
    properties: ({ config }) => ({
      CidrBlock: "10.0.144.0/20",
      AvailabilityZone: `${config.region}b`,
    }),
    dependencies: () => ({
      vpc: "pg-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "pg-subnet-public1-us-east-1a",
    properties: ({ config }) => ({
      CidrBlock: "10.0.0.0/20",
      AvailabilityZone: `${config.region}a`,
    }),
    dependencies: () => ({
      vpc: "pg-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "pg-subnet-public2-us-east-1b",
    properties: ({ config }) => ({
      CidrBlock: "10.0.16.0/20",
      AvailabilityZone: `${config.region}b`,
    }),
    dependencies: () => ({
      vpc: "pg-vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "pg-rtb-private1-us-east-1a",
    dependencies: () => ({
      vpc: "pg-vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "pg-rtb-private2-us-east-1b",
    dependencies: () => ({
      vpc: "pg-vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "pg-rtb-public",
    dependencies: () => ({
      vpc: "pg-vpc",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "pg-rtb-private1-us-east-1a",
      subnet: "pg-subnet-private1-us-east-1a",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "pg-rtb-private2-us-east-1b",
      subnet: "pg-subnet-private2-us-east-1b",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "pg-rtb-public",
      subnet: "pg-subnet-public1-us-east-1a",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "pg-rtb-public",
      subnet: "pg-subnet-public2-us-east-1b",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "pg-rtb-private1-us-east-1a",
      natGateway: "pg-nat-public1-us-east-1a",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "pg-rtb-private2-us-east-1b",
      natGateway: "pg-nat-public1-us-east-1a",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "pg-rtb-public",
      ig: "pg-igw",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "pg",
      Description: "Created by RDS management console",
    }),
    dependencies: () => ({
      vpc: "pg-vpc",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 5432,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "92.147.31.54/32",
          },
        ],
        ToPort: 5432,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::pg-vpc::pg",
    }),
  },
  { type: "ElasticIpAddress", group: "EC2", name: "pg-eip-us-east-1a" },
  {
    type: "Role",
    group: "IAM",
    name: "rds-monitoring-role",
    properties: ({}) => ({
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "",
            Effect: "Allow",
            Principal: {
              Service: `monitoring.rds.amazonaws.com`,
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AmazonRDSEnhancedMonitoringRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
        },
      ],
    }),
  },
  {
    type: "DBSubnetGroup",
    group: "RDS",
    name: "default-vpc-07c0392e5e3359f2e",
    properties: ({}) => ({
      DBSubnetGroupDescription: "Created from the RDS Management Console",
    }),
    dependencies: () => ({
      subnets: [
        "pg-subnet-private1-us-east-1a",
        "pg-subnet-private2-us-east-1b",
        "pg-subnet-public1-us-east-1a",
        "pg-subnet-public2-us-east-1b",
      ],
    }),
  },
  {
    type: "DBCluster",
    group: "RDS",
    name: "database-1",
    properties: ({}) => ({
      BackupRetentionPeriod: 7,
      DatabaseName: "mydb",
      Engine: "aurora-postgresql",
      EngineVersion: "13.6",
      MasterUsername: process.env.DATABASE_1_MASTER_USERNAME,
      PreferredBackupWindow: "09:29-09:59",
      PreferredMaintenanceWindow: "sun:07:52-sun:08:22",
      IAMDatabaseAuthenticationEnabled: false,
      EngineMode: "provisioned",
      DeletionProtection: false,
      HttpEndpointEnabled: false,
      CopyTagsToSnapshot: true,
      ServerlessV2ScalingConfiguration: {
        MinCapacity: 0.5,
        MaxCapacity: 1,
      },
      MasterUserPassword: process.env.DATABASE_1_MASTER_USER_PASSWORD,
    }),
    dependencies: () => ({
      dbSubnetGroup: "default-vpc-07c0392e5e3359f2e",
      securityGroups: ["sg::pg-vpc::pg"],
    }),
  },
  {
    type: "DBInstance",
    group: "RDS",
    name: "database-1-instance-1",
    properties: ({}) => ({
      DBInstanceIdentifier: "database-1-instance-1",
      DBInstanceClass: "db.serverless",
      Engine: "aurora-postgresql",
      PreferredMaintenanceWindow: "tue:08:06-tue:08:36",
      EngineVersion: "13.6",
      PubliclyAccessible: false,
      StorageType: "aurora",
      DBClusterIdentifier: "database-1",
      StorageEncrypted: true,
      MonitoringInterval: 60,
      PerformanceInsightsEnabled: true,
      PerformanceInsightsRetentionPeriod: 7,
      EnablePerformanceInsights: true,
      MasterUsername: process.env.DATABASE_1_INSTANCE_1_MASTER_USERNAME,
      MasterUserPassword:
        process.env.DATABASE_1_INSTANCE_1_MASTER_USER_PASSWORD,
    }),
    dependencies: () => ({
      dbSubnetGroup: "default-vpc-07c0392e5e3359f2e",
      securityGroups: ["sg::pg-vpc::pg"],
      dbCluster: "database-1",
      monitoringRole: "rds-monitoring-role",
    }),
  },
];
