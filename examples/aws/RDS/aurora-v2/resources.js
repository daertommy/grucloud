// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "LogGroup",
    group: "CloudWatchLogs",
    name: "RDSOSMetrics",
    properties: ({}) => ({
      retentionInDays: 30,
    }),
  },
  {
    type: "Vpc",
    group: "EC2",
    name: "vpc-0aff766a5d6e9be74",
    properties: ({}) => ({
      CidrBlock: "172.30.0.0/16",
      DnsHostnames: true,
    }),
  },
  {
    type: "Vpc",
    group: "EC2",
    name: "vpc-0f5e4da4400c56df5",
    properties: ({}) => ({
      CidrBlock: "172.30.0.0/16",
      DnsHostnames: true,
    }),
  },
  {
    type: "Vpc",
    group: "EC2",
    name: "vpc-0fe9d2f3614acf697",
    properties: ({}) => ({
      CidrBlock: "172.30.0.0/16",
      DnsHostnames: true,
    }),
  },
  {
    type: "InternetGateway",
    group: "EC2",
    name: "igw-0847cef761f3cc8b7",
    dependencies: () => ({
      vpc: "vpc-0fe9d2f3614acf697",
    }),
  },
  {
    type: "InternetGateway",
    group: "EC2",
    name: "igw-089c11a5152b9de67",
    dependencies: () => ({
      vpc: "vpc-0aff766a5d6e9be74",
    }),
  },
  {
    type: "InternetGateway",
    group: "EC2",
    name: "igw-09df5a9505cffcc60",
    dependencies: () => ({
      vpc: "vpc-0f5e4da4400c56df5",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0041063adeab062e9",
    properties: ({ config }) => ({
      CidrBlock: "172.30.2.0/24",
      AvailabilityZone: `${config.region}c`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0f5e4da4400c56df5",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0156381210a990b01",
    properties: ({ config }) => ({
      CidrBlock: "172.30.4.0/24",
      AvailabilityZone: `${config.region}e`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0f5e4da4400c56df5",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0227815f22bd2ceb9",
    properties: ({ config }) => ({
      CidrBlock: "172.30.0.0/24",
      AvailabilityZone: `${config.region}a`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0f5e4da4400c56df5",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-03a35ed92663b3e2b",
    properties: ({ config }) => ({
      CidrBlock: "172.30.2.0/24",
      AvailabilityZone: `${config.region}c`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0aff766a5d6e9be74",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-03a9908677fe00354",
    properties: ({ config }) => ({
      CidrBlock: "172.30.3.0/24",
      AvailabilityZone: `${config.region}d`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0aff766a5d6e9be74",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-03f8979f053ff3e5e",
    properties: ({ config }) => ({
      CidrBlock: "172.30.4.0/24",
      AvailabilityZone: `${config.region}e`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0fe9d2f3614acf697",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-041db6624b3363ef9",
    properties: ({ config }) => ({
      CidrBlock: "172.30.0.0/24",
      AvailabilityZone: `${config.region}a`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0fe9d2f3614acf697",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0524f2655c85511f0",
    properties: ({ config }) => ({
      CidrBlock: "172.30.4.0/24",
      AvailabilityZone: `${config.region}e`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0aff766a5d6e9be74",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-082e9ca168683605d",
    properties: ({ config }) => ({
      CidrBlock: "172.30.3.0/24",
      AvailabilityZone: `${config.region}d`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0f5e4da4400c56df5",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-089e5b1328f049829",
    properties: ({ config }) => ({
      CidrBlock: "172.30.3.0/24",
      AvailabilityZone: `${config.region}d`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0fe9d2f3614acf697",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0985555124f3fbed9",
    properties: ({ config }) => ({
      CidrBlock: "172.30.5.0/24",
      AvailabilityZone: `${config.region}f`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0f5e4da4400c56df5",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0aa13c195a20102a9",
    properties: ({ config }) => ({
      CidrBlock: "172.30.1.0/24",
      AvailabilityZone: `${config.region}b`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0aff766a5d6e9be74",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0b6b2b87c7a673e1e",
    properties: ({ config }) => ({
      CidrBlock: "172.30.5.0/24",
      AvailabilityZone: `${config.region}f`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0aff766a5d6e9be74",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0bf3a34a609861005",
    properties: ({ config }) => ({
      CidrBlock: "172.30.1.0/24",
      AvailabilityZone: `${config.region}b`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0f5e4da4400c56df5",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0c0aedacd0fe89295",
    properties: ({ config }) => ({
      CidrBlock: "172.30.2.0/24",
      AvailabilityZone: `${config.region}c`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0fe9d2f3614acf697",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0ee8ba933f67a1bf2",
    properties: ({ config }) => ({
      CidrBlock: "172.30.1.0/24",
      AvailabilityZone: `${config.region}b`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0fe9d2f3614acf697",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0f156a2bf136d927b",
    properties: ({ config }) => ({
      CidrBlock: "172.30.5.0/24",
      AvailabilityZone: `${config.region}f`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0fe9d2f3614acf697",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-0fd43e62220c0f9c5",
    properties: ({ config }) => ({
      CidrBlock: "172.30.0.0/24",
      AvailabilityZone: `${config.region}a`,
      MapPublicIpOnLaunch: true,
    }),
    dependencies: () => ({
      vpc: "vpc-0aff766a5d6e9be74",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "rt-default-vpc-0aff766a5d6e9be74",
    isDefault: true,
    dependencies: () => ({
      vpc: "vpc-0aff766a5d6e9be74",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "rt-default-vpc-0f5e4da4400c56df5",
    isDefault: true,
    dependencies: () => ({
      vpc: "vpc-0f5e4da4400c56df5",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "rt-default-vpc-0fe9d2f3614acf697",
    isDefault: true,
    dependencies: () => ({
      vpc: "vpc-0fe9d2f3614acf697",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "rt-default-vpc-0aff766a5d6e9be74",
      ig: "igw-089c11a5152b9de67",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "rt-default-vpc-0f5e4da4400c56df5",
      ig: "igw-09df5a9505cffcc60",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "rt-default-vpc-0fe9d2f3614acf697",
      ig: "igw-0847cef761f3cc8b7",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "postgres",
      Description: "Created by RDS management console",
    }),
    dependencies: () => ({
      vpc: "vpc-0f5e4da4400c56df5",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "postgres",
      Description: "Created by RDS management console",
    }),
    dependencies: () => ({
      vpc: "vpc-0fe9d2f3614acf697",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 5432,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "92.147.31.54/32",
          },
        ],
        ToPort: 5432,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::vpc-0fe9d2f3614acf697::postgres",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 5432,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "92.147.31.54/32",
          },
        ],
        ToPort: 5432,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::vpc-0fe9d2f3614acf697::postgres",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    name: "rds-monitoring-role",
    properties: ({}) => ({
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "",
            Effect: "Allow",
            Principal: {
              Service: `monitoring.rds.amazonaws.com`,
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AmazonRDSEnhancedMonitoringRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
        },
      ],
    }),
  },
  {
    type: "DBSubnetGroup",
    group: "RDS",
    name: "default-vpc-0aff766a5d6e9be74",
    properties: ({}) => ({
      DBSubnetGroupDescription: "Created from the RDS Management Console",
    }),
    dependencies: () => ({
      subnets: [
        "subnet-03a35ed92663b3e2b",
        "subnet-03a9908677fe00354",
        "subnet-0524f2655c85511f0",
        "subnet-0aa13c195a20102a9",
        "subnet-0b6b2b87c7a673e1e",
        "subnet-0fd43e62220c0f9c5",
      ],
    }),
  },
  {
    type: "DBSubnetGroup",
    group: "RDS",
    name: "default-vpc-0f5e4da4400c56df5",
    properties: ({}) => ({
      DBSubnetGroupDescription: "Created from the RDS Management Console",
    }),
    dependencies: () => ({
      subnets: [
        "subnet-0041063adeab062e9",
        "subnet-0156381210a990b01",
        "subnet-0227815f22bd2ceb9",
        "subnet-082e9ca168683605d",
        "subnet-0985555124f3fbed9",
        "subnet-0bf3a34a609861005",
      ],
    }),
  },
  {
    type: "DBSubnetGroup",
    group: "RDS",
    name: "default-vpc-0fe9d2f3614acf697",
    properties: ({}) => ({
      DBSubnetGroupDescription: "Created from the RDS Management Console",
    }),
    dependencies: () => ({
      subnets: [
        "subnet-03f8979f053ff3e5e",
        "subnet-041db6624b3363ef9",
        "subnet-089e5b1328f049829",
        "subnet-0c0aedacd0fe89295",
        "subnet-0ee8ba933f67a1bf2",
        "subnet-0f156a2bf136d927b",
      ],
    }),
  },
  {
    type: "DBCluster",
    group: "RDS",
    name: "database-1",
    properties: ({}) => ({
      BackupRetentionPeriod: 7,
      DatabaseName: "mydb",
      Engine: "aurora-postgresql",
      EngineVersion: "13.6",
      MasterUsername: process.env.DATABASE_1_MASTER_USERNAME,
      PreferredBackupWindow: "09:00-09:30",
      PreferredMaintenanceWindow: "wed:03:43-wed:04:13",
      IAMDatabaseAuthenticationEnabled: false,
      EngineMode: "provisioned",
      DeletionProtection: false,
      HttpEndpointEnabled: false,
      CopyTagsToSnapshot: true,
      ServerlessV2ScalingConfiguration: {
        MinCapacity: 0.5,
        MaxCapacity: 1,
      },
      MasterUserPassword: process.env.DATABASE_1_MASTER_USER_PASSWORD,
    }),
    dependencies: () => ({
      dbSubnetGroup: "default-vpc-0fe9d2f3614acf697",
      securityGroups: ["sg::vpc-0fe9d2f3614acf697::postgres"],
    }),
  },
  {
    type: "DBInstance",
    group: "RDS",
    name: "database-1-instance-1",
    properties: ({}) => ({
      DBInstanceIdentifier: "database-1-instance-1",
      DBInstanceClass: "db.serverless",
      Engine: "aurora-postgresql",
      PreferredMaintenanceWindow: "tue:04:53-tue:05:23",
      EngineVersion: "13.6",
      PubliclyAccessible: false,
      StorageType: "aurora",
      DBClusterIdentifier: "database-1",
      StorageEncrypted: true,
      MonitoringInterval: 60,
      PerformanceInsightsEnabled: true,
      PerformanceInsightsRetentionPeriod: 7,
      EnablePerformanceInsights: true,
      MasterUsername: process.env.DATABASE_1_INSTANCE_1_MASTER_USERNAME,
      MasterUserPassword:
        process.env.DATABASE_1_INSTANCE_1_MASTER_USER_PASSWORD,
    }),
    dependencies: () => ({
      dbSubnetGroup: "default-vpc-0fe9d2f3614acf697",
      securityGroups: ["sg::vpc-0fe9d2f3614acf697::postgres"],
      dbCluster: "database-1",
      monitoringRole: "rds-monitoring-role",
    }),
  },
];
