// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Vpc",
    group: "EC2",
    name: "vpc-rds-vpc",
    properties: ({}) => ({
      CidrBlock: "10.0.0.0/16",
      DnsHostnames: true,
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: ({ config }) => `vpc-rds-subnet-private1-${config.region}a`,
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}a`,
      NewBits: 4,
      NetworkNumber: 8,
    }),
    dependencies: ({}) => ({
      vpc: "vpc-rds-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: ({ config }) => `vpc-rds-subnet-private2-${config.region}b`,
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}b`,
      NewBits: 4,
      NetworkNumber: 9,
    }),
    dependencies: ({}) => ({
      vpc: "vpc-rds-vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: ({ config }) => `vpc-rds-rtb-private1-${config.region}a`,
    dependencies: ({}) => ({
      vpc: "vpc-rds-vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: ({ config }) => `vpc-rds-rtb-private2-${config.region}b`,
    dependencies: ({}) => ({
      vpc: "vpc-rds-vpc",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({ config }) => ({
      routeTable: `vpc-rds-vpc::vpc-rds-rtb-private1-${config.region}a`,
      subnet: `vpc-rds-vpc::vpc-rds-subnet-private1-${config.region}a`,
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({ config }) => ({
      routeTable: `vpc-rds-vpc::vpc-rds-rtb-private2-${config.region}b`,
      subnet: `vpc-rds-vpc::vpc-rds-subnet-private2-${config.region}b`,
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    name: "sg::vpc-rds-vpc::default",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-rds-vpc",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "rds-monitoring-role",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "",
            Effect: "Allow",
            Principal: {
              Service: "monitoring.rds.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AmazonRDSEnhancedMonitoringRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
        },
      ],
    }),
  },
  {
    type: "DBInstance",
    group: "RDS",
    properties: ({}) => ({
      DBInstanceIdentifier: "database-1",
      DBInstanceClass: "db.t3.micro",
      Engine: "postgres",
      MasterUsername: process.env.DATABASE_1_MASTER_USERNAME,
      AllocatedStorage: 200,
      PreferredBackupWindow: "06:51-07:21",
      BackupRetentionPeriod: 7,
      PreferredMaintenanceWindow: "thu:08:37-thu:09:07",
      EngineVersion: "13.7",
      PubliclyAccessible: false,
      StorageEncrypted: true,
      CopyTagsToSnapshot: true,
      PerformanceInsightsEnabled: true,
      PerformanceInsightsRetentionPeriod: 7,
      DeletionProtection: false,
      MaxAllocatedStorage: 1000,
      ManageMasterUserPassword: true,
      EnablePerformanceInsights: true,
    }),
    dependencies: ({}) => ({
      dbSubnetGroup: "default-vpc-0bd4727520b9fc3a7",
      securityGroups: ["sg::vpc-rds-vpc::default"],
    }),
  },
  {
    type: "DBSubnetGroup",
    group: "RDS",
    properties: ({}) => ({
      DBSubnetGroupName: "default-vpc-0bd4727520b9fc3a7",
      DBSubnetGroupDescription: "Created from the RDS Management Console",
    }),
    dependencies: ({ config }) => ({
      subnets: [
        `vpc-rds-vpc::vpc-rds-subnet-private1-${config.region}a`,
        `vpc-rds-vpc::vpc-rds-subnet-private2-${config.region}b`,
      ],
    }),
  },
];
