// Generated by aws2gc
const { AwsProvider } = require("@grucloud/provider-aws");

const createResources = ({ provider }) => {
  const { config } = provider;

  provider.ec2.makeVpc({
    name: config.ec2.Vpc.vpcTestSg.name,
    properties: () => config.ec2.Vpc.vpcTestSg.properties,
  });

  provider.ec2.makeSecurityGroup({
    name: config.ec2.SecurityGroup.securityGroupClusterTest.name,
    dependencies: ({ resources }) => ({
      vpc: resources.ec2.Vpc.vpcTestSg,
    }),
    properties: () =>
      config.ec2.SecurityGroup.securityGroupClusterTest.properties,
  });

  provider.ec2.makeSecurityGroup({
    name: config.ec2.SecurityGroup.securityGroupNodeGroupTest.name,
    dependencies: ({ resources }) => ({
      vpc: resources.ec2.Vpc.vpcTestSg,
    }),
    properties: () =>
      config.ec2.SecurityGroup.securityGroupNodeGroupTest.properties,
  });

  provider.ec2.makeSecurityGroupRuleIngress({
    name: config.ec2.SecurityGroupRuleIngress.sgRuleClusterIngressPort_22.name,
    dependencies: ({ resources }) => ({
      securityGroup: resources.ec2.SecurityGroup.securityGroupClusterTest,
    }),
    properties: () =>
      config.ec2.SecurityGroupRuleIngress.sgRuleClusterIngressPort_22
        .properties,
  });

  provider.ec2.makeSecurityGroupRuleIngress({
    name: config.ec2.SecurityGroupRuleIngress.sgRuleNodeGroupIngressCluster
      .name,
    dependencies: ({ resources }) => ({
      securityGroup: resources.ec2.SecurityGroup.securityGroupNodeGroupTest,
      securityGroupFrom: resources.ec2.SecurityGroup.securityGroupClusterTest,
    }),
    properties: () =>
      config.ec2.SecurityGroupRuleIngress.sgRuleNodeGroupIngressCluster
        .properties,
  });

  provider.ec2.makeSecurityGroupRuleEgress({
    name: config.ec2.SecurityGroupRuleEgress.sgRuleClusterEgress.name,
    dependencies: ({ resources }) => ({
      securityGroup: resources.ec2.SecurityGroup.securityGroupClusterTest,
    }),
    properties: () =>
      config.ec2.SecurityGroupRuleEgress.sgRuleClusterEgress.properties,
  });
};

exports.createResources = createResources;

exports.createStack = async ({ createProvider }) => {
  const provider = createProvider(AwsProvider, { config: require("./config") });
  createResources({
    provider,
  });

  return {
    provider,
  };
};
