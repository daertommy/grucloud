// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "sam-app-CleanUpOneTimeSchedulesRole-1NZZZMS0AA7R4",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "scheduler.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: ["lambda:InvokeFunction"],
                Resource: [
                  `arn:aws:lambda:${
                    config.region
                  }:${config.accountId()}:function:sam-app-FindSchedules-OfzThGtSLZxQ`,
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "InvokeLambda",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "sam-app-FindSchedulesRole-M4O8IEK3GEFO",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: ["scheduler:ListSchedules", "scheduler:GetSchedule"],
                Resource: "*",
                Effect: "Allow",
              },
              {
                Action: ["sqs:SendMessage", "sqs:SendMessageBatch"],
                Resource: `arn:aws:sqs:${
                  config.region
                }:${config.accountId()}:sam-app-removal-queue`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "FindSchedulesRolePolicy1",
        },
      ],
      AttachedPolicies: [
        {
          PolicyName: "AWSLambdaBasicExecutionRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "sam-app-ProcessSchedulesRole-DA0Y2BACICJC",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: ["scheduler:GetSchedule", "scheduler:DeleteSchedule"],
                Resource: "*",
                Effect: "Allow",
              },
              {
                Action: [
                  "sqs:ReceiveMessage",
                  "sqs:DeleteMessage",
                  "sqs:GetQueueAttributes",
                ],
                Resource: `arn:aws:sqs:${
                  config.region
                }:${config.accountId()}:sam-app-removal-queue`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "ProcessSchedulesRolePolicy1",
        },
      ],
      AttachedPolicies: [
        {
          PolicyName: "AWSLambdaBasicExecutionRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        },
        {
          PolicyName: "AWSLambdaSQSQueueExecutionRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole",
        },
      ],
    }),
  },
  {
    type: "EventSourceMapping",
    group: "Lambda",
    dependencies: ({}) => ({
      lambdaFunction: "sam-app-ProcessSchedules-36SgkAOF1r92",
      sqsQueue: "sam-app-removal-queue",
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({ config }) => ({
      Configuration: {
        FunctionName: "sam-app-FindSchedules-OfzThGtSLZxQ",
        Runtime: "nodejs16.x",
        Timeout: 300,
        Handler: "find-schedules.handler",
        Environment: {
          Variables: {
            QUEUE_URL: `https://sqs.${
              config.region
            }.amazonaws.com/${config.accountId()}/sam-app-removal-queue`,
          },
        },
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-FindSchedulesRole-M4O8IEK3GEFO",
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        FunctionName: "sam-app-ProcessSchedules-36SgkAOF1r92",
        Runtime: "nodejs16.x",
        Timeout: 300,
        Handler: "process-schedule-batch.handler",
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-ProcessSchedulesRole-DA0Y2BACICJC",
    }),
  },
  {
    type: "Queue",
    group: "SQS",
    properties: ({}) => ({
      Attributes: {
        VisibilityTimeout: "350",
      },
      QueueName: "sam-app-removal-queue",
    }),
  },
  {
    type: "Queue",
    group: "SQS",
    properties: ({}) => ({
      QueueName: "sam-app-ScheduleQueueDLQ-KkMrSD1QGclr",
    }),
  },
  {
    type: "QueueRedrivePolicy",
    group: "SQS",
    properties: ({}) => ({
      Attributes: {
        RedrivePolicy: {
          maxReceiveCount: 5,
        },
      },
    }),
    dependencies: ({}) => ({
      sqsQueue: "sam-app-removal-queue",
      sqsDeadLetterQueue: "sam-app-ScheduleQueueDLQ-KkMrSD1QGclr",
    }),
  },
];
