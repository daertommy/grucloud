// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName:
        "EventbridgeScheduleToStep-statemachineRole8DD785C2-K46ETFNXLLTA",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "states.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName:
        "EventbridgeScheduleToStepFun-schedulerrole9B80A9F3-GY3556909SKH",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "scheduler.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: "states:StartExecution",
                Resource: `arn:aws:states:${
                  config.region
                }:${config.accountId()}:stateMachine:statemachine3BB5DA23-yz112W0tNPvb`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "schedulerroleDefaultPolicyA459C234",
        },
      ],
    }),
  },
  {
    type: "Schedule",
    group: "Scheduler",
    properties: ({ config }) => ({
      FlexibleTimeWindow: {
        Mode: "OFF",
      },
      GroupName: "my-schedule-group",
      Name: "EventbridgeScheduleToStepFunctionCdkPyt-myschedule-1HU46VEICN30T",
      ScheduleExpression: "rate(5 minute)",
      ScheduleExpressionTimezone: "UTC",
      Target: {
        Arn: `arn:aws:states:${
          config.region
        }:${config.accountId()}:stateMachine:statemachine3BB5DA23-yz112W0tNPvb`,
        Input: {
          metadata: {
            eventId: "MY_SCHEDULED_EVENT",
          },
          data: {
            firstName: "Pubudu",
            lastName: "Jayawardana",
          },
        },
        RetryPolicy: {
          MaximumEventAgeInSeconds: 86400,
          MaximumRetryAttempts: 185,
        },
      },
    }),
    dependencies: ({}) => ({
      iamRole:
        "EventbridgeScheduleToStepFun-schedulerrole9B80A9F3-GY3556909SKH",
      scheduleGroup: "my-schedule-group",
      sfnStateMachine: "statemachine3BB5DA23-yz112W0tNPvb",
    }),
  },
  {
    type: "ScheduleGroup",
    group: "Scheduler",
    properties: ({}) => ({
      Name: "my-schedule-group",
    }),
  },
  {
    type: "StateMachine",
    group: "StepFunctions",
    properties: ({}) => ({
      definition: {
        StartAt: "start-state",
        States: {
          "start-state": {
            Type: "Pass",
            End: true,
          },
        },
      },
      name: "statemachine3BB5DA23-yz112W0tNPvb",
    }),
    dependencies: ({}) => ({
      role: "EventbridgeScheduleToStep-statemachineRole8DD785C2-K46ETFNXLLTA",
    }),
  },
];
