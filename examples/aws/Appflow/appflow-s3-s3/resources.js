// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Flow",
    group: "Appflow",
    properties: ({}) => ({
      destinationFlowConfigList: [
        {
          connectorType: "S3",
          destinationConnectorProperties: {
            S3: {
              bucketName: "gc-appflow-destination",
              bucketPrefix: "out",
              s3OutputFormatConfig: {
                aggregationConfig: {
                  aggregationType: "None",
                },
                fileType: "JSON",
                prefixConfig: {
                  pathPrefixHierarchy: ["EXECUTION_ID"],
                },
              },
            },
          },
        },
      ],
      flowName: "appflow-S3-S3",
      schemaVersion: 1,
      sourceFlowConfig: {
        connectorType: "S3",
        sourceConnectorProperties: {
          S3: {
            bucketName: "gc-appflow-source",
            bucketPrefix: "in",
            s3InputFormatConfig: {
              s3InputFileType: "CSV",
            },
          },
        },
      },
      tasks: [
        {
          connectorOperator: {
            S3: "PROJECTION",
          },
          sourceFields: ["key"],
          taskProperties: {},
          taskType: "Filter",
        },
        {
          connectorOperator: {
            S3: "NO_OP",
          },
          destinationField: "key",
          sourceFields: ["key"],
          taskProperties: {
            DESTINATION_DATA_TYPE: "string",
            SOURCE_DATA_TYPE: "string",
          },
          taskType: "Map",
        },
      ],
      triggerConfig: {
        triggerType: "OnDemand",
      },
    }),
    dependencies: ({}) => ({
      s3BucketSource: "gc-appflow-source",
      s3BucketDestinations: ["gc-appflow-destination"],
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({ config }) => ({
      Name: "gc-appflow-destination",
      Policy: {
        Version: "2008-10-17",
        Statement: [
          {
            Sid: "AllowAppFlowDestinationActions",
            Effect: "Allow",
            Principal: {
              Service: "appflow.amazonaws.com",
            },
            Action: [
              "s3:PutObject",
              "s3:AbortMultipartUpload",
              "s3:ListMultipartUploadParts",
              "s3:ListBucketMultipartUploads",
              "s3:GetBucketAcl",
              "s3:PutObjectAcl",
            ],
            Resource: [
              "arn:aws:s3:::gc-appflow-destination",
              "arn:aws:s3:::gc-appflow-destination/*",
            ],
            Condition: {
              StringEquals: {
                "aws:SourceAccount": `${config.accountId()}`,
              },
            },
          },
        ],
      },
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({ config }) => ({
      Name: "gc-appflow-source",
      Policy: {
        Version: "2008-10-17",
        Statement: [
          {
            Sid: "AllowAppFlowSourceActions",
            Effect: "Allow",
            Principal: {
              Service: "appflow.amazonaws.com",
            },
            Action: ["s3:ListBucket", "s3:GetObject"],
            Resource: [
              "arn:aws:s3:::gc-appflow-source",
              "arn:aws:s3:::gc-appflow-source/*",
            ],
            Condition: {
              StringEquals: {
                "aws:SourceAccount": `${config.accountId()}`,
              },
            },
          },
        ],
      },
    }),
  },
];
