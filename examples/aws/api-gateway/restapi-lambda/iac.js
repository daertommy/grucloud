// Generated by aws2gc
const { AwsProvider } = require("@grucloud/provider-aws");

const createResources = ({ provider }) => {
  provider.APIGateway.makeApiKey({
    name: "api-key",
    properties: () => ({
      description: "Api Key",
    }),
  });

  provider.APIGateway.makeRestApi({
    name: "AnimalStore",
    properties: () => ({
      description:
        "Your first API with Amazon API Gateway. This is a sample API that integrates via HTTP with our demo Pet Store endpoints",
      apiKeySource: "HEADER",
      endpointConfiguration: {
        types: ["REGIONAL"],
      },
      disableExecuteApiEndpoint: false,
      schemaFile: "AnimalStore.swagger.json",
    }),
  });

  provider.APIGateway.makeAuthorizer({
    name: "my-authorizer",
    properties: ({ config }) => ({
      type: "COGNITO_USER_POOLS",
      authType: "cognito_user_pools",
      identitySource: "method.request.header.Authorization",
    }),
    dependencies: ({ resources }) => ({
      restApi: resources.APIGateway.RestApi.petStore,
    }),
  });

  provider.APIGateway.makeDeployment({
    name: "deployment-dev",
    dependencies: ({ resources }) => ({
      restApi: resources.APIGateway.RestApi.petStore,
    }),
    properties: () => ({
      description: "deployment",
    }),
  });

  provider.APIGateway.makeStage({
    name: "dev",
    dependencies: ({ resources }) => ({
      restApi: resources.APIGateway.RestApi.petStore,
      deployment: resources.APIGateway.Deployment.deploymentDev,
    }),
  });
};

exports.createResources = createResources;

exports.createStack = async ({ createProvider }) => {
  const provider = createProvider(AwsProvider, { config: require("./config") });
  createResources({
    provider,
  });

  return {
    provider,
  };
};
