// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Certificate",
    group: "ACM",
    properties: ({}) => ({
      DomainName: "grucloud.org",
      SubjectAlternativeNames: ["grucloud.org", "*.grucloud.org"],
    }),
  },
  {
    type: "Directory",
    group: "DirectoryService",
    properties: ({}) => ({
      Name: "grucloud.org",
      ShortName: "grucloud",
      Size: "Small",
      Type: "SimpleAD",
      Password: process.env.GRUCLOUD_ORG_PASSWORD,
    }),
    dependencies: ({}) => ({
      subnets: [
        "vpc-default::subnet-default-a",
        "vpc-default::subnet-default-b",
      ],
    }),
  },
  { type: "Vpc", group: "EC2", name: "vpc-default", isDefault: true },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-default-a",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-default-b",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "AWSTransferLoggingAccess",
      Path: "/service-role/",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "transfer.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AWSTransferLoggingAccess",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSTransferLoggingAccess",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "role-transfer-s3",
      Description: "Allow AWS Transfer to call AWS services on your behalf.",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "",
            Effect: "Allow",
            Principal: {
              Service: "transfer.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AmazonS3FullAccess",
          PolicyArn: "arn:aws:iam::aws:policy/AmazonS3FullAccess",
        },
      ],
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({}) => ({
      Name: "gc-transfer-ftps-directory",
    }),
  },
  {
    type: "Access",
    group: "Transfer",
    properties: ({}) => ({
      ExternalId: "S-1-1-12-1234567890-1234567890-1234567890-1234",
      HomeDirectory: "/gc-transfer-ftps-directory/${transfer:Username}",
      HomeDirectoryType: "PATH",
    }),
    dependencies: ({}) => ({
      iamRole: "role-transfer-s3",
      server: "S3::VPC",
      s3Bucket: "gc-transfer-ftps-directory",
    }),
  },
  {
    type: "Server",
    group: "Transfer",
    properties: ({}) => ({
      Domain: "S3",
      EndpointType: "VPC",
      IdentityProviderDetails: {},
      IdentityProviderType: "AWS_DIRECTORY_SERVICE",
      Protocols: ["FTPS"],
    }),
    dependencies: ({}) => ({
      directory: "grucloud.org",
      certificate: "grucloud.org",
      iamRoleLogging: "AWSTransferLoggingAccess",
      subnets: [
        "vpc-default::subnet-default-a",
        "vpc-default::subnet-default-b",
      ],
      vpc: "vpc-default",
    }),
  },
];
