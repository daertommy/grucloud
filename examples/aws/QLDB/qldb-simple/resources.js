// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Account",
    group: "APIGateway",
    dependencies: ({}) => ({
      cloudwatchRole:
        "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvs-VWKGZS65BN9S",
    }),
  },
  {
    type: "RestApi",
    group: "APIGateway",
    properties: ({ config }) => ({
      apiKeySource: "HEADER",
      description:
        "This service exposes a key-value store interface API for Amazon QLDB through REST pattern.",
      endpointConfiguration: {
        types: ["REGIONAL"],
      },
      name: "Amazon QLDB key value store Service",
      schema: {
        openapi: "3.0.1",
        info: {
          description:
            "This service exposes a key-value store interface API for Amazon QLDB through REST pattern.",
          title: "Amazon QLDB key value store Service",
          version: "1",
        },
        paths: {
          "/": {
            get: {
              responses: {
                200: {
                  description: "200 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/SuccessResponseModel",
                      },
                    },
                  },
                },
                400: {
                  description: "400 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
                500: {
                  description: "500 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
              },
              "x-amazon-apigateway-integration": {
                httpMethod: "POST",
                passthroughBehavior: "NEVER",
                requestTemplates: {
                  "application/json": `
    #set($v = $util.escapeJavaScript($input.params("keys")))
    #set($valueArray = $v.split(","))
    {
       "ops": "getValue",
       "payload": [#foreach($item in $valueArray)
        "$item"#if($foreach.hasNext),#end
        #end
       ]
    }`,
                },
                type: "AWS",
                uri: `arn:aws:apigateway:${
                  config.region
                }:lambda:path/2015-03-31/functions/arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy/invocations`,
                responses: {
                  default: {
                    responseParameters: {
                      "method.response.header.Access-Control-Allow-Credentials":
                        "'true'",
                      "method.response.header.Access-Control-Allow-Origin":
                        "'*'",
                      "method.response.header.Content-Type":
                        "'application/json'",
                    },
                    statusCode: "200",
                  },
                },
              },
            },
            post: {
              requestBody: {
                content: {
                  "application/json": {
                    schema: {
                      $ref: "#/components/schemas/SetValueModel",
                    },
                  },
                },
                required: true,
              },
              responses: {
                200: {
                  description: "200 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/SuccessResponseModel",
                      },
                    },
                  },
                },
                400: {
                  description: "400 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
                500: {
                  description: "500 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
              },
              "x-amazon-apigateway-integration": {
                httpMethod: "POST",
                passthroughBehavior: "NEVER",
                requestTemplates: {
                  "application/json":
                    '{"ops":"setValue","payload":$input.json("$")}',
                },
                type: "AWS",
                uri: `arn:aws:apigateway:${
                  config.region
                }:lambda:path/2015-03-31/functions/arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy/invocations`,
                responses: {
                  default: {
                    responseParameters: {
                      "method.response.header.Access-Control-Allow-Credentials":
                        "'true'",
                      "method.response.header.Access-Control-Allow-Origin":
                        "'*'",
                      "method.response.header.Content-Type":
                        "'application/json'",
                    },
                    statusCode: "200",
                  },
                },
              },
            },
          },
          "/history": {
            get: {
              responses: {
                200: {
                  description: "200 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/SuccessResponseModel",
                      },
                    },
                  },
                },
                400: {
                  description: "400 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
                500: {
                  description: "500 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
              },
              "x-amazon-apigateway-integration": {
                httpMethod: "POST",
                passthroughBehavior: "NEVER",
                requestTemplates: {
                  "application/json": `
    #set($k = $util.escapeJavaScript($input.params("key")))
    #set($f = $util.escapeJavaScript($input.params("from")))
    #set($t = $util.escapeJavaScript($input.params("to")))
    {
        "ops": "getHistory",
        "payload": {
          "key": "$k",
          "from": "$f",
          "to": "$t"
        }
    }`,
                },
                type: "AWS",
                uri: `arn:aws:apigateway:${
                  config.region
                }:lambda:path/2015-03-31/functions/arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy/invocations`,
                responses: {
                  default: {
                    responseParameters: {
                      "method.response.header.Access-Control-Allow-Credentials":
                        "'true'",
                      "method.response.header.Access-Control-Allow-Origin":
                        "'*'",
                      "method.response.header.Content-Type":
                        "'application/json'",
                    },
                    statusCode: "200",
                  },
                },
              },
            },
          },
          "/receipt-by-doc": {
            get: {
              responses: {
                200: {
                  description: "200 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/SuccessResponseModel",
                      },
                    },
                  },
                },
                400: {
                  description: "400 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
                500: {
                  description: "500 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
              },
              "x-amazon-apigateway-integration": {
                httpMethod: "POST",
                passthroughBehavior: "NEVER",
                requestTemplates: {
                  "application/json": `
    #set($d = $util.escapeJavaScript($input.params("documentId")))
    #set($t = $util.escapeJavaScript($input.params("txId")))
    {
        "ops": "getMetadataByDoc",
        "payload": {
          "documentId": "$d",
          "txId": "$t"
        }
    }`,
                },
                type: "AWS",
                uri: `arn:aws:apigateway:${
                  config.region
                }:lambda:path/2015-03-31/functions/arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy/invocations`,
                responses: {
                  default: {
                    responseParameters: {
                      "method.response.header.Access-Control-Allow-Credentials":
                        "'true'",
                      "method.response.header.Access-Control-Allow-Origin":
                        "'*'",
                      "method.response.header.Content-Type":
                        "'application/json'",
                    },
                    statusCode: "200",
                  },
                },
              },
            },
          },
          "/receipt-by-key": {
            get: {
              responses: {
                200: {
                  description: "200 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/SuccessResponseModel",
                      },
                    },
                  },
                },
                400: {
                  description: "400 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
                500: {
                  description: "500 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
              },
              "x-amazon-apigateway-integration": {
                httpMethod: "POST",
                passthroughBehavior: "NEVER",
                requestTemplates: {
                  "application/json": `
    #set($v = $util.escapeJavaScript($input.params("key")))
    {
        "ops": "getMetadataByKey",
        "payload": "$v"
    }`,
                },
                type: "AWS",
                uri: `arn:aws:apigateway:${
                  config.region
                }:lambda:path/2015-03-31/functions/arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy/invocations`,
                responses: {
                  default: {
                    responseParameters: {
                      "method.response.header.Access-Control-Allow-Credentials":
                        "'true'",
                      "method.response.header.Access-Control-Allow-Origin":
                        "'*'",
                      "method.response.header.Content-Type":
                        "'application/json'",
                    },
                    statusCode: "200",
                  },
                },
              },
            },
          },
          "/retrieve-doc-revision": {
            post: {
              requestBody: {
                content: {
                  "application/json": {
                    schema: {
                      $ref: "#/components/schemas/GetRevisionByMetadataModel",
                    },
                  },
                },
                required: true,
              },
              responses: {
                200: {
                  description: "200 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/SuccessResponseModel",
                      },
                    },
                  },
                },
                400: {
                  description: "400 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
                500: {
                  description: "500 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
              },
              "x-amazon-apigateway-integration": {
                httpMethod: "POST",
                passthroughBehavior: "NEVER",
                requestTemplates: {
                  "application/json":
                    '{"ops":"getDocumentRevisionByLedgerMetadata","payload":$input.json("$")}',
                },
                type: "AWS",
                uri: `arn:aws:apigateway:${
                  config.region
                }:lambda:path/2015-03-31/functions/arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy/invocations`,
                responses: {
                  default: {
                    responseParameters: {
                      "method.response.header.Access-Control-Allow-Credentials":
                        "'true'",
                      "method.response.header.Access-Control-Allow-Origin":
                        "'*'",
                      "method.response.header.Content-Type":
                        "'application/json'",
                    },
                    statusCode: "200",
                  },
                },
              },
            },
          },
          "/verify-doc-revision": {
            post: {
              requestBody: {
                content: {
                  "application/json": {
                    schema: {
                      $ref: "#/components/schemas/verifyDocumentRevisionHashModel",
                    },
                  },
                },
                required: true,
              },
              responses: {
                200: {
                  description: "200 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/SuccessResponseModel",
                      },
                    },
                  },
                },
                400: {
                  description: "400 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
                500: {
                  description: "500 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
              },
              "x-amazon-apigateway-integration": {
                httpMethod: "POST",
                passthroughBehavior: "NEVER",
                requestTemplates: {
                  "application/json":
                    '{"ops":"verifyDocumentRevisionHash","payload":$input.json("$")}',
                },
                type: "AWS",
                uri: `arn:aws:apigateway:${
                  config.region
                }:lambda:path/2015-03-31/functions/arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy/invocations`,
                responses: {
                  default: {
                    responseParameters: {
                      "method.response.header.Access-Control-Allow-Credentials":
                        "'true'",
                      "method.response.header.Access-Control-Allow-Origin":
                        "'*'",
                      "method.response.header.Content-Type":
                        "'application/json'",
                    },
                    statusCode: "200",
                  },
                },
              },
            },
          },
          "/verify-receipt": {
            post: {
              requestBody: {
                content: {
                  "application/json": {
                    schema: {
                      $ref: "#/components/schemas/verifyLedgerMetadataModel",
                    },
                  },
                },
                required: true,
              },
              responses: {
                200: {
                  description: "200 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/SuccessResponseModel",
                      },
                    },
                  },
                },
                400: {
                  description: "400 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
                500: {
                  description: "500 response",
                  headers: {
                    "Access-Control-Allow-Credentials": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Access-Control-Allow-Origin": {
                      schema: {
                        type: "string",
                      },
                    },
                    "Content-Type": {
                      schema: {
                        type: "string",
                      },
                    },
                  },
                  content: {
                    "application/json": {
                      schema: {
                        $ref: "#/components/schemas/ErrorResponseModel",
                      },
                    },
                  },
                },
              },
              "x-amazon-apigateway-integration": {
                httpMethod: "POST",
                passthroughBehavior: "NEVER",
                requestTemplates: {
                  "application/json":
                    '{"ops":"verifyLedgerMetadata","payload":$input.json("$")}',
                },
                type: "AWS",
                uri: `arn:aws:apigateway:${
                  config.region
                }:lambda:path/2015-03-31/functions/arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy/invocations`,
                responses: {
                  default: {
                    responseParameters: {
                      "method.response.header.Access-Control-Allow-Credentials":
                        "'true'",
                      "method.response.header.Access-Control-Allow-Origin":
                        "'*'",
                      "method.response.header.Content-Type":
                        "'application/json'",
                    },
                    statusCode: "200",
                  },
                },
              },
            },
          },
        },
        components: {
          schemas: {
            Empty: {
              title: "Empty Schema",
              type: "object",
            },
            Error: {
              title: "Error Schema",
              type: "object",
              properties: {
                message: {
                  type: "string",
                },
              },
            },
            ErrorResponseModel: {
              title: "ErrorResponseModel",
              type: "object",
              properties: {
                message: {
                  type: "string",
                },
              },
            },
            GetRevisionByMetadataModel: {
              title: "GetRevisionByMetadataModel",
              required: ["BlockAddress", "DocumentId", "LedgerDigest"],
              type: "object",
              properties: {
                TableName: {
                  type: "string",
                },
                LedgerDigest: {
                  required: ["DigestTipAddress"],
                  type: "object",
                  properties: {
                    Digest: {
                      type: "string",
                    },
                    DigestTipAddress: {
                      required: ["IonText"],
                      type: "object",
                      properties: {
                        IonText: {
                          type: "string",
                        },
                      },
                      additionalProperties: false,
                    },
                  },
                  additionalProperties: false,
                },
                BlockAddress: {
                  required: ["IonText"],
                  type: "object",
                  properties: {
                    IonText: {
                      type: "string",
                    },
                  },
                  additionalProperties: false,
                },
                RevisionHash: {
                  type: "string",
                },
                DocumentId: {
                  maxLength: 22,
                  minLength: 22,
                  type: "string",
                },
                Proof: {
                  required: ["IonText"],
                  type: "object",
                  properties: {
                    IonText: {
                      type: "string",
                    },
                  },
                  additionalProperties: false,
                },
                LedgerName: {
                  type: "string",
                },
              },
              additionalProperties: false,
            },
            SetValueModel: {
              title: "SetValueModel",
              maxItems: 10,
              minItems: 1,
              type: "array",
              items: {
                required: ["key", "value"],
                type: "object",
                properties: {
                  value: {
                    required: [
                      "billTo",
                      "carInfo",
                      "date",
                      "paymentStatus",
                      "quantity",
                    ],
                    type: "object",
                    properties: {
                      date: {
                        type: "string",
                      },
                      quantity: {
                        type: "integer",
                        format: "int32",
                      },
                      billTo: {
                        type: "string",
                      },
                      carInfo: {
                        required: ["make", "model", "unitPrice", "year"],
                        type: "object",
                        properties: {
                          unitPrice: {
                            type: "number",
                          },
                          year: {
                            type: "integer",
                            format: "int32",
                          },
                          model: {
                            type: "string",
                          },
                          make: {
                            type: "string",
                          },
                        },
                        additionalProperties: false,
                      },
                      paymentStatus: {
                        type: "string",
                        enum: ["PENDING", "TRANSFERRED", "CONFIRMED"],
                      },
                    },
                    additionalProperties: false,
                  },
                  key: {
                    type: "string",
                  },
                },
                additionalProperties: false,
              },
            },
            SuccessResponseModel: {
              title: "SuccessResponseModel",
              type: "object",
            },
            verifyDocumentRevisionHashModel: {
              title: "verifyDocumentRevisionHashModel",
              required: ["data", "hash", "metadata"],
              type: "object",
              properties: {
                metadata: {
                  required: ["id", "txId", "txTime", "version"],
                  type: "object",
                  properties: {
                    txTime: {
                      type: "string",
                    },
                    txId: {
                      type: "string",
                    },
                    id: {
                      type: "string",
                    },
                    version: {
                      type: "integer",
                      format: "int32",
                    },
                  },
                  additionalProperties: false,
                },
                data: {
                  required: [
                    "_k",
                    "billTo",
                    "carInfo",
                    "date",
                    "paymentStatus",
                    "quantity",
                  ],
                  type: "object",
                  properties: {
                    date: {
                      type: "string",
                    },
                    quantity: {
                      type: "integer",
                      format: "int32",
                    },
                    billTo: {
                      type: "string",
                    },
                    carInfo: {
                      required: ["make", "model", "unitPrice", "year"],
                      type: "object",
                      properties: {
                        unitPrice: {
                          type: "number",
                        },
                        year: {
                          type: "integer",
                          format: "int32",
                        },
                        model: {
                          type: "string",
                        },
                        make: {
                          type: "string",
                        },
                      },
                      additionalProperties: false,
                    },
                    _k: {
                      type: "string",
                    },
                    paymentStatus: {
                      type: "string",
                      enum: ["PENDING", "TRANSFERRED", "CONFIRMED"],
                    },
                  },
                  additionalProperties: false,
                },
                blockAddress: {
                  required: ["sequenceNo", "strandId"],
                  type: "object",
                  properties: {
                    sequenceNo: {
                      type: "integer",
                      format: "int32",
                    },
                    strandId: {
                      type: "string",
                    },
                  },
                  additionalProperties: false,
                },
                hash: {
                  type: "string",
                },
              },
              additionalProperties: false,
            },
            verifyLedgerMetadataModel: {
              title: "verifyLedgerMetadataModel",
              required: [
                "BlockAddress",
                "DocumentId",
                "LedgerDigest",
                "RevisionHash",
              ],
              type: "object",
              properties: {
                TableName: {
                  type: "string",
                },
                LedgerDigest: {
                  required: ["Digest", "DigestTipAddress"],
                  type: "object",
                  properties: {
                    Digest: {
                      type: "string",
                    },
                    DigestTipAddress: {
                      required: ["IonText"],
                      type: "object",
                      properties: {
                        IonText: {
                          type: "string",
                        },
                      },
                      additionalProperties: false,
                    },
                  },
                  additionalProperties: false,
                },
                BlockAddress: {
                  required: ["IonText"],
                  type: "object",
                  properties: {
                    IonText: {
                      type: "string",
                    },
                  },
                  additionalProperties: false,
                },
                RevisionHash: {
                  type: "string",
                },
                DocumentId: {
                  maxLength: 22,
                  minLength: 22,
                  type: "string",
                },
                Proof: {
                  required: ["IonText"],
                  type: "object",
                  properties: {
                    IonText: {
                      type: "string",
                    },
                  },
                  additionalProperties: false,
                },
                LedgerName: {
                  type: "string",
                },
              },
              additionalProperties: false,
            },
          },
        },
      },
      deployment: {
        stageName: "prod",
      },
    }),
  },
  {
    type: "RequestValidator",
    group: "APIGateway",
    properties: ({}) => ({
      name: "Validate body, query string parameters, and headers",
      validateRequestBody: true,
      validateRequestParameters: true,
    }),
    dependencies: ({}) => ({
      restApi: "Amazon QLDB key value store Service",
    }),
  },
  {
    type: "RequestValidator",
    group: "APIGateway",
    properties: ({}) => ({
      name: "Validate query string parameters and headers",
      validateRequestBody: false,
      validateRequestParameters: true,
    }),
    dependencies: ({}) => ({
      restApi: "Amazon QLDB key value store Service",
    }),
  },
  {
    type: "Stage",
    group: "APIGateway",
    properties: ({}) => ({
      methodSettings: {
        "*/*": {
          cacheDataEncrypted: false,
          cacheTtlInSeconds: 300,
          cachingEnabled: false,
          dataTraceEnabled: false,
          metricsEnabled: false,
          requireAuthorizationForCacheControl: true,
          throttlingBurstLimit: 50,
          throttlingRateLimit: 10,
          unauthorizedCacheControlHeaderStrategy:
            "SUCCEED_WITH_RESPONSE_HEADER",
        },
      },
      stageName: "prod",
    }),
    dependencies: ({}) => ({
      restApi: "Amazon QLDB key value store Service",
      account: "default",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName:
        "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvsS-YXWZPTKISM1I",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: [
                  "qldb:GetBlock",
                  "qldb:ListLedgers",
                  "qldb:GetRevision",
                  "qldb:DescribeLedger",
                  "qldb:SendCommand",
                  "qldb:GetDigest",
                ],
                Resource: `arn:aws:qldb:${
                  config.region
                }:${config.accountId()}:ledger/ledger1`,
                Effect: "Allow",
              },
              {
                Action: [
                  "qldb:PartiQLCreateTable",
                  "qldb:PartiQLCreateIndex",
                  "qldb:PartiQLInsert",
                  "qldb:PartiQLUpdate",
                  "qldb:PartiQLSelect",
                  "qldb:PartiQLHistoryFunction",
                ],
                Resource: `arn:aws:qldb:${
                  config.region
                }:${config.accountId()}:ledger/ledger1/table/*`,
                Effect: "Allow",
              },
              {
                Action: "qldb:PartiQLSelect",
                Resource: `arn:aws:qldb:${
                  config.region
                }:${config.accountId()}:ledger/ledger1/information_schema/user_tables`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName:
            "AmazonQldbKVSqldblambdakvsServiceRoleDefaultPolicy378D6DF5",
        },
      ],
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          PolicyName: "AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName:
        "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvs-VWKGZS65BN9S",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "apigateway.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
          PolicyName: "AmazonAPIGatewayPushToCloudWatchLogs",
        },
      ],
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        Environment: {
          Variables: {
            LEDGER_NAME: "ledger1",
            TABLE_NAME: "invoices",
          },
        },
        FunctionName:
          "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
        Handler: "index.main",
        Runtime: "nodejs14.x",
        Timeout: 10,
      },
    }),
    dependencies: ({}) => ({
      role: "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvsS-YXWZPTKISM1I",
    }),
  },
  {
    type: "Permission",
    group: "Lambda",
    properties: ({ getId }) => ({
      Permissions: [
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/prod/GET/`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsGETApiPermissionAmazonQldbRestApiSta-W9I5TVRS2V7B",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/test-invoke-stage/GET/`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsGETApiPermissionTestAmazonQldbRestAp-164KVRIISAZZI",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/prod/GET/history`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvshistoryGETApiPermissionAmazonQldbRes-1H2CBMF9T6B9E",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/test-invoke-stage/GET/history`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvshistoryGETApiPermissionTestAmazonQld-1A4UKKCH23SPJ",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/prod/POST/`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsPOSTApiPermissionAmazonQldbRestApiSt-LMN7OINDEAK4",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/test-invoke-stage/POST/`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsPOSTApiPermissionTestAmazonQldbRestA-10MFAFLT61BS3",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/prod/GET/receipt-by-doc`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsreceiptbydocGETApiPermissionAmazonQl-E08OK9U3CGWT",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/test-invoke-stage/GET/receipt-by-doc`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsreceiptbydocGETApiPermissionTestAmaz-VKZB5LONGRNJ",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/prod/GET/receipt-by-key`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsreceiptbykeyGETApiPermissionAmazonQl-EI9CF9F5O0N1",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/test-invoke-stage/GET/receipt-by-key`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsreceiptbykeyGETApiPermissionTestAmaz-6NOCEMI57M81",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/prod/POST/retrieve-doc-revision`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsretrievedocrevisionPOSTApiPermission-1GTUAJ0T0XCMU",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/test-invoke-stage/POST/retrieve-doc-revision`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsretrievedocrevisionPOSTApiPermission-304EAEOLZBY2",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/prod/POST/verify-doc-revision`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsverifydocrevisionPOSTApiPermissionAm-FTKBI9M6GUF3",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/test-invoke-stage/POST/verify-doc-revision`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsverifydocrevisionPOSTApiPermissionTe-M4NMRXF61W8S",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/prod/POST/verify-receipt`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsverifyreceiptPOSTApiPermissionAmazon-1VDAM528JX0SJ",
        },
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "RestApi",
            group: "APIGateway",
            name: "Amazon QLDB key value store Service",
            path: "live.arnv2",
          })}/test-invoke-stage/POST/verify-receipt`,
          StatementId:
            "AmazonQldbRestApiStack-AmazonQldbKVSqldbrestapikvsverifyreceiptPOSTApiPermissionTestAm-1W34XUHAQFDQG",
        },
      ],
    }),
    dependencies: ({}) => ({
      lambdaFunction:
        "AmazonQldbRestApiStack-AmazonQldbKVSqldblambdakvs7-2Hqg3i8vUtDy",
      apiGatewayRestApis: ["Amazon QLDB key value store Service"],
    }),
  },
  {
    type: "Ledger",
    group: "QLDB",
    properties: ({}) => ({
      DeletionProtection: false,
      Name: "ledger1",
      Tags: {
        QLDBRESTAPI: "QLDBLEDGER",
      },
    }),
  },
];
