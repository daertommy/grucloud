// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Policy",
    group: "ApplicationAutoScaling",
    properties: ({}) => ({
      PolicyName: "$my-table-scaling-policy",
      PolicyType: "TargetTrackingScaling",
      ResourceId: "table/my-table",
      ScalableDimension: "dynamodb:table:ReadCapacityUnits",
      ServiceNamespace: "dynamodb",
      TargetTrackingScalingPolicyConfiguration: {
        PredefinedMetricSpecification: {
          PredefinedMetricType: "DynamoDBReadCapacityUtilization",
        },
        TargetValue: 70,
      },
    }),
    dependencies: ({}) => ({
      target: "table/my-table::dynamodb:table:ReadCapacityUnits",
    }),
  },
  {
    type: "Policy",
    group: "ApplicationAutoScaling",
    properties: ({}) => ({
      PolicyName: "$my-table-scaling-policy",
      PolicyType: "TargetTrackingScaling",
      ResourceId: "table/my-table",
      ScalableDimension: "dynamodb:table:WriteCapacityUnits",
      ServiceNamespace: "dynamodb",
      TargetTrackingScalingPolicyConfiguration: {
        PredefinedMetricSpecification: {
          PredefinedMetricType: "DynamoDBWriteCapacityUtilization",
        },
        TargetValue: 70,
      },
    }),
    dependencies: ({}) => ({
      target: "table/my-table::dynamodb:table:WriteCapacityUnits",
    }),
  },
  {
    type: "Target",
    group: "ApplicationAutoScaling",
    properties: ({}) => ({
      MaxCapacity: 10,
      MinCapacity: 1,
      ResourceId: "table/my-table",
      ScalableDimension: "dynamodb:table:ReadCapacityUnits",
      ServiceNamespace: "dynamodb",
    }),
    dependencies: ({}) => ({
      dynamoDbTable: "my-table",
    }),
  },
  {
    type: "Target",
    group: "ApplicationAutoScaling",
    properties: ({}) => ({
      MaxCapacity: 10,
      MinCapacity: 1,
      ResourceId: "table/my-table",
      ScalableDimension: "dynamodb:table:WriteCapacityUnits",
      ServiceNamespace: "dynamodb",
    }),
    dependencies: ({}) => ({
      dynamoDbTable: "my-table",
    }),
  },
  {
    type: "Table",
    group: "DynamoDB",
    properties: ({}) => ({
      TableName: "my-table",
      AttributeDefinitions: [
        {
          AttributeName: "id",
          AttributeType: "S",
        },
      ],
      KeySchema: [
        {
          AttributeName: "id",
          KeyType: "HASH",
        },
      ],
      ProvisionedThroughput: {
        ReadCapacityUnits: 1,
        WriteCapacityUnits: 1,
      },
    }),
  },
];
