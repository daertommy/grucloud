// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Detector",
    group: "GuardDuty",
    properties: ({}) => ({
      Features: [
        {
          Name: "S3_DATA_EVENTS",
          Status: "ENABLED",
        },
        {
          Name: "EKS_AUDIT_LOGS",
          Status: "ENABLED",
        },
        {
          Name: "EBS_MALWARE_PROTECTION",
          Status: "ENABLED",
        },
        {
          Name: "RDS_LOGIN_EVENTS",
          Status: "ENABLED",
        },
        {
          Name: "EKS_RUNTIME_MONITORING",
          Status: "DISABLED",
        },
        {
          Name: "LAMBDA_NETWORK_LOGS",
          Status: "DISABLED",
        },
      ],
      FindingPublishingFrequency: "SIX_HOURS",
      Name: "detector",
    }),
  },
  {
    type: "OrganizationAdminAccount",
    group: "GuardDuty",
    properties: ({}) => ({
      AdminEnable: "ENABLED",
    }),
    dependencies: ({}) => ({
      accountDelegated: "frederic heem",
    }),
  },
  {
    type: "OrganizationConfiguration",
    group: "GuardDuty",
    properties: ({}) => ({
      AutoEnable: false,
      DataSources: {
        Kubernetes: {
          AuditLogs: {
            AutoEnable: false,
          },
        },
        MalwareProtection: {
          ScanEc2InstanceWithFindings: {
            EbsVolumes: {
              AutoEnable: false,
            },
          },
        },
        S3Logs: {
          AutoEnable: false,
        },
      },
    }),
    dependencies: ({}) => ({
      detector: "detector",
    }),
  },
  {
    type: "PublishingDestination",
    group: "GuardDuty",
    properties: ({}) => ({
      DestinationProperties: {
        DestinationArn: "arn:aws:s3:::gc-guardduty-test",
      },
    }),
    dependencies: ({}) => ({
      detector: "detector",
      kmsKey: "alias/guardduty",
      s3Bucket: "gc-guardduty-test",
    }),
  },
  {
    type: "Key",
    group: "KMS",
    name: "alias/guardduty",
    properties: ({ config }) => ({
      Policy: {
        Version: "2012-10-17",
        Id: "key-consolepolicy-3",
        Statement: [
          {
            Sid: "Allow GuardDuty to encrypt findings",
            Effect: "Allow",
            Principal: {
              Service: "guardduty.amazonaws.com",
            },
            Action: "kms:GenerateDataKey",
            Resource: "*",
          },
          {
            Sid: "Enable IAM User Permissions",
            Effect: "Allow",
            Principal: {
              AWS: `arn:aws:iam::${config.accountId()}:root`,
            },
            Action: "kms:*",
            Resource: "*",
          },
          {
            Sid: "Allow access for Key Administrators",
            Effect: "Allow",
            Principal: {
              AWS: `arn:aws:iam::${config.accountId()}:role/aws-service-role/guardduty.amazonaws.com/AWSServiceRoleForAmazonGuardDuty`,
            },
            Action: [
              "kms:Create*",
              "kms:Describe*",
              "kms:Enable*",
              "kms:List*",
              "kms:Put*",
              "kms:Update*",
              "kms:Revoke*",
              "kms:Disable*",
              "kms:Get*",
              "kms:Delete*",
              "kms:TagResource",
              "kms:UntagResource",
              "kms:ScheduleKeyDeletion",
              "kms:CancelKeyDeletion",
            ],
            Resource: "*",
          },
          {
            Sid: "Allow use of the key",
            Effect: "Allow",
            Principal: {
              AWS: `arn:aws:iam::${config.accountId()}:role/aws-service-role/guardduty.amazonaws.com/AWSServiceRoleForAmazonGuardDuty`,
            },
            Action: [
              "kms:Encrypt",
              "kms:Decrypt",
              "kms:ReEncrypt*",
              "kms:GenerateDataKey*",
              "kms:DescribeKey",
            ],
            Resource: "*",
          },
          {
            Sid: "Allow attachment of persistent resources",
            Effect: "Allow",
            Principal: {
              AWS: `arn:aws:iam::${config.accountId()}:role/aws-service-role/guardduty.amazonaws.com/AWSServiceRoleForAmazonGuardDuty`,
            },
            Action: ["kms:CreateGrant", "kms:ListGrants", "kms:RevokeGrant"],
            Resource: "*",
            Condition: {
              Bool: {
                "kms:GrantIsForAWSResource": "true",
              },
            },
          },
        ],
      },
    }),
  },
  {
    type: "Account",
    group: "Organisations",
    name: "frederic heem",
    readOnly: true,
    properties: ({}) => ({
      Email: "frederic.heem@gmail.com",
      Name: "frederic heem",
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({}) => ({
      Name: "gc-guardduty-test",
      Policy: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "Deny non-HTTPS access",
            Effect: "Deny",
            Principal: {
              Service: "guardduty.amazonaws.com",
            },
            Action: "s3:*",
            Resource: "arn:aws:s3:::gc-guardduty-test/*",
            Condition: {
              Bool: {
                "aws:SecureTransport": "false",
              },
            },
          },
          {
            Sid: "Deny unencrypted object uploads",
            Effect: "Deny",
            Principal: {
              Service: "guardduty.amazonaws.com",
            },
            Action: "s3:PutObject",
            Resource: "arn:aws:s3:::gc-guardduty-test/*",
            Condition: {
              StringNotEquals: {
                "s3:x-amz-server-side-encryption": "aws:kms",
              },
            },
          },
          {
            Sid: "Allow PutObject",
            Effect: "Allow",
            Principal: {
              Service: "guardduty.amazonaws.com",
            },
            Action: "s3:PutObject",
            Resource: "arn:aws:s3:::gc-guardduty-test/*",
          },
          {
            Sid: "Allow GetBucketLocation",
            Effect: "Allow",
            Principal: {
              Service: "guardduty.amazonaws.com",
            },
            Action: "s3:GetBucketLocation",
            Resource: "arn:aws:s3:::gc-guardduty-test",
          },
        ],
      },
    }),
  },
];
