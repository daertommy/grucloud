// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Api",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      Name: "sam-app",
      Tags: {
        "httpapi:createdBy": "SAM",
      },
    }),
  },
  {
    type: "Deployment",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      Description:
        "Automatic deployment triggered by changes to the Api configuration",
      AutoDeployed: true,
    }),
    dependencies: ({}) => ({
      api: "sam-app",
      stage: "sam-app::$default",
    }),
  },
  {
    type: "Integration",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      ConnectionType: "INTERNET",
      IntegrationMethod: "POST",
      IntegrationType: "AWS_PROXY",
      PayloadFormatVersion: "2.0",
    }),
    dependencies: ({}) => ({
      api: "sam-app",
      lambdaFunction: "sam-app-SAMConfigFunction-LV97iqvm1Uz9",
    }),
  },
  {
    type: "Route",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      RouteKey: "GET /config",
    }),
    dependencies: ({}) => ({
      api: "sam-app",
      integration:
        "integration::sam-app::sam-app-SAMConfigFunction-LV97iqvm1Uz9",
    }),
  },
  {
    type: "Stage",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      AutoDeploy: true,
      StageName: "$default",
      Tags: {
        "httpapi:createdBy": "SAM",
      },
    }),
    dependencies: ({}) => ({
      api: "sam-app",
    }),
  },
  {
    type: "Application",
    group: "AppConfig",
    properties: ({}) => ({
      Name: "appconfig-feature-flag-sam",
    }),
  },
  {
    type: "ConfigurationProfile",
    group: "AppConfig",
    properties: ({}) => ({
      LocationUri: "hosted",
      Name: "TestConfig",
      Type: "AWS.AppConfig.FeatureFlags",
    }),
    dependencies: ({}) => ({
      application: "appconfig-feature-flag-sam",
    }),
  },
  {
    type: "Deployment",
    group: "AppConfig",
    dependencies: ({}) => ({
      configurationProfile: "appconfig-feature-flag-sam::TestConfig",
      deploymentStrategy: "SAMConfigDeploymentStrategy",
      environment: "appconfig-feature-flag-sam::dev",
      hostedConfigurationVersion: "appconfig-feature-flag-sam::TestConfig",
    }),
  },
  {
    type: "DeploymentStrategy",
    group: "AppConfig",
    properties: ({}) => ({
      DeploymentDurationInMinutes: 0,
      Description: "A deployment strategy to deploy the config immediately",
      FinalBakeTimeInMinutes: 0,
      GrowthFactor: 100,
      GrowthType: "LINEAR",
      Name: "SAMConfigDeploymentStrategy",
      ReplicateTo: "NONE",
    }),
  },
  {
    type: "Environment",
    group: "AppConfig",
    properties: ({}) => ({
      Name: "dev",
    }),
    dependencies: ({}) => ({
      application: "appconfig-feature-flag-sam",
    }),
  },
  {
    type: "HostedConfigurationVersion",
    group: "AppConfig",
    properties: ({}) => ({
      Content: {
        flags: {
          pagination: {
            attributes: {
              pageSize: {
                constraints: {
                  maximum: 10,
                  minimum: 5,
                  required: false,
                  type: "number",
                },
              },
            },
            name: "AppPagination",
          },
          wizardSwitch: {
            name: "WizardSwitch",
          },
        },
        values: {
          pagination: {
            enabled: true,
            pageSize: 5,
          },
          wizardSwitch: {
            enabled: true,
          },
        },
        version: "1",
      },
      ContentType: "application/json",
      Description: "A sample hosted configuration version",
    }),
    dependencies: ({}) => ({
      configurationProfile: "appconfig-feature-flag-sam::TestConfig",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "sam-app-SAMConfigFunctionRole-L7BI4A251CFG",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: [
                  "appconfig:GetLatestConfiguration",
                  "appconfig:StartConfigurationSession",
                ],
                Effect: "Allow",
                Resource: `arn:aws:appconfig:${
                  config.region
                }:${config.accountId()}:application/*`,
              },
            ],
            Version: "2012-10-17",
          },
          PolicyName: "SAMConfigFunctionRolePolicy0",
        },
      ],
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          PolicyName: "AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        Environment: {
          Variables: {
            SAM_CONFIG_PATH:
              "/applications/appconfig-feature-flag-sam/environments/dev/configurations/TestConfig",
          },
        },
        FunctionName: "sam-app-SAMConfigFunction-LV97iqvm1Uz9",
        Handler: "app.lambdaHandler",
        Layers: [
          "arn:aws:lambda:us-east-1:027255383542:layer:AWS-AppConfig-Extension:82",
        ],
        Runtime: "nodejs16.x",
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-SAMConfigFunctionRole-L7BI4A251CFG",
    }),
  },
  {
    type: "Permission",
    group: "Lambda",
    properties: ({ getId }) => ({
      Permissions: [
        {
          Action: "lambda:InvokeFunction",
          FunctionName: "sam-app-SAMConfigFunction-LV97iqvm1Uz9",
          Principal: "apigateway.amazonaws.com",
          SourceArn: `${getId({
            type: "Api",
            group: "ApiGatewayV2",
            name: "sam-app",
            path: "live.ArnV2",
          })}/*/GET/config`,
          StatementId:
            "sam-app-SAMConfigFunctionApiEventPermission-1P5FAXZHS71VD",
        },
      ],
    }),
    dependencies: ({}) => ({
      lambdaFunction: "sam-app-SAMConfigFunction-LV97iqvm1Uz9",
      apiGatewayV2Apis: ["sam-app"],
    }),
  },
];
