// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName:
        "KVSRekognitionStack-processinglambdaServiceRoleE18-1SZSOO7HD1WRW",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AWSLambdaBasicExecutionRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "KVSRekognitionStack-streamprocessorrole2E4EF627-FA0NHR04JNA1",
      Description:
        "Service role for Rekognition Stream Processor to ingest from KVS and output to Kinesis Data Streams",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "rekognition.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: [
                  "kinesisvideo:GetDataEndpoint",
                  "kinesisvideo:GetMedia",
                ],
                Resource: `arn:aws:kinesisvideo:${
                  config.region
                }:${config.accountId()}:stream/input-video-stream/1676469240353`,
                Effect: "Allow",
              },
              {
                Action: "sns:Publish",
                Resource: `arn:aws:sns:${
                  config.region
                }:${config.accountId()}:connected-home-topic`,
                Effect: "Allow",
              },
              {
                Action: "s3:PutObject",
                Resource:
                  "arn:aws:s3:::kvsrekognitionstack-eventstoragebucket14454e38-o5telhg78x4s",
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "kinesisvideoreadC2294532",
        },
      ],
    }),
  },
  {
    type: "Stream",
    group: "KinesisVideo",
    properties: ({}) => ({
      DataRetentionInHours: 1,
      StreamName: "input-video-stream",
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        FunctionName:
          "KVSRekognitionStack-processinglambda6F2FFA55-kdeJoOnyx0zM",
        Handler: "index.lambda_handler",
        Runtime: "python3.9",
      },
    }),
    dependencies: ({}) => ({
      role: "KVSRekognitionStack-processinglambdaServiceRoleE18-1SZSOO7HD1WRW",
    }),
  },
  {
    type: "Permission",
    group: "Lambda",
    properties: ({ config }) => ({
      Permissions: [
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "KVSRekognitionStack-processinglambda6F2FFA55-kdeJoOnyx0zM",
          Principal: "sns.amazonaws.com",
          StatementId:
            "KVSRekognitionStack-processinglambdaAllowInvokeKVSRekognitionStackconnectedhometopic1E-UETUBSN9R37O",
          SourceArn: `arn:aws:sns:${
            config.region
          }:${config.accountId()}:connected-home-topic`,
        },
      ],
    }),
    dependencies: ({}) => ({
      lambdaFunction:
        "KVSRekognitionStack-processinglambda6F2FFA55-kdeJoOnyx0zM",
    }),
  },
  {
    type: "StreamProcessor",
    group: "Rekognition",
    properties: ({}) => ({
      DataSharingPreference: {
        OptIn: true,
      },
      Name: "input-video-stream-stream-processor",
      Output: {
        S3Destination: {
          Bucket: "kvsrekognitionstack-eventstoragebucket14454e38-o5telhg78x4s",
        },
      },
      Settings: {
        ConnectedHome: {
          Labels: ["PERSON", "PET"],
          MinConfidence: 80,
        },
      },
    }),
    dependencies: ({}) => ({
      iamRole: "KVSRekognitionStack-streamprocessorrole2E4EF627-FA0NHR04JNA1",
      kinesisVideoStreamInput: "input-video-stream",
      s3BucketOutput:
        "kvsrekognitionstack-eventstoragebucket14454e38-o5telhg78x4s",
      snsTopic: "connected-home-topic",
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({}) => ({
      Name: "kvsrekognitionstack-eventstoragebucket14454e38-o5telhg78x4s",
    }),
  },
  {
    type: "Topic",
    group: "SNS",
    name: "connected-home-topic",
    properties: ({}) => ({
      Attributes: {
        DisplayName: "Connected_Home_Notifications",
      },
    }),
  },
  {
    type: "Subscription",
    group: "SNS",
    properties: ({}) => ({
      Attributes: {},
    }),
    dependencies: ({}) => ({
      snsTopic: "connected-home-topic",
      lambdaFunction:
        "KVSRekognitionStack-processinglambda6F2FFA55-kdeJoOnyx0zM",
    }),
  },
];
