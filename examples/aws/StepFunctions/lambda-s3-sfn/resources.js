// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "sam-app-AddFooterFunctionRole-YKMHNXXZVM2U",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: [
                  "s3:GetObject",
                  "s3:ListBucket",
                  "s3:GetBucketLocation",
                  "s3:GetObjectVersion",
                  "s3:GetLifecycleConfiguration",
                ],
                Resource: [
                  "arn:aws:s3:::gc-lambda-s3-sfn-uploads",
                  "arn:aws:s3:::gc-lambda-s3-sfn-uploads/*",
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "AddFooterFunctionRolePolicy0",
        },
      ],
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          PolicyName: "AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "sam-app-ProcessFileFunctionRole-5JRBG4SP3NP",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: [
                  "s3:GetObject",
                  "s3:ListBucket",
                  "s3:GetBucketLocation",
                  "s3:GetObjectVersion",
                  "s3:PutObject",
                  "s3:PutObjectAcl",
                  "s3:GetLifecycleConfiguration",
                  "s3:PutLifecycleConfiguration",
                  "s3:DeleteObject",
                ],
                Resource: [
                  "arn:aws:s3:::gc-lambda-s3-sfn-uploads",
                  "arn:aws:s3:::gc-lambda-s3-sfn-uploads/*",
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "ProcessFileFunctionRolePolicy0",
        },
      ],
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          PolicyName: "AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "sam-app-ProcessFileStateMachineRole-AW8NM87RALXW",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "states.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: ["lambda:InvokeFunction"],
                Resource: `arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:sam-app-ProcessFileFunction-BW0cLGmLpTil*`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "ProcessFileStateMachineRolePolicy0",
        },
        {
          PolicyDocument: {
            Statement: [
              {
                Action: ["lambda:InvokeFunction"],
                Resource: `arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:sam-app-AddFooterFunction-Sj4FdUksNsgI*`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "ProcessFileStateMachineRolePolicy1",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName:
        "sam-app-SavePayloadAndStartStateMachineFunctionRol-T8BJI53CBED9",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: [
                  "s3:GetObject",
                  "s3:ListBucket",
                  "s3:GetBucketLocation",
                  "s3:GetObjectVersion",
                  "s3:PutObject",
                  "s3:PutObjectAcl",
                  "s3:GetLifecycleConfiguration",
                  "s3:PutLifecycleConfiguration",
                  "s3:DeleteObject",
                ],
                Resource: [
                  "arn:aws:s3:::gc-lambda-s3-sfn-uploads",
                  "arn:aws:s3:::gc-lambda-s3-sfn-uploads/*",
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "SavePayloadAndStartStateMachineFunctionRolePolicy0",
        },
        {
          PolicyDocument: {
            Statement: [
              {
                Action: ["states:StartExecution"],
                Resource: `arn:aws:states:${
                  config.region
                }:${config.accountId()}:stateMachine:ProcessFileStateMachine-qIpsVlrcaKko`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "SavePayloadAndStartStateMachineFunctionRolePolicy1",
        },
      ],
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          PolicyName: "AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        Environment: {
          Variables: {
            UPLOADS_BUCKET: "gc-lambda-s3-sfn-uploads",
          },
        },
        FunctionName: "sam-app-AddFooterFunction-Sj4FdUksNsgI",
        Handler: "app.handler",
        Runtime: "nodejs18.x",
        Timeout: 10,
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-AddFooterFunctionRole-YKMHNXXZVM2U",
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        Environment: {
          Variables: {
            UPLOADS_BUCKET: "gc-lambda-s3-sfn-uploads",
          },
        },
        FunctionName: "sam-app-ProcessFileFunction-BW0cLGmLpTil",
        Handler: "app.handler",
        Runtime: "nodejs18.x",
        Timeout: 10,
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-ProcessFileFunctionRole-5JRBG4SP3NP",
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({ config }) => ({
      Configuration: {
        Environment: {
          Variables: {
            PROCESS_FILE_STATE_MACHINE_ARN: `arn:aws:states:${
              config.region
            }:${config.accountId()}:stateMachine:ProcessFileStateMachine-qIpsVlrcaKko`,
            UPLOADS_BUCKET: "gc-lambda-s3-sfn-uploads",
          },
        },
        FunctionName:
          "sam-app-SavePayloadAndStartStateMachineFunction-ylizpGuEZPin",
        Handler: "app.handler",
        Runtime: "nodejs18.x",
        Timeout: 10,
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-SavePayloadAndStartStateMachineFunctionRol-T8BJI53CBED9",
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({}) => ({
      Name: "gc-lambda-s3-sfn-uploads",
    }),
  },
  {
    type: "StateMachine",
    group: "StepFunctions",
    properties: ({ config }) => ({
      definition: {
        Comment: "Process Uploaded File State Machine",
        StartAt: "Process File",
        States: {
          "Process File": {
            Type: "Task",
            Resource: `arn:aws:lambda:${
              config.region
            }:${config.accountId()}:function:sam-app-ProcessFileFunction-BW0cLGmLpTil`,
            Parameters: {
              "Key.$": "$.Key",
              "Bucket.$": "$.Bucket",
            },
            Next: "Add Footer",
          },
          "Add Footer": {
            Type: "Task",
            Resource: `arn:aws:lambda:${
              config.region
            }:${config.accountId()}:function:sam-app-AddFooterFunction-Sj4FdUksNsgI`,
            Parameters: {
              "Key.$": "$.Key",
              "Bucket.$": "$.Bucket",
            },
            End: true,
          },
        },
      },
      name: "ProcessFileStateMachine-qIpsVlrcaKko",
      type: "EXPRESS",
    }),
    dependencies: ({}) => ({
      role: "sam-app-ProcessFileStateMachineRole-AW8NM87RALXW",
    }),
  },
];
