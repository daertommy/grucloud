// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Rule",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      EventPattern: {
        "detail-type": ["Object Created"],
        source: ["aws.s3"],
        detail: {
          bucket: {
            name: ["sam-app-ingestionbucket-bs6srdysvd8l"],
          },
        },
      },
      Name: "sam-app-CatDetectorStateMachineStateChange-1URDDNAKETLAP",
    }),
  },
  {
    type: "Target",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      Id: "CatDetectorStateMachineStateChangeStepFunctionsTarget",
    }),
    dependencies: ({}) => ({
      rule: "sam-app-CatDetectorStateMachineStateChange-1URDDNAKETLAP",
      role: "sam-app-CatDetectorStateMachineStateChangeRole-14R6BWKITKSEE",
      sfnStateMachine: "CatDetectorStateMachine-bm9tFmcUAUfh",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "sam-app-CatDetectorStateMachineRole-1I6Y1XJA9AVCC",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "states.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: [
                  "rekognition:DetectFaces",
                  "rekognition:DetectLabels",
                  "rekognition:DetectModerationLabels",
                  "rekognition:DetectText",
                ],
                Resource: "*",
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "CatDetectorStateMachineRolePolicy0",
        },
        {
          PolicyDocument: {
            Statement: [
              {
                Action: [
                  "s3:GetObject",
                  "s3:ListBucket",
                  "s3:GetBucketLocation",
                  "s3:GetObjectVersion",
                  "s3:GetLifecycleConfiguration",
                ],
                Resource: [
                  "arn:aws:s3:::sam-app-ingestionbucket-bs6srdysvd8l",
                  "arn:aws:s3:::sam-app-ingestionbucket-bs6srdysvd8l/*",
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "CatDetectorStateMachineRolePolicy1",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "sam-app-CatDetectorStateMachineStateChangeRole-14R6BWKITKSEE",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "events.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: "states:StartExecution",
                Resource: `arn:aws:states:${
                  config.region
                }:${config.accountId()}:stateMachine:CatDetectorStateMachine-bm9tFmcUAUfh`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName:
            "CatDetectorStateMachineStateChangeRoleStartExecutionPolicy",
        },
      ],
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({}) => ({
      Name: "sam-app-ingestionbucket-bs6srdysvd8l",
      ServerSideEncryptionConfiguration: {
        Rules: [
          {
            ApplyServerSideEncryptionByDefault: {
              SSEAlgorithm: "AES256",
            },
          },
        ],
      },
      NotificationConfiguration: {
        EventBridgeConfiguration: {},
      },
    }),
  },
  {
    type: "StateMachine",
    group: "StepFunctions",
    properties: ({}) => ({
      definition: {
        Comment: "Cat detector state machine",
        StartAt: "DetectLabels",
        States: {
          DetectLabels: {
            Type: "Task",
            Parameters: {
              Image: {
                S3Object: {
                  "Bucket.$": "$.detail.bucket.name",
                  "Name.$": "$.detail.object.key",
                },
              },
            },
            Resource: "arn:aws:states:::aws-sdk:rekognition:detectLabels",
            Next: "Map",
          },
          Map: {
            Type: "Map",
            Iterator: {
              StartAt: "Pass",
              States: {
                Pass: {
                  Type: "Pass",
                  End: true,
                },
              },
            },
            ResultSelector: {
              "Labels.$": "$[?(@.Name == 'Cat')]",
            },
            ResultPath: "$.ProcessResult",
            Next: "Cat?",
            ItemsPath: "$.Labels",
          },
          "Cat?": {
            Type: "Choice",
            Choices: [
              {
                Variable: "$.ProcessResult.Labels[0]",
                IsPresent: true,
                Next: "Cat",
              },
            ],
            Default: "No cat",
          },
          Cat: {
            Type: "Pass",
            End: true,
          },
          "No cat": {
            Type: "Pass",
            End: true,
          },
        },
      },
      name: "CatDetectorStateMachine-bm9tFmcUAUfh",
    }),
    dependencies: ({}) => ({
      role: "sam-app-CatDetectorStateMachineRole-1I6Y1XJA9AVCC",
    }),
  },
];
