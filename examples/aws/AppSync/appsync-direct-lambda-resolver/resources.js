// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "DataSource",
    group: "AppSync",
    properties: ({}) => ({
      name: "directLambda",
      type: "AWS_LAMBDA",
    }),
    dependencies: ({}) => ({
      graphqlApi: "AppsyncWithLambdaResolverApi",
      serviceRole:
        "AppSyncWithDirectLambdaRe-ApidirectLambdaServiceRo-1UR6V9ZYP1FIB",
      lambdaFunction:
        "AppSyncWithDirectLambdaResolverSt-resolver24166D79-DWfEQ5ofpHgH",
    }),
  },
  {
    type: "GraphqlApi",
    group: "AppSync",
    properties: ({}) => ({
      name: "AppsyncWithLambdaResolverApi",
      authenticationType: "API_KEY",
      xrayEnabled: true,
      logConfig: {
        excludeVerboseContent: false,
        fieldLogLevel: "ALL",
      },
      apiKeys: [{}],
      schemaFile: "AppsyncWithLambdaResolverApi.graphql",
    }),
    dependencies: ({}) => ({
      cloudWatchLogsRole:
        "AppSyncWithDirectLambdaReso-ApiApiLogsRole90293F72-J17MNOFIMP7Q",
    }),
  },
  {
    type: "Resolver",
    group: "AppSync",
    properties: ({}) => ({
      fieldName: "createTodo",
      kind: "UNIT",
      typeName: "Mutation",
    }),
    dependencies: ({}) => ({
      dataSource: "directLambda",
      graphqlApi: "AppsyncWithLambdaResolverApi",
    }),
  },
  {
    type: "Resolver",
    group: "AppSync",
    properties: ({}) => ({
      fieldName: "deleteTodo",
      kind: "UNIT",
      typeName: "Mutation",
    }),
    dependencies: ({}) => ({
      dataSource: "directLambda",
      graphqlApi: "AppsyncWithLambdaResolverApi",
    }),
  },
  {
    type: "Resolver",
    group: "AppSync",
    properties: ({}) => ({
      fieldName: "updateTodo",
      kind: "UNIT",
      typeName: "Mutation",
    }),
    dependencies: ({}) => ({
      dataSource: "directLambda",
      graphqlApi: "AppsyncWithLambdaResolverApi",
    }),
  },
  {
    type: "Resolver",
    group: "AppSync",
    properties: ({}) => ({
      fieldName: "getTodo",
      kind: "UNIT",
      typeName: "Query",
    }),
    dependencies: ({}) => ({
      dataSource: "directLambda",
      graphqlApi: "AppsyncWithLambdaResolverApi",
    }),
  },
  {
    type: "Resolver",
    group: "AppSync",
    properties: ({}) => ({
      fieldName: "listTodos",
      kind: "UNIT",
      typeName: "Query",
    }),
    dependencies: ({}) => ({
      dataSource: "directLambda",
      graphqlApi: "AppsyncWithLambdaResolverApi",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName:
        "AppSyncWithDirectLambdaRe-ApidirectLambdaServiceRo-1UR6V9ZYP1FIB",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "appsync.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: "lambda:InvokeFunction",
                Resource: [
                  `arn:aws:lambda:${
                    config.region
                  }:${config.accountId()}:function:AppSyncWithDirectLambdaResolverSt-resolver24166D79-DWfEQ5ofpHgH`,
                  `arn:aws:lambda:${
                    config.region
                  }:${config.accountId()}:function:AppSyncWithDirectLambdaResolverSt-resolver24166D79-DWfEQ5ofpHgH:*`,
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "ApidirectLambdaServiceRoleDefaultPolicy3B7E18A7",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName:
        "AppSyncWithDirectLambdaRe-resolverServiceRole60717-1MX8WZM7NMUW2",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AWSLambdaBasicExecutionRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName:
        "AppSyncWithDirectLambdaReso-ApiApiLogsRole90293F72-J17MNOFIMP7Q",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "appsync.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AWSAppSyncPushToCloudWatchLogs",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs",
        },
      ],
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        Environment: {
          Variables: {
            AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1",
          },
        },
        FunctionName:
          "AppSyncWithDirectLambdaResolverSt-resolver24166D79-DWfEQ5ofpHgH",
        Handler: "index.handler",
        Runtime: "nodejs14.x",
      },
    }),
    dependencies: ({}) => ({
      role: "AppSyncWithDirectLambdaRe-resolverServiceRole60717-1MX8WZM7NMUW2",
    }),
  },
];
