// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "OpenIDConnectProvider",
    group: "IAM",
    properties: ({}) => ({
      ClientIDList: ["grucloud", "https://demo.grucloud.com"],
      Url: "demo.grucloud.com/oidc",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ getId }) => ({
      RoleName: "role-grucloud",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Federated: `${getId({
                type: "OpenIDConnectProvider",
                group: "IAM",
                name: "oidp::demo.grucloud.com/oidc",
              })}`,
            },
            Action: "sts:AssumeRoleWithWebIdentity",
            Condition: {
              StringEquals: {
                [`${getId({
                  type: "OpenIDConnectProvider",
                  group: "IAM",
                  name: "oidp::demo.grucloud.com/oidc",
                  path: "live.Url",
                })}:aud`]: "https://demo.grucloud.com",
              },
              StringLike: {
                [`${getId({
                  type: "OpenIDConnectProvider",
                  group: "IAM",
                  name: "oidp::demo.grucloud.com/oidc",
                  path: "live.Url",
                })}:sub`]: "organization:my-org:*",
              },
            },
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyArn: "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
          PolicyName: "AmazonS3ReadOnlyAccess",
        },
        {
          PolicyArn: "arn:aws:iam::aws:policy/AmazonVPCFullAccess",
          PolicyName: "AmazonVPCFullAccess",
        },
      ],
    }),
    dependencies: ({}) => ({
      openIdConnectProvider: "oidp::demo.grucloud.com/oidc",
    }),
  },
];
