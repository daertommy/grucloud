// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Api",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      Name: "sam-app-WebSocketApi",
      ProtocolType: "WEBSOCKET",
      RouteSelectionExpression: "$request.body.action",
    }),
  },
  {
    type: "Deployment",
    group: "ApiGatewayV2",
    dependencies: ({}) => ({
      api: "sam-app-WebSocketApi",
      stage: "sam-app-WebSocketApi::api",
    }),
  },
  {
    type: "Integration",
    group: "ApiGatewayV2",
    properties: ({ config }) => ({
      ConnectionType: "INTERNET",
      IntegrationMethod: "POST",
      IntegrationResponseSelectionExpression:
        "${integration.response.statuscode}",
      IntegrationType: "AWS",
      IntegrationUri: `arn:aws:apigateway:${config.region}:states:action/StartExecution`,
      PassthroughBehavior: "WHEN_NO_MATCH",
      PayloadFormatVersion: "1.0",
      RequestTemplates: {
        $default: `#set($sfn_input=$util.escapeJavaScript($input.body).replaceAll("'","'")) { 
  "input": "{"data":$sfn_input, "ConnectionID":"$context.connectionId"}",
  "stateMachineArn": "arn:aws:states:${
    config.region
  }:${config.accountId()}:stateMachine:AsyncSFn-srNK33QLTR0R"
}
`,
      },
      TemplateSelectionExpression: "\\$default",
      TimeoutInMillis: 29000,
    }),
    dependencies: ({}) => ({
      api: "sam-app-WebSocketApi",
      role: "sam-app-StepFunctionsAsyncExecutionRole-6RGKCARYYWG",
    }),
  },
  {
    type: "IntegrationResponse",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      IntegrationResponseKey: "$default",
    }),
    dependencies: ({ config }) => ({
      integration: `integration::sam-app-WebSocketApi::arn:aws:apigateway:${config.region}:states:action/StartExecution`,
    }),
  },
  {
    type: "Route",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      OperationName: "DefaultRoute",
      RouteKey: "$default",
    }),
    dependencies: ({ config }) => ({
      api: "sam-app-WebSocketApi",
      integration: `integration::sam-app-WebSocketApi::arn:aws:apigateway:${config.region}:states:action/StartExecution`,
    }),
  },
  {
    type: "RouteResponse",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      RouteResponseKey: "$default",
    }),
    dependencies: ({}) => ({
      route: "route::sam-app-WebSocketApi::$default",
    }),
  },
  {
    type: "Stage",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      DefaultRouteSettings: {
        DataTraceEnabled: false,
        LoggingLevel: "OFF",
      },
      StageName: "api",
    }),
    dependencies: ({}) => ({
      api: "sam-app-WebSocketApi",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ getId }) => ({
      RoleName: "sam-app-AsyncSFnRole-DJEA1WIA8X0T",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "states.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: ["execute-api:ManageConnections"],
                Resource: [
                  `${getId({
                    type: "Api",
                    group: "ApiGatewayV2",
                    name: "sam-app-WebSocketApi",
                    path: "live.ArnV2",
                  })}/api/POST/@connections/{connectionId}`,
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "APIGWConnectionsAccess",
        },
      ],
    }),
    dependencies: ({}) => ({
      apiGatewayV2Apis: ["sam-app-WebSocketApi"],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "sam-app-StepFunctionsAsyncExecutionRole-6RGKCARYYWG",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "apigateway.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: ["states:StartExecution"],
                Resource: `arn:aws:states:${
                  config.region
                }:${config.accountId()}:stateMachine:AsyncSFn-srNK33QLTR0R`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "StepFunctionsAsyncExecution",
        },
      ],
    }),
  },
  {
    type: "StateMachine",
    group: "StepFunctions",
    properties: ({ getId }) => ({
      definition: {
        Comment:
          "Sample Standard Workflow for Asynchronous Execution by API Gateway",
        StartAt: "Wait for 5 Seconds",
        States: {
          "Send Message to WebSocket Client": {
            End: true,
            Parameters: {
              ApiEndpoint: `${getId({
                type: "Api",
                group: "ApiGatewayV2",
                name: "sam-app-WebSocketApi",
                path: "live.Endpoint",
              })}`,
              AuthType: "IAM_ROLE",
              Method: "POST",
              "Path.$": "States.Format('/@connections/{}', $.ConnectionID)",
              RequestBody: {
                Message: "Hello from asynchronous workflow execution!",
              },
              Stage: "api",
            },
            Resource: "arn:aws:states:::apigateway:invoke",
            Type: "Task",
          },
          "Wait for 5 Seconds": {
            Next: "Send Message to WebSocket Client",
            Seconds: 5,
            Type: "Wait",
          },
        },
      },
      name: "AsyncSFn-srNK33QLTR0R",
      tracingConfiguration: {
        enabled: true,
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-AsyncSFnRole-DJEA1WIA8X0T",
      apiGatewayV2Apis: ["sam-app-WebSocketApi"],
    }),
  },
];
