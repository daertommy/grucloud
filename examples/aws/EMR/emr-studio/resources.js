// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "DefaultEngineSecurityGroup",
      Description:
        "Allows inbound traffic to clusters from attached Amazon EMR Studio Workspaces ( port 18888 )",
      Tags: [
        {
          Key: "for-use-with-amazon-emr-managed-policies",
          Value: "true",
        },
      ],
    }),
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "DefaultWorkspaceSecurityGroupGit",
      Description:
        "Allows outbound traffic from Amazon EMR Studio Workspaces to clusters and publicly-hosted Git repos.",
      Tags: [
        {
          Key: "for-use-with-amazon-emr-managed-policies",
          Value: "true",
        },
      ],
    }),
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      FromPort: 18888,
      IpProtocol: "tcp",
      ToPort: 18888,
    }),
    dependencies: ({}) => ({
      securityGroup: "sg::vpc-default::DefaultEngineSecurityGroup",
      securityGroupFrom: ["sg::vpc-default::DefaultWorkspaceSecurityGroupGit"],
    }),
  },
  {
    type: "SecurityGroupRuleEgress",
    group: "EC2",
    properties: ({}) => ({
      FromPort: 18888,
      IpProtocol: "tcp",
      ToPort: 18888,
    }),
    dependencies: ({}) => ({
      securityGroup: "sg::vpc-default::DefaultWorkspaceSecurityGroupGit",
      securityGroupFrom: ["sg::vpc-default::DefaultEngineSecurityGroup"],
    }),
  },
  {
    type: "SecurityGroupRuleEgress",
    group: "EC2",
    properties: ({}) => ({
      FromPort: 443,
      IpProtocol: "tcp",
      IpRanges: [
        {
          CidrIp: "0.0.0.0/0",
          Description:
            "Required for Amazon EMR Studio Workspace and Git communication.",
        },
      ],
      ToPort: 443,
    }),
    dependencies: ({}) => ({
      securityGroup: "sg::vpc-default::DefaultWorkspaceSecurityGroupGit",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-default-a",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-default-d",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  { type: "Vpc", group: "EC2", name: "vpc-default", isDefault: true },
  {
    type: "Studio",
    group: "EMR",
    properties: ({}) => ({
      AuthMode: "IAM",
      DefaultS3Location: "s3://gc-emr-studio",
      Name: "my-studio",
    }),
    dependencies: ({}) => ({
      serviceRole: "role-emr-studio",
      subnets: [
        "vpc-default::subnet-default-a",
        "vpc-default::subnet-default-d",
      ],
      vpc: "vpc-default",
      engineSecurityGroup: "sg::vpc-default::DefaultEngineSecurityGroup",
      workspaceSecurityGroup:
        "sg::vpc-default::DefaultWorkspaceSecurityGroupGit",
      s3Bucket: "gc-emr-studio",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "role-emr-studio",
      Description:
        "Allows Elastic MapReduce to call AWS services such as EC2 on your behalf.",
      AssumeRolePolicyDocument: {
        Statement: [
          {
            Action: "sts:AssumeRole",
            Effect: "Allow",
            Principal: {
              Service: "elasticmapreduce.amazonaws.com",
            },
          },
        ],
        Version: "2012-10-17",
      },
      AttachedPolicies: [
        {
          PolicyArn: "arn:aws:iam::aws:policy/AmazonS3FullAccess",
          PolicyName: "AmazonS3FullAccess",
        },
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole",
          PolicyName: "AmazonElasticMapReduceRole",
        },
      ],
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({}) => ({
      Name: "gc-emr-studio",
    }),
  },
];
