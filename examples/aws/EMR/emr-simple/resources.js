// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  { type: "KeyPair", group: "EC2", name: "my-kp" },
  {
    type: "SecurityGroup",
    group: "EC2",
    name: "sg::vpc-default::default",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-default-d",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  { type: "Vpc", group: "EC2", name: "vpc-default", isDefault: true },
  {
    type: "Cluster",
    group: "EMR",
    properties: ({}) => ({
      Applications: [
        {
          Name: "Spark",
          Version: "3.3.1",
        },
        {
          Name: "Zeppelin",
          Version: "0.10.1",
        },
      ],
      AutoTerminate: false,
      Configurations: [],
      Ec2InstanceAttributes: {
        AdditionalMasterSecurityGroups: [],
        AdditionalSlaveSecurityGroups: [],
        Ec2KeyName: "my-kp",
        Ec2SubnetId: "subnet-41e85860",
        EmrManagedMasterSecurityGroup: "sg-4e82a670",
        EmrManagedSlaveSecurityGroup: "sg-4e82a670",
        IamInstanceProfile: "AmazonEMR-InstanceProfile-20230317T183519",
        RequestedEc2AvailabilityZones: [],
        RequestedEc2SubnetIds: ["subnet-41e85860"],
      },
      InstanceCollectionType: "INSTANCE_GROUP",
      KerberosAttributes: {},
      Name: "My cluster",
      OSReleaseLabel: "2.0.20230207.0",
      PlacementGroups: [],
      ReleaseLabel: "emr-6.10.0",
      ScaleDownBehavior: "TERMINATE_AT_TASK_COMPLETION",
      StepConcurrencyLevel: 1,
      Tags: [
        {
          Key: "for-use-with-amazon-emr-managed-policies",
          Value: "true",
        },
      ],
      TerminationProtected: false,
      VisibleToAllUsers: true,
    }),
    dependencies: ({}) => ({
      securityGroupMaster: "sg::vpc-default::default",
      securityGroupServiceAccess: "sg::vpc-default::default",
      subnet: "vpc-default::subnet-default-d",
    }),
  },
  {
    type: "InstanceProfile",
    group: "IAM",
    name: "AmazonEMR-InstanceProfile-20230317T183519",
    dependencies: ({}) => ({
      roles: ["AmazonEMR-InstanceProfile-20230317T183519"],
    }),
  },
  {
    type: "Policy",
    group: "IAM",
    properties: ({}) => ({
      PolicyName: "AmazonEMR-InstanceProfile-Policy-20230317T183519",
      PolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Action: [
              "s3:GetBucketVersioning",
              "s3:GetObject",
              "s3:GetObjectTagging",
              "s3:GetObjectVersion",
              "s3:ListBucket",
              "s3:ListBucketMultipartUploads",
              "s3:ListBucketVersions",
              "s3:ListMultipartUploadParts",
            ],
            Resource: [
              "arn:aws:s3:::elasticmapreduce",
              "arn:aws:s3:::elasticmapreduce/*",
              "arn:aws:s3:::*.elasticmapreduce/*",
            ],
          },
        ],
      },
      Path: "/service-role/",
    }),
  },
  {
    type: "Policy",
    group: "IAM",
    properties: ({ config }) => ({
      PolicyName: "AmazonEMR-ServiceRole-Policy-20230317T183530",
      PolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "CreateInNetwork",
            Effect: "Allow",
            Action: [
              "ec2:CreateNetworkInterface",
              "ec2:RunInstances",
              "ec2:CreateFleet",
              "ec2:CreateLaunchTemplate",
              "ec2:CreateLaunchTemplateVersion",
            ],
            Resource: [
              "arn:aws:ec2:*:*:subnet/subnet-41e85860",
              "arn:aws:ec2:*:*:security-group/sg-4e82a670",
            ],
          },
          {
            Sid: "ManageSecurityGroups",
            Effect: "Allow",
            Action: [
              "ec2:AuthorizeSecurityGroupEgress",
              "ec2:AuthorizeSecurityGroupIngress",
              "ec2:RevokeSecurityGroupEgress",
              "ec2:RevokeSecurityGroupIngress",
            ],
            Resource: ["arn:aws:ec2:*:*:security-group/sg-4e82a670"],
          },
          {
            Sid: "CreateDefaultSecurityGroupInVPC",
            Effect: "Allow",
            Action: ["ec2:CreateSecurityGroup"],
            Resource: ["arn:aws:ec2:*:*:vpc/vpc-faff3987"],
          },
          {
            Sid: "PassRoleForEC2",
            Effect: "Allow",
            Action: "iam:PassRole",
            Resource: `arn:aws:iam::${config.accountId()}:role/service-role/AmazonEMR-InstanceProfile-20230317T183519`,
            Condition: {
              StringLike: {
                "iam:PassedToService": "ec2.amazonaws.com",
              },
            },
          },
        ],
      },
      Path: "/service-role/",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "AmazonEMR-InstanceProfile-20230317T183519",
      Path: "/service-role/",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "ec2.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
    }),
    dependencies: ({}) => ({
      policies: ["AmazonEMR-InstanceProfile-Policy-20230317T183519"],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "AmazonEMR-ServiceRole-20230317T183530",
      Path: "/service-role/",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "elasticmapreduce.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AmazonEMRServicePolicy_v2",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AmazonEMRServicePolicy_v2",
        },
      ],
    }),
    dependencies: ({}) => ({
      policies: ["AmazonEMR-ServiceRole-Policy-20230317T183530"],
    }),
  },
];
