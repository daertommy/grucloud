// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Vpc",
    group: "EC2",
    name: "spoke-A-vpc",
    properties: ({}) => ({
      CidrBlock: "10.0.0.0/16",
      DnsHostnames: true,
    }),
  },
  { type: "Vpc", group: "EC2", name: "vpc-default", isDefault: true },
  {
    type: "Subnet",
    group: "EC2",
    name: ({ config }) => `subnet-private1-${config.region}a`,
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}a`,
      NewBits: 4,
      NetworkNumber: 8,
    }),
    dependencies: ({}) => ({
      vpc: "spoke-A-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: ({ config }) => `subnet-private2-${config.region}b`,
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}b`,
      NewBits: 4,
      NetworkNumber: 9,
    }),
    dependencies: ({}) => ({
      vpc: "spoke-A-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-default-a",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-default-b",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: ({ config }) => `rtb-private1-${config.region}a`,
    dependencies: ({}) => ({
      vpc: "spoke-A-vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: ({ config }) => `rtb-private2-${config.region}b`,
    dependencies: ({}) => ({
      vpc: "spoke-A-vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({ config }) => ({
      routeTable: `spoke-A-vpc::rtb-private1-${config.region}a`,
      subnet: `spoke-A-vpc::subnet-private1-${config.region}a`,
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({ config }) => ({
      routeTable: `spoke-A-vpc::rtb-private2-${config.region}b`,
      subnet: `spoke-A-vpc::subnet-private2-${config.region}b`,
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: ({}) => ({
      routeTable: "vpc-default::rt-default",
      transitGateway: "transit-gateway",
    }),
  },
  {
    type: "TransitGateway",
    group: "EC2",
    name: "transit-gateway",
    properties: ({}) => ({
      Description: "",
      Options: {
        AmazonSideAsn: 64512,
        AutoAcceptSharedAttachments: "disable",
        DefaultRouteTableAssociation: "enable",
        DefaultRouteTablePropagation: "enable",
        VpnEcmpSupport: "enable",
        DnsSupport: "enable",
        MulticastSupport: "disable",
      },
    }),
  },
  {
    type: "TransitGatewayRoute",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: ({}) => ({
      transitGatewayRouteTable: "tgw-rtb-transit-gateway-default",
      transitGatewayVpcAttachment: "tgw-attachment",
    }),
  },
  {
    type: "TransitGatewayRouteTable",
    group: "EC2",
    name: "tgw-rtb-transit-gateway-default",
    readOnly: true,
    properties: ({}) => ({
      DefaultAssociationRouteTable: true,
      DefaultPropagationRouteTable: true,
    }),
    dependencies: ({}) => ({
      transitGateway: "transit-gateway",
    }),
  },
  {
    type: "TransitGatewayVpcAttachment",
    group: "EC2",
    name: "tgw-attachment",
    properties: ({}) => ({
      Options: {
        DnsSupport: "enable",
        Ipv6Support: "disable",
        ApplianceModeSupport: "disable",
      },
    }),
    dependencies: ({}) => ({
      transitGateway: "transit-gateway",
      vpc: "vpc-default",
      subnets: [
        "vpc-default::subnet-default-a",
        "vpc-default::subnet-default-b",
      ],
    }),
  },
  {
    type: "TransitGatewayVpcAttachment",
    group: "EC2",
    name: "tgw-vpc-attach::transit-gateway::spoke-A-vpc",
    properties: ({}) => ({
      Options: {
        DnsSupport: "enable",
        Ipv6Support: "disable",
        ApplianceModeSupport: "disable",
      },
    }),
    dependencies: ({ config }) => ({
      transitGateway: "transit-gateway",
      vpc: "spoke-A-vpc",
      subnets: [
        `spoke-A-vpc::subnet-private1-${config.region}a`,
        `spoke-A-vpc::subnet-private2-${config.region}b`,
      ],
    }),
  },
  {
    type: "TransitGatewayRouteTableAssociation",
    group: "EC2",
    dependencies: ({}) => ({
      transitGatewayRouteTable: "tgw-rtb-transit-gateway-default",
      transitGatewayVpcAttachment: "tgw-attachment",
    }),
  },
  {
    type: "TransitGatewayRouteTableAssociation",
    group: "EC2",
    dependencies: ({}) => ({
      transitGatewayRouteTable: "tgw-rtb-transit-gateway-default",
      transitGatewayVpcAttachment:
        "tgw-vpc-attach::transit-gateway::spoke-A-vpc",
    }),
  },
  {
    type: "TransitGatewayRouteTablePropagation",
    group: "EC2",
    dependencies: ({}) => ({
      transitGatewayRouteTable: "tgw-rtb-transit-gateway-default",
      transitGatewayVpcAttachment: "tgw-attachment",
    }),
  },
  {
    type: "TransitGatewayRouteTablePropagation",
    group: "EC2",
    dependencies: ({}) => ({
      transitGatewayRouteTable: "tgw-rtb-transit-gateway-default",
      transitGatewayVpcAttachment:
        "tgw-vpc-attach::transit-gateway::spoke-A-vpc",
    }),
  },
];
