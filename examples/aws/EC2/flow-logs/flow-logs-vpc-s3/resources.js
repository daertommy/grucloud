// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "FlowLogs",
    group: "EC2",
    name: "my-fl",
    properties: ({}) => ({
      TrafficType: "ALL",
      MaxAggregationInterval: 600,
      DestinationOptions: {
        FileFormat: "plain-text",
        HiveCompatiblePartitions: false,
        PerHourPartition: false,
      },
    }),
    dependencies: ({}) => ({
      vpc: "my-vpc",
      s3Bucket: "gc-flowlogs-my-vpc",
    }),
  },
  {
    type: "Vpc",
    group: "EC2",
    name: "my-vpc",
    properties: ({}) => ({
      CidrBlock: "10.0.0.0/16",
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({ config }) => ({
      Name: "gc-flowlogs-my-vpc",
      ServerSideEncryptionConfiguration: {
        Rules: [
          {
            ApplyServerSideEncryptionByDefault: {
              SSEAlgorithm: "AES256",
            },
          },
        ],
      },
      Policy: {
        Version: "2012-10-17",
        Id: "AWSLogDeliveryWrite20150319",
        Statement: [
          {
            Sid: "AWSLogDeliveryWrite",
            Effect: "Allow",
            Principal: {
              Service: "delivery.logs.amazonaws.com",
            },
            Action: "s3:PutObject",
            Resource: `arn:aws:s3:::gc-flowlogs-my-vpc/AWSLogs/${config.accountId()}/*`,
            Condition: {
              StringEquals: {
                "aws:SourceAccount": `${config.accountId()}`,
                "s3:x-amz-acl": "bucket-owner-full-control",
              },
              ArnLike: {
                "aws:SourceArn": `arn:aws:logs:${
                  config.region
                }:${config.accountId()}:*`,
              },
            },
          },
          {
            Sid: "AWSLogDeliveryAclCheck",
            Effect: "Allow",
            Principal: {
              Service: "delivery.logs.amazonaws.com",
            },
            Action: "s3:GetBucketAcl",
            Resource: "arn:aws:s3:::gc-flowlogs-my-vpc",
            Condition: {
              StringEquals: {
                "aws:SourceAccount": `${config.accountId()}`,
              },
              ArnLike: {
                "aws:SourceArn": `arn:aws:logs:${
                  config.region
                }:${config.accountId()}:*`,
              },
            },
          },
        ],
      },
    }),
  },
];
