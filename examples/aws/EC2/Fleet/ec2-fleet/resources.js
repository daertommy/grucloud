// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  { type: "InternetGateway", group: "EC2", name: "my-vpc-igw" },
  {
    type: "InternetGatewayAttachment",
    group: "EC2",
    dependencies: ({}) => ({
      vpc: "my-vpc-vpc",
      internetGateway: "my-vpc-igw",
    }),
  },
  {
    type: "LaunchTemplate",
    group: "EC2",
    name: "my-template",
    properties: ({ config, getId }) => ({
      LaunchTemplateData: {
        Image: {
          Description:
            "Amazon Linux 2023 AMI 2023.0.20230503.0 x86_64 HVM kernel-6.1",
        },
        InstanceType: "t2.micro",
        NetworkInterfaces: [
          {
            DeviceIndex: 0,
            Groups: [
              `${getId({
                type: "SecurityGroup",
                group: "EC2",
                name: "sg::my-vpc-vpc::my-security-group",
              })}`,
            ],
            SubnetId: `${getId({
              type: "Subnet",
              group: "EC2",
              name: `my-vpc-vpc::my-vpc-subnet-public1-${config.region}a`,
            })}`,
          },
        ],
      },
      Tags: [
        {
          Key: "my-key",
          Value: "my-value",
        },
      ],
    }),
    dependencies: ({ config }) => ({
      subnets: [`my-vpc-vpc::my-vpc-subnet-public1-${config.region}a`],
      securityGroups: ["sg::my-vpc-vpc::my-security-group"],
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: ({}) => ({
      ig: "my-vpc-igw",
      routeTable: "my-vpc-vpc::my-vpc-rtb-public",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "my-vpc-rtb-public",
    dependencies: ({}) => ({
      vpc: "my-vpc-vpc",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({ config }) => ({
      routeTable: "my-vpc-vpc::my-vpc-rtb-public",
      subnet: `my-vpc-vpc::my-vpc-subnet-public1-${config.region}a`,
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({ config }) => ({
      routeTable: "my-vpc-vpc::my-vpc-rtb-public",
      subnet: `my-vpc-vpc::my-vpc-subnet-public2-${config.region}b`,
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "my-security-group",
      Description: "My Security Group",
    }),
    dependencies: ({}) => ({
      vpc: "my-vpc-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: ({ config }) => `my-vpc-subnet-public1-${config.region}a`,
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}a`,
      NewBits: 4,
      NetworkNumber: 0,
    }),
    dependencies: ({}) => ({
      vpc: "my-vpc-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: ({ config }) => `my-vpc-subnet-public2-${config.region}b`,
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}b`,
      NewBits: 4,
      NetworkNumber: 1,
    }),
    dependencies: ({}) => ({
      vpc: "my-vpc-vpc",
    }),
  },
  {
    type: "Vpc",
    group: "EC2",
    name: "my-vpc-vpc",
    properties: ({}) => ({
      CidrBlock: "10.0.0.0/16",
      DnsHostnames: true,
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "aws-ec2-spot-fleet-tagging-role",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "",
            Effect: "Allow",
            Principal: {
              Service: "spotfleet.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole",
          PolicyName: "AmazonEC2SpotFleetTaggingRole",
        },
      ],
    }),
  },
];
