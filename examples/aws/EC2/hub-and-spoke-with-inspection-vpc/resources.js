// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "LogGroup",
    group: "CloudWatchLogs",
    name: "/aws/network-firewall/flows",
    properties: ({}) => ({
      retentionInDays: 7,
    }),
  },
  {
    type: "KeyPair",
    group: "EC2",
    name: "informed-cattle",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Provisioner",
          Value: "Terraform",
        },
      ],
    }),
  },
  {
    type: "Vpc",
    group: "EC2",
    name: "inspection-vpc",
    properties: ({}) => ({
      CidrBlock: "10.129.0.0/16",
      DnsHostnames: true,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
  },
  {
    type: "Vpc",
    group: "EC2",
    name: "spoke-vpc-1",
    properties: ({}) => ({
      CidrBlock: "10.11.0.0/16",
      DnsHostnames: true,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
  },
  {
    type: "Vpc",
    group: "EC2",
    name: "spoke-vpc-2",
    properties: ({}) => ({
      CidrBlock: "10.12.0.0/16",
      DnsHostnames: true,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
  },
  {
    type: "InternetGateway",
    group: "EC2",
    name: "inspection-vpc",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "NatGateway",
    group: "EC2",
    name: "inspection-vpc-us-east-1a",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      subnet: "inspection-vpc-public-subnet-us-east-1a",
      eip: "inspection-vpc-us-east-1a",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "inspection-vpc-intra-subnet-us-east-1a",
    properties: ({ config }) => ({
      CidrBlock: "10.129.200.0/24",
      AvailabilityZone: `${config.region}a`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "inspection-vpc-intra-subnet-us-east-1b",
    properties: ({ config }) => ({
      CidrBlock: "10.129.201.0/24",
      AvailabilityZone: `${config.region}b`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "inspection-vpc-intra-subnet-us-east-1c",
    properties: ({ config }) => ({
      CidrBlock: "10.129.202.0/24",
      AvailabilityZone: `${config.region}c`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "inspection-vpc-pivate-subnet-us-east-1a",
    properties: ({ config }) => ({
      CidrBlock: "10.129.1.0/24",
      AvailabilityZone: `${config.region}a`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "inspection-vpc-pivate-subnet-us-east-1b",
    properties: ({ config }) => ({
      CidrBlock: "10.129.2.0/24",
      AvailabilityZone: `${config.region}b`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "inspection-vpc-pivate-subnet-us-east-1c",
    properties: ({ config }) => ({
      CidrBlock: "10.129.3.0/24",
      AvailabilityZone: `${config.region}c`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "inspection-vpc-public-subnet-us-east-1a",
    properties: ({ config }) => ({
      CidrBlock: "10.129.129.0/24",
      AvailabilityZone: `${config.region}a`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "inspection-vpc-public-subnet-us-east-1b",
    properties: ({ config }) => ({
      CidrBlock: "10.129.130.0/24",
      AvailabilityZone: `${config.region}b`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "inspection-vpc-public-subnet-us-east-1c",
    properties: ({ config }) => ({
      CidrBlock: "10.129.131.0/24",
      AvailabilityZone: `${config.region}c`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-1-intra-subnet-us-east-1a",
    properties: ({ config }) => ({
      CidrBlock: "10.11.200.0/24",
      AvailabilityZone: `${config.region}a`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-1-intra-subnet-us-east-1b",
    properties: ({ config }) => ({
      CidrBlock: "10.11.201.0/24",
      AvailabilityZone: `${config.region}b`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-1-intra-subnet-us-east-1c",
    properties: ({ config }) => ({
      CidrBlock: "10.11.202.0/24",
      AvailabilityZone: `${config.region}c`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-1-pivate-subnet-us-east-1a",
    properties: ({ config }) => ({
      CidrBlock: "10.11.1.0/24",
      AvailabilityZone: `${config.region}a`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-1-pivate-subnet-us-east-1b",
    properties: ({ config }) => ({
      CidrBlock: "10.11.2.0/24",
      AvailabilityZone: `${config.region}b`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-1-pivate-subnet-us-east-1c",
    properties: ({ config }) => ({
      CidrBlock: "10.11.3.0/24",
      AvailabilityZone: `${config.region}c`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-1-public-subnet-us-east-1a",
    properties: ({ config }) => ({
      CidrBlock: "10.11.129.0/24",
      AvailabilityZone: `${config.region}a`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-1-public-subnet-us-east-1b",
    properties: ({ config }) => ({
      CidrBlock: "10.11.130.0/24",
      AvailabilityZone: `${config.region}b`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-1-public-subnet-us-east-1c",
    properties: ({ config }) => ({
      CidrBlock: "10.11.131.0/24",
      AvailabilityZone: `${config.region}c`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-2-intra-subnet-us-east-1a",
    properties: ({ config }) => ({
      CidrBlock: "10.12.200.0/24",
      AvailabilityZone: `${config.region}a`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-2-intra-subnet-us-east-1b",
    properties: ({ config }) => ({
      CidrBlock: "10.12.201.0/24",
      AvailabilityZone: `${config.region}b`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-2-intra-subnet-us-east-1c",
    properties: ({ config }) => ({
      CidrBlock: "10.12.202.0/24",
      AvailabilityZone: `${config.region}c`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-2-pivate-subnet-us-east-1a",
    properties: ({ config }) => ({
      CidrBlock: "10.12.1.0/24",
      AvailabilityZone: `${config.region}a`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-2-pivate-subnet-us-east-1b",
    properties: ({ config }) => ({
      CidrBlock: "10.12.2.0/24",
      AvailabilityZone: `${config.region}b`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-2-pivate-subnet-us-east-1c",
    properties: ({ config }) => ({
      CidrBlock: "10.12.3.0/24",
      AvailabilityZone: `${config.region}c`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-2-public-subnet-us-east-1a",
    properties: ({ config }) => ({
      CidrBlock: "10.12.129.0/24",
      AvailabilityZone: `${config.region}a`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-2-public-subnet-us-east-1b",
    properties: ({ config }) => ({
      CidrBlock: "10.12.130.0/24",
      AvailabilityZone: `${config.region}b`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "spoke-vpc-2-public-subnet-us-east-1c",
    properties: ({ config }) => ({
      CidrBlock: "10.12.131.0/24",
      AvailabilityZone: `${config.region}c`,
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "inspection-vpc-intra-subnet",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "inspection-vpc-pivate-subnet",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "inspection-vpc-public-subnet",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "spoke-vpc-1-intra-subnet",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "spoke-vpc-1-pivate-subnet",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "spoke-vpc-1-public-subnet",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "spoke-vpc-2-intra-subnet",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "spoke-vpc-2-pivate-subnet",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: "spoke-vpc-2-public-subnet",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "inspection-vpc-intra-subnet",
      subnet: "inspection-vpc-intra-subnet-us-east-1a",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "inspection-vpc-intra-subnet",
      subnet: "inspection-vpc-intra-subnet-us-east-1b",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "inspection-vpc-intra-subnet",
      subnet: "inspection-vpc-intra-subnet-us-east-1c",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "inspection-vpc-pivate-subnet",
      subnet: "inspection-vpc-pivate-subnet-us-east-1a",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "inspection-vpc-pivate-subnet",
      subnet: "inspection-vpc-pivate-subnet-us-east-1b",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "inspection-vpc-pivate-subnet",
      subnet: "inspection-vpc-pivate-subnet-us-east-1c",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "inspection-vpc-public-subnet",
      subnet: "inspection-vpc-public-subnet-us-east-1a",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "inspection-vpc-public-subnet",
      subnet: "inspection-vpc-public-subnet-us-east-1b",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "inspection-vpc-public-subnet",
      subnet: "inspection-vpc-public-subnet-us-east-1c",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-1-intra-subnet",
      subnet: "spoke-vpc-1-intra-subnet-us-east-1a",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-1-intra-subnet",
      subnet: "spoke-vpc-1-intra-subnet-us-east-1b",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-1-intra-subnet",
      subnet: "spoke-vpc-1-intra-subnet-us-east-1c",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-1-pivate-subnet",
      subnet: "spoke-vpc-1-pivate-subnet-us-east-1a",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-1-pivate-subnet",
      subnet: "spoke-vpc-1-pivate-subnet-us-east-1b",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-1-pivate-subnet",
      subnet: "spoke-vpc-1-pivate-subnet-us-east-1c",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-1-public-subnet",
      subnet: "spoke-vpc-1-public-subnet-us-east-1a",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-1-public-subnet",
      subnet: "spoke-vpc-1-public-subnet-us-east-1b",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-1-public-subnet",
      subnet: "spoke-vpc-1-public-subnet-us-east-1c",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-2-intra-subnet",
      subnet: "spoke-vpc-2-intra-subnet-us-east-1a",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-2-intra-subnet",
      subnet: "spoke-vpc-2-intra-subnet-us-east-1b",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-2-intra-subnet",
      subnet: "spoke-vpc-2-intra-subnet-us-east-1c",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-2-pivate-subnet",
      subnet: "spoke-vpc-2-pivate-subnet-us-east-1a",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-2-pivate-subnet",
      subnet: "spoke-vpc-2-pivate-subnet-us-east-1b",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-2-pivate-subnet",
      subnet: "spoke-vpc-2-pivate-subnet-us-east-1c",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-2-public-subnet",
      subnet: "spoke-vpc-2-public-subnet-us-east-1a",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-2-public-subnet",
      subnet: "spoke-vpc-2-public-subnet-us-east-1b",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: () => ({
      routeTable: "spoke-vpc-2-public-subnet",
      subnet: "spoke-vpc-2-public-subnet-us-east-1c",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "inspection-vpc-intra-subnet",
      vpcEndpoint: "com.amazonaws.vpce.us-east-1.vpce-svc-07846d33b1fa68174",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "inspection-vpc-pivate-subnet",
      natGateway: "inspection-vpc-us-east-1a",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "10.11.0.0/16",
    }),
    dependencies: () => ({
      routeTable: "inspection-vpc-pivate-subnet",
      transitGateway: "terraform-transit-gateway",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "10.12.0.0/16",
    }),
    dependencies: () => ({
      routeTable: "inspection-vpc-pivate-subnet",
      transitGateway: "terraform-transit-gateway",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "inspection-vpc-public-subnet",
      ig: "inspection-vpc",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "10.11.0.0/16",
    }),
    dependencies: () => ({
      routeTable: "inspection-vpc-public-subnet",
      vpcEndpoint: "com.amazonaws.vpce.us-east-1.vpce-svc-07846d33b1fa68174",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "10.12.0.0/16",
    }),
    dependencies: () => ({
      routeTable: "inspection-vpc-public-subnet",
      vpcEndpoint: "com.amazonaws.vpce.us-east-1.vpce-svc-07846d33b1fa68174",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "spoke-vpc-1-intra-subnet",
      transitGateway: "terraform-transit-gateway",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "spoke-vpc-1-pivate-subnet",
      transitGateway: "terraform-transit-gateway",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "spoke-vpc-1-public-subnet",
      transitGateway: "terraform-transit-gateway",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "spoke-vpc-2-intra-subnet",
      transitGateway: "terraform-transit-gateway",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "spoke-vpc-2-pivate-subnet",
      transitGateway: "terraform-transit-gateway",
    }),
  },
  {
    type: "Route",
    group: "EC2",
    properties: ({}) => ({
      DestinationCidrBlock: "0.0.0.0/0",
    }),
    dependencies: () => ({
      routeTable: "spoke-vpc-2-public-subnet",
      transitGateway: "terraform-transit-gateway",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "public_vpc_security_group",
      Description: "ingress access",
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "endoint_security_group",
      Description: "ingress access",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "public_instance_security_group",
      Description: "ingress access",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "public_vpc_security_group",
      Description: "ingress access",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "endoint_security_group",
      Description: "ingress access",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "public_instance_security_group",
      Description: "ingress access",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    properties: ({}) => ({
      GroupName: "public_vpc_security_group",
      Description: "ingress access",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        IpProtocol: "-1",
        IpRanges: [
          {
            CidrIp: "192.168.1.0/24",
            Description: "Open to the provider client IP address",
          },
        ],
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::inspection-vpc::public_vpc_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 22,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
            Description: "SSH access",
          },
        ],
        ToPort: 22,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::inspection-vpc::public_vpc_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 80,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
            Description: "HTTP access",
          },
        ],
        ToPort: 80,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::inspection-vpc::public_vpc_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        IpProtocol: "-1",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
          },
        ],
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-1::endoint_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        IpProtocol: "-1",
        IpRanges: [
          {
            CidrIp: "192.168.1.0/24",
          },
        ],
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-1::public_instance_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 22,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
          },
        ],
        ToPort: 22,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-1::public_instance_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 80,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
          },
        ],
        ToPort: 80,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-1::public_instance_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        IpProtocol: "-1",
        IpRanges: [
          {
            CidrIp: "192.168.1.0/24",
            Description: "Open to the provider client IP address",
          },
        ],
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-1::public_vpc_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 22,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
            Description: "SSH access",
          },
        ],
        ToPort: 22,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-1::public_vpc_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 80,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
            Description: "HTTP access",
          },
        ],
        ToPort: 80,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-1::public_vpc_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        IpProtocol: "-1",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
          },
        ],
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-2::endoint_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        IpProtocol: "-1",
        IpRanges: [
          {
            CidrIp: "192.168.1.0/24",
          },
        ],
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-2::public_instance_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 22,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
          },
        ],
        ToPort: 22,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-2::public_instance_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 80,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
          },
        ],
        ToPort: 80,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-2::public_instance_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        IpProtocol: "-1",
        IpRanges: [
          {
            CidrIp: "192.168.1.0/24",
            Description: "Open to the provider client IP address",
          },
        ],
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-2::public_vpc_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 22,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
            Description: "SSH access",
          },
        ],
        ToPort: 22,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-2::public_vpc_security_group",
    }),
  },
  {
    type: "SecurityGroupRuleIngress",
    group: "EC2",
    properties: ({}) => ({
      IpPermission: {
        FromPort: 80,
        IpProtocol: "tcp",
        IpRanges: [
          {
            CidrIp: "0.0.0.0/0",
            Description: "HTTP access",
          },
        ],
        ToPort: 80,
      },
    }),
    dependencies: () => ({
      securityGroup: "sg::spoke-vpc-2::public_vpc_security_group",
    }),
  },
  {
    type: "ElasticIpAddress",
    group: "EC2",
    name: "inspection-vpc-us-east-1a",
    properties: ({}) => ({
      Tags: [
        {
          Key: "Environment",
          Value: "development",
        },
        {
          Key: "Owner",
          Value: "user",
        },
        {
          Key: "Provisioner",
          Value: "terraform",
        },
      ],
    }),
  },
  {
    type: "Instance",
    group: "EC2",
    name: "spoke-vpc-1-instance-1",
    properties: ({ config }) => ({
      InstanceType: "t2.micro",
      ImageId: "ami-0ff419be951a83432",
      Placement: {
        AvailabilityZone: `${config.region}a`,
      },
    }),
    dependencies: () => ({
      subnet: "spoke-vpc-1-pivate-subnet-us-east-1a",
      keyPair: "informed-cattle",
      iamInstanceProfile: "terraform-ssm-ec2",
      securityGroups: ["sg::spoke-vpc-1::public_instance_security_group"],
    }),
  },
  {
    type: "Instance",
    group: "EC2",
    name: "spoke-vpc-2-instance-1",
    properties: ({ config }) => ({
      InstanceType: "t2.micro",
      ImageId: "ami-0ff419be951a83432",
      Placement: {
        AvailabilityZone: `${config.region}a`,
      },
    }),
    dependencies: () => ({
      subnet: "spoke-vpc-2-pivate-subnet-us-east-1a",
      keyPair: "informed-cattle",
      iamInstanceProfile: "terraform-ssm-ec2",
      securityGroups: ["sg::spoke-vpc-2::public_instance_security_group"],
    }),
  },
  {
    type: "VpcEndpoint",
    group: "EC2",
    name: "com.amazonaws.us-east-1.ec2",
    properties: ({}) => ({
      PolicyDocument: {
        Statement: [
          {
            Action: "*",
            Effect: "Allow",
            Principal: "*",
            Resource: `*`,
          },
        ],
      },
      PrivateDnsEnabled: true,
      RequesterManaged: false,
      VpcEndpointType: "Interface",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
      subnets: [
        "spoke-vpc-2-pivate-subnet-us-east-1a",
        "spoke-vpc-2-pivate-subnet-us-east-1b",
        "spoke-vpc-2-pivate-subnet-us-east-1c",
      ],
    }),
  },
  {
    type: "VpcEndpoint",
    group: "EC2",
    name: "com.amazonaws.us-east-1.ec2",
    properties: ({}) => ({
      PolicyDocument: {
        Statement: [
          {
            Action: "*",
            Effect: "Allow",
            Principal: "*",
            Resource: `*`,
          },
        ],
      },
      PrivateDnsEnabled: true,
      RequesterManaged: false,
      VpcEndpointType: "Interface",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
      subnets: [
        "spoke-vpc-1-pivate-subnet-us-east-1a",
        "spoke-vpc-1-pivate-subnet-us-east-1b",
        "spoke-vpc-1-pivate-subnet-us-east-1c",
      ],
    }),
  },
  {
    type: "VpcEndpoint",
    group: "EC2",
    name: "com.amazonaws.us-east-1.ec2messages",
    properties: ({}) => ({
      PolicyDocument: {
        Statement: [
          {
            Action: "*",
            Effect: "Allow",
            Principal: "*",
            Resource: `*`,
          },
        ],
      },
      PrivateDnsEnabled: true,
      RequesterManaged: false,
      VpcEndpointType: "Interface",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
      subnets: [
        "spoke-vpc-1-pivate-subnet-us-east-1a",
        "spoke-vpc-1-pivate-subnet-us-east-1b",
        "spoke-vpc-1-pivate-subnet-us-east-1c",
      ],
    }),
  },
  {
    type: "VpcEndpoint",
    group: "EC2",
    name: "com.amazonaws.us-east-1.ec2messages",
    properties: ({}) => ({
      PolicyDocument: {
        Statement: [
          {
            Action: "*",
            Effect: "Allow",
            Principal: "*",
            Resource: `*`,
          },
        ],
      },
      PrivateDnsEnabled: true,
      RequesterManaged: false,
      VpcEndpointType: "Interface",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
      subnets: [
        "spoke-vpc-2-pivate-subnet-us-east-1a",
        "spoke-vpc-2-pivate-subnet-us-east-1b",
        "spoke-vpc-2-pivate-subnet-us-east-1c",
      ],
    }),
  },
  {
    type: "VpcEndpoint",
    group: "EC2",
    name: "com.amazonaws.us-east-1.ssm",
    properties: ({}) => ({
      PolicyDocument: {
        Statement: [
          {
            Action: "*",
            Effect: "Allow",
            Principal: "*",
            Resource: `*`,
          },
        ],
      },
      PrivateDnsEnabled: true,
      RequesterManaged: false,
      VpcEndpointType: "Interface",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
      subnets: [
        "spoke-vpc-2-pivate-subnet-us-east-1a",
        "spoke-vpc-2-pivate-subnet-us-east-1b",
        "spoke-vpc-2-pivate-subnet-us-east-1c",
      ],
    }),
  },
  {
    type: "VpcEndpoint",
    group: "EC2",
    name: "com.amazonaws.us-east-1.ssm",
    properties: ({}) => ({
      PolicyDocument: {
        Statement: [
          {
            Action: "*",
            Effect: "Allow",
            Principal: "*",
            Resource: `*`,
          },
        ],
      },
      PrivateDnsEnabled: true,
      RequesterManaged: false,
      VpcEndpointType: "Interface",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
      subnets: [
        "spoke-vpc-1-pivate-subnet-us-east-1a",
        "spoke-vpc-1-pivate-subnet-us-east-1b",
        "spoke-vpc-1-pivate-subnet-us-east-1c",
      ],
    }),
  },
  {
    type: "VpcEndpoint",
    group: "EC2",
    name: "com.amazonaws.us-east-1.ssmmessages",
    properties: ({}) => ({
      PolicyDocument: {
        Statement: [
          {
            Action: "*",
            Effect: "Allow",
            Principal: "*",
            Resource: `*`,
          },
        ],
      },
      PrivateDnsEnabled: true,
      RequesterManaged: false,
      VpcEndpointType: "Interface",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-2",
      subnets: [
        "spoke-vpc-2-pivate-subnet-us-east-1a",
        "spoke-vpc-2-pivate-subnet-us-east-1b",
        "spoke-vpc-2-pivate-subnet-us-east-1c",
      ],
    }),
  },
  {
    type: "VpcEndpoint",
    group: "EC2",
    name: "com.amazonaws.us-east-1.ssmmessages",
    properties: ({}) => ({
      PolicyDocument: {
        Statement: [
          {
            Action: "*",
            Effect: "Allow",
            Principal: "*",
            Resource: `*`,
          },
        ],
      },
      PrivateDnsEnabled: true,
      RequesterManaged: false,
      VpcEndpointType: "Interface",
    }),
    dependencies: () => ({
      vpc: "spoke-vpc-1",
      subnets: [
        "spoke-vpc-1-pivate-subnet-us-east-1a",
        "spoke-vpc-1-pivate-subnet-us-east-1b",
        "spoke-vpc-1-pivate-subnet-us-east-1c",
      ],
    }),
  },
  {
    type: "VpcEndpoint",
    group: "EC2",
    name: "com.amazonaws.vpce.us-east-1.vpce-svc-07846d33b1fa68174",
    properties: ({}) => ({
      RequesterManaged: true,
      VpcEndpointType: "GatewayLoadBalancer",
      PolicyDocument: {
        Statement: undefined,
      },
      Tags: [
        {
          Key: "AWSNetworkFirewallManaged",
          Value: "true",
        },
        {
          Key: "Firewall",
          Value:
            "arn:aws:network-firewall:us-east-1:840541460064:firewall/NetworkFirewall",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
      subnets: ["inspection-vpc-pivate-subnet-us-east-1a"],
    }),
  },
  {
    type: "VpcEndpoint",
    group: "EC2",
    name: "com.amazonaws.vpce.us-east-1.vpce-svc-0b3436b5b8b84602a",
    properties: ({}) => ({
      RequesterManaged: true,
      VpcEndpointType: "GatewayLoadBalancer",
      PolicyDocument: {
        Statement: undefined,
      },
      Tags: [
        {
          Key: "AWSNetworkFirewallManaged",
          Value: "true",
        },
        {
          Key: "Firewall",
          Value:
            "arn:aws:network-firewall:us-east-1:840541460064:firewall/NetworkFirewall",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
      subnets: ["inspection-vpc-pivate-subnet-us-east-1c"],
    }),
  },
  {
    type: "VpcEndpoint",
    group: "EC2",
    name: "com.amazonaws.vpce.us-east-1.vpce-svc-0d4ce4b0cb48e2db9",
    properties: ({}) => ({
      RequesterManaged: true,
      VpcEndpointType: "GatewayLoadBalancer",
      PolicyDocument: {
        Statement: undefined,
      },
      Tags: [
        {
          Key: "AWSNetworkFirewallManaged",
          Value: "true",
        },
        {
          Key: "Firewall",
          Value:
            "arn:aws:network-firewall:us-east-1:840541460064:firewall/NetworkFirewall",
        },
      ],
    }),
    dependencies: () => ({
      vpc: "inspection-vpc",
      subnets: ["inspection-vpc-pivate-subnet-us-east-1b"],
    }),
  },
  {
    type: "TransitGateway",
    group: "EC2",
    name: "terraform-transit-gateway",
    properties: ({}) => ({
      Description: "Transit Gateway",
      Options: {
        AmazonSideAsn: 64512,
        AutoAcceptSharedAttachments: "disable",
        DefaultRouteTableAssociation: "disable",
        DefaultRouteTablePropagation: "disable",
        VpnEcmpSupport: "enable",
        DnsSupport: "enable",
        MulticastSupport: "disable",
      },
    }),
  },
  {
    type: "TransitGateway",
    group: "EC2",
    name: "transit-gateway",
    properties: ({}) => ({
      Description: "",
      Options: {
        AmazonSideAsn: 64512,
        AutoAcceptSharedAttachments: "disable",
        DefaultRouteTableAssociation: "enable",
        DefaultRouteTablePropagation: "enable",
        VpnEcmpSupport: "enable",
        DnsSupport: "enable",
        MulticastSupport: "disable",
      },
    }),
  },
  {
    type: "TransitGatewayRouteTable",
    group: "EC2",
    name: "Inspection_VPC_Route_Table",
    properties: ({}) => ({
      DefaultAssociationRouteTable: false,
      DefaultPropagationRouteTable: false,
    }),
    dependencies: () => ({
      transitGateway: "terraform-transit-gateway",
    }),
  },
  {
    type: "TransitGatewayRouteTable",
    group: "EC2",
    name: "Spoke_VPC_Route_Table",
    properties: ({}) => ({
      DefaultAssociationRouteTable: false,
      DefaultPropagationRouteTable: false,
    }),
    dependencies: () => ({
      transitGateway: "terraform-transit-gateway",
    }),
  },
  {
    type: "TransitGatewayVpcAttachment",
    group: "EC2",
    name: "inspection-vpc-attachment",
    properties: ({}) => ({
      Options: {
        DnsSupport: "enable",
        Ipv6Support: "disable",
        ApplianceModeSupport: "disable",
      },
    }),
    dependencies: () => ({
      transitGateway: "terraform-transit-gateway",
      subnets: [
        "inspection-vpc-intra-subnet-us-east-1a",
        "inspection-vpc-intra-subnet-us-east-1b",
        "inspection-vpc-intra-subnet-us-east-1c",
      ],
    }),
  },
  {
    type: "TransitGatewayVpcAttachment",
    group: "EC2",
    name: "spoke-vpc-1-attachment",
    properties: ({}) => ({
      Options: {
        DnsSupport: "enable",
        Ipv6Support: "disable",
        ApplianceModeSupport: "disable",
      },
    }),
    dependencies: () => ({
      transitGateway: "terraform-transit-gateway",
      subnets: [
        "spoke-vpc-1-intra-subnet-us-east-1a",
        "spoke-vpc-1-intra-subnet-us-east-1b",
        "spoke-vpc-1-intra-subnet-us-east-1c",
      ],
    }),
  },
  {
    type: "TransitGatewayVpcAttachment",
    group: "EC2",
    name: "spoke-vpc-2-attachment",
    properties: ({}) => ({
      Options: {
        DnsSupport: "enable",
        Ipv6Support: "disable",
        ApplianceModeSupport: "disable",
      },
    }),
    dependencies: () => ({
      transitGateway: "terraform-transit-gateway",
      subnets: [
        "spoke-vpc-2-intra-subnet-us-east-1a",
        "spoke-vpc-2-intra-subnet-us-east-1b",
        "spoke-vpc-2-intra-subnet-us-east-1c",
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    name: "test-ssm-ec2",
    properties: ({}) => ({
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "",
            Effect: "Allow",
            Principal: {
              Service: `ec2.amazonaws.com`,
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AmazonEC2RoleforSSM",
          PolicyArn: "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM",
        },
        {
          PolicyName: "AmazonSSMManagedInstanceCore",
          PolicyArn: "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
        },
      ],
      Tags: [
        {
          Key: "createdBy",
          Value: "taylaand",
        },
        {
          Key: "environment",
          Value: "test",
        },
        {
          Key: "Owner",
          Value: "Terraform",
        },
        {
          Key: "Project",
          Value: "terraform-hub-and-spoke",
        },
      ],
    }),
  },
  {
    type: "InstanceProfile",
    group: "IAM",
    name: "terraform-ssm-ec2",
    dependencies: () => ({
      roles: ["test-ssm-ec2"],
    }),
  },
  { type: "Key", group: "KMS", name: "kms-key-aws-hub-and-spoke-demo" },
];
