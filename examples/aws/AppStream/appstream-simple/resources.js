// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "AppBlock",
    group: "AppStream",
    properties: ({}) => ({
      Name: "myappblock",
      SetupScriptDetails: {
        ExecutablePath: "/home/ops/setup.sh",
        ScriptS3Location: {
          S3Bucket: "gc-appstream-bucket",
          S3Key: "hd.disk",
        },
        TimeoutInSeconds: 60,
      },
      SourceS3Location: {
        S3Bucket: "gc-appstream-bucket",
        S3Key: "hd.disk",
      },
    }),
    dependencies: ({}) => ({
      s3BucketScript: "gc-appstream-bucket",
      s3BucketSource: "gc-appstream-bucket",
    }),
  },
  {
    type: "Application",
    group: "AppStream",
    properties: ({}) => ({
      IconS3Location: {
        S3Bucket: "gc-appstream-bucket",
        S3Key: "hd.disk",
      },
      InstanceFamilies: ["GENERAL_PURPOSE"],
      LaunchPath: "/mount/setup.sh",
      Metadata: {
        WORKING_DIRECTORY: "/mount/",
      },
      Name: "myapp",
      Platforms: ["AMAZON_LINUX2"],
      WorkingDirectory: "/mount/",
    }),
    dependencies: ({}) => ({
      appBlock: "myappblock",
      s3BucketIcon: "gc-appstream-bucket",
    }),
  },
  {
    type: "DirectoryConfig",
    group: "AppStream",
    properties: ({}) => ({
      DirectoryName: "corp.grucloud.org",
      OrganizationalUnitDistinguishedNames: ["DC=grucloud"],
      ServiceAccountCredentials: {
        AccountName: "DOMAIN\\fred",
        AccountPassword: process.env.CORP_GRUCLOUD_ORG_ACCOUNT_PASSWORD,
      },
    }),
  },
  {
    type: "Fleet",
    group: "AppStream",
    properties: ({}) => ({
      FleetType: "ELASTIC",
      InstanceType: "stream.standard.small",
      Name: "myfleet",
      Platform: "AMAZON_LINUX2",
      StreamView: "APP",
    }),
    dependencies: ({}) => ({
      applications: ["myapp"],
    }),
  },
  {
    type: "User",
    group: "AppStream",
    properties: ({}) => ({
      Enabled: true,
      FirstName: "freddy",
      LastName: "gru",
      UserName: "fred@grucloud.com",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "AmazonAppStreamPCAAccess",
      Path: "/service-role/",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "prod.euc.ecm.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AmazonAppStreamPCAAccess",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AmazonAppStreamPCAAccess",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "AmazonAppStreamServiceAccess",
      Path: "/service-role/",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "appstream.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AmazonAppStreamServiceAccess",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AmazonAppStreamServiceAccess",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "ApplicationAutoScalingForAmazonAppStreamAccess",
      Path: "/service-role/",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "application-autoscaling.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "ApplicationAutoScalingForAmazonAppStreamAccess",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/ApplicationAutoScalingForAmazonAppStreamAccess",
        },
      ],
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({}) => ({
      Name: "gc-appstream-bucket",
      ServerSideEncryptionConfiguration: {
        Rules: [
          {
            ApplyServerSideEncryptionByDefault: {
              SSEAlgorithm: "AES256",
            },
            BucketKeyEnabled: true,
          },
        ],
      },
      Policy: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "AllowAppStream2.0ToRetrieveObjects",
            Effect: "Allow",
            Principal: {
              Service: "appstream.amazonaws.com",
            },
            Action: "s3:GetObject",
            Resource: "arn:aws:s3:::gc-appstream-bucket/*",
          },
        ],
      },
    }),
  },
];
