// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Rule",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      EventPattern: {
        detail: {
          SchemaName: [
            {
              prefix: "myapp.users",
            },
            {
              prefix: "myapp.orders",
            },
          ],
        },
        "detail-type": ["Schema Created", "Schema Version Created"],
        source: ["aws.schemas"],
      },
      Name: "TeamXSchemaNotifications-listen-to-schema-changes",
    }),
  },
  {
    type: "Target",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      Id: "Target0",
    }),
    dependencies: ({}) => ({
      rule: "TeamXSchemaNotifications-listen-to-schema-changes",
      logGroup:
        "/aws/events/schema-listeners/TeamXSchemaNotifications/schema-notification-logs",
    }),
  },
  {
    type: "Target",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      Id: "Target1",
    }),
    dependencies: ({}) => ({
      rule: "TeamXSchemaNotifications-listen-to-schema-changes",
      lambdaFunction:
        "NotifyConsumersOfSchemaCh-TeamXSchemaNotifications-T6ZnRQpt1cSj",
    }),
  },
  {
    type: "LogGroup",
    group: "CloudWatchLogs",
    properties: ({}) => ({
      logGroupName:
        "/aws/events/schema-listeners/TeamXSchemaNotifications/schema-notification-logs",
      retentionInDays: 731,
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName:
        "NotifyConsumersOfSchemaCh-AWS679f53fac002430cb0da5-1TX6M7P18CKCN",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: ["logs:DeleteResourcePolicy", "logs:PutResourcePolicy"],
                Resource: "*",
                Effect: "Allow",
              },
            ],
          },
          PolicyName:
            "EventsLogGroupPolicyNotifyConsumersOfSchemaChangesStackTeamXSchemaNotificationsRuleCE0DA2B0CustomResourcePolicy8FACEBA9",
        },
      ],
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          PolicyName: "AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName:
        "NotifyConsumersOfSchemaCh-TeamXSchemaNotifications-1368S1LFKMAQ2",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: "schemas:DescribeSchema",
                Resource: `arn:aws:schemas:${
                  config.region
                }:${config.accountId()}:schema/*`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName:
            "TeamXSchemaNotificationsPluginslackNotificationServiceRoleDefaultPolicy1BBACDA3",
        },
      ],
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          PolicyName: "AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        FunctionName:
          "NotifyConsumersOfSchemaCh-AWS679f53fac002430cb0da5-l01Fhmp6GKn0",
        Handler: "index.handler",
        Runtime: "nodejs14.x",
        Timeout: 120,
      },
    }),
    dependencies: ({}) => ({
      role: "NotifyConsumersOfSchemaCh-AWS679f53fac002430cb0da5-1TX6M7P18CKCN",
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        Environment: {
          Variables: {
            AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1",
            CHANNEL_ID: "1233",
            SLACK_API_KEY: "12334",
          },
        },
        FunctionName:
          "NotifyConsumersOfSchemaCh-TeamXSchemaNotifications-T6ZnRQpt1cSj",
        Handler: "index.handler",
        MemorySize: 1024,
        Runtime: "nodejs16.x",
        Timeout: 5,
      },
    }),
    dependencies: ({}) => ({
      role: "NotifyConsumersOfSchemaCh-TeamXSchemaNotifications-1368S1LFKMAQ2",
    }),
  },
  {
    type: "Permission",
    group: "Lambda",
    properties: ({ config }) => ({
      Permissions: [
        {
          Action: "lambda:InvokeFunction",
          FunctionName:
            "NotifyConsumersOfSchemaCh-TeamXSchemaNotifications-T6ZnRQpt1cSj",
          Principal: "events.amazonaws.com",
          SourceArn: `arn:aws:events:${
            config.region
          }:${config.accountId()}:rule/TeamXSchemaNotifications-listen-to-schema-changes`,
          StatementId:
            "NotifyConsumersOfSchemaChangesStack-TeamXSchemaNotificationsRuleAllowEventRuleNotifyCo-GTN2YIEIKCRK",
        },
      ],
    }),
    dependencies: ({}) => ({
      lambdaFunction:
        "NotifyConsumersOfSchemaCh-TeamXSchemaNotifications-T6ZnRQpt1cSj",
    }),
  },
];
