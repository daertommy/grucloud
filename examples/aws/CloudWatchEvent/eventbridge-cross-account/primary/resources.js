// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "EventBus",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      Name: "CrossRegionDestination",
    }),
  },
  {
    type: "Rule",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      Description: "EventRule",
      EventPattern: {
        source: ["webhook"],
      },
      Name: "eb-target-EventRule-JPJ6WDDQXABP",
    }),
    dependencies: ({}) => ({
      eventBus: "CrossRegionDestination",
    }),
  },
  {
    type: "Target",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      Id: "ConsumerTarget",
    }),
    dependencies: ({}) => ({
      rule: "eb-target-EventRule-JPJ6WDDQXABP",
      lambdaFunction: "eb-target-LoggerFunction-WnyFxcxxTwVE",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "eb-source-EventBridgeIAMrole-1L32MS9UDXLS9",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "events.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: ["events:PutEvents"],
                Resource: [
                  `arn:aws:events:${
                    config.region
                  }:${config.accountId()}:event-bus/CrossRegionDestination`,
                  `arn:aws:events:us-west-2:${config.accountId()}:event-bus/CrossRegionDestination`,
                  `arn:aws:events:eu-west-1:${config.accountId()}:event-bus/CrossRegionDestination`,
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "PutEventsDestinationBus",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "eb-source-WebhookFunctionRole-GQF2FM2Y79FE",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: "events:PutEvents",
                Resource: `arn:aws:events:us-west-2:${config.accountId()}:event-bus/CrossRegionSource`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "WebhookFunctionRolePolicy0",
        },
      ],
      AttachedPolicies: [
        {
          PolicyName: "AWSLambdaBasicExecutionRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "eb-target-LoggerFunctionRole-1TXSVRKXNJ10Q",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AWSLambdaBasicExecutionRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        FunctionName: "eb-target-LoggerFunction-WnyFxcxxTwVE",
        Handler: "app.handler",
        Runtime: "nodejs14.x",
      },
    }),
    dependencies: ({}) => ({
      role: "eb-target-LoggerFunctionRole-1TXSVRKXNJ10Q",
    }),
  },
  {
    type: "Permission",
    group: "Lambda",
    properties: ({ config }) => ({
      Permissions: [
        {
          Action: "lambda:InvokeFunction",
          FunctionName: "eb-target-LoggerFunction-WnyFxcxxTwVE",
          Principal: "events.amazonaws.com",
          StatementId:
            "eb-target-PermissionForEventsToInvokeLambda-16H5PPRVX9SQO",
          SourceArn: `arn:aws:events:${
            config.region
          }:${config.accountId()}:rule/CrossRegionDestination/eb-target-EventRule-JPJ6WDDQXABP`,
        },
      ],
    }),
    dependencies: ({}) => ({
      lambdaFunction: "eb-target-LoggerFunction-WnyFxcxxTwVE",
    }),
  },
];
