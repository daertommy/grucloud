// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "AnomalyMonitor",
    group: "CostExplorer",
    properties: ({}) => ({
      MonitorDimension: "SERVICE",
      MonitorName: "my-anomaly-monitor",
      MonitorType: "DIMENSIONAL",
      Tags: [
        {
          Key: "mykey",
          Value: "myvalue",
        },
      ],
    }),
  },
  {
    type: "AnomalySubscription",
    group: "CostExplorer",
    properties: ({}) => ({
      Frequency: "DAILY",
      Subscribers: [
        {
          Address: "fred@grucloud.com",
          Type: "EMAIL",
        },
      ],
      SubscriptionName: "team",
      Tags: [
        {
          Key: "mykey",
          Value: "myvalue",
        },
      ],
      ThresholdExpression: {
        Dimensions: {
          Key: "ANOMALY_TOTAL_IMPACT_ABSOLUTE",
          MatchOptions: ["GREATER_THAN_OR_EQUAL"],
          Values: ["60.0"],
        },
      },
    }),
    dependencies: ({}) => ({
      anomalyMonitors: ["my-anomaly-monitor"],
    }),
  },
  {
    type: "CostAllocationTag",
    group: "CostExplorer",
    properties: ({}) => ({
      TagKey: "Network",
    }),
  },
  {
    type: "CostCategory",
    group: "CostExplorer",
    properties: ({ getId }) => ({
      EffectiveStart: "2022-11-01T00:00:00Z",
      Name: "dev",
      Rules: [
        {
          Rule: {
            Dimensions: {
              Key: "LINKED_ACCOUNT",
              MatchOptions: ["EQUALS"],
              Values: [
                `${getId({
                  type: "Account",
                  group: "Organisations",
                  name: "test account",
                })}`,
              ],
            },
          },
          Type: "REGULAR",
          Value: "5",
        },
      ],
      RuleVersion: "CostCategoryExpression.v1",
    }),
    dependencies: ({}) => ({
      accounts: ["test account"],
    }),
  },
  {
    type: "Account",
    group: "Organisations",
    name: "test account",
    readOnly: true,
    properties: ({}) => ({
      Email: "test@grucloud.com",
      Name: "test account",
    }),
  },
];
