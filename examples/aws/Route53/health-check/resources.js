// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "MetricAlarm",
    group: "CloudWatch",
    properties: ({ config, getId }) => ({
      AlarmActions: [
        `arn:aws:sns:${config.region}:${config.accountId()}:healthcheck`,
      ],
      AlarmName:
        "healthcheck-grucloud-awsroute53-5dcc5fa2-2b2f-4735-9a2f-109415b1e977-Low-HealthCheckStatus",
      ComparisonOperator: "LessThanThreshold",
      DatapointsToAlarm: 1,
      Dimensions: [
        {
          Value: `${getId({
            type: "HealthCheck",
            group: "Route53",
            name: "heathcheck::HTTP::healthcheck.grucloud.org",
          })}`,
          Name: "HealthCheckId",
        },
      ],
      EvaluationPeriods: 1,
      MetricName: "HealthCheckStatus",
      Namespace: "AWS/Route53",
      Period: 60,
      Statistic: "Minimum",
      Threshold: 1,
    }),
    dependencies: ({}) => ({
      snsTopic: "healthcheck",
      route53HealhCheck: "heathcheck::HTTP::healthcheck.grucloud.org",
    }),
  },
  {
    type: "HealthCheck",
    group: "Route53",
    properties: ({}) => ({
      HealthCheckConfig: {
        EnableSNI: false,
        FailureThreshold: 3,
        FullyQualifiedDomainName: "healthcheck.grucloud.org",
        MeasureLatency: false,
        Port: 80,
        RequestInterval: 30,
        Type: "HTTP",
      },
    }),
  },
  { type: "Topic", group: "SNS", name: "healthcheck" },
];
