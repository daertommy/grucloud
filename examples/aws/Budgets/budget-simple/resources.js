// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Budget",
    group: "Budgets",
    properties: ({ getId }) => ({
      BudgetLimit: {
        Amount: "40.0",
        Unit: "USD",
      },
      BudgetName: "budget",
      BudgetType: "COST",
      CostTypes: {
        IncludeCredit: false,
        IncludeDiscount: true,
        IncludeOtherSubscription: true,
        IncludeRecurring: true,
        IncludeRefund: false,
        IncludeSubscription: true,
        IncludeSupport: true,
        IncludeTax: true,
        IncludeUpfront: true,
        UseAmortized: false,
        UseBlended: false,
      },
      TimeUnit: "MONTHLY",
      Notifications: [
        {
          ComparisonOperator: "GREATER_THAN",
          NotificationType: "ACTUAL",
          Threshold: 70,
          Subscribers: [
            {
              Address: `${getId({
                type: "Topic",
                group: "SNS",
                name: "topic-budget",
              })}`,
              SubscriptionType: "SNS",
            },
            {
              Address: "fred@mail.com",
              SubscriptionType: "EMAIL",
            },
          ],
        },
      ],
    }),
    dependencies: ({}) => ({
      snsTopics: ["topic-budget"],
    }),
  },
  {
    type: "Topic",
    group: "SNS",
    name: "topic-budget",
    properties: ({ config, getId }) => ({
      Attributes: {
        Policy: {
          Version: "2008-10-17",
          Id: "__default_policy_ID",
          Statement: [
            {
              Sid: "AWSBudgets-notification-1",
              Effect: "Allow",
              Principal: {
                Service: `budgets.amazonaws.com`,
              },
              Action: "SNS:Publish",
              Resource: `arn:aws:sns:${
                config.region
              }:${config.accountId()}:topic-budget`,
            },
            {
              Sid: "__default_statement_ID",
              Effect: "Allow",
              Principal: {
                AWS: "*",
              },
              Action: [
                "SNS:GetTopicAttributes",
                "SNS:SetTopicAttributes",
                "SNS:AddPermission",
                "SNS:RemovePermission",
                "SNS:DeleteTopic",
                "SNS:Subscribe",
                "SNS:ListSubscriptionsByTopic",
                "SNS:Publish",
              ],
              Resource: `arn:aws:sns:${
                config.region
              }:${config.accountId()}:topic-budget`,
              Condition: {
                StringEquals: {
                  "AWS:SourceOwner": `${config.accountId()}`,
                },
              },
            },
          ],
        },
        LambdaSuccessFeedbackSampleRate: "0",
        FirehoseSuccessFeedbackSampleRate: "0",
        SQSSuccessFeedbackSampleRate: "0",
        HTTPSuccessFeedbackSampleRate: "0",
        ApplicationSuccessFeedbackSampleRate: "0",
      },
    }),
  },
];
