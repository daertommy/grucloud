// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "sam-app-OnFailureFunctionRole-1F4V5FIK907PV",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          PolicyName: "AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "sam-app-OnSuccessFunctionRole-1F2XESIKF6EV9",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          PolicyName: "AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "sam-app-ProducerFunctionRole-PNQ5UE1I36B9",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: "lambda:InvokeFunction",
                Effect: "Allow",
                Resource: `arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:sam-app-OnFailureFunction-IFj57VVcPFjr`,
              },
            ],
          },
          PolicyName: "ProducerFunctionEventInvokeConfigOnFailureLambdaPolicy",
        },
        {
          PolicyDocument: {
            Statement: [
              {
                Action: "lambda:InvokeFunction",
                Effect: "Allow",
                Resource: `arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:sam-app-OnSuccessFunction-MZzIdxTUTmet`,
              },
            ],
          },
          PolicyName: "ProducerFunctionEventInvokeConfigOnSuccessLambdaPolicy",
        },
      ],
      AttachedPolicies: [
        {
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          PolicyName: "AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        FunctionName: "sam-app-OnFailureFunction-IFj57VVcPFjr",
        Handler: "app.handler",
        Runtime: "nodejs18.x",
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-OnFailureFunctionRole-1F4V5FIK907PV",
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        FunctionName: "sam-app-OnSuccessFunction-MZzIdxTUTmet",
        Handler: "app.handler",
        Runtime: "nodejs18.x",
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-OnSuccessFunctionRole-1F2XESIKF6EV9",
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({ config }) => ({
      Configuration: {
        FunctionName: "sam-app-ProducerFunction-rCp6FupDywg8",
        Handler: "app.handler",
        Runtime: "nodejs18.x",
      },
      EventInvokeConfig: {
        DestinationConfig: {
          OnFailure: {
            Destination: `arn:aws:lambda:${
              config.region
            }:${config.accountId()}:function:sam-app-OnFailureFunction-IFj57VVcPFjr`,
          },
          OnSuccess: {
            Destination: `arn:aws:lambda:${
              config.region
            }:${config.accountId()}:function:sam-app-OnSuccessFunction-MZzIdxTUTmet`,
          },
        },
      },
    }),
    dependencies: ({}) => ({
      lambdaFunctionOnSuccess: "sam-app-OnSuccessFunction-MZzIdxTUTmet",
      lambdaFunctionOnFailure: "sam-app-OnFailureFunction-IFj57VVcPFjr",
      role: "sam-app-ProducerFunctionRole-PNQ5UE1I36B9",
    }),
  },
];
