// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "sam-app-AthenaQueryFunctionRole-ZMFKGE8TVMT8",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: [
                  "athena:ListWorkGroups",
                  "athena:GetExecutionEngine",
                  "athena:GetExecutionEngines",
                  "athena:GetNamespace",
                  "athena:GetCatalogs",
                  "athena:GetNamespaces",
                  "athena:GetTables",
                  "athena:GetTable",
                ],
                Resource: "*",
                Effect: "Allow",
              },
              {
                Action: [
                  "athena:StartQueryExecution",
                  "athena:GetQueryResults",
                  "athena:DeleteNamedQuery",
                  "athena:GetNamedQuery",
                  "athena:ListQueryExecutions",
                  "athena:StopQueryExecution",
                  "athena:GetQueryResultsStream",
                  "athena:ListNamedQueries",
                  "athena:CreateNamedQuery",
                  "athena:GetQueryExecution",
                  "athena:BatchGetNamedQuery",
                  "athena:BatchGetQueryExecution",
                  "athena:GetWorkGroup",
                ],
                Resource: `arn:aws:athena:${
                  config.region
                }:${config.accountId()}:workgroup/primary`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "AthenaQueryFunctionRolePolicy0",
        },
        {
          PolicyDocument: {
            Statement: [
              {
                Action: [
                  "s3:GetObject",
                  "s3:ListBucket",
                  "s3:GetBucketLocation",
                  "s3:GetObjectVersion",
                  "s3:PutObject",
                  "s3:PutObjectAcl",
                  "s3:GetLifecycleConfiguration",
                  "s3:PutLifecycleConfiguration",
                  "s3:DeleteObject",
                ],
                Resource: [
                  "arn:aws:s3:::gc-lambda-athena-sam",
                  "arn:aws:s3:::gc-lambda-athena-sam/*",
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "AthenaQueryFunctionRolePolicy1",
        },
        {
          PolicyDocument: {
            Statement: [
              {
                Action: ["glue:GetTable"],
                Resource: [
                  `arn:aws:glue:${config.region}:${config.accountId()}:catalog`,
                  `arn:aws:glue:${
                    config.region
                  }:${config.accountId()}:database/*`,
                  `arn:aws:glue:${config.region}:${config.accountId()}:table/*`,
                ],
                Effect: "Allow",
                Sid: "GlueGetTablePolicy",
              },
            ],
          },
          PolicyName: "AthenaQueryFunctionRolePolicy2",
        },
      ],
      AttachedPolicies: [
        {
          PolicyName: "AWSLambdaBasicExecutionRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        FunctionName: "sam-app-AthenaQueryFunction-2up4aj6n2l4M",
        Handler: "athenaquerymaker.lambda_handler",
        Runtime: "python3.9",
        Timeout: 10,
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-AthenaQueryFunctionRole-ZMFKGE8TVMT8",
    }),
  },
];
