// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "DBCluster",
    group: "DocDB",
    properties: ({}) => ({
      DBClusterIdentifier: "docdb",
      DBClusterParameterGroupName: "default.docdb5.0",
      DBSubnetGroupName: "my-subnet-group",
      DeletionProtection: false,
      EngineVersion: "5.0.0",
      MasterUsername: "docdbuser",
      PreferredBackupWindow: "00:00-00:30",
      PreferredMaintenanceWindow: "mon:06:35-mon:07:05",
      StorageEncrypted: true,
      MasterUserPassword: process.env.DOCDB_MASTER_USER_PASSWORD,
    }),
    dependencies: ({}) => ({
      dbSubnetGroup: "my-subnet-group",
    }),
  },
  {
    type: "DBInstance",
    group: "DocDB",
    properties: ({ config }) => ({
      AutoMinorVersionUpgrade: true,
      AvailabilityZone: `${config.region}a`,
      CopyTagsToSnapshot: false,
      DBInstanceClass: "db.t4g.medium",
      DBInstanceIdentifier: "docdb",
      EngineVersion: "5.0.0",
      PreferredBackupWindow: "00:00-00:30",
      PreferredMaintenanceWindow: "thu:08:07-thu:08:37",
      PromotionTier: 1,
      StorageEncrypted: true,
    }),
    dependencies: ({}) => ({
      dbCluster: "docdb",
    }),
  },
  {
    type: "DBInstance",
    group: "DocDB",
    properties: ({ config }) => ({
      AutoMinorVersionUpgrade: true,
      AvailabilityZone: `${config.region}b`,
      CopyTagsToSnapshot: false,
      DBInstanceClass: "db.t4g.medium",
      DBInstanceIdentifier: "docdb2",
      Engine: "docdb",
      EngineVersion: "5.0.0",
      PreferredBackupWindow: "00:00-00:30",
      PreferredMaintenanceWindow: "sun:04:46-sun:05:16",
      PromotionTier: 1,
      StorageEncrypted: true,
    }),
    dependencies: ({}) => ({
      dbCluster: "docdb",
    }),
  },
  {
    type: "DBSubnetGroup",
    group: "DocDB",
    properties: ({}) => ({
      DBSubnetGroupDescription: "my subnet group",
      DBSubnetGroupName: "my-subnet-group",
    }),
    dependencies: ({ config }) => ({
      subnets: [
        `my-vpc::my-subnet-private1-${config.region}a`,
        `my-vpc::my-subnet-private2-${config.region}b`,
      ],
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: ({ config }) => `my-rtb-private1-${config.region}a`,
    dependencies: ({}) => ({
      vpc: "my-vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: ({ config }) => `my-rtb-private2-${config.region}b`,
    dependencies: ({}) => ({
      vpc: "my-vpc",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({ config }) => ({
      routeTable: `my-vpc::my-rtb-private1-${config.region}a`,
      subnet: `my-vpc::my-subnet-private1-${config.region}a`,
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({ config }) => ({
      routeTable: `my-vpc::my-rtb-private2-${config.region}b`,
      subnet: `my-vpc::my-subnet-private2-${config.region}b`,
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: ({ config }) => `my-subnet-private1-${config.region}a`,
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}a`,
      NewBits: 4,
      NetworkNumber: 8,
    }),
    dependencies: ({}) => ({
      vpc: "my-vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: ({ config }) => `my-subnet-private2-${config.region}b`,
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}b`,
      NewBits: 4,
      NetworkNumber: 9,
    }),
    dependencies: ({}) => ({
      vpc: "my-vpc",
    }),
  },
  {
    type: "Vpc",
    group: "EC2",
    name: "my-vpc",
    properties: ({}) => ({
      CidrBlock: "10.0.0.0/16",
      DnsHostnames: true,
    }),
  },
];
