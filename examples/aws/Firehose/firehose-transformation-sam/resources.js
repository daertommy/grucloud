// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "DeliveryStream",
    group: "Firehose",
    properties: ({ getId }) => ({
      DeliveryStreamName: "sam-app-DeliveryStream-MWI7LZiHIxjA",
      DeliveryStreamType: "DirectPut",
      ExtendedS3DestinationConfiguration: {
        BucketARN: "arn:aws:s3:::gc-firehose-transformation-sam",
        BufferingHints: {
          IntervalInSeconds: 60,
          SizeInMBs: 1,
        },
        CloudWatchLoggingOptions: {
          Enabled: true,
          LogGroupName: "/aws/kinesisfirehose/ibcd",
          LogStreamName: "S3Delivery",
        },
        CompressionFormat: "UNCOMPRESSED",
        EncryptionConfiguration: {
          NoEncryptionConfig: "NoEncryption",
        },
        Prefix: "",
        ProcessingConfiguration: {
          Enabled: true,
          Processors: [
            {
              Parameters: [
                {
                  ParameterName: "LambdaArn",
                  ParameterValue: `${getId({
                    type: "Function",
                    group: "Lambda",
                    name: "TransformationFunction",
                  })}`,
                },
                {
                  ParameterName: "NumberOfRetries",
                  ParameterValue: "3",
                },
                {
                  ParameterName: "RoleArn",
                  ParameterValue: `${getId({
                    type: "Role",
                    group: "IAM",
                    name: "sam-app-DeliveryStreamRole-D5I7Y6QOSJ7W",
                  })}`,
                },
                {
                  ParameterName: "BufferSizeInMBs",
                  ParameterValue: "1",
                },
                {
                  ParameterName: "BufferIntervalInSeconds",
                  ParameterValue: "60",
                },
              ],
              Type: "Lambda",
            },
          ],
        },
        RoleARN: `${getId({
          type: "Role",
          group: "IAM",
          name: "sam-app-DeliveryStreamRole-D5I7Y6QOSJ7W",
        })}`,
        S3BackupMode: "Disabled",
      },
    }),
    dependencies: ({}) => ({
      s3BucketDestination: "gc-firehose-transformation-sam",
      lambdaFunctions: ["TransformationFunction"],
      roles: ["sam-app-DeliveryStreamRole-D5I7Y6QOSJ7W"],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "sam-app-DeliveryStreamRole-D5I7Y6QOSJ7W",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "",
            Effect: "Allow",
            Principal: {
              Service: "firehose.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: [
                  "s3:AbortMultipartUpload",
                  "s3:GetBucketLocation",
                  "s3:GetObject",
                  "s3:ListBucket",
                  "s3:ListBucketMultipartUploads",
                  "s3:PutObject",
                ],
                Resource: [
                  "arn:aws:s3:::gc-firehose-transformation-sam",
                  "arn:aws:s3:::gc-firehose-transformation-sam/*",
                ],
                Effect: "Allow",
              },
              {
                Action: [
                  "lambda:InvokeFunction",
                  "lambda:GetFunctionConfiguration",
                ],
                Resource: [
                  `arn:aws:lambda:${
                    config.region
                  }:${config.accountId()}:function:TransformationFunction`,
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "firehose_delivery_policy",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "sam-app-LambdaRole-EMMY2SYBP5ZK",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "",
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: [
                  "firehose:DescribeDeliveryStream",
                  "firehose:ListDeliveryStreams",
                  "firehose:ListTagsForDeliveryStream",
                  "firehose:PutRecord",
                  "firehose:PutRecordBatch",
                ],
                Resource: [
                  `arn:aws:firehose:${
                    config.region
                  }:${config.accountId()}:deliverystream/sam-app-DeliveryStream-MWI7LZiHIxjA`,
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "Lambda_Firehose_access_policy",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "sam-app-TransformationLambdaFunctionRole-U7V289O17IF6",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AWSLambdaBasicExecutionRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        },
      ],
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        FunctionName: "TransformationFunction",
        Runtime: "nodejs14.x",
        Timeout: 90,
        Handler: "index.handler",
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-TransformationLambdaFunctionRole-U7V289O17IF6",
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({}) => ({
      Name: "gc-firehose-transformation-sam",
    }),
  },
];
