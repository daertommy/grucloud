// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Role",
    group: "IAM",
    properties: ({ getId }) => ({
      RoleName: "sam-app-HelloWorldFunctionRole-1QJYRUOH88IU7",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: ["secretsmanager:GetSecretValue"],
                Resource: `${getId({
                  type: "Secret",
                  group: "SecretsManager",
                  name: "MySecret",
                  path: "live.ARN",
                })}`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "HelloWorldFunctionRolePolicy0",
        },
      ],
      AttachedPolicies: [
        {
          PolicyName: "AWSLambdaBasicExecutionRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        },
      ],
    }),
    dependencies: ({}) => ({
      secretsManagerSecrets: ["MySecret"],
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        Environment: {
          Variables: {
            PARAMETERS_SECRETS_EXTENSION_HTTP_PORT: "2773",
            SECRET_NAME: "MySecret",
          },
        },
        FunctionName: "sam-app-HelloWorldFunction-xplIxoZGZhdc",
        Handler: "app.lambda_handler",
        Runtime: "python3.9",
      },
    }),
    dependencies: ({}) => ({
      role: "sam-app-HelloWorldFunctionRole-1QJYRUOH88IU7",
    }),
  },
  {
    type: "Secret",
    group: "SecretsManager",
    properties: ({ generatePassword }) => ({
      Description: "Secret with dynamically generated secret password.",
      Name: "MySecret",
      SecretString: {
        SecretString: generatePassword({ length: 30 }),
      },
    }),
  },
];
