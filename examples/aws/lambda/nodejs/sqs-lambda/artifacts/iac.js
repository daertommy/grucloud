// Generated by aws2gc
const { get } = require("rubico");
const { AwsProvider } = require("@grucloud/provider-aws");

const createResources = ({ provider }) => {
  provider.IAM.makePolicy({
    name: get("config.IAM.Policy.lambdaPolicy.name"),
    properties: get("config.IAM.Policy.lambdaPolicy.properties"),
  });

  provider.IAM.makeRole({
    name: get("config.IAM.Role.lambdaRole.name"),
    properties: get("config.IAM.Role.lambdaRole.properties"),
    dependencies: ({ resources }) => ({
      policies: [resources.IAM.Policy.lambdaPolicy],
    }),
  });

  provider.SQS.makeQueue({
    name: get("config.SQS.Queue.myQueueLambda.name"),
    properties: get("config.SQS.Queue.myQueueLambda.properties"),
  });

  provider.Lambda.makeFunction({
    name: get("config.Lambda.Function.lambdaHelloWorld.name"),
    properties: get("config.Lambda.Function.lambdaHelloWorld.properties"),
    dependencies: ({ resources }) => ({
      role: resources.IAM.Role.lambdaRole,
    }),
  });

  provider.Lambda.makeEventSourceMapping({
    name: get(
      "config.Lambda.EventSourceMapping.mappingLambdaHelloWorldMyQueueLambda.name"
    ),
    properties: get(
      "config.Lambda.EventSourceMapping.mappingLambdaHelloWorldMyQueueLambda.properties"
    ),
    dependencies: ({ resources }) => ({
      lambdaFunction: resources.Lambda.Function.lambdaHelloWorld,
      sqsQueue: resources.SQS.Queue.myQueueLambda,
    }),
  });
};

exports.createResources = createResources;

exports.createStack = async ({ createProvider }) => {
  const provider = createProvider(AwsProvider, { config: require("./config") });
  createResources({
    provider,
  });

  return {
    provider,
  };
};
