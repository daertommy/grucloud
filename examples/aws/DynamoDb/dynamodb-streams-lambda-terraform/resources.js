// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Table",
    group: "DynamoDB",
    properties: ({}) => ({
      TableName: "UsersIds",
      AttributeDefinitions: [
        {
          AttributeName: "UserId",
          AttributeType: "S",
        },
      ],
      KeySchema: [
        {
          AttributeName: "UserId",
          KeyType: "HASH",
        },
      ],
      ProvisionedThroughput: {
        ReadCapacityUnits: 5,
        WriteCapacityUnits: 5,
      },
      StreamSpecification: {
        StreamEnabled: true,
        StreamViewType: "NEW_AND_OLD_IMAGES",
      },
      Tags: [
        {
          Key: "Environment",
          Value: "dev",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config }) => ({
      RoleName: "iam_for_lambda",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "",
            Effect: "Allow",
            Principal: {
              Service: "lambda.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: ["logs:*"],
                Effect: "Allow",
                Resource: ["arn:aws:logs:*:*:*"],
                Sid: "AllowLambdaFunctionToCreateLogs",
              },
              {
                Action: ["lambda:InvokeFunction"],
                Effect: "Allow",
                Resource: [
                  `arn:aws:dynamodb:${
                    config.region
                  }:${config.accountId()}:table/UsersIds/stream/*`,
                ],
                Sid: "AllowLambdaFunctionInvocation",
              },
              {
                Action: [
                  "dynamodb:GetRecords",
                  "dynamodb:GetShardIterator",
                  "dynamodb:DescribeStream",
                  "dynamodb:ListStreams",
                ],
                Effect: "Allow",
                Resource: `arn:aws:dynamodb:${
                  config.region
                }:${config.accountId()}:table/UsersIds/stream/*`,
                Sid: "APIAccessForDynamoDBStreams",
              },
            ],
            Version: "2012-10-17",
          },
          PolicyName: "lambda-dynamodb-policy",
        },
      ],
    }),
  },
  {
    type: "EventSourceMapping",
    group: "Lambda",
    properties: ({}) => ({
      BatchSize: 100,
      BisectBatchOnFunctionError: false,
      MaximumRecordAgeInSeconds: -1,
      MaximumRetryAttempts: -1,
      ParallelizationFactor: 1,
      StartingPosition: "LATEST",
      TumblingWindowInSeconds: 0,
    }),
    dependencies: ({}) => ({
      lambdaFunction: "process-usersids-records",
      dynamoDbTable: "UsersIds",
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    properties: ({}) => ({
      Configuration: {
        FunctionName: "process-usersids-records",
        Handler: "index.handler",
        Runtime: "nodejs14.x",
      },
    }),
    dependencies: ({}) => ({
      role: "iam_for_lambda",
    }),
  },
];
