// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  { type: "Vpc", group: "EC2", name: "vpc-default", isDefault: true },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-default-a",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-default-d",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: "subnet-default-f",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    name: "sg::vpc-default::default",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc-default",
    }),
  },
  {
    type: "Configuration",
    group: "MSK",
    properties: ({}) => ({
      ServerProperties: `auto.create.topics.enable=false
default.replication.factor=3
min.insync.replicas=2
num.io.threads=8
num.network.threads=5
num.partitions=1
num.replica.fetchers=2
replica.lag.time.max.ms=30000
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
socket.send.buffer.bytes=102400
unclean.leader.election.enable=true
zookeeper.session.timeout.ms=18000
`,
      Name: "my-configuration",
    }),
  },
  {
    type: "ClusterV2",
    group: "MSK",
    properties: ({ getId }) => ({
      ClusterName: "demo-cluster-1",
      ClusterType: "SERVERLESS",
      Serverless: {
        ClientAuthentication: {
          Sasl: {
            Iam: {
              Enabled: true,
            },
          },
        },
        VpcConfigs: [
          {
            SecurityGroupIds: [
              `${getId({
                type: "SecurityGroup",
                group: "EC2",
                name: "sg::vpc-default::default",
              })}`,
            ],
            SubnetIds: [
              `${getId({
                type: "Subnet",
                group: "EC2",
                name: "vpc-default::subnet-default-a",
              })}`,
              `${getId({
                type: "Subnet",
                group: "EC2",
                name: "vpc-default::subnet-default-d",
              })}`,
              `${getId({
                type: "Subnet",
                group: "EC2",
                name: "vpc-default::subnet-default-f",
              })}`,
            ],
          },
        ],
      },
    }),
    dependencies: ({}) => ({
      subnets: [
        "vpc-default::subnet-default-a",
        "vpc-default::subnet-default-d",
        "vpc-default::subnet-default-f",
      ],
      securityGroups: ["sg::vpc-default::default"],
    }),
  },
];
