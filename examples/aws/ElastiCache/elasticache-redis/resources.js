// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "LogGroup",
    group: "CloudWatchLogs",
    properties: ({}) => ({
      logGroupName: "elasticache/redis",
    }),
  },
  {
    type: "Vpc",
    group: "EC2",
    name: "vpc",
    properties: ({}) => ({
      CidrBlock: "10.0.0.0/16",
      DnsHostnames: true,
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: ({ config }) => `subnet-private1-${config.region}a`,
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}a`,
      NewBits: 4,
      NetworkNumber: 8,
    }),
    dependencies: ({}) => ({
      vpc: "vpc",
    }),
  },
  {
    type: "Subnet",
    group: "EC2",
    name: ({ config }) => `subnet-private2-${config.region}b`,
    properties: ({ config }) => ({
      AvailabilityZone: `${config.region}b`,
      NewBits: 4,
      NetworkNumber: 9,
    }),
    dependencies: ({}) => ({
      vpc: "vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: ({ config }) => `rtb-private1-${config.region}a`,
    dependencies: ({}) => ({
      vpc: "vpc",
    }),
  },
  {
    type: "RouteTable",
    group: "EC2",
    name: ({ config }) => `rtb-private2-${config.region}b`,
    dependencies: ({}) => ({
      vpc: "vpc",
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({ config }) => ({
      routeTable: `vpc::rtb-private1-${config.region}a`,
      subnet: `vpc::subnet-private1-${config.region}a`,
    }),
  },
  {
    type: "RouteTableAssociation",
    group: "EC2",
    dependencies: ({ config }) => ({
      routeTable: `vpc::rtb-private2-${config.region}b`,
      subnet: `vpc::subnet-private2-${config.region}b`,
    }),
  },
  {
    type: "SecurityGroup",
    group: "EC2",
    name: "sg::vpc::default",
    isDefault: true,
    dependencies: ({}) => ({
      vpc: "vpc",
    }),
  },
  {
    type: "CacheCluster",
    group: "ElastiCache",
    properties: ({}) => ({
      CacheClusterId: "my-cluster-001",
      CacheNodeType: "cache.t2.micro",
      Engine: "redis",
      EngineVersion: "6.2.6",
      PreferredAvailabilityZone: "us-east-1b",
      PreferredMaintenanceWindow: "mon:06:00-mon:07:00",
      CacheSubnetGroupName: "my-subnet-group",
      SnapshotWindow: "10:00-11:00",
      Tags: [
        {
          Key: "mykey",
          Value: "myvalue",
        },
      ],
    }),
    dependencies: ({}) => ({
      parameterGroup: "my-parameter-group",
      securityGroups: ["sg::vpc::default"],
    }),
  },
  {
    type: "CacheCluster",
    group: "ElastiCache",
    properties: ({}) => ({
      CacheClusterId: "my-cluster-002",
      CacheNodeType: "cache.t2.micro",
      Engine: "redis",
      EngineVersion: "6.2.6",
      PreferredAvailabilityZone: "us-east-1a",
      PreferredMaintenanceWindow: "mon:06:00-mon:07:00",
      CacheSubnetGroupName: "my-subnet-group",
      SnapshotRetentionLimit: 1,
      SnapshotWindow: "10:00-11:00",
      Tags: [
        {
          Key: "mykey",
          Value: "myvalue",
        },
      ],
    }),
    dependencies: ({}) => ({
      parameterGroup: "my-parameter-group",
      securityGroups: ["sg::vpc::default"],
    }),
  },
  {
    type: "CacheCluster",
    group: "ElastiCache",
    properties: ({}) => ({
      CacheClusterId: "my-cluster-003",
      CacheNodeType: "cache.t2.micro",
      Engine: "redis",
      EngineVersion: "6.2.6",
      PreferredAvailabilityZone: "us-east-1a",
      PreferredMaintenanceWindow: "mon:06:00-mon:07:00",
      CacheSubnetGroupName: "my-subnet-group",
      SnapshotWindow: "10:00-11:00",
      Tags: [
        {
          Key: "mykey",
          Value: "myvalue",
        },
      ],
    }),
    dependencies: ({}) => ({
      parameterGroup: "my-parameter-group",
      securityGroups: ["sg::vpc::default"],
    }),
  },
  {
    type: "CacheParameterGroup",
    group: "ElastiCache",
    properties: ({}) => ({
      CacheParameterGroupName: "my-parameter-group",
      CacheParameterGroupFamily: "redis6.x",
      Description: "My Parameter Group",
      Tags: [
        {
          Key: "mykey",
          Value: "myvalue",
        },
      ],
    }),
  },
  {
    type: "CacheSubnetGroup",
    group: "ElastiCache",
    properties: ({}) => ({
      CacheSubnetGroupName: "my-subnet-group",
      CacheSubnetGroupDescription: " ",
      Tags: [
        {
          Key: "mykey",
          Value: "myvalue",
        },
      ],
    }),
    dependencies: ({ config }) => ({
      subnets: [
        `vpc::subnet-private1-${config.region}a`,
        `vpc::subnet-private2-${config.region}b`,
      ],
    }),
  },
  {
    type: "User",
    group: "ElastiCache",
    properties: ({}) => ({
      UserId: "myuser",
      UserName: "myuser",
      Engine: "redis",
      AccessString: "on ~* +@all",
      Authentication: {
        Type: "password",
        Passwords: JSON.parse(process.env.MYUSER_ELASTICACHE_USER_PASSWORDS),
      },
    }),
  },
  {
    type: "UserGroup",
    group: "ElastiCache",
    properties: ({}) => ({
      UserGroupId: "mygroup",
      Engine: "redis",
      UserIds: ["default", "myuser"],
    }),
    dependencies: ({}) => ({
      users: ["myuser"],
    }),
  },
];
