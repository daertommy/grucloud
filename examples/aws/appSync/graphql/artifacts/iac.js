// Generated by aws2gc
const { get } = require("rubico");
const { AwsProvider } = require("@grucloud/provider-aws");

const createResources = ({ provider }) => {
  provider.iam.makePolicy({
    name: get("config.iam.Policy.appsyncDsDdbKq4ygeMyModelTypeDemoTable.name"),
    properties: get(
      "config.iam.Policy.appsyncDsDdbKq4ygeMyModelTypeDemoTable.properties"
    ),
  });

  provider.iam.makeRole({
    name: get("config.iam.Role.appsyncDsDdbKq4ygeMyModelTypeDemoTable.name"),
    properties: get(
      "config.iam.Role.appsyncDsDdbKq4ygeMyModelTypeDemoTable.properties"
    ),
    dependencies: ({ resources }) => ({
      policies: [resources.iam.Policy.appsyncDsDdbKq4ygeMyModelTypeDemoTable],
    }),
  });

  provider.appSync.makeGraphqlApi({
    name: get("config.appSync.GraphqlApi.myAppSyncApp.name"),
    properties: get("config.appSync.GraphqlApi.myAppSyncApp.properties"),
  });

  provider.appSync.makeApiKey({
    name: get("config.appSync.ApiKey.da2Wbuvlxl5cfapbifytstbzthsxy.name"),
    dependencies: ({ resources }) => ({
      graphqlApi: resources.appSync.GraphqlApi.myAppSyncApp,
    }),
  });

  provider.appSync.makeDataSource({
    name: get("config.appSync.DataSource.datasource.name"),
    properties: get("config.appSync.DataSource.datasource.properties"),
    dependencies: ({ resources }) => ({
      graphqlApi: resources.appSync.GraphqlApi.myAppSyncApp,
    }),
  });
};

exports.createResources = createResources;

exports.createStack = async ({ createProvider }) => {
  const provider = createProvider(AwsProvider, { config: require("./config") });
  createResources({
    provider,
  });

  return {
    provider,
  };
};
