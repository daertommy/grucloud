// Generated by aws2gc
const { get } = require("rubico");
const { AwsProvider } = require("@grucloud/provider-aws");

const createResources = ({ provider }) => {
  provider.IAM.makeRole({
    name: get(
      "config.IAM.Role.appsyncCdkAppStackApilambdaDatasourceServiceRole2Spl5Onobew5M.name"
    ),
    properties: get(
      "config.IAM.Role.appsyncCdkAppStackApilambdaDatasourceServiceRole2Spl5Onobew5M.properties"
    ),
  });

  provider.IAM.makeRole({
    name: get(
      "config.IAM.Role.appsyncCdkAppStackAppSyncNotesHandlerServiceRole3Ut2Snth19J61.name"
    ),
    properties: get(
      "config.IAM.Role.appsyncCdkAppStackAppSyncNotesHandlerServiceRole3Ut2Snth19J61.properties"
    ),
    dependencies: ({ resources }) => ({
      policies: [
        "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
      ],
    }),
  });

  provider.DynamoDB.makeTable({
    name: get(
      "config.DynamoDB.Table.appsyncCdkAppStackCdkNotesTable254A7Fd1_1Ju7Cih9Eiq5K.name"
    ),
    properties: get(
      "config.DynamoDB.Table.appsyncCdkAppStackCdkNotesTable254A7Fd1_1Ju7Cih9Eiq5K.properties"
    ),
  });

  provider.DynamoDB.makeTable({
    name: get(
      "config.DynamoDB.Table.appsyncCdkAppStackCdkNotesTable254A7Fd1C0My46Ehk3Ac.name"
    ),
    properties: get(
      "config.DynamoDB.Table.appsyncCdkAppStackCdkNotesTable254A7Fd1C0My46Ehk3Ac.properties"
    ),
  });

  provider.AppSync.makeGraphqlApi({
    name: get("config.AppSync.GraphqlApi.cdkNotesAppsyncApi.name"),
    properties: get("config.AppSync.GraphqlApi.cdkNotesAppsyncApi.properties"),
  });

  provider.AppSync.makeApiKey({
    name: get("config.AppSync.ApiKey.da2Ouijmdxdircnfjbxgbxwtboyfy.name"),
    dependencies: ({ resources }) => ({
      graphqlApi: resources.AppSync.GraphqlApi.cdkNotesAppsyncApi,
    }),
  });

  provider.AppSync.makeResolver({
    name: get("config.AppSync.Resolver.mutationCreateNote.name"),
    properties: get("config.AppSync.Resolver.mutationCreateNote.properties"),
    dependencies: ({ resources }) => ({
      graphqlApi: resources.AppSync.GraphqlApi.cdkNotesAppsyncApi,
      dataSource: resources.AppSync.DataSource.lambdaDatasource,
    }),
  });

  provider.AppSync.makeResolver({
    name: get("config.AppSync.Resolver.mutationDeleteNote.name"),
    properties: get("config.AppSync.Resolver.mutationDeleteNote.properties"),
    dependencies: ({ resources }) => ({
      graphqlApi: resources.AppSync.GraphqlApi.cdkNotesAppsyncApi,
      dataSource: resources.AppSync.DataSource.lambdaDatasource,
    }),
  });

  provider.AppSync.makeResolver({
    name: get("config.AppSync.Resolver.mutationUpdateNote.name"),
    properties: get("config.AppSync.Resolver.mutationUpdateNote.properties"),
    dependencies: ({ resources }) => ({
      graphqlApi: resources.AppSync.GraphqlApi.cdkNotesAppsyncApi,
      dataSource: resources.AppSync.DataSource.lambdaDatasource,
    }),
  });

  provider.AppSync.makeResolver({
    name: get("config.AppSync.Resolver.queryGetNoteById.name"),
    properties: get("config.AppSync.Resolver.queryGetNoteById.properties"),
    dependencies: ({ resources }) => ({
      graphqlApi: resources.AppSync.GraphqlApi.cdkNotesAppsyncApi,
      dataSource: resources.AppSync.DataSource.lambdaDatasource,
    }),
  });

  provider.AppSync.makeResolver({
    name: get("config.AppSync.Resolver.queryListNotes.name"),
    properties: get("config.AppSync.Resolver.queryListNotes.properties"),
    dependencies: ({ resources }) => ({
      graphqlApi: resources.AppSync.GraphqlApi.cdkNotesAppsyncApi,
      dataSource: resources.AppSync.DataSource.lambdaDatasource,
    }),
  });

  provider.AppSync.makeDataSource({
    name: get("config.AppSync.DataSource.lambdaDatasource.name"),
    properties: get("config.AppSync.DataSource.lambdaDatasource.properties"),
    dependencies: ({ resources }) => ({
      serviceRole:
        resources.IAM.Role
          .appsyncCdkAppStackApilambdaDatasourceServiceRole2Spl5Onobew5M,
      graphqlApi: resources.AppSync.GraphqlApi.cdkNotesAppsyncApi,
      lambdaFunction:
        resources.Lambda.Function
          .appsyncCdkAppStackAppSyncNotesHandler4B870A76AaX1nitpx2Y4,
    }),
  });

  provider.Lambda.makeFunction({
    name: get(
      "config.Lambda.Function.appsyncCdkAppStackAppSyncNotesHandler4B870A76AaX1nitpx2Y4.name"
    ),
    properties: get(
      "config.Lambda.Function.appsyncCdkAppStackAppSyncNotesHandler4B870A76AaX1nitpx2Y4.properties"
    ),
    dependencies: ({ resources }) => ({
      role: resources.IAM.Role
        .appsyncCdkAppStackAppSyncNotesHandlerServiceRole3Ut2Snth19J61,
    }),
  });
};

exports.createResources = createResources;

exports.createStack = async ({ createProvider }) => {
  const provider = createProvider(AwsProvider, { config: require("./config") });
  createResources({
    provider,
  });

  return {
    provider,
  };
};
