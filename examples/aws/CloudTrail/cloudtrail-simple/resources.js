// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Trail",
    group: "CloudTrail",
    properties: ({ config }) => ({
      HomeRegion: config.region,
      IncludeGlobalServiceEvents: true,
      IsMultiRegionTrail: true,
      IsOrganizationTrail: false,
      Name: "CloudTrailForS3ImagePushEvents",
    }),
    dependencies: ({}) => ({
      bucket: "grucloud-s3-event-bridge-logs",
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    name: "grucloud-s3-event-bridge-logs",
    properties: ({ config }) => ({
      Policy: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "AllowHTTPSOnlyAccessToS3",
            Effect: "Deny",
            Principal: "*",
            Action: "s3:*",
            Resource: [
              "arn:aws:s3:::grucloud-s3-event-bridge-logs/*",
              "arn:aws:s3:::grucloud-s3-event-bridge-logs",
            ],
            Condition: {
              Bool: {
                "aws:SecureTransport": "false",
              },
            },
          },
          {
            Sid: "AllowCheckingForPermissionsOnCloudTrailBucket",
            Effect: "Allow",
            Principal: {
              Service: "cloudtrail.amazonaws.com",
            },
            Action: "s3:GetBucketAcl",
            Resource: "arn:aws:s3:::grucloud-s3-event-bridge-logs",
          },
          {
            Sid: "AllowCloudTrailToWriteToBucket",
            Effect: "Allow",
            Principal: {
              Service: "cloudtrail.amazonaws.com",
            },
            Action: "s3:PutObject",
            Resource: `arn:aws:s3:::grucloud-s3-event-bridge-logs/AWSLogs/${config.accountId()}/*`,
            Condition: {
              StringEquals: {
                "s3:x-amz-acl": "bucket-owner-full-control",
              },
            },
          },
        ],
      },
    }),
  },
];
