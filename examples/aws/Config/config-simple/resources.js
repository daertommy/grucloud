// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "ConfigurationRecorder",
    group: "Config",
    properties: ({ config }) => ({
      name: "default",
      recordingGroup: {
        allSupported: true,
        includeGlobalResourceTypes: false,
        resourceTypes: [],
      },
      roleARN: `arn:aws:iam::${config.accountId()}:role/aws-service-role/config.amazonaws.com/AWSServiceRoleForConfig`,
    }),
  },
  {
    type: "ConfigurationRecorderStatus",
    group: "Config",
    properties: ({}) => ({
      recording: true,
    }),
    dependencies: ({}) => ({
      deliveryChannel: "default",
    }),
  },
  {
    type: "ConformancePack",
    group: "Config",
    properties: ({}) => ({
      ConformancePackName: "pack-api-gateway",
      TemplateBody:
        '---\nDescription: "DO NOT MODIFY THIS STACK! This stack is managed by Config Conformance\\\n  \\ Packs."\nParameters:\n  ApiGwEndpointTypeCheckParamEndpointConfigurationTypes:\n    Type: "String"\n    Default: "REGIONAL, PRIVATE, EDGE"\nMappings: {}\nConditions:\n  apiGwEndpointTypeCheckParamEndpointConfigurationTypes:\n    Fn::Not:\n    - Fn::Equals:\n      - ""\n      - Ref: "ApiGwEndpointTypeCheckParamEndpointConfigurationTypes"\nRules: {}\nResources:\n  ApiGwAssociatedWithWaf:\n    Type: "AWS::Config::ConfigRule"\n    Properties:\n      ConfigRuleName: "api-gw-associated-with-waf-conformance-pack-xcb7t6kmi"\n      Scope:\n        ComplianceResourceTypes:\n        - "AWS::ApiGateway::Stage"\n      Source:\n        Owner: "AWS"\n        SourceIdentifier: "API_GW_ASSOCIATED_WITH_WAF"\n  ApiGwCacheEnabledAndEncrypted:\n    Type: "AWS::Config::ConfigRule"\n    Properties:\n      ConfigRuleName: "api-gw-cache-enabled-and-encrypted-conformance-pack-xcb7t6kmi"\n      Scope:\n        ComplianceResourceTypes:\n        - "AWS::ApiGateway::Stage"\n      Source:\n        Owner: "AWS"\n        SourceIdentifier: "API_GW_CACHE_ENABLED_AND_ENCRYPTED"\n  ApiGwEndpointTypeCheck:\n    Type: "AWS::Config::ConfigRule"\n    Properties:\n      ConfigRuleName: "api-gw-endpoint-type-check-conformance-pack-xcb7t6kmi"\n      InputParameters:\n        endpointConfigurationTypes:\n          Fn::If:\n          - "apiGwEndpointTypeCheckParamEndpointConfigurationTypes"\n          - Ref: "ApiGwEndpointTypeCheckParamEndpointConfigurationTypes"\n          - Ref: "AWS::NoValue"\n      Scope:\n        ComplianceResourceTypes:\n        - "AWS::ApiGateway::RestApi"\n      Source:\n        Owner: "AWS"\n        SourceIdentifier: "API_GW_ENDPOINT_TYPE_CHECK"\n  ApiGwExecutionLoggingEnabled:\n    Type: "AWS::Config::ConfigRule"\n    Properties:\n      ConfigRuleName: "api-gw-execution-logging-enabled-conformance-pack-xcb7t6kmi"\n      Scope:\n        ComplianceResourceTypes:\n        - "AWS::ApiGateway::Stage"\n        - "AWS::ApiGatewayV2::Stage"\n      Source:\n        Owner: "AWS"\n        SourceIdentifier: "API_GW_EXECUTION_LOGGING_ENABLED"\n  ApiGwSslEnabled:\n    Type: "AWS::Config::ConfigRule"\n    Properties:\n      ConfigRuleName: "api-gw-ssl-enabled-conformance-pack-xcb7t6kmi"\n      Scope:\n        ComplianceResourceTypes:\n        - "AWS::ApiGateway::Stage"\n      Source:\n        Owner: "AWS"\n        SourceIdentifier: "API_GW_SSL_ENABLED"\n  ApiGwXrayEnabled:\n    Type: "AWS::Config::ConfigRule"\n    Properties:\n      ConfigRuleName: "api-gw-xray-enabled-conformance-pack-xcb7t6kmi"\n      Scope:\n        ComplianceResourceTypes:\n        - "AWS::ApiGateway::Stage"\n      Source:\n        Owner: "AWS"\n        SourceIdentifier: "API_GW_XRAY_ENABLED"\n  CloudTrailCloudWatchLogsEnabled:\n    Type: "AWS::Config::ConfigRule"\n    Properties:\n      ConfigRuleName: "cloud-trail-cloud-watch-logs-enabled-conformance-pack-xcb7t6kmi"\n      Source:\n        Owner: "AWS"\n        SourceIdentifier: "CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED"\n  CloudTrailEnabled:\n    Type: "AWS::Config::ConfigRule"\n    Properties:\n      ConfigRuleName: "cloudtrail-enabled-conformance-pack-xcb7t6kmi"\n      Source:\n        Owner: "AWS"\n        SourceIdentifier: "CLOUD_TRAIL_ENABLED"\nOutputs: {}\nAWSTemplateFormatVersion: "2010-09-09"\nHooks: {}\n',
      ConformancePackInputParameters: [],
    }),
  },
  {
    type: "DeliveryChannel",
    group: "Config",
    properties: ({}) => ({
      name: "default",
    }),
    dependencies: ({ config }) => ({
      configurationRecorder: "default",
      s3Bucket: `config-bucket-${config.accountId()}`,
    }),
  },
  {
    type: "Bucket",
    group: "S3",
    properties: ({ config }) => ({
      Name: `config-bucket-${config.accountId()}`,
      Policy: {
        Version: "2012-10-17",
        Statement: [
          {
            Sid: "AWSConfigBucketPermissionsCheck",
            Effect: "Allow",
            Principal: {
              Service: "config.amazonaws.com",
            },
            Action: "s3:GetBucketAcl",
            Resource: `arn:aws:s3:::config-bucket-${config.accountId()}`,
            Condition: {
              StringEquals: {
                "AWS:SourceAccount": `${config.accountId()}`,
              },
            },
          },
          {
            Sid: "AWSConfigBucketExistenceCheck",
            Effect: "Allow",
            Principal: {
              Service: "config.amazonaws.com",
            },
            Action: "s3:ListBucket",
            Resource: `arn:aws:s3:::config-bucket-${config.accountId()}`,
            Condition: {
              StringEquals: {
                "AWS:SourceAccount": `${config.accountId()}`,
              },
            },
          },
          {
            Sid: "AWSConfigBucketDelivery",
            Effect: "Allow",
            Principal: {
              Service: "config.amazonaws.com",
            },
            Action: "s3:PutObject",
            Resource: `arn:aws:s3:::config-bucket-${config.accountId()}/AWSLogs/${config.accountId()}/Config/*`,
            Condition: {
              StringEquals: {
                "AWS:SourceAccount": `${config.accountId()}`,
                "s3:x-amz-acl": "bucket-owner-full-control",
              },
            },
          },
        ],
      },
    }),
  },
];
