// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Account",
    group: "APIGateway",
    name: "default",
    dependencies: () => ({
      cloudwatchRole:
        "ApiDynamoStack-ApiDynamoRestApiCloudWatchRole8BD3C-1BD4XJCCR36O9",
    }),
  },
  {
    type: "Deployment",
    group: "APIGateway",
    name: "befavm",
    properties: ({}) => ({
      description: "Automatically created by the RestApi construct",
    }),
  },
  {
    type: "Integration",
    group: "APIGateway",
    properties: ({}) => ({
      httpMethod: "GET",
      requestParameters: {
        "integration.request.path.id": "method.request.path.id",
      },
      requestTemplates: {
        "application/json": {
          TableName: "ApiDynamoStack-ApiDynamoTable66095DD3-1URGY6310RHOE",
          KeyConditionExpression: "pk = :v1",
          ExpressionAttributeValues: {
            ":v1": {
              S: "$input.params('id')",
            },
          },
        },
      },
      type: "AWS",
      uri: "arn:aws:apigateway:us-east-1:dynamodb:action/Query",
      path: "/{id}",
    }),
    dependencies: () => ({
      method: "ApiDynamoRestApi::/{id}::GET",
      role: "ApiDynamoStack-IntegrationRole35EAE287-IA8X8W4J0FGV",
      table: "ApiDynamoStack-ApiDynamoTable66095DD3-1URGY6310RHOE",
    }),
  },
  {
    type: "Integration",
    group: "APIGateway",
    properties: ({}) => ({
      httpMethod: "POST",
      requestTemplates: {
        "application/json": {
          TableName: "ApiDynamoStack-ApiDynamoTable66095DD3-1URGY6310RHOE",
          Item: {
            pk: {
              S: "$input.path('$.pk')",
            },
            data: {
              S: "$input.path('$.data')",
            },
          },
        },
      },
      type: "AWS",
      uri: "arn:aws:apigateway:us-east-1:dynamodb:action/PutItem",
      path: "/{id}",
    }),
    dependencies: () => ({
      method: "ApiDynamoRestApi::/{id}::POST",
      role: "ApiDynamoStack-IntegrationRole35EAE287-IA8X8W4J0FGV",
      table: "ApiDynamoStack-ApiDynamoTable66095DD3-1URGY6310RHOE",
    }),
  },
  {
    type: "Resource",
    group: "APIGateway",
    readOnly: true,
    dependencies: () => ({
      restApi: "ApiDynamoRestApi",
    }),
  },
  {
    type: "Resource",
    group: "APIGateway",
    properties: ({}) => ({
      pathPart: "{id}",
    }),
    dependencies: () => ({
      restApi: "ApiDynamoRestApi",
      parent: "ApiDynamoRestApi::/",
    }),
  },
  {
    type: "Method",
    group: "APIGateway",
    properties: ({}) => ({
      httpMethod: "GET",
      requestParameters: {
        "method.request.path.id": true,
      },
      path: "/{id}",
    }),
    dependencies: () => ({
      resource: "ApiDynamoRestApi::/{id}",
    }),
  },
  {
    type: "Method",
    group: "APIGateway",
    properties: ({}) => ({
      httpMethod: "POST",
      path: "/{id}",
    }),
    dependencies: () => ({
      resource: "ApiDynamoRestApi::/{id}",
    }),
  },
  {
    type: "RestApi",
    group: "APIGateway",
    name: "ApiDynamoRestApi",
    properties: ({}) => ({
      apiKeySource: "HEADER",
      endpointConfiguration: {
        types: ["EDGE"],
      },
      schemaFile: "ApiDynamoRestApi.oas30.json",
      deployment: {
        stageName: "prod",
      },
    }),
  },
  {
    type: "Stage",
    group: "APIGateway",
    name: "prod",
    dependencies: () => ({
      restApi: "ApiDynamoRestApi",
    }),
  },
  {
    type: "Table",
    group: "DynamoDB",
    name: "ApiDynamoStack-ApiDynamoTable66095DD3-1URGY6310RHOE",
    properties: ({}) => ({
      AttributeDefinitions: [
        {
          AttributeName: "pk",
          AttributeType: "S",
        },
      ],
      KeySchema: [
        {
          AttributeName: "pk",
          KeyType: "HASH",
        },
      ],
      BillingMode: "PAY_PER_REQUEST",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    name: "ApiDynamoStack-ApiDynamoRestApiCloudWatchRole8BD3C-1BD4XJCCR36O9",
    properties: ({}) => ({
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "apigateway.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      AttachedPolicies: [
        {
          PolicyName: "AmazonAPIGatewayPushToCloudWatchLogs",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    name: "ApiDynamoStack-IntegrationRole35EAE287-IA8X8W4J0FGV",
    properties: ({ config }) => ({
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "apigateway.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: [
                  "dynamodb:BatchGetItem",
                  "dynamodb:GetRecords",
                  "dynamodb:GetShardIterator",
                  "dynamodb:Query",
                  "dynamodb:GetItem",
                  "dynamodb:Scan",
                  "dynamodb:ConditionCheckItem",
                  "dynamodb:BatchWriteItem",
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:DeleteItem",
                ],
                Resource: [
                  `arn:aws:dynamodb:${
                    config.region
                  }:${config.accountId()}:table/ApiDynamoStack-ApiDynamoTable66095DD3-1URGY6310RHOE`,
                ],
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "IntegrationRoleDefaultPolicy99182A66",
        },
      ],
    }),
    dependencies: () => ({
      table: "ApiDynamoStack-ApiDynamoTable66095DD3-1URGY6310RHOE",
    }),
  },
];
