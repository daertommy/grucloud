// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "IdentityPool",
    group: "Cognito",
    properties: ({}) => ({
      AllowUnauthenticatedIdentities: true,
      IdentityPoolName: "myapp",
    }),
  },
  {
    type: "IdentityPoolRolesAttachments",
    group: "Cognito",
    properties: ({ getId }) => ({
      Roles: {
        unauthenticated: `${getId({
          type: "Role",
          group: "IAM",
          name: "sam-app-CWRumClientRole-YL7W19PRXX5U",
        })}`,
      },
    }),
    dependencies: ({}) => ({
      identityPool: "myapp",
      iamRoles: ["sam-app-CWRumClientRole-YL7W19PRXX5U"],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ config, getId }) => ({
      RoleName: "sam-app-CWRumClientRole-YL7W19PRXX5U",
      Description: "Unauthenticated Role for AWS RUM Clients",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Federated: "cognito-identity.amazonaws.com",
            },
            Action: "sts:AssumeRoleWithWebIdentity",
            Condition: {
              StringEquals: {
                "cognito-identity.amazonaws.com:aud": `${getId({
                  type: "IdentityPool",
                  group: "Cognito",
                  name: "myapp",
                })}`,
              },
              "ForAnyValue:StringLike": {
                "cognito-identity.amazonaws.com:amr": "unauthenticated",
              },
            },
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: ["rum:PutRumEvents"],
                Resource: `arn:aws:rum:${
                  config.region
                }:${config.accountId()}:appmonitor/myapp`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "AWSRumClientPut",
        },
      ],
    }),
    dependencies: ({}) => ({
      cognitoIdentityPools: ["myapp"],
    }),
  },
  {
    type: "AppMonitor",
    group: "RUM",
    properties: ({}) => ({
      AppMonitorConfiguration: {
        AllowCookies: false,
        SessionSampleRate: 0.1,
      },
      Domain: "grucloud.org",
      Name: "myapp",
    }),
    dependencies: ({}) => ({
      identityPool: "myapp",
      iamRoleGuest: "sam-app-CWRumClientRole-YL7W19PRXX5U",
    }),
  },
];
