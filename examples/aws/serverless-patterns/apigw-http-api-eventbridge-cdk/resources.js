// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Api",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      Name: "MyHttpApi",
    }),
  },
  {
    type: "Stage",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      AutoDeploy: true,
      StageName: "$default",
    }),
    dependencies: ({}) => ({
      api: "MyHttpApi",
    }),
  },
  {
    type: "Integration",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      ConnectionType: "INTERNET",
      IntegrationSubtype: "EventBridge-PutEvents",
      IntegrationType: "AWS_PROXY",
      PayloadFormatVersion: "1.0",
      RequestParameters: {
        DetailType: "MyDetailType",
        Source: "WebApp",
        Detail: "$request.body",
      },
      RequestTemplates: {},
      TimeoutInMillis: 10000,
    }),
    dependencies: ({}) => ({
      api: "MyHttpApi",
      eventBus: "MyEventBus",
      role: "ApiEventbridgeStack-EventBridgeIntegrationRoleB322-1LXDAK3DKUOQS",
    }),
  },
  {
    type: "Route",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      RouteKey: "POST /",
    }),
    dependencies: ({}) => ({
      api: "MyHttpApi",
      integration: "integration::MyHttpApi::MyEventBus",
    }),
  },
  {
    type: "Deployment",
    group: "ApiGatewayV2",
    properties: ({}) => ({
      Description:
        "Automatic deployment triggered by changes to the Api configuration",
      AutoDeployed: true,
    }),
    dependencies: ({}) => ({
      api: "MyHttpApi",
      stage: "MyHttpApi::$default",
    }),
  },
  {
    type: "EventBus",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      Name: "MyEventBus",
    }),
  },
  {
    type: "Rule",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      Description: "Log all events",
      EventPattern: {
        region: ["ap-southeast-2"],
      },
      Name: "ApiEventbridgeStack-EventLoggerRuleC0DD3E40-G6CDILDRSIPL",
      State: "ENABLED",
    }),
    dependencies: ({}) => ({
      eventBus: "MyEventBus",
    }),
  },
  {
    type: "Target",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      Id: "Target0",
    }),
    dependencies: ({}) => ({
      rule: "ApiEventbridgeStack-EventLoggerRuleC0DD3E40-G6CDILDRSIPL",
      logGroup: "/aws/events/MyEventBus",
    }),
  },
  {
    type: "LogGroup",
    group: "CloudWatchLogs",
    properties: ({}) => ({
      logGroupName: "/aws/events/MyEventBus",
      retentionInDays: 731,
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({ getId }) => ({
      RoleName:
        "ApiEventbridgeStack-EventBridgeIntegrationRoleB322-1LXDAK3DKUOQS",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "apigateway.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: "events:PutEvents",
                Resource: `${getId({
                  type: "EventBus",
                  group: "CloudWatchEvents",
                  name: "MyEventBus",
                })}`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "EventBridgeIntegrationRoleDefaultPolicy16371A00",
        },
      ],
    }),
    dependencies: ({}) => ({
      eventBus: "MyEventBus",
    }),
  },
];
