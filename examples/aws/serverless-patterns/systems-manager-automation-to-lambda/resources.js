// Generated by 'gc gencode'
const assert = require("assert");
const { pipe, tap } = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Table",
    group: "DynamoDB",
    properties: ({}) => ({
      TableName: "ServerlessLandTestTable",
      AttributeDefinitions: [
        {
          AttributeName: "Album",
          AttributeType: "S",
        },
        {
          AttributeName: "Artist",
          AttributeType: "S",
        },
      ],
      KeySchema: [
        {
          AttributeName: "Album",
          KeyType: "HASH",
        },
        {
          AttributeName: "Artist",
          KeyType: "RANGE",
        },
      ],
      ProvisionedThroughput: {
        ReadCapacityUnits: 5,
        WriteCapacityUnits: 5,
      },
      Tags: [
        {
          Key: "namespace",
          Value: "development",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    name: "ServerlessLandAuotomationExecutionRole",
    properties: ({ config }) => ({
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: `ssm.amazonaws.com`,
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: "lambda:InvokeFunction",
                Resource: `arn:aws:lambda:${
                  config.region
                }:${config.accountId()}:function:sam-app-LambdaFunction-XmYCD2eSMech`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "automation-invoke-lambda-execution",
        },
      ],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    name: "sam-app-LambdaFunctionRole-1OIERGCXDG4GR",
    properties: ({ getId }) => ({
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: `lambda.amazonaws.com`,
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Statement: [
              {
                Action: ["DynamoDB:UpdateTable", "DynamoDB:PutItem"],
                Resource: `${getId({
                  type: "Table",
                  group: "DynamoDB",
                  name: "ServerlessLandTestTable",
                })}`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "LambdaFunctionRolePolicy0",
        },
      ],
      AttachedPolicies: [
        {
          PolicyName: "AWSLambdaBasicExecutionRole",
          PolicyArn:
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        },
      ],
      Tags: [
        {
          Key: "lambda:createdBy",
          Value: "SAM",
        },
      ],
    }),
    dependencies: () => ({
      table: "ServerlessLandTestTable",
    }),
  },
  {
    type: "Function",
    group: "Lambda",
    name: "sam-app-LambdaFunction-XmYCD2eSMech",
    properties: ({}) => ({
      Configuration: {
        Handler: "app.handler",
        Runtime: "python3.7",
        Timeout: 60,
      },
      Tags: {
        "lambda:createdBy": "SAM",
      },
    }),
    dependencies: () => ({
      role: "sam-app-LambdaFunctionRole-1OIERGCXDG4GR",
    }),
  },
  {
    type: "Document",
    group: "SSM",
    properties: pipe([
      ({ config }) => ({
        DocumentFormat: "JSON",
        DocumentType: "Automation",
        Name: `${config.accountId()}_serverlessland_automation`,
        PlatformTypes: ["Windows", "Linux", "MacOS"],
        SchemaVersion: "0.3",
      }),
    ]),
  },
];
