// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Rule",
    group: "CloudWatchEvents",
    properties: ({ config }) => ({
      EventPattern: {
        account: [`${config.accountId()}`],
        source: ["demo.sfn"],
      },
      Name: "terraform-20220331194511828000000002",
      State: "ENABLED",
    }),
  },
  {
    type: "Target",
    group: "CloudWatchEvents",
    properties: ({}) => ({
      Id: "terraform-20220331194525125100000008",
    }),
    dependencies: ({ config }) => ({
      rule: "terraform-20220331194511828000000002",
      role: "terraform-20220331194511828200000005",
      sfnStateMachine: `eventbridge-state-machine-demo-${config.accountId()}`,
    }),
  },
  {
    type: "LogGroup",
    group: "CloudWatchLogs",
    properties: ({}) => ({
      logGroupName:
        "/aws/vendedlogs/states/StateMachine-terraform-20220331194511828000000001",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "terraform-20220331194511828100000004",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "states.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
    }),
    dependencies: ({}) => ({
      policies: ["terraform-20220331194511828000000003"],
    }),
  },
  {
    type: "Role",
    group: "IAM",
    properties: ({}) => ({
      RoleName: "terraform-20220331194511828200000005",
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: "events.amazonaws.com",
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
    }),
    dependencies: ({}) => ({
      policies: ["terraform-20220331194525123300000007"],
    }),
  },
  {
    type: "Policy",
    group: "IAM",
    properties: ({}) => ({
      PolicyName: "terraform-20220331194511828000000003",
      PolicyDocument: {
        Statement: [
          {
            Action: [
              "logs:CreateLogDelivery",
              "logs:GetLogDelivery",
              "logs:UpdateLogDelivery",
              "logs:DeleteLogDelivery",
              "logs:ListLogDeliveries",
              "logs:PutResourcePolicy",
              "logs:DescribeResourcePolicies",
              "logs:DescribeLogGroups",
            ],
            Effect: "Allow",
            Resource: "*",
          },
        ],
        Version: "2012-10-17",
      },
      Path: "/",
    }),
  },
  {
    type: "Policy",
    group: "IAM",
    properties: ({ getId }) => ({
      PolicyName: "terraform-20220331194525123300000007",
      PolicyDocument: {
        Statement: [
          {
            Action: ["states:StartExecution"],
            Effect: "Allow",
            Resource: `${getId({
              type: "StateMachine",
              group: "StepFunctions",
              name: "eventbridge-state-machine-demo-840541460064",
            })}`,
          },
        ],
        Version: "2012-10-17",
      },
      Path: "/",
    }),
    dependencies: ({ config }) => ({
      stateMachines: [`eventbridge-state-machine-demo-${config.accountId()}`],
    }),
  },
  {
    type: "StateMachine",
    group: "StepFunctions",
    properties: ({ getId }) => ({
      definition: {
        Comment: "Simple State Machine with Choice",
        StartAt: "WhichPath?",
        States: {
          "WhichPath?": {
            Type: "Choice",
            Choices: [
              {
                Variable: "$.detail.Path",
                StringEquals: "A",
                Next: "PathA",
              },
              {
                Variable: "$.detail.Path",
                StringEquals: "B",
                Next: "PathB",
              },
            ],
            Default: "Fail",
          },
          PathA: {
            Type: "Pass",
            End: true,
          },
          PathB: {
            Type: "Pass",
            End: true,
          },
          Fail: {
            Type: "Fail",
          },
        },
      },
      loggingConfiguration: {
        destinations: [
          {
            cloudWatchLogsLogGroup: {
              logGroupArn: `${getId({
                type: "LogGroup",
                group: "CloudWatchLogs",
                name: "/aws/vendedlogs/states/StateMachine-terraform-20220331194511828000000001",
              })}:*`,
            },
          },
        ],
        includeExecutionData: true,
        level: "ALL",
      },
      name: "eventbridge-state-machine-demo-840541460064",
    }),
    dependencies: ({}) => ({
      role: "terraform-20220331194511828100000004",
      logGroups: [
        "/aws/vendedlogs/states/StateMachine-terraform-20220331194511828000000001",
      ],
    }),
  },
];
