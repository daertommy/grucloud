// Generated by 'gc gencode'
const {} = require("rubico");
const {} = require("rubico/x");

exports.createResources = () => [
  {
    type: "Table",
    group: "DynamoDB",
    name: "my-table",
    properties: ({}) => ({
      AttributeDefinitions: [
        {
          AttributeName: "id",
          AttributeType: "S",
        },
      ],
      KeySchema: [
        {
          AttributeName: "id",
          KeyType: "HASH",
        },
      ],
      BillingMode: "PAY_PER_REQUEST",
    }),
  },
  {
    type: "Role",
    group: "IAM",
    name: "sam-app-MyStateMachineExecutionRole-ZVCE4J344HAN",
    properties: ({ config, getId }) => ({
      AssumeRolePolicyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Effect: "Allow",
            Principal: {
              Service: `states.${config.region}.amazonaws.com`,
            },
            Action: "sts:AssumeRole",
          },
        ],
      },
      Policies: [
        {
          PolicyDocument: {
            Version: "2012-10-17",
            Statement: [
              {
                Action: ["dynamodb:PutItem", "dynamodb:GetItem"],
                Resource: `${getId({
                  type: "Table",
                  group: "DynamoDB",
                  name: "my-table",
                })}`,
                Effect: "Allow",
              },
            ],
          },
          PolicyName: "DDBPolicy",
        },
      ],
    }),
    dependencies: ({}) => ({
      table: "my-table",
    }),
  },
  {
    type: "StateMachine",
    group: "StepFunctions",
    name: "StateMachinetoDDB-OZxx41bNDei3",
    properties: ({}) => ({
      definition: {
        StartAt: "SendToDDB",
        States: {
          ReadFromDDB: {
            End: true,
            OutputPath: "$.output_from_ddb_get.Item",
            Parameters: {
              Key: {
                "id.$": "$.id",
              },
              TableName: "my-table",
            },
            Resource: `arn:aws:states:::dynamodb:getItem`,
            ResultPath: "$.output_from_ddb_get",
            Type: "Task",
          },
          SendToDDB: {
            Next: "ReadFromDDB",
            Parameters: {
              Item: {
                "description.$": "States.Format('Hello, my id is {}.', $.id)",
                "id.$": "$.id",
              },
              TableName: "my-table",
            },
            Resource: `arn:aws:states:::dynamodb:putItem`,
            ResultPath: "$.output_from_ddb_put",
            Type: "Task",
          },
        },
      },
      tags: [
        {
          key: "stateMachine:createdBy",
          value: "SAM",
        },
      ],
    }),
    dependencies: ({}) => ({
      role: "sam-app-MyStateMachineExecutionRole-ZVCE4J344HAN",
    }),
  },
];
