"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[84808],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=i,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||o;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8056:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(87462),i=(r(67294),r(3905));const o={id:"Fleet",title:"Fleet"},a=void 0,s={unversionedId:"azure/resources/ContainerService/Fleet",id:"azure/resources/ContainerService/Fleet",title:"Fleet",description:"Provides a Fleet from the ContainerService group",source:"@site/docs/azure/resources/ContainerService/Fleet.md",sourceDirName:"azure/resources/ContainerService",slug:"/azure/resources/ContainerService/Fleet",permalink:"/docs/azure/resources/ContainerService/Fleet",draft:!1,tags:[],version:"current",frontMatter:{id:"Fleet",title:"Fleet"},sidebar:"docs",previous:{title:"AgentPool",permalink:"/docs/azure/resources/ContainerService/AgentPool"},next:{title:"FleetMember",permalink:"/docs/azure/resources/ContainerService/FleetMember"}},c={},p=[{value:"Examples",id:"examples",level:2},{value:"Creates or update a fleet resource",id:"creates-or-update-a-fleet-resource",level:3},{value:"Dependencies",id:"dependencies",level:2},{value:"Swagger Schema",id:"swagger-schema",level:2},{value:"Misc",id:"misc",level:2}],u={toc:p};function l(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Provides a ",(0,i.kt)("strong",{parentName:"p"},"Fleet")," from the ",(0,i.kt)("strong",{parentName:"p"},"ContainerService")," group"),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"creates-or-update-a-fleet-resource"},"Creates or update a fleet resource"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "Fleet",\n    group: "ContainerService",\n    name: "myFleet",\n    properties: () => ({\n      tags: { tier: "production", archv2: "" },\n      location: "East US",\n      properties: { hubProfile: { dnsPrefix: "dnsprefix1" } },\n    }),\n    dependencies: ({}) => ({ resourceGroup: "myResourceGroup" }),\n  },\n];\n\n')),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup"))),(0,i.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"{\n  type: 'object',\n  properties: {\n    etag: { type: 'string', readOnly: true, description: 'Resource Etag.' },\n    properties: {\n      description: 'Properties of a Fleet.',\n      'x-ms-client-flatten': true,\n      type: 'object',\n      properties: {\n        hubProfile: {\n          description: \"The FleetHubProfile configures the Fleet's hub.\",\n          type: 'object',\n          properties: {\n            dnsPrefix: {\n              type: 'string',\n              'x-ms-mutability': [ 'read', 'create' ],\n              description: 'DNS prefix used to create the FQDN for the Fleet hub.'\n            },\n            fqdn: {\n              readOnly: true,\n              type: 'string',\n              description: 'The FQDN of the Fleet hub.'\n            },\n            kubernetesVersion: {\n              readOnly: true,\n              type: 'string',\n              description: 'The Kubernetes version of the Fleet hub.'\n            }\n          }\n        },\n        provisioningState: {\n          readOnly: true,\n          type: 'string',\n          'x-ms-enum': { name: 'FleetProvisioningState', modelAsString: true },\n          enum: [\n            'Succeeded',\n            'Failed',\n            'Canceled',\n            'Creating',\n            'Deleting',\n            'Updating'\n          ],\n          description: 'The provisioning state of the last accepted operation.'\n        }\n      }\n    }\n  },\n  allOf: [\n    {\n      title: 'Tracked Resource',\n      description: \"The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'\",\n      type: 'object',\n      properties: {\n        tags: {\n          type: 'object',\n          additionalProperties: { type: 'string' },\n          'x-ms-mutability': [ 'read', 'create', 'update' ],\n          description: 'Resource tags.'\n        },\n        location: {\n          type: 'string',\n          'x-ms-mutability': [ 'read', 'create' ],\n          description: 'The geo-location where the resource lives'\n        }\n      },\n      required: [ 'location' ],\n      allOf: [\n        {\n          title: 'Resource',\n          description: 'Common fields that are returned in the response for all Azure Resource Manager resources',\n          type: 'object',\n          properties: {\n            id: {\n              readOnly: true,\n              type: 'string',\n              description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\n            },\n            name: {\n              readOnly: true,\n              type: 'string',\n              description: 'The name of the resource'\n            },\n            type: {\n              readOnly: true,\n              type: 'string',\n              description: 'The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"'\n            },\n            systemData: {\n              readOnly: true,\n              type: 'object',\n              description: 'Azure Resource Manager metadata containing createdBy and modifiedBy information.',\n              properties: {\n                createdBy: {\n                  type: 'string',\n                  description: 'The identity that created the resource.'\n                },\n                createdByType: {\n                  type: 'string',\n                  description: 'The type of identity that created the resource.',\n                  enum: [ 'User', 'Application', 'ManagedIdentity', 'Key' ],\n                  'x-ms-enum': { name: 'createdByType', modelAsString: true }\n                },\n                createdAt: {\n                  type: 'string',\n                  format: 'date-time',\n                  description: 'The timestamp of resource creation (UTC).'\n                },\n                lastModifiedBy: {\n                  type: 'string',\n                  description: 'The identity that last modified the resource.'\n                },\n                lastModifiedByType: {\n                  type: 'string',\n                  description: 'The type of identity that last modified the resource.',\n                  enum: [ 'User', 'Application', 'ManagedIdentity', 'Key' ],\n                  'x-ms-enum': { name: 'createdByType', modelAsString: true }\n                },\n                lastModifiedAt: {\n                  type: 'string',\n                  format: 'date-time',\n                  description: 'The timestamp of resource last modification (UTC)'\n                }\n              }\n            }\n          },\n          'x-ms-azure-resource': true\n        }\n      ]\n    }\n  ],\n  description: 'The Fleet resource which contains multiple Kubernetes clusters as its members.'\n}\n")),(0,i.kt)("h2",{id:"misc"},"Misc"),(0,i.kt)("p",null,"The resource version is ",(0,i.kt)("inlineCode",{parentName:"p"},"2022-06-02-preview"),"."),(0,i.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/containerservice/resource-manager/Microsoft.ContainerService/preview/2022-06-02-preview/fleets.json"},"here"),"."))}l.isMDXComponent=!0}}]);