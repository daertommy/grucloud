"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[27714],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>y});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=u(t),y=o,g=d["".concat(p,".").concat(y)]||d[y]||l[y]||i;return t?r.createElement(g,s(s({ref:n},c),{},{components:t})):r.createElement(g,s({ref:n},c))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,s=new Array(i);s[0]=d;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var u=2;u<i;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},23505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var r=t(87462),o=(t(67294),t(3905));const i={id:"P2sVpnGateway",title:"P2sVpnGateway"},s=void 0,a={unversionedId:"azure/resources/Network/P2sVpnGateway",id:"azure/resources/Network/P2sVpnGateway",title:"P2sVpnGateway",description:"Provides a P2sVpnGateway from the Network group",source:"@site/docs/azure/resources/Network/P2sVpnGateway.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/P2sVpnGateway",permalink:"/docs/azure/resources/Network/P2sVpnGateway",draft:!1,tags:[],version:"current",frontMatter:{id:"P2sVpnGateway",title:"P2sVpnGateway"},sidebar:"docs",previous:{title:"NetworkWatcher",permalink:"/docs/azure/resources/Network/NetworkWatcher"},next:{title:"P2sVpnServerConfiguration",permalink:"/docs/azure/resources/Network/P2sVpnServerConfiguration"}},p={},u=[{value:"Examples",id:"examples",level:2},{value:"P2SVpnGatewayPut",id:"p2svpngatewayput",level:3},{value:"Dependencies",id:"dependencies",level:2},{value:"Swagger Schema",id:"swagger-schema",level:2},{value:"Misc",id:"misc",level:2}],c={toc:u};function l(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"P2sVpnGateway")," from the ",(0,o.kt)("strong",{parentName:"p"},"Network")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"p2svpngatewayput"},"P2SVpnGatewayPut"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "P2sVpnGateway",\n    group: "Network",\n    name: "myP2sVpnGateway",\n    properties: () => ({\n      location: "West US",\n      tags: { key1: "value1" },\n      properties: {\n        virtualHub: {\n          id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1",\n        },\n        vpnServerConfiguration: {\n          id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/vpnServerConfigurations/vpnServerConfiguration1",\n        },\n        p2SConnectionConfigurations: [\n          {\n            name: "P2SConnectionConfig1",\n            id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/p2sVpnGateways/p2sVpnGateway1/p2sConnectionConfigurations/P2SConnectionConfig1",\n            properties: {\n              vpnClientAddressPool: { addressPrefixes: ["101.3.0.0/16"] },\n              routingConfiguration: {\n                associatedRouteTable: {\n                  id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1",\n                },\n                propagatedRouteTables: {\n                  labels: ["label1", "label2"],\n                  ids: [\n                    {\n                      id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable1",\n                    },\n                    {\n                      id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable2",\n                    },\n                    {\n                      id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/hubRouteTable3",\n                    },\n                  ],\n                },\n                vnetRoutes: { staticRoutes: [] },\n              },\n            },\n          },\n        ],\n        vpnGatewayScaleUnit: 1,\n        customDnsServers: ["1.1.1.1", "2.2.2.2"],\n        isRoutingPreferenceInternet: false,\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      virtualHub: "myVirtualHub",\n      routeTable: ["myRouteTable"],\n      vpnServerConfiguration: "myVpnServerConfiguration",\n    }),\n  },\n];\n\n')),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/VirtualHub"},"VirtualHub")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/RouteTable"},"RouteTable")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/VpnServerConfiguration"},"VpnServerConfiguration"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  required: [ 'location' ],\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the P2SVpnGateway.',\n      properties: {\n        virtualHub: {\n          description: 'The VirtualHub to which the gateway belongs.',\n          properties: { id: { type: 'string', description: 'Resource ID.' } },\n          'x-ms-azure-resource': true\n        },\n        p2SConnectionConfigurations: {\n          type: 'array',\n          description: 'List of all p2s connection configurations of the gateway.',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the P2S connection configuration.',\n                properties: {\n                  vpnClientAddressPool: {\n                    description: 'The reference to the address space resource which represents Address space for P2S VpnClient.',\n                    properties: {\n                      addressPrefixes: {\n                        type: 'array',\n                        items: { type: 'string' },\n                        description: 'A list of address blocks reserved for this virtual network in CIDR notation.'\n                      }\n                    }\n                  },\n                  routingConfiguration: {\n                    description: 'The Routing Configuration indicating the associated and propagated route tables on this connection.',\n                    properties: {\n                      associatedRouteTable: {\n                        description: 'The resource id RouteTable associated with this RoutingConfiguration.',\n                        properties: {\n                          id: {\n                            type: 'string',\n                            description: 'Resource ID.'\n                          }\n                        },\n                        'x-ms-azure-resource': true\n                      },\n                      propagatedRouteTables: {\n                        description: 'The list of RouteTables to advertise the routes to.',\n                        properties: {\n                          labels: {\n                            type: 'array',\n                            description: 'The list of labels.',\n                            items: { type: 'string' }\n                          },\n                          ids: {\n                            type: 'array',\n                            description: 'The list of resource ids of all the RouteTables.',\n                            items: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            }\n                          }\n                        }\n                      },\n                      vnetRoutes: {\n                        description: 'List of routes that control routing from VirtualHub into a virtual network connection.',\n                        properties: {\n                          staticRoutes: {\n                            type: 'array',\n                            description: 'List of all Static Routes.',\n                            items: {\n                              description: 'List of all Static Routes.',\n                              properties: {\n                                name: [Object],\n                                addressPrefixes: [Object],\n                                nextHopIpAddress: [Object]\n                              }\n                            }\n                          },\n                          bgpConnections: {\n                            type: 'array',\n                            readOnly: true,\n                            description: 'The list of references to HubBgpConnection objects.',\n                            items: {\n                              properties: { id: [Object] },\n                              description: 'Reference to another subresource.',\n                              'x-ms-azure-resource': true\n                            }\n                          }\n                        }\n                      }\n                    }\n                  },\n                  enableInternetSecurity: {\n                    type: 'boolean',\n                    description: 'Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.'\n                  },\n                  configurationPolicyGroupAssociations: {\n                    type: 'array',\n                    readOnly: true,\n                    items: {\n                      properties: {\n                        id: { type: 'string', description: 'Resource ID.' }\n                      },\n                      description: 'Reference to another subresource.',\n                      'x-ms-azure-resource': true\n                    },\n                    description: 'List of Configuration Policy Groups that this P2SConnectionConfiguration is attached to.'\n                  },\n                  previousConfigurationPolicyGroupAssociations: {\n                    type: 'array',\n                    readOnly: true,\n                    items: {\n                      type: 'object',\n                      properties: {\n                        properties: {\n                          'x-ms-client-flatten': true,\n                          description: 'Properties of the VpnServerConfigurationPolicyGroup.',\n                          type: 'object',\n                          properties: {\n                            isDefault: {\n                              type: 'boolean',\n                              description: 'Shows if this is a Default VpnServerConfigurationPolicyGroup or not.'\n                            },\n                            priority: {\n                              type: 'integer',\n                              format: 'int32',\n                              description: 'Priority for VpnServerConfigurationPolicyGroup.'\n                            },\n                            policyMembers: {\n                              type: 'array',\n                              items: {\n                                properties: [Object],\n                                description: 'VpnServerConfiguration PolicyGroup member',\n                                type: 'object'\n                              },\n                              description: 'Multiple PolicyMembers for VpnServerConfigurationPolicyGroup.',\n                              'x-ms-identifiers': []\n                            },\n                            p2SConnectionConfigurations: {\n                              type: 'array',\n                              readOnly: true,\n                              items: {\n                                properties: [Object],\n                                description: 'Reference to another subresource.',\n                                'x-ms-azure-resource': true\n                              },\n                              description: 'List of references to P2SConnectionConfigurations.'\n                            },\n                            provisioningState: {\n                              readOnly: true,\n                              description: 'The provisioning state of the VpnServerConfigurationPolicyGroup resource.',\n                              type: 'string',\n                              enum: [\n                                'Succeeded',\n                                'Updating',\n                                'Deleting',\n                                'Failed'\n                              ],\n                              'x-ms-enum': {\n                                name: 'ProvisioningState',\n                                modelAsString: true\n                              }\n                            }\n                          }\n                        },\n                        etag: {\n                          type: 'string',\n                          readOnly: true,\n                          description: 'A unique read-only string that changes whenever the resource is updated.'\n                        },\n                        name: {\n                          type: 'string',\n                          description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n                        },\n                        type: {\n                          readOnly: true,\n                          type: 'string',\n                          description: 'Resource type.'\n                        }\n                      },\n                      allOf: [\n                        {\n                          properties: {\n                            id: {\n                              type: 'string',\n                              description: 'Resource ID.'\n                            }\n                          },\n                          description: 'Reference to another subresource.',\n                          'x-ms-azure-resource': true\n                        }\n                      ],\n                      description: 'VpnServerConfigurationPolicyGroup Resource.'\n                    },\n                    description: 'List of previous Configuration Policy Groups that this P2SConnectionConfiguration was attached to.'\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the P2SConnectionConfiguration resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                type: 'string',\n                readOnly: true,\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'P2SConnectionConfiguration Resource.'\n          }\n        },\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the P2S VPN gateway resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        },\n        vpnGatewayScaleUnit: {\n          type: 'integer',\n          format: 'int32',\n          description: 'The scale unit for this p2s vpn gateway.'\n        },\n        vpnServerConfiguration: {\n          description: 'The VpnServerConfiguration to which the p2sVpnGateway is attached to.',\n          properties: { id: { type: 'string', description: 'Resource ID.' } },\n          'x-ms-azure-resource': true\n        },\n        vpnClientConnectionHealth: {\n          readOnly: true,\n          description: \"All P2S VPN clients' connection health status.\",\n          properties: {\n            totalIngressBytesTransferred: {\n              readOnly: true,\n              type: 'integer',\n              format: 'int64',\n              description: 'Total of the Ingress Bytes Transferred in this P2S Vpn connection.'\n            },\n            totalEgressBytesTransferred: {\n              readOnly: true,\n              type: 'integer',\n              format: 'int64',\n              description: 'Total of the Egress Bytes Transferred in this connection.'\n            },\n            vpnClientConnectionsCount: {\n              type: 'integer',\n              format: 'int32',\n              description: 'The total of p2s vpn clients connected at this time to this P2SVpnGateway.'\n            },\n            allocatedIpAddresses: {\n              type: 'array',\n              items: { type: 'string' },\n              description: 'List of allocated ip addresses to the connected p2s vpn clients.'\n            }\n          }\n        },\n        customDnsServers: {\n          type: 'array',\n          description: 'List of all customer specified DNS servers IP addresses.',\n          items: { type: 'string' }\n        },\n        isRoutingPreferenceInternet: {\n          type: 'boolean',\n          description: 'Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.'\n        }\n      }\n    },\n    etag: {\n      type: 'string',\n      readOnly: true,\n      description: 'A unique read-only string that changes whenever the resource is updated.'\n    }\n  },\n  allOf: [\n    {\n      properties: {\n        id: { type: 'string', description: 'Resource ID.' },\n        name: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource name.'\n        },\n        type: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource type.'\n        },\n        location: { type: 'string', description: 'Resource location.' },\n        tags: {\n          type: 'object',\n          additionalProperties: { type: 'string' },\n          description: 'Resource tags.'\n        }\n      },\n      description: 'Common resource representation.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'P2SVpnGateway Resource.'\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2021-08-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-08-01/virtualWan.json"},"here"),"."))}l.isMDXComponent=!0}}]);