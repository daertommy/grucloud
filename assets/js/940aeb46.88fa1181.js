"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[51858],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=o.createContext({}),u=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=u(e.components);return o.createElement(i.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,D=d["".concat(i,".").concat(m)]||d[m]||l[m]||a;return t?o.createElement(D,c(c({ref:n},p),{},{components:t})):o.createElement(D,c({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var u=2;u<a;u++)c[u]=t[u];return o.createElement.apply(null,c)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},310:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var o=t(87462),r=t(63366),a=(t(67294),t(3905)),c=["components"],s={id:"DatabaseAccountMongoDBCollection",title:"DatabaseAccountMongoDBCollection"},i=void 0,u={unversionedId:"azure/resources/DocumentDB/DatabaseAccountMongoDBCollection",id:"azure/resources/DocumentDB/DatabaseAccountMongoDBCollection",isDocsHomePage:!1,title:"DatabaseAccountMongoDBCollection",description:"Provides a DatabaseAccountMongoDBCollection from the DocumentDB group",source:"@site/docs/azure/resources/DocumentDB/DatabaseAccountMongoDBCollection.md",sourceDirName:"azure/resources/DocumentDB",slug:"/azure/resources/DocumentDB/DatabaseAccountMongoDBCollection",permalink:"/docs/azure/resources/DocumentDB/DatabaseAccountMongoDBCollection",tags:[],version:"current",frontMatter:{id:"DatabaseAccountMongoDBCollection",title:"DatabaseAccountMongoDBCollection"},sidebar:"docs",previous:{title:"DatabaseAccountGremlinGraphThroughput",permalink:"/docs/azure/resources/DocumentDB/DatabaseAccountGremlinGraphThroughput"},next:{title:"DatabaseAccountMongoDBCollectionThroughput",permalink:"/docs/azure/resources/DocumentDB/DatabaseAccountMongoDBCollectionThroughput"}},p=[{value:"Examples",id:"examples",children:[{value:"CosmosDBMongoDBCollectionCreateUpdate",id:"cosmosdbmongodbcollectioncreateupdate",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],l={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,o.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Provides a ",(0,a.kt)("strong",{parentName:"p"},"DatabaseAccountMongoDBCollection")," from the ",(0,a.kt)("strong",{parentName:"p"},"DocumentDB")," group"),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("h3",{id:"cosmosdbmongodbcollectioncreateupdate"},"CosmosDBMongoDBCollectionCreateUpdate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "DatabaseAccountMongoDBCollection",\n    group: "DocumentDB",\n    name: "myDatabaseAccountMongoDBCollection",\n    properties: () => ({\n      properties: {\n        resource: {\n          id: "testcoll",\n          indexes: [\n            {\n              key: { keys: ["testKey"] },\n              options: { expireAfterSeconds: 100, unique: true },\n            },\n          ],\n          shardKey: { testKey: "Hash" },\n        },\n        options: {},\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      account: "myDatabaseAccount",\n      database: "myDatabaseAccountMongoDBDatabase",\n    }),\n  },\n];\n\n')),(0,a.kt)("h2",{id:"dependencies"},"Dependencies"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/azure/resources/DocumentDB/DatabaseAccount"},"DatabaseAccount")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/azure/resources/DocumentDB/DatabaseAccountMongoDBDatabase"},"DatabaseAccountMongoDBDatabase"))),(0,a.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"{\n  description: 'Parameters to create and update Cosmos DB MongoDB collection.',\n  type: 'object',\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties to create and update Azure Cosmos DB MongoDB collection.',\n      type: 'object',\n      properties: {\n        resource: {\n          description: 'The standard JSON format of a MongoDB collection',\n          type: 'object',\n          properties: {\n            id: {\n              type: 'string',\n              description: 'Name of the Cosmos DB MongoDB collection'\n            },\n            shardKey: {\n              description: 'A key-value pair of shard keys to be applied for the request.',\n              type: 'object',\n              additionalProperties: { type: 'string' }\n            },\n            indexes: {\n              description: 'List of index keys',\n              type: 'array',\n              items: {\n                type: 'object',\n                description: 'Cosmos DB MongoDB collection index key',\n                properties: {\n                  key: {\n                    description: 'Cosmos DB MongoDB collection index keys',\n                    type: 'object',\n                    properties: {\n                      keys: {\n                        description: 'List of keys for each MongoDB collection in the Azure Cosmos DB service',\n                        type: 'array',\n                        items: { type: 'string', description: 'A Key.' }\n                      }\n                    }\n                  },\n                  options: {\n                    description: 'Cosmos DB MongoDB collection index key options',\n                    type: 'object',\n                    properties: {\n                      expireAfterSeconds: {\n                        description: 'Expire after seconds',\n                        type: 'integer'\n                      },\n                      unique: {\n                        description: 'Is unique or not',\n                        type: 'boolean'\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          required: [ 'id' ]\n        },\n        options: {\n          description: 'A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.',\n          type: 'object',\n          additionalProperties: { type: 'string' }\n        }\n      },\n      required: [ 'resource', 'options' ]\n    }\n  },\n  required: [ 'properties' ]\n}\n")),(0,a.kt)("h2",{id:"misc"},"Misc"),(0,a.kt)("p",null,"The resource version is ",(0,a.kt)("inlineCode",{parentName:"p"},"2016-03-31"),"."),(0,a.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2016-03-31/cosmos-db.json"},"here"),"."))}d.isMDXComponent=!0}}]);