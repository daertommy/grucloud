"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[20996],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),b=o,m=u["".concat(c,".").concat(b)]||u[b]||d[b]||i;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},73448:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const i={id:"WebAppSourceControlSlot",title:"WebAppSourceControlSlot"},a=void 0,s={unversionedId:"azure/resources/Web/WebAppSourceControlSlot",id:"azure/resources/Web/WebAppSourceControlSlot",title:"WebAppSourceControlSlot",description:"Provides a WebAppSourceControlSlot from the Web group",source:"@site/docs/azure/resources/Web/WebAppSourceControlSlot.md",sourceDirName:"azure/resources/Web",slug:"/azure/resources/Web/WebAppSourceControlSlot",permalink:"/docs/azure/resources/Web/WebAppSourceControlSlot",draft:!1,tags:[],version:"current",frontMatter:{id:"WebAppSourceControlSlot",title:"WebAppSourceControlSlot"},sidebar:"docs",previous:{title:"WebAppSourceControl",permalink:"/docs/azure/resources/Web/WebAppSourceControl"},next:{title:"WebAppSwiftVirtualNetworkConnection",permalink:"/docs/azure/resources/Web/WebAppSwiftVirtualNetworkConnection"}},c={},p=[{value:"Examples",id:"examples",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Swagger Schema",id:"swagger-schema",level:2},{value:"Misc",id:"misc",level:2}],l={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"WebAppSourceControlSlot")," from the ",(0,o.kt)("strong",{parentName:"p"},"Web")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Web/WebApp"},"WebApp")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Web/WebAppSlot"},"WebAppSlot"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},"{\n  description: 'Source control configuration for an app.',\n  type: 'object',\n  allOf: [\n    {\n      description: 'Azure proxy only resource. This resource is not tracked by Azure Resource Manager.',\n      type: 'object',\n      properties: {\n        id: { description: 'Resource Id.', type: 'string', readOnly: true },\n        name: {\n          description: 'Resource Name.',\n          type: 'string',\n          readOnly: true\n        },\n        kind: { description: 'Kind of resource.', type: 'string' },\n        type: {\n          description: 'Resource type.',\n          type: 'string',\n          readOnly: true\n        }\n      },\n      'x-ms-azure-resource': true\n    }\n  ],\n  properties: {\n    properties: {\n      description: 'SiteSourceControl resource specific properties',\n      type: 'object',\n      properties: {\n        repoUrl: {\n          description: 'Repository or source control URL.',\n          type: 'string',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        branch: {\n          description: 'Name of branch to use for deployment.',\n          type: 'string',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        isManualIntegration: {\n          description: '<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        isGitHubAction: {\n          description: '<code>true</code> if this is deployed via GitHub action.',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        deploymentRollbackEnabled: {\n          description: '<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        isMercurial: {\n          description: '<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        gitHubActionConfiguration: {\n          description: 'If GitHub Action is selected, than the associated configuration.',\n          type: 'object',\n          properties: {\n            codeConfiguration: {\n              description: 'GitHub Action code configuration.',\n              type: 'object',\n              properties: {\n                runtimeStack: {\n                  description: 'Runtime stack is used to determine the workflow file content for code base apps.',\n                  type: 'string'\n                },\n                runtimeVersion: {\n                  description: 'Runtime version is used to determine what build version to set in the workflow file.',\n                  type: 'string'\n                }\n              }\n            },\n            containerConfiguration: {\n              description: 'GitHub Action container configuration.',\n              type: 'object',\n              properties: {\n                serverUrl: {\n                  description: 'The server URL for the container registry where the build will be hosted.',\n                  type: 'string'\n                },\n                imageName: {\n                  description: 'The image name for the build.',\n                  type: 'string'\n                },\n                username: {\n                  description: 'The username used to upload the image to the container registry.',\n                  type: 'string'\n                },\n                password: {\n                  description: 'The password used to upload the image to the container registry.',\n                  type: 'string',\n                  'x-ms-secret': true\n                }\n              }\n            },\n            isLinux: {\n              description: 'This will help determine the workflow configuration to select.',\n              type: 'boolean'\n            },\n            generateWorkflowFile: {\n              description: 'Workflow option to determine whether the workflow file should be generated and written to the repository.',\n              type: 'boolean'\n            }\n          }\n        }\n      },\n      'x-ms-client-flatten': true\n    }\n  }\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2022-03-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/web/resource-manager/Microsoft.Web/stable/2022-03-01/WebApps.json"},"here"),"."))}d.isMDXComponent=!0}}]);