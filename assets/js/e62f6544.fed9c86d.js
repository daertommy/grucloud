"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[24231],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>g});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function c(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=r.createContext({}),u=function(e){var a=r.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},p=function(e){var a=u(e.components);return r.createElement(s.Provider,{value:a},e.children)},i={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=u(t),g=n,m=d["".concat(s,".").concat(g)]||d[g]||i[g]||o;return t?r.createElement(m,l(l({ref:a},p),{},{components:t})):r.createElement(m,l({ref:a},p))}));function g(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,l=new Array(o);l[0]=d;var c={};for(var s in a)hasOwnProperty.call(a,s)&&(c[s]=a[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var u=2;u<o;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},48804:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>i,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var r=t(87462),n=(t(67294),t(3905));const o={id:"TargetGroup",title:"Target Group"},l=void 0,c={unversionedId:"aws/resources/ElasticLoadBalancingV2/TargetGroup",id:"aws/resources/ElasticLoadBalancingV2/TargetGroup",title:"Target Group",description:"Manages an ELB Target Group.",source:"@site/docs/aws/resources/ElasticLoadBalancingV2/TargetGroup.md",sourceDirName:"aws/resources/ElasticLoadBalancingV2",slug:"/aws/resources/ElasticLoadBalancingV2/TargetGroup",permalink:"/docs/aws/resources/ElasticLoadBalancingV2/TargetGroup",draft:!1,tags:[],version:"current",frontMatter:{id:"TargetGroup",title:"Target Group"},sidebar:"docs",previous:{title:"Rule",permalink:"/docs/aws/resources/ElasticLoadBalancingV2/Rule"},next:{title:"Group",permalink:"/docs/aws/resources/IAM/Group"}},s={},u=[{value:"Example",id:"example",level:2},{value:"Properties",id:"properties",level:2},{value:"Source Code",id:"source-code",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Used By",id:"used-by",level:2},{value:"List",id:"list",level:2}],p={toc:u};function i(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Manages an ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html"},"ELB Target Group"),"."),(0,n.kt)("p",null,"A target group can be attached directly to an AutoScaling Group or an AutoScaling Group created by an EKS Node Group."),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "TargetGroup",\n    group: "ElasticLoadBalancingV2",\n    name: "target-group-rest",\n    properties: ({}) => ({\n      Protocol: "HTTP",\n      Port: 30020,\n      HealthCheckProtocol: "HTTP",\n      HealthCheckPort: "traffic-port",\n      HealthCheckEnabled: true,\n      HealthCheckIntervalSeconds: 30,\n      HealthCheckTimeoutSeconds: 5,\n      HealthyThresholdCount: 5,\n      HealthCheckPath: "/api/v1/version",\n      Matcher: {\n        HttpCode: "200",\n      },\n      TargetType: "instance",\n      ProtocolVersion: "HTTP1",\n    }),\n    dependencies: () => ({\n      vpc: "VPC",\n    }),\n  },\n];\n')),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("p",null,"The list of properties are the parameter of ",(0,n.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/clients/client-elastic-load-balancing-v2/interfaces/createtargetgroupcommandinput.html"},"CreateTargetGroupCommandInput")),(0,n.kt)("h2",{id:"source-code"},"Source Code"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/blob/main/examples/aws/ELBv2/load-balancer/resources.js"},"Load Balancer"))),(0,n.kt)("h2",{id:"dependencies"},"Dependencies"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/aws/resources/EC2/Vpc"},"VPC")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/aws/resources/EKS/NodeGroup"},"EKS NodeGroup"))),(0,n.kt)("h2",{id:"used-by"},"Used By"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/aws/resources/AutoScaling/AutoScalingGroup"},"AutoScalingGroup")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/aws/resources/CodeDeploy/DeploymentGroup"},"CodeDeploy DeploymentGroup"))),(0,n.kt)("h2",{id:"list"},"List"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"gc l -t TargetGroup\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-txt"},'Listing resources on 1 provider: aws\n\u2713 aws\n  \u2713 Initialising\n  \u2713 Listing 2/2\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 2 ELBv2::TargetGroup from aws                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 name: target-group-rest                                                     \u2502\n\u2502 managedByUs: Yes                                                            \u2502\n\u2502 live:                                                                       \u2502\n\u2502   TargetGroupArn: arn:aws:elasticloadbalancing:us-east-1:840541460064:targ\u2026 \u2502\n\u2502   TargetGroupName: target-group-rest                                        \u2502\n\u2502   Protocol: HTTP                                                            \u2502\n\u2502   Port: 30020                                                               \u2502\n\u2502   VpcId: vpc-055bc1b8bdcbd18ac                                              \u2502\n\u2502   HealthCheckProtocol: HTTP                                                 \u2502\n\u2502   HealthCheckPort: traffic-port                                             \u2502\n\u2502   HealthCheckEnabled: true                                                  \u2502\n\u2502   HealthCheckIntervalSeconds: 30                                            \u2502\n\u2502   HealthCheckTimeoutSeconds: 5                                              \u2502\n\u2502   HealthyThresholdCount: 5                                                  \u2502\n\u2502   UnhealthyThresholdCount: 2                                                \u2502\n\u2502   HealthCheckPath: /                                                        \u2502\n\u2502   Matcher:                                                                  \u2502\n\u2502     HttpCode: 200                                                           \u2502\n\u2502   LoadBalancerArns:                                                         \u2502\n\u2502     - "arn:aws:elasticloadbalancing:us-east-1:840541460064:loadbalancer/ap\u2026 \u2502\n\u2502   TargetType: instance                                                      \u2502\n\u2502   ProtocolVersion: HTTP1                                                    \u2502\n\u2502   Tags:                                                                     \u2502\n\u2502     - Key: gc-created-by-provider                                           \u2502\n\u2502       Value: aws                                                            \u2502\n\u2502     - Key: gc-managed-by                                                    \u2502\n\u2502       Value: grucloud                                                       \u2502\n\u2502     - Key: gc-project-name                                                  \u2502\n\u2502       Value: @grucloud/example-aws-elbv2-loadbalancer                       \u2502\n\u2502     - Key: gc-stage                                                         \u2502\n\u2502       Value: dev                                                            \u2502\n\u2502     - Key: Name                                                             \u2502\n\u2502       Value: target-group-rest                                              \u2502\n\u2502                                                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 name: target-group-web                                                      \u2502\n\u2502 managedByUs: Yes                                                            \u2502\n\u2502 live:                                                                       \u2502\n\u2502   TargetGroupArn: arn:aws:elasticloadbalancing:us-east-1:840541460064:targ\u2026 \u2502\n\u2502   TargetGroupName: target-group-web                                         \u2502\n\u2502   Protocol: HTTP                                                            \u2502\n\u2502   Port: 30010                                                               \u2502\n\u2502   VpcId: vpc-055bc1b8bdcbd18ac                                              \u2502\n\u2502   HealthCheckProtocol: HTTP                                                 \u2502\n\u2502   HealthCheckPort: traffic-port                                             \u2502\n\u2502   HealthCheckEnabled: true                                                  \u2502\n\u2502   HealthCheckIntervalSeconds: 30                                            \u2502\n\u2502   HealthCheckTimeoutSeconds: 5                                              \u2502\n\u2502   HealthyThresholdCount: 5                                                  \u2502\n\u2502   UnhealthyThresholdCount: 2                                                \u2502\n\u2502   HealthCheckPath: /                                                        \u2502\n\u2502   Matcher:                                                                  \u2502\n\u2502     HttpCode: 200                                                           \u2502\n\u2502   LoadBalancerArns:                                                         \u2502\n\u2502     - "arn:aws:elasticloadbalancing:us-east-1:840541460064:loadbalancer/ap\u2026 \u2502\n\u2502   TargetType: instance                                                      \u2502\n\u2502   ProtocolVersion: HTTP1                                                    \u2502\n\u2502   Tags:                                                                     \u2502\n\u2502     - Key: gc-created-by-provider                                           \u2502\n\u2502       Value: aws                                                            \u2502\n\u2502     - Key: gc-managed-by                                                    \u2502\n\u2502       Value: grucloud                                                       \u2502\n\u2502     - Key: gc-project-name                                                  \u2502\n\u2502       Value: @grucloud/example-aws-elbv2-loadbalancer                       \u2502\n\u2502     - Key: gc-stage                                                         \u2502\n\u2502       Value: dev                                                            \u2502\n\u2502     - Key: Name                                                             \u2502\n\u2502       Value: target-group-web                                               \u2502\n\u2502                                                                             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\nList Summary:\nProvider: aws\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 aws                                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 ELBv2::TargetGroup \u2502 target-group-rest                                     \u2502\n\u2502                    \u2502 target-group-web                                      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n2 resources, 1 type, 1 provider\nCommand "gc l -t TargetGroup" executed in 4s\n')))}i.isMDXComponent=!0}}]);