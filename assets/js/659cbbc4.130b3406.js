"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[70648],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>m});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),s=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(r),m=o,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return r?t.createElement(g,i(i({ref:n},u),{},{components:r})):t.createElement(g,i({ref:n},u))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},91257:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var t=r(87462),o=(r(67294),r(3905));const a={id:"Binding",title:"Binding"},i=void 0,c={unversionedId:"google/resources/iam/Binding",id:"google/resources/iam/Binding",title:"Binding",description:"Provides a IAM Binding for a project.",source:"@site/docs/google/resources/iam/Binding.md",sourceDirName:"google/resources/iam",slug:"/google/resources/iam/Binding",permalink:"/docs/google/resources/iam/Binding",draft:!1,tags:[],version:"current",frontMatter:{id:"Binding",title:"Binding"},sidebar:"docs",previous:{title:"VM Instance",permalink:"/docs/google/resources/compute/VmInstance"},next:{title:"Member",permalink:"/docs/google/resources/iam/Member"}},l={},s=[{value:"Examples",id:"examples",level:2},{value:"Bind a user to a role",id:"bind-a-user-to-a-role",level:3},{value:"Bind a service account to a role",id:"bind-a-service-account-to-a-role",level:3},{value:"Example Code",id:"example-code",level:3},{value:"Used By",id:"used-by",level:3}],u={toc:s};function d(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a IAM Binding for a project."),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"bind-a-user-to-a-role"},"Bind a user to a role"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const iamBinding = provider.iam.makeBinding({\n  name: "roles/editor",\n  properties: () => ({\n    members: ["user:jane@example.com"],\n  }),\n});\n')),(0,o.kt)("h3",{id:"bind-a-service-account-to-a-role"},"Bind a service account to a role"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const serviceAccount = provider.iam.makeServiceAccount({\n  name: "sa",\n  properties: () => ({\n    accountId: "sa",\n  }),\n});\n\nconst iamBinding = provider.iam.makeBinding({\n  name: "roles/editor",\n  dependencies: () => ({ serviceAccounts: ["sa"] }),\n});\n')),(0,o.kt)("h3",{id:"example-code"},"Example Code"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/blob/main/examples/google/iam/iam-binding"},"basic example"))),(0,o.kt)("h3",{id:"used-by"},"Used By"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/google/resources/iam/ServiceAccount"},"ServiceAccount"))))}d.isMDXComponent=!0}}]);