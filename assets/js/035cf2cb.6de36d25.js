"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[17349],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>g});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},u=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},d="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,g=d["".concat(c,".").concat(m)]||d[m]||l[m]||a;return r?t.createElement(g,i(i({ref:n},u),{},{components:r})):t.createElement(g,i({ref:n},u))}));function g(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},91045:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var t=r(87462),o=(r(67294),r(3905));const a={id:"ManagedEnvironmentsStorage",title:"ManagedEnvironmentsStorage"},i=void 0,s={unversionedId:"azure/resources/App/ManagedEnvironmentsStorage",id:"azure/resources/App/ManagedEnvironmentsStorage",title:"ManagedEnvironmentsStorage",description:"Provides a ManagedEnvironmentsStorage from the App group",source:"@site/docs/azure/resources/App/ManagedEnvironmentsStorage.md",sourceDirName:"azure/resources/App",slug:"/azure/resources/App/ManagedEnvironmentsStorage",permalink:"/docs/azure/resources/App/ManagedEnvironmentsStorage",draft:!1,tags:[],version:"current",frontMatter:{id:"ManagedEnvironmentsStorage",title:"ManagedEnvironmentsStorage"},sidebar:"docs",previous:{title:"ManagedEnvironment",permalink:"/docs/azure/resources/App/ManagedEnvironment"},next:{title:"RoleAssignment",permalink:"/docs/azure/resources/Authorization/RoleAssignment"}},c={},p=[{value:"Examples",id:"examples",level:2},{value:"Create or update environments storage",id:"create-or-update-environments-storage",level:3},{value:"Dependencies",id:"dependencies",level:2},{value:"Swagger Schema",id:"swagger-schema",level:2},{value:"Misc",id:"misc",level:2}],u={toc:p},d="wrapper";function l(e){let{components:n,...r}=e;return(0,o.kt)(d,(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"ManagedEnvironmentsStorage")," from the ",(0,o.kt)("strong",{parentName:"p"},"App")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"create-or-update-environments-storage"},"Create or update environments storage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "ManagedEnvironmentsStorage",\n    group: "App",\n    name: "myManagedEnvironmentsStorage",\n    properties: () => ({\n      properties: {\n        azureFile: {\n          accountName: "account1",\n          accountKey: "key",\n          shareName: "share1",\n          accessMode: "ReadOnly",\n        },\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      environment: "myManagedEnvironment",\n    }),\n  },\n];\n\n')),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/App/ManagedEnvironment"},"ManagedEnvironment"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},"{\n  description: 'Storage resource for managedEnvironment.',\n  type: 'object',\n  allOf: [\n    {\n      title: 'Proxy Resource',\n      description: 'The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location',\n      type: 'object',\n      allOf: [\n        {\n          title: 'Resource',\n          description: 'Common fields that are returned in the response for all Azure Resource Manager resources',\n          type: 'object',\n          properties: {\n            id: {\n              readOnly: true,\n              type: 'string',\n              description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\n            },\n            name: {\n              readOnly: true,\n              type: 'string',\n              description: 'The name of the resource'\n            },\n            type: {\n              readOnly: true,\n              type: 'string',\n              description: 'The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"'\n            },\n            systemData: {\n              readOnly: true,\n              type: 'object',\n              description: 'Azure Resource Manager metadata containing createdBy and modifiedBy information.',\n              properties: {\n                createdBy: {\n                  type: 'string',\n                  description: 'The identity that created the resource.'\n                },\n                createdByType: {\n                  type: 'string',\n                  description: 'The type of identity that created the resource.',\n                  enum: [ 'User', 'Application', 'ManagedIdentity', 'Key' ],\n                  'x-ms-enum': { name: 'createdByType', modelAsString: true }\n                },\n                createdAt: {\n                  type: 'string',\n                  format: 'date-time',\n                  description: 'The timestamp of resource creation (UTC).'\n                },\n                lastModifiedBy: {\n                  type: 'string',\n                  description: 'The identity that last modified the resource.'\n                },\n                lastModifiedByType: {\n                  type: 'string',\n                  description: 'The type of identity that last modified the resource.',\n                  enum: [ 'User', 'Application', 'ManagedIdentity', 'Key' ],\n                  'x-ms-enum': { name: 'createdByType', modelAsString: true }\n                },\n                lastModifiedAt: {\n                  type: 'string',\n                  format: 'date-time',\n                  description: 'The timestamp of resource last modification (UTC)'\n                }\n              }\n            }\n          },\n          'x-ms-azure-resource': true\n        }\n      ]\n    }\n  ],\n  properties: {\n    properties: {\n      description: 'Storage properties',\n      type: 'object',\n      properties: {\n        azureFile: {\n          description: 'Azure file properties',\n          type: 'object',\n          properties: {\n            accountName: {\n              description: 'Storage account name for azure file.',\n              type: 'string'\n            },\n            accountKey: {\n              description: 'Storage account key for azure file.',\n              type: 'string',\n              'x-ms-secret': true\n            },\n            accessMode: {\n              description: 'Access mode for storage',\n              enum: [ 'ReadOnly', 'ReadWrite' ],\n              type: 'string',\n              'x-ms-enum': { name: 'AccessMode', modelAsString: true }\n            },\n            shareName: { description: 'Azure file share name.', type: 'string' }\n          }\n        }\n      }\n    }\n  }\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2022-03-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/app/resource-manager/Microsoft.App/stable/2022-03-01/ManagedEnvironmentsStorages.json"},"here"),"."))}l.isMDXComponent=!0}}]);