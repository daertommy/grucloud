"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[64804],{3905:(e,a,n)=>{n.d(a,{Zo:()=>p,kt:()=>y});var r=n(67294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=r.createContext({}),c=function(e){var a=r.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},p=function(e){var a=c(e.components);return r.createElement(s.Provider,{value:a},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=t,y=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return n?r.createElement(y,o(o({ref:a},p),{},{components:n})):r.createElement(y,o({ref:a},p))}));function y(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[u]="string"==typeof e?e:t,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},77893:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(87462),t=(n(67294),n(3905));const l={id:"Role",title:"Role"},o=void 0,i={unversionedId:"aws/resources/IAM/Role",id:"aws/resources/IAM/Role",title:"Role",description:"Provides an Iam Role",source:"@site/docs/aws/resources/IAM/Role.md",sourceDirName:"aws/resources/IAM",slug:"/aws/resources/IAM/Role",permalink:"/docs/aws/resources/IAM/Role",draft:!1,tags:[],version:"current",frontMatter:{id:"Role",title:"Role"},sidebar:"docs",previous:{title:"Policy",permalink:"/docs/aws/resources/IAM/Policy"},next:{title:"User",permalink:"/docs/aws/resources/IAM/User"}},s={},c=[{value:"Sampke Code",id:"sampke-code",level:2},{value:"Role with a pre-defined AWS policy",id:"role-with-a-pre-defined-aws-policy",level:3},{value:"Attach a user defined policy to a role",id:"attach-a-user-defined-policy-to-a-role",level:3},{value:"Add an inline policy to a role",id:"add-an-inline-policy-to-a-role",level:3},{value:"Add a role to an instance profile",id:"add-a-role-to-an-instance-profile",level:3},{value:"Properties",id:"properties",level:3},{value:"Dependencies",id:"dependencies",level:3},{value:"Used By",id:"used-by",level:3},{value:"Examples",id:"examples",level:3},{value:"List",id:"list",level:3}],p={toc:c},u="wrapper";function m(e){let{components:a,...n}=e;return(0,t.kt)(u,(0,r.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"Provides an ",(0,t.kt)("a",{parentName:"p",href:"https://console.aws.amazon.com/iamv2/home#/roles"},"Iam Role")),(0,t.kt)("h2",{id:"sampke-code"},"Sampke Code"),(0,t.kt)("h3",{id:"role-with-a-pre-defined-aws-policy"},"Role with a pre-defined AWS policy"),(0,t.kt)("p",null,"Create an Iam Role and attach an pre-defined AWS Policy"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "Role",\n    group: "IAM",\n    name: "ecsInstanceRole",\n    properties: ({}) => ({\n      Path: "/",\n      AssumeRolePolicyDocument: {\n        Version: "2008-10-17",\n        Statement: [\n          {\n            Sid: "",\n            Effect: "Allow",\n            Principal: {\n              Service: "ec2.amazonaws.com",\n            },\n            Action: "sts:AssumeRole",\n          },\n        ],\n      },\n      AttachedPolicies: [\n        {\n          PolicyName: "AmazonEC2ContainerServiceforEC2Role",\n          PolicyArn:\n            "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",\n        },\n      ],\n    }),\n];\n')),(0,t.kt)("h3",{id:"attach-a-user-defined-policy-to-a-role"},"Attach a user defined policy to a role"),(0,t.kt)("p",null,"Create an Iam Role and attach an user-defined AWS Policy"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "Role",\n    group: "IAM",\n    name: "lambda-role",\n    properties: ({}) => ({\n      Path: "/",\n      AssumeRolePolicyDocument: {\n        Version: "2012-10-17",\n        Statement: [\n          {\n            Sid: "",\n            Effect: "Allow",\n            Principal: {\n              Service: "lambda.amazonaws.com",\n            },\n            Action: "sts:AssumeRole",\n          },\n        ],\n      },\n    }),\n    dependencies: () => ({\n      policies: ["lambda-policy"],\n    }),\n  },\n  {\n    type: "Policy",\n    group: "IAM",\n    name: "lambda-policy",\n    properties: ({}) => ({\n      PolicyDocument: {\n        Version: "2012-10-17",\n        Statement: [\n          {\n            Action: ["logs:*"],\n            Effect: "Allow",\n            Resource: "*",\n          },\n        ],\n      },\n      Path: "/",\n      Description: "Allow logs",\n    }),\n  },\n];\n')),(0,t.kt)("h3",{id:"add-an-inline-policy-to-a-role"},"Add an inline policy to a role"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "Role",\n    group: "IAM",\n    properties: ({}) => ({\n      RoleName: "lambda-role",\n      AssumeRolePolicyDocument: {\n        Version: "2012-10-17",\n        Statement: [\n          {\n            Sid: "",\n            Effect: "Allow",\n            Principal: {\n              Service: "lambda.amazonaws.com",\n            },\n            Action: "sts:AssumeRole",\n          },\n        ],\n      },\n      Policies: [\n        {\n          PolicyDocument: {\n            Version: "2012-10-17",\n            Statement: [\n              {\n                Action: "dynamodb:*",\n                Resource: [\n                  "arn:aws:dynamodb:eu-west-2:1234567890:table/AppsyncCdkAppStack-CDKNotesTable254A7FD1-3MPG6DUNDCO9",\n                ],\n                Effect: "Allow",\n              },\n            ],\n          },\n          PolicyName: "AppSyncNotesHandlerServiceRoleDefaultPolicy12C70C4F",\n        },\n      ],\n    }),\n    dependencies: () => ({\n      policies: ["lambda-policy"],\n    }),\n  },\n];\n')),(0,t.kt)("h3",{id:"add-a-role-to-an-instance-profile"},"Add a role to an instance profile"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "Role",\n    group: "IAM",\n    properties: ({}) => ({\n      RoleName: "role-ecs",\n      Path: "/",\n      AssumeRolePolicyDocument: {\n        Version: "2012-10-17",\n        Statement: [\n          {\n            Effect: "Allow",\n            Principal: {\n              Service: "ec2.amazonaws.com",\n            },\n            Action: "sts:AssumeRole",\n          },\n        ],\n      },\n    }),\n  },\n  {\n    type: "InstanceProfile",\n    group: "IAM",\n    name: "role-ecs",\n    dependencies: () => ({\n      roles: ["role-ecs"],\n    }),\n  },\n];\n')),(0,t.kt)("h3",{id:"properties"},"Properties"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/clients/client-iam/interfaces/createrolecommandinput.html"},"CreateRoleCommandInput"))),(0,t.kt)("h3",{id:"dependencies"},"Dependencies"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/IAM/Policy"},"IAM Policy")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/IAM/OpenIDConnectProvider"},"IAM OpenIDConnectProvider")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/DynamoDB/Table"},"DynamoDB Table")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/SQS/Queue"},"SQS Queue")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/SNS/SNSTopic"},"SNS Topic")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/EFS/FileSystem"},"EFS FileSystem")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/EFS/AccessPoint"},"EFS AccessPoint"))),(0,t.kt)("h3",{id:"used-by"},"Used By"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/APIGateway/Account"},"APIGateway Account")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/APIGateway/RestApi"},"APIGateway RestApi")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/ApiGatewayV2/Integration"},"ApiGatewayV2 Integration")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"./ConfigurationProfile.md"},"AppConfig Configuration Profile")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/AutoScaling/AutoScalingGroup"},"AutoScaling AutoScalingGroup")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/AppRunner/Service"},"AppRunner Service")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/AppSync/DataSource"},"AppSync DataSource")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/AppSync/GraphqlApi"},"AppSync GraphqlApi")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/Batch/ComputeEnvironment"},"Batch Compute Environment")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/Batch/JobDefinition"},"Batch Job Definition")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/CloudFormation/Stack"},"CloudFormation Stack")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/CloudTrail/CloudTrail"},"CloudTrail Trail")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/CloudWatchEvents/Target"},"CloudWatchEvents Target")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/CloudWatchLogs/SubscriptionFilter"},"CloudWatchLogs SubscriptionFilter")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/CodeBuild/Project"},"CodeBuild Project")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/CodeDeploy/Application"},"CodeDeploy Application")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/CodePipeline/Pipeline"},"CodePipeline Pipeline")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/Config/ConfigurationRecorder"},"Config Configuration Recorder")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/EC2/FlowLogs"},"EC2 Flow Logs ")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/EC2/VpcEndpoint"},"EC2 Vpc Endpoint")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/ECS/TaskDefinition"},"ECS TaskDefinition")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/EKS/Cluster"},"EKS Cluster")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/EKS/NodeGroup"},"EKS NodeGroup")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/Firehose/DeliveryStream"},"Firehose DeliveryStream")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/IAM/InstanceProfile"},"IAM Instance Profile")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/Lambda/Function"},"Lambda Function")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/Glue/Job"},"Glue Job")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/RDS/DBInstance"},"RDS DBInstance")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/RDS/DBCluster"},"RDS DBCluster")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/RDS/DBProxy"},"RDS DBProxy")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/SSM/Document"},"SSM Document")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"/docs/aws/resources/StepFunctions/StateMachine"},"StepFunctions StateMachine"))),(0,t.kt)("h3",{id:"examples"},"Examples"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/blob/main/examples/aws/APIGateway/restapi-lambda"},"APIGateway restapi-lambda")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/blob/main/examples/aws/ApiGatewayV2/http-lambda"},"ApiGatewayV2 http-lambda")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/tree/main/examples/aws/serverless-patterns/apigw-http-api-eventbridge"},"apigw-http-api-eventbridge")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/blob/main/examples/aws/AppRunner/apprunner-simple"},"AppRunner apprunner-simple")),(0,t.kt)("li",{parentName:"ul"},"[aws-cdk-examples/application-load-balancer-fargate-service]","((",(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/tree/main/examples/aws/aws-cdk-examples/application-load-balancer-fargate-service"},"https://github.com/grucloud/grucloud/tree/main/examples/aws/aws-cdk-examples/application-load-balancer-fargate-service"),")"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/blob/main/examples/aws/AppSync/graphql"},"AppSync graphql")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/tree/main/examples/aws/serverless-patterns/appsync-eventbridge"},"serverless-patterns appsync-eventbridge")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/tree/main/examples/aws/CodeBuild/codebuild-simple"},"CodeBuild codebuild-simple")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/tree/main/examples/aws/CodeDeploy/codedeploy-ecs"},"Codedeploy codedeploy-ecs")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/tree/main/examples/aws/CodePipeline/code-pipeline-ecr"},"CodePipeline code-pipeline-ecr")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/blob/main/examples/aws/EC2/flow-logs/flow-logs-vpc"},"EC2 flow logs on vpc")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/tree/main/examples/aws/EKS/eks-simple"},"EKS simple")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/tree/main/examples/aws/Firehose/firehose-delivery-stream"},"Step function invoking a Glue job")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/blob/main/examples/aws/IAM/iam"},"IAM simple example")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/blob/main/examples/aws/RDS/aurora-v2"},"RDS aurora-v2")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/tree/main/examples/aws/serverless-patterns/apigw-http-api-lambda-rds-proxy"},"apigw-http-api-lambda-rds-proxy")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/tree/main/examples/aws/serverless-patterns/sfn-dynamodb"},"StepFunctions send item to dynamoDB"))),(0,t.kt)("h3",{id:"list"},"List"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sh"},"gc list -t IAM::Role\n")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sh"},'Listing resources on 1 provider: aws\n\u2713 aws\n  \u2713 Initialising\n  \u2713 Listing 1/1\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 3 iam::Role from aws                                                                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 name: role-cluster                                                                     \u2502\n\u2502 managedByUs: Yes                                                                       \u2502\n\u2502 live:                                                                                  \u2502\n\u2502   Path: /                                                                              \u2502\n\u2502   RoleName: role-cluster                                                               \u2502\n\u2502   RoleId: AROA4HNBM2ZQBIII7KZ4Z                                                        \u2502\n\u2502   Arn: arn:aws:iam::840541460064:role/role-cluster                                     \u2502\n\u2502   CreateDate: 2021-07-21T13:29:11.000Z                                                 \u2502\n\u2502   AssumeRolePolicyDocument:                                                            \u2502\n\u2502     Version: 2012-10-17                                                                \u2502\n\u2502     Statement:                                                                         \u2502\n\u2502       - Effect: Allow                                                                  \u2502\n\u2502         Principal:                                                                     \u2502\n\u2502           Service: eks.amazonaws.com                                                   \u2502\n\u2502         Action: sts:AssumeRole                                                         \u2502\n\u2502   MaxSessionDuration: 3600                                                             \u2502\n\u2502   Tags:                                                                                \u2502\n\u2502     - Key: Name                                                                        \u2502\n\u2502       Value: role-cluster                                                              \u2502\n\u2502     - Key: gc-managed-by                                                               \u2502\n\u2502       Value: grucloud                                                                  \u2502\n\u2502     - Key: gc-created-by-provider                                                      \u2502\n\u2502       Value: aws                                                                       \u2502\n\u2502     - Key: gc-stage                                                                    \u2502\n\u2502       Value: dev                                                                       \u2502\n\u2502     - Key: gc-project-name                                                             \u2502\n\u2502       Value: @grucloud/example-module-aws-load-balancer-controller                     \u2502\n\u2502     - Key: gc-namespace                                                                \u2502\n\u2502       Value: EKS                                                                       \u2502\n\u2502   InstanceProfiles: []                                                                 \u2502\n\u2502   AttachedPolicies:                                                                    \u2502\n\u2502     - PolicyName: AmazonEKSClusterPolicy                                               \u2502\n\u2502       PolicyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy                        \u2502\n\u2502     - PolicyName: AmazonEKSVPCResourceController                                       \u2502\n\u2502       PolicyArn: arn:aws:iam::aws:policy/AmazonEKSVPCResourceController                \u2502\n\u2502   Policies: []                                                                         \u2502\n\u2502                                                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 name: role-load-balancer                                                               \u2502\n\u2502 managedByUs: Yes                                                                       \u2502\n\u2502 live:                                                                                  \u2502\n\u2502   Path: /                                                                              \u2502\n\u2502   RoleName: role-load-balancer                                                         \u2502\n\u2502   RoleId: AROA4HNBM2ZQH2RLTJRCD                                                        \u2502\n\u2502   Arn: arn:aws:iam::840541460064:role/role-load-balancer                               \u2502\n\u2502   CreateDate: 2021-07-21T13:39:48.000Z                                                 \u2502\n\u2502   AssumeRolePolicyDocument:                                                            \u2502\n\u2502     Version: 2012-10-17                                                                \u2502\n\u2502     Statement:                                                                         \u2502\n\u2502       - Effect: Allow                                                                  \u2502\n\u2502         Principal:                                                                     \u2502\n\u2502           Federated: arn:aws:iam::840541460064:oidc-provider/oidc.eks.eu-west-2.amazo\u2026 \u2502\n\u2502         Action: sts:AssumeRoleWithWebIdentity                                          \u2502\n\u2502         Condition:                                                                     \u2502\n\u2502           StringEquals:                                                                \u2502\n\u2502             oidc.eks.eu-west-2.amazonaws.com/id/9377E3CCC52850A5BC4BEF6D012643E6:aud:\u2026 \u2502\n\u2502   MaxSessionDuration: 3600                                                             \u2502\n\u2502   Tags:                                                                                \u2502\n\u2502     - Key: Name                                                                        \u2502\n\u2502       Value: role-load-balancer                                                        \u2502\n\u2502     - Key: gc-managed-by                                                               \u2502\n\u2502       Value: grucloud                                                                  \u2502\n\u2502     - Key: gc-created-by-provider                                                      \u2502\n\u2502       Value: aws                                                                       \u2502\n\u2502     - Key: gc-stage                                                                    \u2502\n\u2502       Value: dev                                                                       \u2502\n\u2502     - Key: gc-project-name                                                             \u2502\n\u2502       Value: @grucloud/example-module-aws-load-balancer-controller                     \u2502\n\u2502     - Key: gc-namespace                                                                \u2502\n\u2502       Value: LoadBalancerControllerRole                                                \u2502\n\u2502   AttachedPolicies:                                                                    \u2502\n\u2502     - PolicyName: AWSLoadBalancerControllerIAMPolicy                                   \u2502\n\u2502       PolicyArn: arn:aws:iam::840541460064:policy/AWSLoadBalancerControllerIAMPolicy   \u2502\n\u2502   InstanceProfiles: []                                                                 \u2502\n\u2502   Policies: []                                                                         \u2502\n\u2502                                                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 name: role-node-group                                                                  \u2502\n\u2502 managedByUs: Yes                                                                       \u2502\n\u2502 live:                                                                                  \u2502\n\u2502   Path: /                                                                              \u2502\n\u2502   RoleName: role-node-group                                                            \u2502\n\u2502   RoleId: AROA4HNBM2ZQAQEEDNKMM                                                        \u2502\n\u2502   Arn: arn:aws:iam::840541460064:role/role-node-group                                  \u2502\n\u2502   CreateDate: 2021-07-21T13:29:11.000Z                                                 \u2502\n\u2502   AssumeRolePolicyDocument:                                                            \u2502\n\u2502     Version: 2012-10-17                                                                \u2502\n\u2502     Statement:                                                                         \u2502\n\u2502       - Effect: Allow                                                                  \u2502\n\u2502         Principal:                                                                     \u2502\n\u2502           Service: ec2.amazonaws.com                                                   \u2502\n\u2502         Action: sts:AssumeRole                                                         \u2502\n\u2502   MaxSessionDuration: 3600                                                             \u2502\n\u2502   Tags:                                                                                \u2502\n\u2502     - Key: Name                                                                        \u2502\n\u2502       Value: role-node-group                                                           \u2502\n\u2502     - Key: gc-managed-by                                                               \u2502\n\u2502       Value: grucloud                                                                  \u2502\n\u2502     - Key: gc-created-by-provider                                                      \u2502\n\u2502       Value: aws                                                                       \u2502\n\u2502     - Key: gc-stage                                                                    \u2502\n\u2502       Value: dev                                                                       \u2502\n\u2502     - Key: gc-project-name                                                             \u2502\n\u2502       Value: @grucloud/example-module-aws-load-balancer-controller                     \u2502\n\u2502     - Key: gc-namespace                                                                \u2502\n\u2502       Value: EKS                                                                       \u2502\n\u2502   AttachedPolicies:                                                                    \u2502\n\u2502     - PolicyName: AmazonEKSWorkerNodePolicy                                            \u2502\n\u2502       PolicyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy                     \u2502\n\u2502     - PolicyName: AmazonEC2ContainerRegistryReadOnly                                   \u2502\n\u2502       PolicyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly            \u2502\n\u2502     - PolicyName: AmazonEKS_CNI_Policy                                                 \u2502\n\u2502       PolicyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy                          \u2502\n\u2502   Policies: []                                                                         \u2502\n\u2502   InstanceProfiles:                                                                    \u2502\n\u2502     - InstanceProfileName: eks-b6bd64a5-a3dc-30a8-b4a5-f6a7fd37e90d                    \u2502\n\u2502       InstanceProfileId: AIPA4HNBM2ZQACXAPZ3H7                                         \u2502\n\u2502       Arn: arn:aws:iam::840541460064:instance-profile/eks-b6bd64a5-a3dc-30a8-b4a5-f6a\u2026 \u2502\n\u2502       Path: /                                                                          \u2502\n\u2502                                                                                        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\nList Summary:\nProvider: aws\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 aws                                                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 iam::Role                      \u2502 role-cluster                                     \u2502\n\u2502                                \u2502 role-load-balancer                               \u2502\n\u2502                                \u2502 role-node-group                                  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n3 resources, 2 types, 1 provider\nCommand "gc l -t Role" executed in 5s\n')))}m.isMDXComponent=!0}}]);