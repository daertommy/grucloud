"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5277],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return m}});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),u=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},p=function(e){var n=u(e.components);return t.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},l=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=u(r),m=o,f=l["".concat(c,".").concat(m)]||l[m]||d[m]||a;return r?t.createElement(f,s(s({ref:n},p),{},{components:r})):t.createElement(f,s({ref:n},p))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=l;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=r[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}l.displayName="MDXCreateElement"},29277:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return l}});var t=r(87462),o=r(63366),a=(r(67294),r(3905)),s=["components"],i={id:"DataTransferJob",title:"DataTransferJob"},c=void 0,u={unversionedId:"azure/resources/DocumentDB/DataTransferJob",id:"azure/resources/DocumentDB/DataTransferJob",isDocsHomePage:!1,title:"DataTransferJob",description:"Provides a DataTransferJob from the DocumentDB group",source:"@site/docs/azure/resources/DocumentDB/DataTransferJob.md",sourceDirName:"azure/resources/DocumentDB",slug:"/azure/resources/DocumentDB/DataTransferJob",permalink:"/docs/azure/resources/DocumentDB/DataTransferJob",tags:[],version:"current",frontMatter:{id:"DataTransferJob",title:"DataTransferJob"},sidebar:"docs",previous:{title:"CassandraResourceCassandraViewThroughput",permalink:"/docs/azure/resources/DocumentDB/CassandraResourceCassandraViewThroughput"},next:{title:"DatabaseAccount",permalink:"/docs/azure/resources/DocumentDB/DatabaseAccount"}},p=[{value:"Examples",id:"examples",children:[{value:"CosmosDBDataTransferJobCreate",id:"cosmosdbdatatransferjobcreate",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],d={toc:p};function l(e){var n=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Provides a ",(0,a.kt)("strong",{parentName:"p"},"DataTransferJob")," from the ",(0,a.kt)("strong",{parentName:"p"},"DocumentDB")," group"),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("h3",{id:"cosmosdbdatatransferjobcreate"},"CosmosDBDataTransferJobCreate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "DataTransferJob",\n    group: "DocumentDB",\n    name: "myDataTransferJob",\n    properties: () => ({\n      properties: {\n        source: {\n          component: "CosmosDBCassandra",\n          keyspaceName: "keyspace",\n          tableName: "table",\n        },\n        destination: {\n          component: "AzureBlobStorage",\n          containerName: "blob_container",\n          endpointUrl: "https://blob.windows.net",\n        },\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      account: "myDatabaseAccount",\n    }),\n  },\n];\n\n')),(0,a.kt)("h2",{id:"dependencies"},"Dependencies"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/azure/resources/DocumentDB/DatabaseAccount"},"DatabaseAccount"))),(0,a.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"{\n  description: 'Parameters to create Data Transfer Job',\n  type: 'object',\n  properties: {\n    properties: {\n      description: 'Data Transfer Create Job Properties',\n      type: 'object',\n      properties: {\n        jobName: { readOnly: true, type: 'string', description: 'Job Name' },\n        source: {\n          description: 'Source DataStore details',\n          type: 'object',\n          properties: {\n            component: {\n              type: 'string',\n              enum: [\n                'CosmosDBCassandra',\n                'CosmosDBSql',\n                'AzureBlobStorage'\n              ],\n              'x-ms-enum': { name: 'DataTransferComponent', modelAsString: true },\n              default: 'CosmosDBCassandra'\n            }\n          },\n          discriminator: 'component',\n          required: [ 'component' ]\n        },\n        destination: {\n          description: 'Destination DataStore details',\n          type: 'object',\n          properties: {\n            component: {\n              type: 'string',\n              enum: [\n                'CosmosDBCassandra',\n                'CosmosDBSql',\n                'AzureBlobStorage'\n              ],\n              'x-ms-enum': { name: 'DataTransferComponent', modelAsString: true },\n              default: 'CosmosDBCassandra'\n            }\n          },\n          discriminator: 'component',\n          required: [ 'component' ]\n        },\n        status: { readOnly: true, type: 'string', description: 'Job Status' },\n        processedCount: {\n          readOnly: true,\n          type: 'integer',\n          description: 'Processed Count.',\n          format: 'int64'\n        },\n        totalCount: {\n          readOnly: true,\n          type: 'integer',\n          description: 'Total Count.',\n          format: 'int64'\n        },\n        lastUpdatedUtcTime: {\n          readOnly: true,\n          type: 'string',\n          format: 'date-time',\n          description: 'Last Updated Time (ISO-8601 format).'\n        },\n        workerCount: {\n          description: 'Worker count',\n          type: 'integer',\n          minimum: 0,\n          format: 'int32'\n        },\n        error: {\n          readOnly: true,\n          description: 'Error response for Faulted job',\n          properties: {\n            code: { description: 'Error code.', type: 'string' },\n            message: {\n              description: 'Error message indicating why the operation failed.',\n              type: 'string'\n            }\n          }\n        }\n      },\n      required: [ 'source', 'destination' ]\n    }\n  },\n  required: [ 'properties' ],\n  allOf: [\n    {\n      type: 'object',\n      description: 'The resource model definition for a ARM proxy resource. It will have everything other than required location and tags',\n      properties: {\n        id: {\n          readOnly: true,\n          type: 'string',\n          description: 'The unique resource identifier of the database account.'\n        },\n        name: {\n          readOnly: true,\n          type: 'string',\n          description: 'The name of the database account.'\n        },\n        type: {\n          readOnly: true,\n          type: 'string',\n          description: 'The type of Azure resource.'\n        }\n      },\n      'x-ms-azure-resource': true\n    }\n  ]\n}\n")),(0,a.kt)("h2",{id:"misc"},"Misc"),(0,a.kt)("p",null,"The resource version is ",(0,a.kt)("inlineCode",{parentName:"p"},"2022-02-15-preview"),"."),(0,a.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/preview/2022-02-15-preview/dataTransferService.json"},"here"),"."))}l.isMDXComponent=!0}}]);