"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[25809],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>m});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)t=c[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),p=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(s.Provider,{value:r},e.children)},l="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),l=p(t),d=o,m=l["".concat(s,".").concat(d)]||l[d]||y[d]||c;return t?n.createElement(m,i(i({ref:r},u),{},{components:t})):n.createElement(m,i({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var c=t.length,i=new Array(c);i[0]=d;var a={};for(var s in r)hasOwnProperty.call(r,s)&&(a[s]=r[s]);a.originalType=e,a[l]="string"==typeof e?e:o,i[1]=a;for(var p=2;p<c;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},99018:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>c,metadata:()=>a,toc:()=>p});var n=t(87462),o=(t(67294),t(3905));const c={id:"EncryptionScope",title:"EncryptionScope"},i=void 0,a={unversionedId:"azure/resources/Storage/EncryptionScope",id:"azure/resources/Storage/EncryptionScope",title:"EncryptionScope",description:"Provides a EncryptionScope from the Storage group",source:"@site/docs/azure/resources/Storage/EncryptionScope.md",sourceDirName:"azure/resources/Storage",slug:"/azure/resources/Storage/EncryptionScope",permalink:"/docs/azure/resources/Storage/EncryptionScope",draft:!1,tags:[],version:"current",frontMatter:{id:"EncryptionScope",title:"EncryptionScope"},sidebar:"docs",previous:{title:"BlobService",permalink:"/docs/azure/resources/Storage/BlobService"},next:{title:"FileService",permalink:"/docs/azure/resources/Storage/FileService"}},s={},p=[{value:"Examples",id:"examples",level:2},{value:"StorageAccountPutEncryptionScope",id:"storageaccountputencryptionscope",level:3},{value:"StorageAccountPutEncryptionScopeWithInfrastructureEncryption",id:"storageaccountputencryptionscopewithinfrastructureencryption",level:3},{value:"Dependencies",id:"dependencies",level:2},{value:"Swagger Schema",id:"swagger-schema",level:2},{value:"Misc",id:"misc",level:2}],u={toc:p},l="wrapper";function y(e){let{components:r,...t}=e;return(0,o.kt)(l,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"EncryptionScope")," from the ",(0,o.kt)("strong",{parentName:"p"},"Storage")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"storageaccountputencryptionscope"},"StorageAccountPutEncryptionScope"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "EncryptionScope",\n    group: "Storage",\n    name: "myEncryptionScope",\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      account: "myStorageAccount",\n    }),\n  },\n];\n\n')),(0,o.kt)("h3",{id:"storageaccountputencryptionscopewithinfrastructureencryption"},"StorageAccountPutEncryptionScopeWithInfrastructureEncryption"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "EncryptionScope",\n    group: "Storage",\n    name: "myEncryptionScope",\n    properties: () => ({\n      properties: { requireInfrastructureEncryption: true },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      account: "myStorageAccount",\n    }),\n  },\n];\n\n')),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Storage/StorageAccount"},"StorageAccount"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},"{\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      'x-ms-client-name': 'EncryptionScopeProperties',\n      description: 'Properties of the encryption scope.',\n      properties: {\n        source: {\n          type: 'string',\n          enum: [ 'Microsoft.Storage', 'Microsoft.KeyVault' ],\n          'x-ms-enum': { name: 'EncryptionScopeSource', modelAsString: true },\n          description: 'The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.'\n        },\n        state: {\n          type: 'string',\n          enum: [ 'Enabled', 'Disabled' ],\n          'x-ms-enum': { name: 'EncryptionScopeState', modelAsString: true },\n          description: 'The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.'\n        },\n        creationTime: {\n          readOnly: true,\n          type: 'string',\n          format: 'date-time',\n          description: 'Gets the creation date and time of the encryption scope in UTC.'\n        },\n        lastModifiedTime: {\n          readOnly: true,\n          type: 'string',\n          format: 'date-time',\n          description: 'Gets the last modification date and time of the encryption scope in UTC.'\n        },\n        keyVaultProperties: {\n          description: \"The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.\",\n          properties: {\n            keyUri: {\n              type: 'string',\n              description: 'The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.'\n            },\n            currentVersionedKeyIdentifier: {\n              type: 'string',\n              readOnly: true,\n              description: 'The object identifier of the current versioned Key Vault Key in use.'\n            },\n            lastKeyRotationTimestamp: {\n              type: 'string',\n              readOnly: true,\n              format: 'date-time',\n              description: 'Timestamp of last rotation of the Key Vault Key.'\n            }\n          }\n        },\n        requireInfrastructureEncryption: {\n          type: 'boolean',\n          description: 'A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.'\n        }\n      }\n    }\n  },\n  allOf: [\n    {\n      title: 'Resource',\n      description: 'Common fields that are returned in the response for all Azure Resource Manager resources',\n      type: 'object',\n      properties: {\n        id: {\n          readOnly: true,\n          type: 'string',\n          description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\n        },\n        name: {\n          readOnly: true,\n          type: 'string',\n          description: 'The name of the resource'\n        },\n        type: {\n          readOnly: true,\n          type: 'string',\n          description: 'The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"'\n        }\n      },\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'The Encryption Scope resource.'\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2022-05-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/storage/resource-manager/Microsoft.Storage/stable/2022-05-01/storage.json"},"here"),"."))}y.isMDXComponent=!0}}]);