"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[334],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(r),f=i,g=l["".concat(c,".").concat(f)]||l[f]||d[f]||a;return r?n.createElement(g,o(o({ref:t},u),{},{components:r})):n.createElement(g,o({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=l;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}l.displayName="MDXCreateElement"},64741:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(87462),i=(r(67294),r(3905));const a={id:"Migration",title:"Migration"},o=void 0,s={unversionedId:"azure/resources/DBforPostgreSQL/Migration",id:"azure/resources/DBforPostgreSQL/Migration",title:"Migration",description:"Provides a Migration from the DBforPostgreSQL group",source:"@site/docs/azure/resources/DBforPostgreSQL/Migration.md",sourceDirName:"azure/resources/DBforPostgreSQL",slug:"/azure/resources/DBforPostgreSQL/Migration",permalink:"/docs/azure/resources/DBforPostgreSQL/Migration",draft:!1,tags:[],version:"current",frontMatter:{id:"Migration",title:"Migration"},sidebar:"docs",previous:{title:"FlexibleServer",permalink:"/docs/azure/resources/DBforPostgreSQL/FlexibleServer"},next:{title:"PrivateEndpointConnection",permalink:"/docs/azure/resources/DBforPostgreSQL/PrivateEndpointConnection"}},c={},p=[{value:"Examples",id:"examples",level:2},{value:"Migrations_Create",id:"migrations_create",level:3},{value:"Dependencies",id:"dependencies",level:2},{value:"Swagger Schema",id:"swagger-schema",level:2},{value:"Misc",id:"misc",level:2}],u={toc:p};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Provides a ",(0,i.kt)("strong",{parentName:"p"},"Migration")," from the ",(0,i.kt)("strong",{parentName:"p"},"DBforPostgreSQL")," group"),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"migrations_create"},"Migrations_Create"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "Migration",\n    group: "DBforPostgreSQL",\n    name: "myMigration",\n    properties: () => ({\n      properties: {\n        sourceDBServerResourceId:\n          "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.DBForPostgreSql/servers/testsource",\n        secretParameters: {\n          adminCredentials: {\n            sourceServerPassword: "testsourcepassword",\n            targetServerPassword: "testtargetpassword",\n          },\n          aadApp: {\n            aadSecret: "testaadsecret",\n            clientId: "cccccccc-cccc-cccc-cccc-cccccccccccc",\n            tenantId: "tttttttt-tttt-tttt-tttt-tttttttttttt",\n          },\n        },\n        dBsToMigrate: ["db1", "db2", "db3", "db4"],\n        migrationResourceGroup: {\n          resourceId:\n            "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg",\n          subnetResourceId:\n            "/subscriptions/ffffffff-ffff-ffff-ffff-ffffffffffff/resourceGroups/testrg/providers/Microsoft.Network/virtualNetworks/testvnet/subnets/default",\n        },\n      },\n      location: "westus",\n    }),\n    dependencies: ({}) => ({\n      userAssignedIdentity: "myUserAssignedIdentity",\n      subnet: "mySubnet",\n      targetDBServer: "myFlexibleServer",\n    }),\n  },\n];\n\n')),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/ManagedIdentity/UserAssignedIdentity"},"UserAssignedIdentity")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/Subnet"},"Subnet")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/azure/resources/DBforPostgreSQL/FlexibleServer"},"FlexibleServer"))),(0,i.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"{\n  type: 'object',\n  properties: {\n    properties: {\n      description: 'Migration resource properties.',\n      'x-ms-client-flatten': true,\n      type: 'object',\n      properties: {\n        migrationId: { type: 'string', format: 'uuid', readOnly: true },\n        migrationName: { type: 'string', readOnly: true },\n        migrationDetailsLevel: {\n          readOnly: true,\n          enum: [ 'Default', 'Summary', 'Full' ],\n          type: 'string',\n          description: 'Migration details level.',\n          'x-ms-enum': { name: 'MigrationDetailsLevel', modelAsString: true }\n        },\n        currentStatus: {\n          readOnly: true,\n          type: 'object',\n          properties: {\n            state: {\n              readOnly: true,\n              enum: [\n                'InProgress',\n                'WaitingForUserAction',\n                'Canceled',\n                'Failed',\n                'Succeeded'\n              ],\n              type: 'string',\n              description: 'Migration state.',\n              'x-ms-enum': { name: 'MigrationState', modelAsString: true }\n            },\n            error: { type: 'string', readOnly: true },\n            currentSubStateDetails: {\n              readOnly: true,\n              type: 'object',\n              properties: {\n                currentSubState: {\n                  readOnly: true,\n                  enum: [\n                    'PerformingPreRequisiteSteps',\n                    'WaitingForLogicalReplicationSetupRequestOnSourceDB',\n                    'WaitingForDBsToMigrateSpecification',\n                    'WaitingForTargetDBOverwriteConfirmation',\n                    'WaitingForDataMigrationScheduling',\n                    'WaitingForDataMigrationWindow',\n                    'MigratingData',\n                    'WaitingForCutoverTrigger',\n                    'CompletingMigration',\n                    'Completed'\n                  ],\n                  type: 'string',\n                  description: 'Migration sub state.',\n                  'x-ms-enum': { name: 'MigrationSubState', modelAsString: true }\n                }\n              },\n              description: 'Migration sub state details.'\n            }\n          },\n          description: 'Migration status.'\n        },\n        sourceDBServerMetadata: {\n          readOnly: true,\n          type: 'object',\n          properties: {\n            location: { type: 'string' },\n            version: { type: 'string' },\n            storageMB: { format: 'int32', type: 'integer' },\n            sku: {\n              type: 'object',\n              properties: {\n                name: {\n                  type: 'string',\n                  description: 'The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.'\n                },\n                tier: {\n                  type: 'string',\n                  description: 'The tier of the particular SKU, e.g. Burstable.',\n                  enum: [ 'Burstable', 'GeneralPurpose', 'MemoryOptimized' ],\n                  'x-ms-enum': { name: 'SkuTier', modelAsString: true }\n                }\n              },\n              required: [ 'name', 'tier' ],\n              description: 'Sku information related properties of a server.'\n            }\n          },\n          description: 'Database server metadata.'\n        },\n        targetDBServerMetadata: {\n          readOnly: true,\n          type: 'object',\n          properties: {\n            location: { type: 'string' },\n            version: { type: 'string' },\n            storageMB: { format: 'int32', type: 'integer' },\n            sku: {\n              type: 'object',\n              properties: {\n                name: {\n                  type: 'string',\n                  description: 'The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3.'\n                },\n                tier: {\n                  type: 'string',\n                  description: 'The tier of the particular SKU, e.g. Burstable.',\n                  enum: [ 'Burstable', 'GeneralPurpose', 'MemoryOptimized' ],\n                  'x-ms-enum': { name: 'SkuTier', modelAsString: true }\n                }\n              },\n              required: [ 'name', 'tier' ],\n              description: 'Sku information related properties of a server.'\n            }\n          },\n          description: 'Database server metadata.'\n        },\n        sourceDBServerResourceId: { type: 'string' },\n        secretParameters: {\n          required: [ 'aadApp', 'adminCredentials' ],\n          type: 'object',\n          properties: {\n            adminCredentials: {\n              'x-ms-secret': true,\n              'x-ms-external': true,\n              type: 'object',\n              required: [ 'sourceServerPassword', 'targetServerPassword' ],\n              properties: {\n                sourceServerPassword: {\n                  type: 'string',\n                  'x-ms-secret': true,\n                  'x-ms-external': true,\n                  'x-ms-mutability': [ 'create', 'update' ]\n                },\n                targetServerPassword: {\n                  type: 'string',\n                  'x-ms-secret': true,\n                  'x-ms-external': true,\n                  'x-ms-mutability': [ 'create', 'update' ]\n                }\n              },\n              description: 'Server admin credentials.'\n            },\n            aadApp: {\n              'x-ms-secret': true,\n              'x-ms-external': true,\n              type: 'object',\n              required: [ 'aadSecret', 'clientId', 'tenantId' ],\n              properties: {\n                aadSecret: {\n                  type: 'string',\n                  'x-ms-secret': true,\n                  'x-ms-external': true,\n                  'x-ms-mutability': [ 'create', 'update' ]\n                },\n                clientId: { type: 'string', format: 'uuid' },\n                tenantId: { type: 'string', format: 'uuid' }\n              },\n              description: 'Azure active directory application.'\n            }\n          },\n          description: 'Migration secret parameters.'\n        },\n        userAssignedIdentityResourceId: { type: 'string' },\n        targetDBServerResourceId: { type: 'string', readOnly: true },\n        dBsToMigrate: { maxItems: 8, type: 'array', items: { type: 'string' } },\n        migrationResourceGroup: {\n          type: 'object',\n          properties: {\n            resourceId: { type: 'string' },\n            subnetResourceId: { type: 'string' }\n          },\n          description: 'Migration resource group.'\n        },\n        setupLogicalReplicationOnSourceDBIfNeeded: { type: 'boolean' },\n        overwriteDBsInTarget: { type: 'boolean' },\n        migrationWindowStartTimeInUtc: { format: 'date-time', type: 'string' },\n        startDataMigration: { type: 'boolean' },\n        triggerCutover: { type: 'boolean' }\n      }\n    },\n    systemData: {\n      readOnly: true,\n      description: 'Metadata pertaining to creation and last modification of the resource.',\n      type: 'object',\n      properties: {\n        createdBy: {\n          type: 'string',\n          description: 'The identity that created the resource.'\n        },\n        createdByType: {\n          type: 'string',\n          description: 'The type of identity that created the resource.',\n          enum: [ 'User', 'Application', 'ManagedIdentity', 'Key' ],\n          'x-ms-enum': { name: 'createdByType', modelAsString: true }\n        },\n        createdAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'The timestamp of resource creation (UTC).'\n        },\n        lastModifiedBy: {\n          type: 'string',\n          description: 'The identity that last modified the resource.'\n        },\n        lastModifiedByType: {\n          type: 'string',\n          description: 'The type of identity that last modified the resource.',\n          enum: [ 'User', 'Application', 'ManagedIdentity', 'Key' ],\n          'x-ms-enum': { name: 'createdByType', modelAsString: true }\n        },\n        lastModifiedAt: {\n          type: 'string',\n          format: 'date-time',\n          description: 'The timestamp of resource last modification (UTC)'\n        }\n      }\n    }\n  },\n  allOf: [\n    {\n      title: 'Tracked Resource',\n      description: \"The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'\",\n      type: 'object',\n      properties: {\n        tags: {\n          type: 'object',\n          additionalProperties: { type: 'string' },\n          'x-ms-mutability': [ 'read', 'create', 'update' ],\n          description: 'Resource tags.'\n        },\n        location: {\n          type: 'string',\n          'x-ms-mutability': [ 'read', 'create' ],\n          description: 'The geo-location where the resource lives'\n        }\n      },\n      required: [ 'location' ],\n      allOf: [\n        {\n          title: 'Resource',\n          description: 'Common fields that are returned in the response for all Azure Resource Manager resources',\n          type: 'object',\n          properties: {\n            id: {\n              readOnly: true,\n              type: 'string',\n              description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\n            },\n            name: {\n              readOnly: true,\n              type: 'string',\n              description: 'The name of the resource'\n            },\n            type: {\n              readOnly: true,\n              type: 'string',\n              description: 'The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"'\n            }\n          },\n          'x-ms-azure-resource': true\n        }\n      ]\n    }\n  ],\n  description: 'Represents a migration resource.'\n}\n")),(0,i.kt)("h2",{id:"misc"},"Misc"),(0,i.kt)("p",null,"The resource version is ",(0,i.kt)("inlineCode",{parentName:"p"},"2021-06-15-privatepreview"),"."),(0,i.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/postgresql/resource-manager/Microsoft.DBforPostgreSQL/preview/2021-06-15-privatepreview/Migrations.json"},"here"),"."))}d.isMDXComponent=!0}}]);