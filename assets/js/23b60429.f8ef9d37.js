"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[33065],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),u=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,b=d["".concat(i,".").concat(m)]||d[m]||l[m]||s;return t?a.createElement(b,o(o({ref:n},p),{},{components:t})):a.createElement(b,o({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=d;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var u=2;u<s;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},22119:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var a=t(87462),r=t(63366),s=(t(67294),t(3905)),o=["components"],c={id:"DatabaseAccountCassandraTable",title:"DatabaseAccountCassandraTable"},i=void 0,u={unversionedId:"azure/resources/DocumentDB/DatabaseAccountCassandraTable",id:"azure/resources/DocumentDB/DatabaseAccountCassandraTable",isDocsHomePage:!1,title:"DatabaseAccountCassandraTable",description:"Provides a DatabaseAccountCassandraTable from the DocumentDB group",source:"@site/docs/azure/resources/DocumentDB/DatabaseAccountCassandraTable.md",sourceDirName:"azure/resources/DocumentDB",slug:"/azure/resources/DocumentDB/DatabaseAccountCassandraTable",permalink:"/docs/azure/resources/DocumentDB/DatabaseAccountCassandraTable",tags:[],version:"current",frontMatter:{id:"DatabaseAccountCassandraTable",title:"DatabaseAccountCassandraTable"},sidebar:"docs",previous:{title:"DatabaseAccountCassandraKeyspaceThroughput",permalink:"/docs/azure/resources/DocumentDB/DatabaseAccountCassandraKeyspaceThroughput"},next:{title:"DatabaseAccountCassandraTableThroughput",permalink:"/docs/azure/resources/DocumentDB/DatabaseAccountCassandraTableThroughput"}},p=[{value:"Examples",id:"examples",children:[{value:"CosmosDBCassandraTableCreateUpdate",id:"cosmosdbcassandratablecreateupdate",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],l={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Provides a ",(0,s.kt)("strong",{parentName:"p"},"DatabaseAccountCassandraTable")," from the ",(0,s.kt)("strong",{parentName:"p"},"DocumentDB")," group"),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"cosmosdbcassandratablecreateupdate"},"CosmosDBCassandraTableCreateUpdate"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "DatabaseAccountCassandraTable",\n    group: "DocumentDB",\n    name: "myDatabaseAccountCassandraTable",\n    properties: () => ({\n      properties: {\n        resource: {\n          id: "tableName",\n          defaultTtl: 100,\n          schema: {\n            columns: [{ name: "columnA", type: "Ascii" }],\n            partitionKeys: [{ name: "columnA" }],\n            clusterKeys: [{ name: "columnA", orderBy: "Asc" }],\n          },\n        },\n        options: {},\n      },\n    }),\n    dependencies: ({}) => ({\n      resourceGroup: "myResourceGroup",\n      account: "myDatabaseAccount",\n      keyspace: "myDatabaseAccountCassandraKeyspace",\n    }),\n  },\n];\n\n')),(0,s.kt)("h2",{id:"dependencies"},"Dependencies"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/DocumentDB/DatabaseAccount"},"DatabaseAccount")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/DocumentDB/DatabaseAccountCassandraKeyspace"},"DatabaseAccountCassandraKeyspace"))),(0,s.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"{\n  description: 'Parameters to create and update Cosmos DB Cassandra table.',\n  type: 'object',\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties to create and update Azure Cosmos DB Cassandra table.',\n      type: 'object',\n      properties: {\n        resource: {\n          description: 'The standard JSON format of a Cassandra table',\n          type: 'object',\n          properties: {\n            id: {\n              type: 'string',\n              description: 'Name of the Cosmos DB Cassandra table'\n            },\n            defaultTtl: {\n              type: 'integer',\n              description: 'Time to live of the Cosmos DB Cassandra table'\n            },\n            schema: {\n              description: 'Schema of the Cosmos DB Cassandra table',\n              type: 'object',\n              properties: {\n                columns: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    description: 'Cosmos DB Cassandra table column',\n                    properties: {\n                      name: {\n                        type: 'string',\n                        description: 'Name of the Cosmos DB Cassandra table column'\n                      },\n                      type: {\n                        type: 'string',\n                        description: 'Type of the Cosmos DB Cassandra table column'\n                      }\n                    }\n                  },\n                  description: 'List of Cassandra table columns.'\n                },\n                partitionKeys: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    description: 'Cosmos DB Cassandra table partition key',\n                    properties: {\n                      name: {\n                        type: 'string',\n                        description: 'Name of the Cosmos DB Cassandra table partition key'\n                      }\n                    }\n                  },\n                  description: 'List of partition key.'\n                },\n                clusterKeys: {\n                  type: 'array',\n                  items: {\n                    type: 'object',\n                    description: 'Cosmos DB Cassandra table cluster key',\n                    properties: {\n                      name: {\n                        type: 'string',\n                        description: 'Name of the Cosmos DB Cassandra table cluster key'\n                      },\n                      orderBy: {\n                        type: 'string',\n                        description: 'Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\"'\n                      }\n                    }\n                  },\n                  description: 'List of cluster key.'\n                }\n              }\n            }\n          },\n          required: [ 'id' ]\n        },\n        options: {\n          description: 'A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.',\n          type: 'object',\n          additionalProperties: { type: 'string' }\n        }\n      },\n      required: [ 'resource', 'options' ]\n    }\n  },\n  required: [ 'properties' ]\n}\n")),(0,s.kt)("h2",{id:"misc"},"Misc"),(0,s.kt)("p",null,"The resource version is ",(0,s.kt)("inlineCode",{parentName:"p"},"2016-03-31"),"."),(0,s.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/cosmos-db/resource-manager/Microsoft.DocumentDB/stable/2016-03-31/cosmos-db.json"},"here"),"."))}d.isMDXComponent=!0}}]);