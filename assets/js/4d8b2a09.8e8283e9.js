"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[96537],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>y});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(t),d=a,y=u["".concat(i,".").concat(d)]||u[d]||m[d]||o;return t?r.createElement(y,l(l({ref:n},c),{},{components:t})):r.createElement(y,l({ref:n},c))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=e,p[u]="string"==typeof e?e:a,l[1]=p;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},20940:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const o={id:"DeploymentGroup",title:"DeploymentGroup"},l=void 0,p={unversionedId:"aws/resources/CodeDeploy/DeploymentGroup",id:"aws/resources/CodeDeploy/DeploymentGroup",title:"DeploymentGroup",description:"Manages an AWS CodeDeploy DeploymentGroup.",source:"@site/docs/aws/resources/CodeDeploy/DeploymentGroup.md",sourceDirName:"aws/resources/CodeDeploy",slug:"/aws/resources/CodeDeploy/DeploymentGroup",permalink:"/docs/aws/resources/CodeDeploy/DeploymentGroup",draft:!1,tags:[],version:"current",frontMatter:{id:"DeploymentGroup",title:"DeploymentGroup"},sidebar:"docs",previous:{title:"Application",permalink:"/docs/aws/resources/CodeDeploy/Application"},next:{title:"Pipeline",permalink:"/docs/aws/resources/CodePipeline/Pipeline"}},i={},s=[{value:"Sample code",id:"sample-code",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Properties",id:"properties",level:2},{value:"Full Examples",id:"full-examples",level:2},{value:"List",id:"list",level:2}],c={toc:s},u="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Manages an ",(0,a.kt)("a",{parentName:"p",href:"https://console.aws.amazon.com/codesuite/codedeploy/deployment-configs"},"AWS CodeDeploy DeploymentGroup"),"."),(0,a.kt)("h2",{id:"sample-code"},"Sample code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'exports.createResources = () => [\n  {\n    type: "DeploymentGroup",\n    group: "CodeDeploy",\n    properties: ({ getId }) => ({\n      applicationName: "AppECS-cluster-api",\n      autoRollbackConfiguration: {\n        enabled: true,\n        events: ["DEPLOYMENT_FAILURE", "DEPLOYMENT_STOP_ON_REQUEST"],\n      },\n      blueGreenDeploymentConfiguration: {\n        deploymentReadyOption: {\n          actionOnTimeout: "CONTINUE_DEPLOYMENT",\n          waitTimeInMinutes: 0,\n        },\n        terminateBlueInstancesOnDeploymentSuccess: {\n          action: "TERMINATE",\n          terminationWaitTimeInMinutes: 60,\n        },\n      },\n      computePlatform: "ECS",\n      deploymentConfigName: "CodeDeployDefault.ECSAllAtOnce",\n      deploymentGroupName: "DgpECS-cluster-api",\n      deploymentStyle: {\n        deploymentOption: "WITH_TRAFFIC_CONTROL",\n        deploymentType: "BLUE_GREEN",\n      },\n      ecsServices: [\n        {\n          clusterName: `${getId({\n            type: "Cluster",\n            group: "ECS",\n            name: "cluster",\n            path: "name",\n          })}`,\n          serviceName: `${getId({\n            type: "Service",\n            group: "ECS",\n            name: "api",\n            path: "name",\n          })}`,\n        },\n      ],\n      loadBalancerInfo: {\n        targetGroupPairInfoList: [\n          {\n            prodTrafficRoute: {\n              listenerArns: [\n                `${getId({\n                  type: "Listener",\n                  group: "ElasticLoadBalancingV2",\n                  name: "listener::EC2Co-EcsEl-GK4BG406T8NP::HTTP::80",\n                })}`,\n              ],\n            },\n            targetGroups: [\n              {\n                name: `${getId({\n                  type: "TargetGroup",\n                  group: "ElasticLoadBalancingV2",\n                  name: "EC2Co-Defau-MMUISWY3DEAQ",\n                  path: "name",\n                })}`,\n              },\n              {\n                name: `${getId({\n                  type: "TargetGroup",\n                  group: "ElasticLoadBalancingV2",\n                  name: "tg-cluste-api-2",\n                  path: "name",\n                })}`,\n              },\n            ],\n          },\n        ],\n      },\n    }),\n    dependencies: ({}) => ({\n      application: "AppECS-cluster-api",\n      serviceRole: "roleECSCodeDeploy",\n      ecsServices: ["api"],\n      ecsClusters: ["cluster"],\n      targetGroups: ["EC2Co-Defau-MMUISWY3DEAQ", "tg-cluste-api-2"],\n      listeners: ["listener::EC2Co-EcsEl-GK4BG406T8NP::HTTP::80"],\n    }),\n  },\n];\n')),(0,a.kt)("h2",{id:"dependencies"},"Dependencies"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/aws/resources/CodeDeploy/Application"},"Application")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/aws/resources/IAM/Role"},"IAM Role")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/aws/resources/ECS/Cluster"},"ECS Cluster")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/aws/resources/ECS/Service"},"ECS Service")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/aws/resources/ElasticLoadBalancingV2/Listener"},"ElasticLoadBalancingV2 Listener")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/aws/resources/ElasticLoadBalancingV2/TargetGroup"},"ElasticLoadBalancingV2 TargetGroup"))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/clients/client-codedeploy/interfaces/createdeploymentcommandinput.html"},"CreateDeploymentCommandInput"))),(0,a.kt)("h2",{id:"full-examples"},"Full Examples"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/tree/main/examples/aws/CodeDeploy/codedeploy-simple"},"codedeploy-simple"))),(0,a.kt)("h2",{id:"list"},"List"),(0,a.kt)("p",null,"The CodeDeploy deployment groups can be filtered with the ",(0,a.kt)("em",{parentName:"p"},"DeploymentGroup")," type:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gc l -t CodeDeploy::DeploymentGroup\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-txt"},'Listing resources on 1 provider: aws\n\u2713 aws us-east-1\n  \u2713 Initialising\n  \u2713 Listing 2/2\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 1 CodeDeploy::DeploymentGroup from aws                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 name: AppECS-cluster-api::DgpECS-cluster-api                                         \u2502\n\u2502 managedByUs: Yes                                                                     \u2502\n\u2502 live:                                                                                \u2502\n\u2502   applicationName: AppECS-cluster-api                                                \u2502\n\u2502   autoRollbackConfiguration:                                                         \u2502\n\u2502     enabled: true                                                                    \u2502\n\u2502     events:                                                                          \u2502\n\u2502       - "DEPLOYMENT_FAILURE"                                                         \u2502\n\u2502       - "DEPLOYMENT_STOP_ON_REQUEST"                                                 \u2502\n\u2502   blueGreenDeploymentConfiguration:                                                  \u2502\n\u2502     deploymentReadyOption:                                                           \u2502\n\u2502       actionOnTimeout: CONTINUE_DEPLOYMENT                                           \u2502\n\u2502       waitTimeInMinutes: 0                                                           \u2502\n\u2502     terminateBlueInstancesOnDeploymentSuccess:                                       \u2502\n\u2502       action: TERMINATE                                                              \u2502\n\u2502       terminationWaitTimeInMinutes: 60                                               \u2502\n\u2502   computePlatform: ECS                                                               \u2502\n\u2502   deploymentConfigName: CodeDeployDefault.ECSAllAtOnce                               \u2502\n\u2502   deploymentGroupId: 75583d6c-d7fe-41ce-b2ce-c48414a87b3d                            \u2502\n\u2502   deploymentGroupName: DgpECS-cluster-api                                            \u2502\n\u2502   deploymentStyle:                                                                   \u2502\n\u2502     deploymentOption: WITH_TRAFFIC_CONTROL                                           \u2502\n\u2502     deploymentType: BLUE_GREEN                                                       \u2502\n\u2502   ecsServices:                                                                       \u2502\n\u2502     - clusterName: cluster                                                           \u2502\n\u2502       serviceName: api                                                               \u2502\n\u2502   loadBalancerInfo:                                                                  \u2502\n\u2502     targetGroupPairInfoList:                                                         \u2502\n\u2502       - prodTrafficRoute:                                                            \u2502\n\u2502           listenerArns:                                                              \u2502\n\u2502             - "arn:aws:elasticloadbalancing:us-east-1:840541460064:listener/app/EC2\u2026 \u2502\n\u2502         targetGroups:                                                                \u2502\n\u2502           - name: EC2Co-Defau-MMUISWY3DEAQ                                           \u2502\n\u2502           - name: tg-cluste-api-2                                                    \u2502\n\u2502   outdatedInstancesStrategy: UPDATE                                                  \u2502\n\u2502   serviceRoleArn: arn:aws:iam::840541460064:role/roleECSCodeDeploy                   \u2502\n\u2502   triggerConfigurations: []                                                          \u2502\n\u2502   tags:                                                                              \u2502\n\u2502     - Key: gc-created-by-provider                                                    \u2502\n\u2502       Value: aws                                                                     \u2502\n\u2502     - Key: gc-managed-by                                                             \u2502\n\u2502       Value: grucloud                                                                \u2502\n\u2502     - Key: gc-project-name                                                           \u2502\n\u2502       Value: codedeploy-ecs                                                          \u2502\n\u2502     - Key: gc-stage                                                                  \u2502\n\u2502       Value: dev                                                                     \u2502\n\u2502     - Key: Name                                                                      \u2502\n\u2502       Value: AppECS-cluster-api::DgpECS-cluster-api                                  \u2502\n\u2502                                                                                      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\nList Summary:\nProvider: aws\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 aws                                                                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 CodeDeploy::DeploymentGroup \u2502 AppECS-cluster-api::DgpECS-cluster-api                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n1 resource, 1 type, 1 provider\nCommand "gc l -t CodeDeploy::DeploymentGroup" executed in 8s, 126 MB\n')))}m.isMDXComponent=!0}}]);