"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[87985],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>b});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),p=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(c.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(t),b=o,m=d["".concat(c,".").concat(b)]||d[b]||l[b]||i;return t?n.createElement(m,a(a({ref:r},u),{},{components:t})):n.createElement(m,a({ref:r},u))}));function b(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=t[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},68244:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=t(87462),o=(t(67294),t(3905));const i={id:"WebAppSourceControl",title:"WebAppSourceControl"},a=void 0,s={unversionedId:"azure/resources/Web/WebAppSourceControl",id:"azure/resources/Web/WebAppSourceControl",title:"WebAppSourceControl",description:"Provides a WebAppSourceControl from the Web group",source:"@site/docs/azure/resources/Web/WebAppSourceControl.md",sourceDirName:"azure/resources/Web",slug:"/azure/resources/Web/WebAppSourceControl",permalink:"/docs/azure/resources/Web/WebAppSourceControl",draft:!1,tags:[],version:"current",frontMatter:{id:"WebAppSourceControl",title:"WebAppSourceControl"},sidebar:"docs",previous:{title:"WebAppSlot",permalink:"/docs/azure/resources/Web/WebAppSlot"},next:{title:"WebAppSourceControlSlot",permalink:"/docs/azure/resources/Web/WebAppSourceControlSlot"}},c={},p=[{value:"Examples",id:"examples",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Swagger Schema",id:"swagger-schema",level:2},{value:"Misc",id:"misc",level:2}],u={toc:p};function l(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"WebAppSourceControl")," from the ",(0,o.kt)("strong",{parentName:"p"},"Web")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Web/WebApp"},"WebApp"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},"{\n  description: 'Source control configuration for an app.',\n  type: 'object',\n  allOf: [\n    {\n      description: 'Azure proxy only resource. This resource is not tracked by Azure Resource Manager.',\n      type: 'object',\n      properties: {\n        id: { description: 'Resource Id.', type: 'string', readOnly: true },\n        name: {\n          description: 'Resource Name.',\n          type: 'string',\n          readOnly: true\n        },\n        kind: { description: 'Kind of resource.', type: 'string' },\n        type: {\n          description: 'Resource type.',\n          type: 'string',\n          readOnly: true\n        }\n      },\n      'x-ms-azure-resource': true\n    }\n  ],\n  properties: {\n    properties: {\n      description: 'SiteSourceControl resource specific properties',\n      type: 'object',\n      properties: {\n        repoUrl: {\n          description: 'Repository or source control URL.',\n          type: 'string',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        branch: {\n          description: 'Name of branch to use for deployment.',\n          type: 'string',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        isManualIntegration: {\n          description: '<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        isGitHubAction: {\n          description: '<code>true</code> if this is deployed via GitHub action.',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        deploymentRollbackEnabled: {\n          description: '<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        isMercurial: {\n          description: '<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.',\n          type: 'boolean',\n          'x-ms-mutability': [ 'create', 'read' ]\n        },\n        gitHubActionConfiguration: {\n          description: 'If GitHub Action is selected, than the associated configuration.',\n          type: 'object',\n          properties: {\n            codeConfiguration: {\n              description: 'GitHub Action code configuration.',\n              type: 'object',\n              properties: {\n                runtimeStack: {\n                  description: 'Runtime stack is used to determine the workflow file content for code base apps.',\n                  type: 'string'\n                },\n                runtimeVersion: {\n                  description: 'Runtime version is used to determine what build version to set in the workflow file.',\n                  type: 'string'\n                }\n              }\n            },\n            containerConfiguration: {\n              description: 'GitHub Action container configuration.',\n              type: 'object',\n              properties: {\n                serverUrl: {\n                  description: 'The server URL for the container registry where the build will be hosted.',\n                  type: 'string'\n                },\n                imageName: {\n                  description: 'The image name for the build.',\n                  type: 'string'\n                },\n                username: {\n                  description: 'The username used to upload the image to the container registry.',\n                  type: 'string'\n                },\n                password: {\n                  description: 'The password used to upload the image to the container registry.',\n                  type: 'string',\n                  'x-ms-secret': true\n                }\n              }\n            },\n            isLinux: {\n              description: 'This will help determine the workflow configuration to select.',\n              type: 'boolean'\n            },\n            generateWorkflowFile: {\n              description: 'Workflow option to determine whether the workflow file should be generated and written to the repository.',\n              type: 'boolean'\n            }\n          }\n        }\n      },\n      'x-ms-client-flatten': true\n    }\n  }\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2022-03-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/web/resource-manager/Microsoft.Web/stable/2022-03-01/WebApps.json"},"here"),"."))}l.isMDXComponent=!0}}]);