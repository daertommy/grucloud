[
    {
        "type": "AvailabilitySet",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "proximityPlacementGroup": {
                "type": "ProximityPlacementGroup",
                "group": "Compute",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                "operationId": "AvailabilitySets_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                "operationId": "AvailabilitySets_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                "operationId": "AvailabilitySets_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}",
                "operationId": "AvailabilitySets_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/availabilitySets",
                "operationId": "AvailabilitySets_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.proximityPlacementGroup.id",
            "properties.statuses"
        ],
        "pickProperties": [
            "properties.platformUpdateDomainCount",
            "properties.platformFaultDomainCount",
            "properties.virtualMachines",
            "sku.name",
            "sku.tier",
            "sku.capacity"
        ],
        "pickPropertiesCreate": [
            "properties.platformUpdateDomainCount",
            "properties.platformFaultDomainCount",
            "properties.virtualMachines",
            "sku.name",
            "sku.tier",
            "sku.capacity"
        ]
    },
    {
        "type": "CapacityReservation",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "capacityReservationGroup": {
                "type": "CapacityReservationGroup",
                "group": "Compute",
                "name": "capacityReservationGroupName",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}",
                "operationId": "CapacityReservations_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}",
                "operationId": "CapacityReservations_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}",
                "operationId": "CapacityReservations_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}",
                "operationId": "CapacityReservations_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations",
                "operationId": "CapacityReservations_ListByCapacityReservationGroup"
            }
        },
        "omitProperties": [
            "properties.reservationId",
            "properties.virtualMachinesAssociated",
            "properties.provisioningTime",
            "properties.provisioningState",
            "properties.instanceView"
        ],
        "pickProperties": [
            "sku.name",
            "sku.tier",
            "sku.capacity",
            "zones"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "sku.tier",
            "sku.capacity",
            "zones"
        ]
    },
    {
        "type": "CapacityReservationGroup",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}",
                "operationId": "CapacityReservationGroups_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}",
                "operationId": "CapacityReservationGroups_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}",
                "operationId": "CapacityReservationGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}",
                "operationId": "CapacityReservationGroups_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/capacityReservationGroups",
                "operationId": "CapacityReservationGroups_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.capacityReservations",
            "properties.virtualMachinesAssociated",
            "properties.instanceView"
        ],
        "pickProperties": [
            "zones"
        ],
        "pickPropertiesCreate": [
            "zones"
        ]
    },
    {
        "type": "CloudService",
        "group": "Compute",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}",
                "operationId": "CloudServices_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}",
                "operationId": "CloudServices_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}",
                "operationId": "CloudServices_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}",
                "operationId": "CloudServices_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/cloudServices",
                "operationId": "CloudServices_ListAll"
            }
        },
        "omitProperties": [
            "id",
            "name",
            "type",
            "properties.networkProfile.swappableCloudService.id",
            "properties.provisioningState",
            "properties.uniqueId"
        ],
        "pickProperties": [
            "location",
            "tags",
            "properties.packageUrl",
            "properties.configuration",
            "properties.configurationUrl",
            "properties.startCloudService",
            "properties.allowModelOverride",
            "properties.upgradeMode",
            "properties.roleProfile.roles",
            "properties.osProfile.secrets",
            "properties.networkProfile.loadBalancerConfigurations",
            "properties.extensionProfile.extensions"
        ],
        "pickPropertiesCreate": [
            "location",
            "tags",
            "properties.packageUrl",
            "properties.configuration",
            "properties.configurationUrl",
            "properties.startCloudService",
            "properties.allowModelOverride",
            "properties.upgradeMode",
            "properties.roleProfile.roles",
            "properties.osProfile.secrets",
            "properties.networkProfile.loadBalancerConfigurations",
            "properties.extensionProfile.extensions"
        ]
    },
    {
        "type": "CloudServiceRoleInstance",
        "group": "Compute",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "cloudService": {
                "type": "CloudService",
                "group": "Compute",
                "name": "cloudServiceName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}",
                "operationId": "CloudServiceRoleInstances_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}",
                "operationId": "CloudServiceRoleInstances_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances",
                "operationId": "CloudServiceRoleInstances_List"
            }
        },
        "omitProperties": [
            "id",
            "name",
            "type",
            "location",
            "tags",
            "sku.name",
            "sku.tier",
            "properties.networkProfile.networkInterfaces",
            "properties.instanceView.platformUpdateDomain",
            "properties.instanceView.platformFaultDomain",
            "properties.instanceView.privateId",
            "properties.instanceView.statuses"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "CloudServicesUpdateDomainUpdateDomain",
        "group": "Compute",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "cloudService": {
                "type": "CloudService",
                "group": "Compute",
                "name": "cloudServiceName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/updateDomains/{updateDomain}",
                "operationId": "CloudServicesUpdateDomain_WalkUpdateDomain"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/updateDomains/{updateDomain}",
                "operationId": "CloudServicesUpdateDomain_GetUpdateDomain"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/updateDomains",
                "operationId": "CloudServicesUpdateDomain_ListUpdateDomains"
            }
        },
        "omitProperties": [
            "id",
            "name"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "DedicatedHost",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "hostGroup": {
                "type": "DedicatedHostGroup",
                "group": "Compute",
                "name": "hostGroupName"
            },
            "dedicatedHostGroup": {
                "type": "DedicatedHostGroup",
                "group": "Compute",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}",
                "operationId": "DedicatedHosts_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}",
                "operationId": "DedicatedHosts_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}",
                "operationId": "DedicatedHosts_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}",
                "operationId": "DedicatedHosts_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts",
                "operationId": "DedicatedHosts_ListByHostGroup"
            }
        },
        "omitProperties": [
            "properties.hostId",
            "properties.virtualMachines",
            "properties.provisioningTime",
            "properties.provisioningState",
            "properties.instanceView"
        ],
        "pickProperties": [
            "properties.platformFaultDomain",
            "properties.autoReplaceOnFailure",
            "properties.licenseType",
            "sku.name",
            "sku.tier",
            "sku.capacity"
        ],
        "pickPropertiesCreate": [
            "properties.platformFaultDomain",
            "properties.autoReplaceOnFailure",
            "properties.licenseType",
            "sku.name",
            "sku.tier",
            "sku.capacity"
        ]
    },
    {
        "type": "DedicatedHostGroup",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}",
                "operationId": "DedicatedHostGroups_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}",
                "operationId": "DedicatedHostGroups_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}",
                "operationId": "DedicatedHostGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}",
                "operationId": "DedicatedHostGroups_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups",
                "operationId": "DedicatedHostGroups_ListByResourceGroup"
            }
        },
        "omitProperties": [
            "properties.hosts",
            "properties.instanceView"
        ],
        "pickProperties": [
            "properties.platformFaultDomainCount",
            "properties.supportAutomaticPlacement",
            "zones"
        ],
        "pickPropertiesCreate": [
            "properties.platformFaultDomainCount",
            "properties.supportAutomaticPlacement",
            "zones"
        ]
    },
    {
        "type": "Disk",
        "group": "Compute",
        "apiVersion": "2021-04-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "storageAccount": {
                "type": "StorageAccount",
                "group": "Storage",
                "createOnly": true
            },
            "image": {
                "type": "Image",
                "group": "Compute",
                "createOnly": true
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            },
            "diskEncryptionSet": {
                "type": "DiskEncryptionSet",
                "group": "Compute",
                "createOnly": true
            },
            "diskAccess": {
                "type": "DiskAccess",
                "group": "Compute",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}",
                "operationId": "Disks_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}",
                "operationId": "Disks_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}",
                "operationId": "Disks_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}",
                "operationId": "Disks_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/disks",
                "operationId": "Disks_List"
            }
        },
        "omitProperties": [
            "managedBy",
            "managedByExtended",
            "sku.tier",
            "properties.timeCreated",
            "properties.creationData.storageAccountId",
            "properties.creationData.imageReference.id",
            "properties.creationData.galleryImageReference.id",
            "properties.creationData.sourceResourceId",
            "properties.creationData.sourceUniqueId",
            "properties.diskSizeBytes",
            "properties.uniqueId",
            "properties.provisioningState",
            "properties.diskState",
            "properties.encryption.diskEncryptionSetId",
            "properties.shareInfo",
            "properties.diskAccessId",
            "properties.propertyUpdatesInProgress"
        ],
        "pickProperties": [
            "sku.name",
            "zones",
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.osType",
            "properties.hyperVGeneration",
            "properties.purchasePlan.name",
            "properties.purchasePlan.publisher",
            "properties.purchasePlan.product",
            "properties.purchasePlan.promotionCode",
            "properties.supportedCapabilities.acceleratedNetwork",
            "properties.creationData.createOption",
            "properties.creationData.imageReference.lun",
            "properties.creationData.galleryImageReference.lun",
            "properties.creationData.sourceUri",
            "properties.creationData.uploadSizeBytes",
            "properties.creationData.logicalSectorSize",
            "properties.diskSizeGB",
            "properties.encryptionSettingsCollection.enabled",
            "properties.encryptionSettingsCollection.encryptionSettings",
            "properties.encryptionSettingsCollection.encryptionSettingsVersion",
            "properties.diskIOPSReadWrite",
            "properties.diskMBpsReadWrite",
            "properties.diskIOPSReadOnly",
            "properties.diskMBpsReadOnly",
            "properties.encryption.type",
            "properties.maxShares",
            "properties.networkAccessPolicy",
            "properties.tier",
            "properties.burstingEnabled",
            "properties.supportsHibernation",
            "properties.securityProfile.securityType",
            "properties.completionPercent",
            "properties.publicNetworkAccess"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "zones",
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.osType",
            "properties.hyperVGeneration",
            "properties.purchasePlan.name",
            "properties.purchasePlan.publisher",
            "properties.purchasePlan.product",
            "properties.purchasePlan.promotionCode",
            "properties.supportedCapabilities.acceleratedNetwork",
            "properties.creationData.createOption",
            "properties.creationData.imageReference.lun",
            "properties.creationData.galleryImageReference.lun",
            "properties.creationData.sourceUri",
            "properties.creationData.uploadSizeBytes",
            "properties.creationData.logicalSectorSize",
            "properties.diskSizeGB",
            "properties.encryptionSettingsCollection.enabled",
            "properties.encryptionSettingsCollection.encryptionSettings",
            "properties.encryptionSettingsCollection.encryptionSettingsVersion",
            "properties.diskIOPSReadWrite",
            "properties.diskMBpsReadWrite",
            "properties.diskIOPSReadOnly",
            "properties.diskMBpsReadOnly",
            "properties.encryption.type",
            "properties.maxShares",
            "properties.networkAccessPolicy",
            "properties.tier",
            "properties.burstingEnabled",
            "properties.supportsHibernation",
            "properties.securityProfile.securityType",
            "properties.completionPercent",
            "properties.publicNetworkAccess"
        ]
    },
    {
        "type": "DiskAccess",
        "group": "Compute",
        "apiVersion": "2021-04-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}",
                "operationId": "DiskAccesses_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}",
                "operationId": "DiskAccesses_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}",
                "operationId": "DiskAccesses_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}",
                "operationId": "DiskAccesses_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskAccesses",
                "operationId": "DiskAccesses_List"
            }
        },
        "omitProperties": [
            "properties.privateEndpointConnections",
            "properties.provisioningState",
            "properties.timeCreated"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type"
        ]
    },
    {
        "type": "DiskAccessAPrivateEndpointConnection",
        "group": "Compute",
        "apiVersion": "2021-04-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "diskAccess": {
                "type": "DiskAccess",
                "group": "Compute",
                "name": "diskAccessName"
            },
            "privateEndpoint": {
                "type": "PrivateEndpoint",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "DiskAccesses_UpdateAPrivateEndpointConnection"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "DiskAccesses_GetAPrivateEndpointConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "DiskAccesses_DeleteAPrivateEndpointConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections",
                "operationId": "DiskAccesses_ListPrivateEndpointConnections"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState",
            "id",
            "name",
            "type"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "DiskEncryptionSet",
        "group": "Compute",
        "apiVersion": "2021-04-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}",
                "operationId": "DiskEncryptionSets_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}",
                "operationId": "DiskEncryptionSets_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}",
                "operationId": "DiskEncryptionSets_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}",
                "operationId": "DiskEncryptionSets_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskEncryptionSets",
                "operationId": "DiskEncryptionSets_List"
            }
        },
        "omitProperties": [
            "identity.principalId",
            "identity.tenantId",
            "properties.activeKey.sourceVault.id",
            "properties.previousKeys",
            "properties.provisioningState",
            "properties.lastKeyRotationTimestamp",
            "properties.autoKeyRotationError"
        ],
        "pickProperties": [
            "identity.type",
            "properties.encryptionType",
            "properties.activeKey.keyUrl",
            "properties.rotationToLatestKeyVersionEnabled"
        ],
        "pickPropertiesCreate": [
            "identity.type",
            "properties.encryptionType",
            "properties.activeKey.keyUrl",
            "properties.rotationToLatestKeyVersionEnabled"
        ]
    },
    {
        "type": "Gallery",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}",
                "operationId": "Galleries_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}",
                "operationId": "Galleries_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}",
                "operationId": "Galleries_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}",
                "operationId": "Galleries_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/galleries",
                "operationId": "Galleries_List"
            }
        },
        "omitProperties": [
            "properties.identifier.uniqueName",
            "properties.provisioningState",
            "properties.sharingProfile.groups"
        ],
        "pickProperties": [
            "properties.description",
            "properties.sharingProfile.permissions",
            "properties.softDeletePolicy.isSoftDeleteEnabled"
        ],
        "pickPropertiesCreate": [
            "properties.description",
            "properties.sharingProfile.permissions",
            "properties.softDeletePolicy.isSoftDeleteEnabled"
        ]
    },
    {
        "type": "GalleryApplication",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "gallery": {
                "type": "Gallery",
                "group": "Compute",
                "name": "galleryName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}",
                "operationId": "GalleryApplications_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}",
                "operationId": "GalleryApplications_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}",
                "operationId": "GalleryApplications_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}",
                "operationId": "GalleryApplications_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications",
                "operationId": "GalleryApplications_ListByGallery"
            }
        },
        "omitProperties": [
            "properties.privacyStatementUri"
        ],
        "pickProperties": [
            "properties.description",
            "properties.eula",
            "properties.releaseNoteUri",
            "properties.endOfLifeDate",
            "properties.supportedOSType"
        ],
        "pickPropertiesCreate": [
            "properties.description",
            "properties.eula",
            "properties.releaseNoteUri",
            "properties.endOfLifeDate",
            "properties.supportedOSType"
        ]
    },
    {
        "type": "GalleryApplicationVersion",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "gallery": {
                "type": "Gallery",
                "group": "Compute",
                "name": "galleryName"
            },
            "galleryApplication": {
                "type": "GalleryApplication",
                "group": "Compute",
                "name": "galleryApplicationName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}",
                "operationId": "GalleryApplicationVersions_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}",
                "operationId": "GalleryApplicationVersions_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}",
                "operationId": "GalleryApplicationVersions_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}",
                "operationId": "GalleryApplicationVersions_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions",
                "operationId": "GalleryApplicationVersions_ListByGalleryApplication"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.replicationStatus"
        ],
        "pickProperties": [
            "properties.publishingProfile.source.mediaLink",
            "properties.publishingProfile.source.defaultConfigurationLink",
            "properties.publishingProfile.manageActions.install",
            "properties.publishingProfile.manageActions.remove",
            "properties.publishingProfile.manageActions.update",
            "properties.publishingProfile.enableHealthCheck"
        ],
        "pickPropertiesCreate": [
            "properties.publishingProfile.source.mediaLink",
            "properties.publishingProfile.source.defaultConfigurationLink",
            "properties.publishingProfile.manageActions.install",
            "properties.publishingProfile.manageActions.remove",
            "properties.publishingProfile.manageActions.update",
            "properties.publishingProfile.enableHealthCheck"
        ]
    },
    {
        "type": "GalleryImage",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "gallery": {
                "type": "Gallery",
                "group": "Compute",
                "name": "galleryName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}",
                "operationId": "GalleryImages_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}",
                "operationId": "GalleryImages_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}",
                "operationId": "GalleryImages_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}",
                "operationId": "GalleryImages_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images",
                "operationId": "GalleryImages_ListByGallery"
            }
        },
        "omitProperties": [
            "properties.privacyStatementUri",
            "properties.osState",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.description",
            "properties.eula",
            "properties.releaseNoteUri",
            "properties.osType",
            "properties.hyperVGeneration",
            "properties.endOfLifeDate",
            "properties.identifier.publisher",
            "properties.identifier.offer",
            "properties.identifier.sku",
            "properties.recommended.vCPUs.min",
            "properties.recommended.vCPUs.max",
            "properties.recommended.memory.min",
            "properties.recommended.memory.max",
            "properties.disallowed.diskTypes",
            "properties.purchasePlan.name",
            "properties.purchasePlan.publisher",
            "properties.purchasePlan.product",
            "properties.features"
        ],
        "pickPropertiesCreate": [
            "properties.description",
            "properties.eula",
            "properties.releaseNoteUri",
            "properties.osType",
            "properties.hyperVGeneration",
            "properties.endOfLifeDate",
            "properties.identifier.publisher",
            "properties.identifier.offer",
            "properties.identifier.sku",
            "properties.recommended.vCPUs.min",
            "properties.recommended.vCPUs.max",
            "properties.recommended.memory.min",
            "properties.recommended.memory.max",
            "properties.disallowed.diskTypes",
            "properties.purchasePlan.name",
            "properties.purchasePlan.publisher",
            "properties.purchasePlan.product",
            "properties.features"
        ]
    },
    {
        "type": "GalleryImageVersion",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "gallery": {
                "type": "Gallery",
                "group": "Compute",
                "name": "galleryName"
            },
            "galleryImage": {
                "type": "GalleryImage",
                "group": "Compute",
                "name": "galleryImageName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}",
                "operationId": "GalleryImageVersions_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}",
                "operationId": "GalleryImageVersions_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}",
                "operationId": "GalleryImageVersions_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}",
                "operationId": "GalleryImageVersions_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions",
                "operationId": "GalleryImageVersions_ListByGalleryImage"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.storageProfile.source.id",
            "properties.replicationStatus"
        ],
        "pickProperties": [
            "properties.publishingProfile",
            "properties.storageProfile.source.uri",
            "properties.storageProfile.osDiskImage",
            "properties.storageProfile.dataDiskImages"
        ],
        "pickPropertiesCreate": [
            "properties.publishingProfile",
            "properties.storageProfile.source.uri",
            "properties.storageProfile.osDiskImage",
            "properties.storageProfile.dataDiskImages"
        ]
    },
    {
        "type": "Image",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}",
                "operationId": "Images_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}",
                "operationId": "Images_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}",
                "operationId": "Images_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}",
                "operationId": "Images_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/images",
                "operationId": "Images_List"
            }
        },
        "omitProperties": [
            "properties.sourceVirtualMachine.id",
            "properties.storageProfile.osDisk.osState",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.storageProfile.osDisk.osType",
            "properties.storageProfile.dataDisks",
            "properties.storageProfile.zoneResilient",
            "properties.hyperVGeneration",
            "extendedLocation.name",
            "extendedLocation.type"
        ],
        "pickPropertiesCreate": [
            "properties.storageProfile.osDisk.osType",
            "properties.storageProfile.dataDisks",
            "properties.storageProfile.zoneResilient",
            "properties.hyperVGeneration",
            "extendedLocation.name",
            "extendedLocation.type"
        ]
    },
    {
        "type": "ProximityPlacementGroup",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}",
                "operationId": "ProximityPlacementGroups_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}",
                "operationId": "ProximityPlacementGroups_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}",
                "operationId": "ProximityPlacementGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}",
                "operationId": "ProximityPlacementGroups_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/proximityPlacementGroups",
                "operationId": "ProximityPlacementGroups_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.virtualMachines",
            "properties.virtualMachineScaleSets",
            "properties.availabilitySets",
            "properties.colocationStatus"
        ],
        "pickProperties": [
            "properties.proximityPlacementGroupType"
        ],
        "pickPropertiesCreate": [
            "properties.proximityPlacementGroupType"
        ]
    },
    {
        "type": "RestorePoint",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "restorePointCollection": {
                "type": "RestorePointCollection",
                "group": "Compute",
                "name": "restorePointCollectionName"
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            },
            "disk": {
                "type": "Disk",
                "group": "Compute",
                "createOnly": true
            },
            "virtualMachineScaleSetVm": {
                "type": "VirtualMachineScaleSetVM",
                "group": "Compute",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{restorePointName}",
                "operationId": "RestorePoints_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{restorePointName}",
                "operationId": "RestorePoints_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{restorePointName}",
                "operationId": "RestorePoints_Get"
            }
        },
        "omitProperties": [
            "properties.sourceMetadata",
            "properties.provisioningState",
            "properties.consistencyMode"
        ],
        "pickProperties": [
            "properties.excludeDisks",
            "properties.timeCreated"
        ],
        "pickPropertiesCreate": [
            "properties.excludeDisks",
            "properties.timeCreated"
        ]
    },
    {
        "type": "RestorePointCollection",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "restorePoint": {
                "type": "RestorePoint",
                "group": "Compute",
                "createOnly": true
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            },
            "virtualMachineScaleSetVm": {
                "type": "VirtualMachineScaleSetVM",
                "group": "Compute",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}",
                "operationId": "RestorePointCollections_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}",
                "operationId": "RestorePointCollections_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}",
                "operationId": "RestorePointCollections_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}",
                "operationId": "RestorePointCollections_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/restorePointCollections",
                "operationId": "RestorePointCollections_ListAll"
            }
        },
        "omitProperties": [
            "properties.source.location",
            "properties.source.id",
            "properties.provisioningState",
            "properties.restorePointCollectionId",
            "properties.restorePoints"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "Snapshot",
        "group": "Compute",
        "apiVersion": "2021-04-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "storageAccount": {
                "type": "StorageAccount",
                "group": "Storage",
                "createOnly": true
            },
            "image": {
                "type": "Image",
                "group": "Compute",
                "createOnly": true
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            },
            "diskEncryptionSet": {
                "type": "DiskEncryptionSet",
                "group": "Compute",
                "createOnly": true
            },
            "diskAccess": {
                "type": "DiskAccess",
                "group": "Compute",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}",
                "operationId": "Snapshots_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}",
                "operationId": "Snapshots_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}",
                "operationId": "Snapshots_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}",
                "operationId": "Snapshots_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/snapshots",
                "operationId": "Snapshots_List"
            }
        },
        "omitProperties": [
            "managedBy",
            "sku.tier",
            "properties.timeCreated",
            "properties.creationData.storageAccountId",
            "properties.creationData.imageReference.id",
            "properties.creationData.galleryImageReference.id",
            "properties.creationData.sourceResourceId",
            "properties.creationData.sourceUniqueId",
            "properties.diskSizeBytes",
            "properties.diskState",
            "properties.uniqueId",
            "properties.provisioningState",
            "properties.encryption.diskEncryptionSetId",
            "properties.diskAccessId"
        ],
        "pickProperties": [
            "sku.name",
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.osType",
            "properties.hyperVGeneration",
            "properties.purchasePlan.name",
            "properties.purchasePlan.publisher",
            "properties.purchasePlan.product",
            "properties.purchasePlan.promotionCode",
            "properties.supportedCapabilities.acceleratedNetwork",
            "properties.creationData.createOption",
            "properties.creationData.imageReference.lun",
            "properties.creationData.galleryImageReference.lun",
            "properties.creationData.sourceUri",
            "properties.creationData.uploadSizeBytes",
            "properties.creationData.logicalSectorSize",
            "properties.diskSizeGB",
            "properties.encryptionSettingsCollection.enabled",
            "properties.encryptionSettingsCollection.encryptionSettings",
            "properties.encryptionSettingsCollection.encryptionSettingsVersion",
            "properties.incremental",
            "properties.encryption.type",
            "properties.networkAccessPolicy",
            "properties.supportsHibernation",
            "properties.publicNetworkAccess",
            "properties.completionPercent"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.osType",
            "properties.hyperVGeneration",
            "properties.purchasePlan.name",
            "properties.purchasePlan.publisher",
            "properties.purchasePlan.product",
            "properties.purchasePlan.promotionCode",
            "properties.supportedCapabilities.acceleratedNetwork",
            "properties.creationData.createOption",
            "properties.creationData.imageReference.lun",
            "properties.creationData.galleryImageReference.lun",
            "properties.creationData.sourceUri",
            "properties.creationData.uploadSizeBytes",
            "properties.creationData.logicalSectorSize",
            "properties.diskSizeGB",
            "properties.encryptionSettingsCollection.enabled",
            "properties.encryptionSettingsCollection.encryptionSettings",
            "properties.encryptionSettingsCollection.encryptionSettingsVersion",
            "properties.incremental",
            "properties.encryption.type",
            "properties.networkAccessPolicy",
            "properties.supportsHibernation",
            "properties.publicNetworkAccess",
            "properties.completionPercent"
        ]
    },
    {
        "type": "SshPublicKey",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}",
                "operationId": "SshPublicKeys_Create"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}",
                "operationId": "SshPublicKeys_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}",
                "operationId": "SshPublicKeys_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}",
                "operationId": "SshPublicKeys_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/sshPublicKeys",
                "operationId": "SshPublicKeys_ListBySubscription"
            }
        },
        "pickProperties": [
            "properties.publicKey"
        ],
        "pickPropertiesCreate": [
            "properties.publicKey"
        ]
    },
    {
        "type": "VirtualMachine",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "galleryImage": {
                "type": "GalleryImage",
                "group": "Compute",
                "createOnly": true
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            },
            "networkSecurityGroup": {
                "type": "NetworkSecurityGroup",
                "group": "Network",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "availabilitySet": {
                "type": "AvailabilitySet",
                "group": "Compute",
                "createOnly": true
            },
            "virtualMachineScaleSet": {
                "type": "VirtualMachineScaleSet",
                "group": "Compute",
                "createOnly": true
            },
            "proximityPlacementGroup": {
                "type": "ProximityPlacementGroup",
                "group": "Compute",
                "createOnly": true
            },
            "dedicatedHostGroup": {
                "type": "DedicatedHostGroup",
                "group": "Compute",
                "createOnly": true
            },
            "virtualMachineScaleSetVm": {
                "type": "VirtualMachineScaleSetVM",
                "group": "Compute",
                "createOnly": true
            },
            "capacityReservationGroup": {
                "type": "CapacityReservationGroup",
                "group": "Compute",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}",
                "operationId": "VirtualMachines_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}",
                "operationId": "VirtualMachines_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}",
                "operationId": "VirtualMachines_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}",
                "operationId": "VirtualMachines_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachines",
                "operationId": "VirtualMachines_ListAll"
            }
        },
        "omitProperties": [
            "properties.storageProfile.imageReference.exactVersion",
            "properties.storageProfile.imageReference.sharedGalleryImageId",
            "properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault.id",
            "properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault.id",
            "properties.availabilitySet.id",
            "properties.virtualMachineScaleSet.id",
            "properties.proximityPlacementGroup.id",
            "properties.host.id",
            "properties.hostGroup.id",
            "properties.provisioningState",
            "properties.instanceView",
            "properties.vmId",
            "properties.capacityReservation.capacityReservationGroup.id",
            "resources",
            "identity.principalId",
            "identity.tenantId"
        ],
        "pickProperties": [
            "plan.name",
            "plan.publisher",
            "plan.product",
            "plan.promotionCode",
            "properties.hardwareProfile.vmSize",
            "properties.hardwareProfile.vmSizeProperties.vCPUsAvailable",
            "properties.hardwareProfile.vmSizeProperties.vCPUsPerCore",
            "properties.storageProfile.imageReference.publisher",
            "properties.storageProfile.imageReference.offer",
            "properties.storageProfile.imageReference.sku",
            "properties.storageProfile.imageReference.version",
            "properties.storageProfile.osDisk.osType",
            "properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl",
            "properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl",
            "properties.storageProfile.osDisk.encryptionSettings.enabled",
            "properties.storageProfile.osDisk.name",
            "properties.storageProfile.osDisk.vhd.uri",
            "properties.storageProfile.osDisk.image.uri",
            "properties.storageProfile.osDisk.caching",
            "properties.storageProfile.osDisk.writeAcceleratorEnabled",
            "properties.storageProfile.osDisk.diffDiskSettings.option",
            "properties.storageProfile.osDisk.diffDiskSettings.placement",
            "properties.storageProfile.osDisk.createOption",
            "properties.storageProfile.osDisk.diskSizeGB",
            "properties.storageProfile.osDisk.managedDisk.storageAccountType",
            "properties.storageProfile.osDisk.managedDisk.diskEncryptionSet",
            "properties.storageProfile.osDisk.deleteOption",
            "properties.storageProfile.dataDisks",
            "properties.additionalCapabilities.ultraSSDEnabled",
            "properties.additionalCapabilities.hibernationEnabled",
            "properties.osProfile.computerName",
            "properties.osProfile.adminUsername",
            "properties.osProfile.adminPassword",
            "properties.osProfile.customData",
            "properties.osProfile.windowsConfiguration.provisionVMAgent",
            "properties.osProfile.windowsConfiguration.enableAutomaticUpdates",
            "properties.osProfile.windowsConfiguration.timeZone",
            "properties.osProfile.windowsConfiguration.additionalUnattendContent",
            "properties.osProfile.windowsConfiguration.patchSettings.patchMode",
            "properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching",
            "properties.osProfile.windowsConfiguration.patchSettings.assessmentMode",
            "properties.osProfile.windowsConfiguration.winRM.listeners",
            "properties.osProfile.linuxConfiguration.disablePasswordAuthentication",
            "properties.osProfile.linuxConfiguration.ssh.publicKeys",
            "properties.osProfile.linuxConfiguration.provisionVMAgent",
            "properties.osProfile.linuxConfiguration.patchSettings.patchMode",
            "properties.osProfile.linuxConfiguration.patchSettings.assessmentMode",
            "properties.osProfile.secrets",
            "properties.osProfile.allowExtensionOperations",
            "properties.osProfile.requireGuestProvisionSignal",
            "properties.networkProfile.networkInterfaces",
            "properties.networkProfile.networkApiVersion",
            "properties.networkProfile.networkInterfaceConfigurations",
            "properties.securityProfile.uefiSettings.secureBootEnabled",
            "properties.securityProfile.uefiSettings.vTpmEnabled",
            "properties.securityProfile.encryptionAtHost",
            "properties.securityProfile.securityType",
            "properties.diagnosticsProfile.bootDiagnostics.enabled",
            "properties.diagnosticsProfile.bootDiagnostics.storageUri",
            "properties.priority",
            "properties.evictionPolicy",
            "properties.billingProfile.maxPrice",
            "properties.licenseType",
            "properties.extensionsTimeBudget",
            "properties.platformFaultDomain",
            "properties.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout",
            "properties.scheduledEventsProfile.terminateNotificationProfile.enable",
            "properties.userData",
            "properties.applicationProfile.galleryApplications",
            "identity.type",
            "identity.userAssignedIdentities",
            "zones",
            "extendedLocation.name",
            "extendedLocation.type"
        ],
        "pickPropertiesCreate": [
            "plan.name",
            "plan.publisher",
            "plan.product",
            "plan.promotionCode",
            "properties.hardwareProfile.vmSize",
            "properties.hardwareProfile.vmSizeProperties.vCPUsAvailable",
            "properties.hardwareProfile.vmSizeProperties.vCPUsPerCore",
            "properties.storageProfile.imageReference.publisher",
            "properties.storageProfile.imageReference.offer",
            "properties.storageProfile.imageReference.sku",
            "properties.storageProfile.imageReference.version",
            "properties.storageProfile.osDisk.osType",
            "properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl",
            "properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl",
            "properties.storageProfile.osDisk.encryptionSettings.enabled",
            "properties.storageProfile.osDisk.name",
            "properties.storageProfile.osDisk.vhd.uri",
            "properties.storageProfile.osDisk.image.uri",
            "properties.storageProfile.osDisk.caching",
            "properties.storageProfile.osDisk.writeAcceleratorEnabled",
            "properties.storageProfile.osDisk.diffDiskSettings.option",
            "properties.storageProfile.osDisk.diffDiskSettings.placement",
            "properties.storageProfile.osDisk.createOption",
            "properties.storageProfile.osDisk.diskSizeGB",
            "properties.storageProfile.osDisk.managedDisk.storageAccountType",
            "properties.storageProfile.osDisk.managedDisk.diskEncryptionSet",
            "properties.storageProfile.osDisk.deleteOption",
            "properties.storageProfile.dataDisks",
            "properties.additionalCapabilities.ultraSSDEnabled",
            "properties.additionalCapabilities.hibernationEnabled",
            "properties.osProfile.computerName",
            "properties.osProfile.adminUsername",
            "properties.osProfile.adminPassword",
            "properties.osProfile.customData",
            "properties.osProfile.windowsConfiguration.provisionVMAgent",
            "properties.osProfile.windowsConfiguration.enableAutomaticUpdates",
            "properties.osProfile.windowsConfiguration.timeZone",
            "properties.osProfile.windowsConfiguration.additionalUnattendContent",
            "properties.osProfile.windowsConfiguration.patchSettings.patchMode",
            "properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching",
            "properties.osProfile.windowsConfiguration.patchSettings.assessmentMode",
            "properties.osProfile.windowsConfiguration.winRM.listeners",
            "properties.osProfile.linuxConfiguration.disablePasswordAuthentication",
            "properties.osProfile.linuxConfiguration.ssh.publicKeys",
            "properties.osProfile.linuxConfiguration.provisionVMAgent",
            "properties.osProfile.linuxConfiguration.patchSettings.patchMode",
            "properties.osProfile.linuxConfiguration.patchSettings.assessmentMode",
            "properties.osProfile.secrets",
            "properties.osProfile.allowExtensionOperations",
            "properties.osProfile.requireGuestProvisionSignal",
            "properties.networkProfile.networkInterfaces",
            "properties.networkProfile.networkApiVersion",
            "properties.networkProfile.networkInterfaceConfigurations",
            "properties.securityProfile.uefiSettings.secureBootEnabled",
            "properties.securityProfile.uefiSettings.vTpmEnabled",
            "properties.securityProfile.encryptionAtHost",
            "properties.securityProfile.securityType",
            "properties.diagnosticsProfile.bootDiagnostics.enabled",
            "properties.diagnosticsProfile.bootDiagnostics.storageUri",
            "properties.priority",
            "properties.evictionPolicy",
            "properties.billingProfile.maxPrice",
            "properties.licenseType",
            "properties.extensionsTimeBudget",
            "properties.platformFaultDomain",
            "properties.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout",
            "properties.scheduledEventsProfile.terminateNotificationProfile.enable",
            "properties.userData",
            "properties.applicationProfile.galleryApplications",
            "identity.type",
            "identity.userAssignedIdentities",
            "zones",
            "extendedLocation.name",
            "extendedLocation.type"
        ]
    },
    {
        "type": "VirtualMachineExtension",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vm": {
                "type": "VirtualMachine",
                "group": "Compute",
                "name": "vmName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}",
                "operationId": "VirtualMachineExtensions_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}",
                "operationId": "VirtualMachineExtensions_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}",
                "operationId": "VirtualMachineExtensions_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}",
                "operationId": "VirtualMachineExtensions_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions",
                "operationId": "VirtualMachineExtensions_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.instanceView.substatuses",
            "properties.instanceView.statuses"
        ],
        "pickProperties": [
            "properties.forceUpdateTag",
            "properties.publisher",
            "properties.type",
            "properties.typeHandlerVersion",
            "properties.autoUpgradeMinorVersion",
            "properties.enableAutomaticUpgrade",
            "properties.settings",
            "properties.protectedSettings",
            "properties.instanceView.name",
            "properties.instanceView.type",
            "properties.instanceView.typeHandlerVersion",
            "properties.suppressFailures"
        ],
        "pickPropertiesCreate": [
            "properties.forceUpdateTag",
            "properties.publisher",
            "properties.type",
            "properties.typeHandlerVersion",
            "properties.autoUpgradeMinorVersion",
            "properties.enableAutomaticUpgrade",
            "properties.settings",
            "properties.protectedSettings",
            "properties.instanceView.name",
            "properties.instanceView.type",
            "properties.instanceView.typeHandlerVersion",
            "properties.suppressFailures"
        ]
    },
    {
        "type": "VirtualMachineRunCommandByVirtualMachine",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vm": {
                "type": "VirtualMachine",
                "group": "Compute",
                "name": "vmName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands/{runCommandName}",
                "operationId": "VirtualMachineRunCommands_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands/{runCommandName}",
                "operationId": "VirtualMachineRunCommands_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands/{runCommandName}",
                "operationId": "VirtualMachineRunCommands_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands/{runCommandName}",
                "operationId": "VirtualMachineRunCommands_GetByVirtualMachine"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands",
                "operationId": "VirtualMachineRunCommands_ListByVirtualMachine"
            }
        },
        "omitProperties": [
            "properties.source.commandId",
            "properties.provisioningState",
            "properties.instanceView"
        ],
        "pickProperties": [
            "properties.source.script",
            "properties.source.scriptUri",
            "properties.parameters",
            "properties.protectedParameters",
            "properties.asyncExecution",
            "properties.runAsUser",
            "properties.runAsPassword",
            "properties.timeoutInSeconds",
            "properties.outputBlobUri",
            "properties.errorBlobUri"
        ],
        "pickPropertiesCreate": [
            "properties.source.script",
            "properties.source.scriptUri",
            "properties.parameters",
            "properties.protectedParameters",
            "properties.asyncExecution",
            "properties.runAsUser",
            "properties.runAsPassword",
            "properties.timeoutInSeconds",
            "properties.outputBlobUri",
            "properties.errorBlobUri"
        ],
        "propertiesDefault": {
            "properties": {
                "asyncExecution": false
            }
        }
    },
    {
        "type": "VirtualMachineScaleSet",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            },
            "galleryImage": {
                "type": "GalleryImage",
                "group": "Compute",
                "createOnly": true
            },
            "networkSecurityGroup": {
                "type": "NetworkSecurityGroup",
                "group": "Network",
                "createOnly": true
            },
            "capacityReservationGroup": {
                "type": "CapacityReservationGroup",
                "group": "Compute",
                "createOnly": true
            },
            "proximityPlacementGroup": {
                "type": "ProximityPlacementGroup",
                "group": "Compute",
                "createOnly": true
            },
            "dedicatedHostGroup": {
                "type": "DedicatedHostGroup",
                "group": "Compute",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}",
                "operationId": "VirtualMachineScaleSets_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}",
                "operationId": "VirtualMachineScaleSets_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}",
                "operationId": "VirtualMachineScaleSets_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}",
                "operationId": "VirtualMachineScaleSets_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachineScaleSets",
                "operationId": "VirtualMachineScaleSets_ListAll"
            }
        },
        "omitProperties": [
            "properties.virtualMachineProfile.storageProfile.imageReference.exactVersion",
            "properties.virtualMachineProfile.storageProfile.imageReference.sharedGalleryImageId",
            "properties.virtualMachineProfile.networkProfile.healthProbe.id",
            "properties.virtualMachineProfile.capacityReservation.capacityReservationGroup.id",
            "properties.provisioningState",
            "properties.uniqueId",
            "properties.proximityPlacementGroup.id",
            "properties.hostGroup.id",
            "identity.principalId",
            "identity.tenantId"
        ],
        "pickProperties": [
            "sku.name",
            "sku.tier",
            "sku.capacity",
            "plan.name",
            "plan.publisher",
            "plan.product",
            "plan.promotionCode",
            "properties.upgradePolicy.mode",
            "properties.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent",
            "properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent",
            "properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent",
            "properties.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches",
            "properties.upgradePolicy.rollingUpgradePolicy.enableCrossZoneUpgrade",
            "properties.upgradePolicy.rollingUpgradePolicy.prioritizeUnhealthyInstances",
            "properties.upgradePolicy.automaticOSUpgradePolicy.enableAutomaticOSUpgrade",
            "properties.upgradePolicy.automaticOSUpgradePolicy.disableAutomaticRollback",
            "properties.automaticRepairsPolicy.enabled",
            "properties.automaticRepairsPolicy.gracePeriod",
            "properties.virtualMachineProfile.osProfile.computerNamePrefix",
            "properties.virtualMachineProfile.osProfile.adminUsername",
            "properties.virtualMachineProfile.osProfile.adminPassword",
            "properties.virtualMachineProfile.osProfile.customData",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.timeZone",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.patchMode",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.enableHotpatching",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.assessmentMode",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners",
            "properties.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication",
            "properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys",
            "properties.virtualMachineProfile.osProfile.linuxConfiguration.provisionVMAgent",
            "properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.patchMode",
            "properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.assessmentMode",
            "properties.virtualMachineProfile.osProfile.secrets",
            "properties.virtualMachineProfile.storageProfile.imageReference.publisher",
            "properties.virtualMachineProfile.storageProfile.imageReference.offer",
            "properties.virtualMachineProfile.storageProfile.imageReference.sku",
            "properties.virtualMachineProfile.storageProfile.imageReference.version",
            "properties.virtualMachineProfile.storageProfile.osDisk.name",
            "properties.virtualMachineProfile.storageProfile.osDisk.caching",
            "properties.virtualMachineProfile.storageProfile.osDisk.writeAcceleratorEnabled",
            "properties.virtualMachineProfile.storageProfile.osDisk.createOption",
            "properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.option",
            "properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.placement",
            "properties.virtualMachineProfile.storageProfile.osDisk.diskSizeGB",
            "properties.virtualMachineProfile.storageProfile.osDisk.osType",
            "properties.virtualMachineProfile.storageProfile.osDisk.image.uri",
            "properties.virtualMachineProfile.storageProfile.osDisk.vhdContainers",
            "properties.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType",
            "properties.virtualMachineProfile.storageProfile.osDisk.managedDisk.diskEncryptionSet",
            "properties.virtualMachineProfile.storageProfile.dataDisks",
            "properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations",
            "properties.virtualMachineProfile.networkProfile.networkApiVersion",
            "properties.virtualMachineProfile.securityProfile.uefiSettings.secureBootEnabled",
            "properties.virtualMachineProfile.securityProfile.uefiSettings.vTpmEnabled",
            "properties.virtualMachineProfile.securityProfile.encryptionAtHost",
            "properties.virtualMachineProfile.securityProfile.securityType",
            "properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled",
            "properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri",
            "properties.virtualMachineProfile.extensionProfile.extensions",
            "properties.virtualMachineProfile.extensionProfile.extensionsTimeBudget",
            "properties.virtualMachineProfile.licenseType",
            "properties.virtualMachineProfile.priority",
            "properties.virtualMachineProfile.evictionPolicy",
            "properties.virtualMachineProfile.billingProfile.maxPrice",
            "properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout",
            "properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.enable",
            "properties.virtualMachineProfile.userData",
            "properties.virtualMachineProfile.applicationProfile.galleryApplications",
            "properties.overprovision",
            "properties.doNotRunExtensionsOnOverprovisionedVMs",
            "properties.singlePlacementGroup",
            "properties.zoneBalance",
            "properties.platformFaultDomainCount",
            "properties.additionalCapabilities.ultraSSDEnabled",
            "properties.additionalCapabilities.hibernationEnabled",
            "properties.scaleInPolicy.rules",
            "properties.scaleInPolicy.forceDeletion",
            "properties.orchestrationMode",
            "properties.spotRestorePolicy.enabled",
            "properties.spotRestorePolicy.restoreTimeout",
            "identity.type",
            "identity.userAssignedIdentities",
            "zones",
            "extendedLocation.name",
            "extendedLocation.type"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "sku.tier",
            "sku.capacity",
            "plan.name",
            "plan.publisher",
            "plan.product",
            "plan.promotionCode",
            "properties.upgradePolicy.mode",
            "properties.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent",
            "properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent",
            "properties.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent",
            "properties.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches",
            "properties.upgradePolicy.rollingUpgradePolicy.enableCrossZoneUpgrade",
            "properties.upgradePolicy.rollingUpgradePolicy.prioritizeUnhealthyInstances",
            "properties.upgradePolicy.automaticOSUpgradePolicy.enableAutomaticOSUpgrade",
            "properties.upgradePolicy.automaticOSUpgradePolicy.disableAutomaticRollback",
            "properties.automaticRepairsPolicy.enabled",
            "properties.automaticRepairsPolicy.gracePeriod",
            "properties.virtualMachineProfile.osProfile.computerNamePrefix",
            "properties.virtualMachineProfile.osProfile.adminUsername",
            "properties.virtualMachineProfile.osProfile.adminPassword",
            "properties.virtualMachineProfile.osProfile.customData",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.timeZone",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.patchMode",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.enableHotpatching",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.patchSettings.assessmentMode",
            "properties.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners",
            "properties.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication",
            "properties.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys",
            "properties.virtualMachineProfile.osProfile.linuxConfiguration.provisionVMAgent",
            "properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.patchMode",
            "properties.virtualMachineProfile.osProfile.linuxConfiguration.patchSettings.assessmentMode",
            "properties.virtualMachineProfile.osProfile.secrets",
            "properties.virtualMachineProfile.storageProfile.imageReference.publisher",
            "properties.virtualMachineProfile.storageProfile.imageReference.offer",
            "properties.virtualMachineProfile.storageProfile.imageReference.sku",
            "properties.virtualMachineProfile.storageProfile.imageReference.version",
            "properties.virtualMachineProfile.storageProfile.osDisk.name",
            "properties.virtualMachineProfile.storageProfile.osDisk.caching",
            "properties.virtualMachineProfile.storageProfile.osDisk.writeAcceleratorEnabled",
            "properties.virtualMachineProfile.storageProfile.osDisk.createOption",
            "properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.option",
            "properties.virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.placement",
            "properties.virtualMachineProfile.storageProfile.osDisk.diskSizeGB",
            "properties.virtualMachineProfile.storageProfile.osDisk.osType",
            "properties.virtualMachineProfile.storageProfile.osDisk.image.uri",
            "properties.virtualMachineProfile.storageProfile.osDisk.vhdContainers",
            "properties.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType",
            "properties.virtualMachineProfile.storageProfile.osDisk.managedDisk.diskEncryptionSet",
            "properties.virtualMachineProfile.storageProfile.dataDisks",
            "properties.virtualMachineProfile.networkProfile.networkInterfaceConfigurations",
            "properties.virtualMachineProfile.networkProfile.networkApiVersion",
            "properties.virtualMachineProfile.securityProfile.uefiSettings.secureBootEnabled",
            "properties.virtualMachineProfile.securityProfile.uefiSettings.vTpmEnabled",
            "properties.virtualMachineProfile.securityProfile.encryptionAtHost",
            "properties.virtualMachineProfile.securityProfile.securityType",
            "properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled",
            "properties.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri",
            "properties.virtualMachineProfile.extensionProfile.extensions",
            "properties.virtualMachineProfile.extensionProfile.extensionsTimeBudget",
            "properties.virtualMachineProfile.licenseType",
            "properties.virtualMachineProfile.priority",
            "properties.virtualMachineProfile.evictionPolicy",
            "properties.virtualMachineProfile.billingProfile.maxPrice",
            "properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout",
            "properties.virtualMachineProfile.scheduledEventsProfile.terminateNotificationProfile.enable",
            "properties.virtualMachineProfile.userData",
            "properties.virtualMachineProfile.applicationProfile.galleryApplications",
            "properties.overprovision",
            "properties.doNotRunExtensionsOnOverprovisionedVMs",
            "properties.singlePlacementGroup",
            "properties.zoneBalance",
            "properties.platformFaultDomainCount",
            "properties.additionalCapabilities.ultraSSDEnabled",
            "properties.additionalCapabilities.hibernationEnabled",
            "properties.scaleInPolicy.rules",
            "properties.scaleInPolicy.forceDeletion",
            "properties.orchestrationMode",
            "properties.spotRestorePolicy.enabled",
            "properties.spotRestorePolicy.restoreTimeout",
            "identity.type",
            "identity.userAssignedIdentities",
            "zones",
            "extendedLocation.name",
            "extendedLocation.type"
        ]
    },
    {
        "type": "VirtualMachineScaleSetExtension",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vmScaleSet": {
                "type": "VirtualMachineScaleSet",
                "group": "Compute",
                "name": "vmScaleSetName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}",
                "operationId": "VirtualMachineScaleSetExtensions_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}",
                "operationId": "VirtualMachineScaleSetExtensions_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}",
                "operationId": "VirtualMachineScaleSetExtensions_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}",
                "operationId": "VirtualMachineScaleSetExtensions_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions",
                "operationId": "VirtualMachineScaleSetExtensions_List"
            }
        },
        "omitProperties": [
            "type",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "name",
            "properties.forceUpdateTag",
            "properties.publisher",
            "properties.type",
            "properties.typeHandlerVersion",
            "properties.autoUpgradeMinorVersion",
            "properties.enableAutomaticUpgrade",
            "properties.settings",
            "properties.protectedSettings",
            "properties.provisionAfterExtensions",
            "properties.suppressFailures"
        ],
        "pickPropertiesCreate": [
            "name",
            "properties.forceUpdateTag",
            "properties.publisher",
            "properties.type",
            "properties.typeHandlerVersion",
            "properties.autoUpgradeMinorVersion",
            "properties.enableAutomaticUpgrade",
            "properties.settings",
            "properties.protectedSettings",
            "properties.provisionAfterExtensions",
            "properties.suppressFailures"
        ]
    },
    {
        "type": "VirtualMachineScaleSetVM",
        "group": "Compute",
        "apiVersion": "2021-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vmScaleSet": {
                "type": "VirtualMachineScaleSet",
                "group": "Compute",
                "name": "vmScaleSetName"
            },
            "cloudServiceRoleInstance": {
                "type": "CloudServiceRoleInstance",
                "group": "Compute",
                "createOnly": true
            },
            "proximityPlacementGroup": {
                "type": "ProximityPlacementGroup",
                "group": "Compute",
                "createOnly": true
            },
            "galleryImage": {
                "type": "GalleryImage",
                "group": "Compute",
                "createOnly": true
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            },
            "networkSecurityGroup": {
                "type": "NetworkSecurityGroup",
                "group": "Network",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "availabilitySet": {
                "type": "AvailabilitySet",
                "group": "Compute",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}",
                "operationId": "VirtualMachineScaleSetVMs_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}",
                "operationId": "VirtualMachineScaleSetVMs_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}",
                "operationId": "VirtualMachineScaleSetVMs_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines",
                "operationId": "VirtualMachineScaleSetVMs_List"
            }
        },
        "omitProperties": [
            "instanceId",
            "sku",
            "properties.latestModelApplied",
            "properties.vmId",
            "properties.instanceView",
            "properties.storageProfile.imageReference.exactVersion",
            "properties.storageProfile.imageReference.sharedGalleryImageId",
            "properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault.id",
            "properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault.id",
            "properties.availabilitySet.id",
            "properties.provisioningState",
            "properties.modelDefinitionApplied",
            "resources",
            "zones"
        ],
        "pickProperties": [
            "properties.hardwareProfile.vmSize",
            "properties.hardwareProfile.vmSizeProperties.vCPUsAvailable",
            "properties.hardwareProfile.vmSizeProperties.vCPUsPerCore",
            "properties.storageProfile.imageReference.publisher",
            "properties.storageProfile.imageReference.offer",
            "properties.storageProfile.imageReference.sku",
            "properties.storageProfile.imageReference.version",
            "properties.storageProfile.osDisk.osType",
            "properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl",
            "properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl",
            "properties.storageProfile.osDisk.encryptionSettings.enabled",
            "properties.storageProfile.osDisk.name",
            "properties.storageProfile.osDisk.vhd.uri",
            "properties.storageProfile.osDisk.image.uri",
            "properties.storageProfile.osDisk.caching",
            "properties.storageProfile.osDisk.writeAcceleratorEnabled",
            "properties.storageProfile.osDisk.diffDiskSettings.option",
            "properties.storageProfile.osDisk.diffDiskSettings.placement",
            "properties.storageProfile.osDisk.createOption",
            "properties.storageProfile.osDisk.diskSizeGB",
            "properties.storageProfile.osDisk.managedDisk.storageAccountType",
            "properties.storageProfile.osDisk.managedDisk.diskEncryptionSet",
            "properties.storageProfile.osDisk.deleteOption",
            "properties.storageProfile.dataDisks",
            "properties.additionalCapabilities.ultraSSDEnabled",
            "properties.additionalCapabilities.hibernationEnabled",
            "properties.osProfile.computerName",
            "properties.osProfile.adminUsername",
            "properties.osProfile.adminPassword",
            "properties.osProfile.customData",
            "properties.osProfile.windowsConfiguration.provisionVMAgent",
            "properties.osProfile.windowsConfiguration.enableAutomaticUpdates",
            "properties.osProfile.windowsConfiguration.timeZone",
            "properties.osProfile.windowsConfiguration.additionalUnattendContent",
            "properties.osProfile.windowsConfiguration.patchSettings.patchMode",
            "properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching",
            "properties.osProfile.windowsConfiguration.patchSettings.assessmentMode",
            "properties.osProfile.windowsConfiguration.winRM.listeners",
            "properties.osProfile.linuxConfiguration.disablePasswordAuthentication",
            "properties.osProfile.linuxConfiguration.ssh.publicKeys",
            "properties.osProfile.linuxConfiguration.provisionVMAgent",
            "properties.osProfile.linuxConfiguration.patchSettings.patchMode",
            "properties.osProfile.linuxConfiguration.patchSettings.assessmentMode",
            "properties.osProfile.secrets",
            "properties.osProfile.allowExtensionOperations",
            "properties.osProfile.requireGuestProvisionSignal",
            "properties.securityProfile.uefiSettings.secureBootEnabled",
            "properties.securityProfile.uefiSettings.vTpmEnabled",
            "properties.securityProfile.encryptionAtHost",
            "properties.securityProfile.securityType",
            "properties.networkProfile.networkInterfaces",
            "properties.networkProfile.networkApiVersion",
            "properties.networkProfile.networkInterfaceConfigurations",
            "properties.networkProfileConfiguration.networkInterfaceConfigurations",
            "properties.diagnosticsProfile.bootDiagnostics.enabled",
            "properties.diagnosticsProfile.bootDiagnostics.storageUri",
            "properties.licenseType",
            "properties.protectionPolicy.protectFromScaleIn",
            "properties.protectionPolicy.protectFromScaleSetActions",
            "properties.userData",
            "plan.name",
            "plan.publisher",
            "plan.product",
            "plan.promotionCode"
        ],
        "pickPropertiesCreate": [
            "properties.hardwareProfile.vmSize",
            "properties.hardwareProfile.vmSizeProperties.vCPUsAvailable",
            "properties.hardwareProfile.vmSizeProperties.vCPUsPerCore",
            "properties.storageProfile.imageReference.publisher",
            "properties.storageProfile.imageReference.offer",
            "properties.storageProfile.imageReference.sku",
            "properties.storageProfile.imageReference.version",
            "properties.storageProfile.osDisk.osType",
            "properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl",
            "properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl",
            "properties.storageProfile.osDisk.encryptionSettings.enabled",
            "properties.storageProfile.osDisk.name",
            "properties.storageProfile.osDisk.vhd.uri",
            "properties.storageProfile.osDisk.image.uri",
            "properties.storageProfile.osDisk.caching",
            "properties.storageProfile.osDisk.writeAcceleratorEnabled",
            "properties.storageProfile.osDisk.diffDiskSettings.option",
            "properties.storageProfile.osDisk.diffDiskSettings.placement",
            "properties.storageProfile.osDisk.createOption",
            "properties.storageProfile.osDisk.diskSizeGB",
            "properties.storageProfile.osDisk.managedDisk.storageAccountType",
            "properties.storageProfile.osDisk.managedDisk.diskEncryptionSet",
            "properties.storageProfile.osDisk.deleteOption",
            "properties.storageProfile.dataDisks",
            "properties.additionalCapabilities.ultraSSDEnabled",
            "properties.additionalCapabilities.hibernationEnabled",
            "properties.osProfile.computerName",
            "properties.osProfile.adminUsername",
            "properties.osProfile.adminPassword",
            "properties.osProfile.customData",
            "properties.osProfile.windowsConfiguration.provisionVMAgent",
            "properties.osProfile.windowsConfiguration.enableAutomaticUpdates",
            "properties.osProfile.windowsConfiguration.timeZone",
            "properties.osProfile.windowsConfiguration.additionalUnattendContent",
            "properties.osProfile.windowsConfiguration.patchSettings.patchMode",
            "properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching",
            "properties.osProfile.windowsConfiguration.patchSettings.assessmentMode",
            "properties.osProfile.windowsConfiguration.winRM.listeners",
            "properties.osProfile.linuxConfiguration.disablePasswordAuthentication",
            "properties.osProfile.linuxConfiguration.ssh.publicKeys",
            "properties.osProfile.linuxConfiguration.provisionVMAgent",
            "properties.osProfile.linuxConfiguration.patchSettings.patchMode",
            "properties.osProfile.linuxConfiguration.patchSettings.assessmentMode",
            "properties.osProfile.secrets",
            "properties.osProfile.allowExtensionOperations",
            "properties.osProfile.requireGuestProvisionSignal",
            "properties.securityProfile.uefiSettings.secureBootEnabled",
            "properties.securityProfile.uefiSettings.vTpmEnabled",
            "properties.securityProfile.encryptionAtHost",
            "properties.securityProfile.securityType",
            "properties.networkProfile.networkInterfaces",
            "properties.networkProfile.networkApiVersion",
            "properties.networkProfile.networkInterfaceConfigurations",
            "properties.networkProfileConfiguration.networkInterfaceConfigurations",
            "properties.diagnosticsProfile.bootDiagnostics.enabled",
            "properties.diagnosticsProfile.bootDiagnostics.storageUri",
            "properties.licenseType",
            "properties.protectionPolicy.protectFromScaleIn",
            "properties.protectionPolicy.protectFromScaleSetActions",
            "properties.userData",
            "plan.name",
            "plan.publisher",
            "plan.product",
            "plan.promotionCode"
        ]
    },
    {
        "type": "ContainerService",
        "group": "ContainerService",
        "apiVersion": "2017-01-31",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
                "operationId": "ContainerServices_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
                "operationId": "ContainerServices_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
                "operationId": "ContainerServices_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/containerServices",
                "operationId": "ContainerServices_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.servicePrincipalProfile.clientId",
            "properties.masterProfile.fqdn",
            "properties.diagnosticsProfile.vmDiagnostics.storageUri"
        ],
        "pickProperties": [
            "properties.orchestratorProfile.orchestratorType",
            "properties.customProfile.orchestrator",
            "properties.servicePrincipalProfile.secret",
            "properties.masterProfile.count",
            "properties.masterProfile.dnsPrefix",
            "properties.agentPoolProfiles",
            "properties.windowsProfile.adminUsername",
            "properties.windowsProfile.adminPassword",
            "properties.linuxProfile.adminUsername",
            "properties.linuxProfile.ssh.publicKeys",
            "properties.diagnosticsProfile.vmDiagnostics.enabled"
        ],
        "pickPropertiesCreate": [
            "properties.orchestratorProfile.orchestratorType",
            "properties.customProfile.orchestrator",
            "properties.servicePrincipalProfile.secret",
            "properties.masterProfile.count",
            "properties.masterProfile.dnsPrefix",
            "properties.agentPoolProfiles",
            "properties.windowsProfile.adminUsername",
            "properties.windowsProfile.adminPassword",
            "properties.linuxProfile.adminUsername",
            "properties.linuxProfile.ssh.publicKeys",
            "properties.diagnosticsProfile.vmDiagnostics.enabled"
        ],
        "propertiesDefault": {
            "properties": {
                "masterProfile": {
                    "count": 1
                }
            }
        }
    },
    {
        "type": "AgentPool",
        "group": "ContainerRegistry",
        "apiVersion": "2019-06-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/agentPools/{agentPoolName}",
                "operationId": "AgentPools_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/agentPools/{agentPoolName}",
                "operationId": "AgentPools_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/agentPools/{agentPoolName}",
                "operationId": "AgentPools_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/agentPools/{agentPoolName}",
                "operationId": "AgentPools_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/agentPools",
                "operationId": "AgentPools_List"
            }
        },
        "omitProperties": [
            "properties.virtualNetworkSubnetResourceId",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.count",
            "properties.tier",
            "properties.os"
        ],
        "pickPropertiesCreate": [
            "properties.count",
            "properties.tier",
            "properties.os"
        ]
    },
    {
        "type": "BuildStep",
        "group": "ContainerRegistry",
        "apiVersion": "2018-02-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            },
            "buildTask": {
                "type": "BuildTask",
                "group": "ContainerRegistry",
                "name": "buildTaskName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps/{stepName}",
                "operationId": "BuildSteps_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps/{stepName}",
                "operationId": "BuildSteps_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps/{stepName}",
                "operationId": "BuildSteps_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps/{stepName}",
                "operationId": "BuildSteps_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps",
                "operationId": "BuildSteps_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.type"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "BuildTask",
        "group": "ContainerRegistry",
        "apiVersion": "2018-02-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}",
                "operationId": "BuildTasks_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}",
                "operationId": "BuildTasks_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}",
                "operationId": "BuildTasks_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}",
                "operationId": "BuildTasks_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks",
                "operationId": "BuildTasks_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.creationDate",
            "properties.status"
        ],
        "pickProperties": [
            "properties.alias",
            "properties.sourceRepository.sourceControlType",
            "properties.sourceRepository.repositoryUrl",
            "properties.sourceRepository.isCommitTriggerEnabled",
            "properties.sourceRepository.sourceControlAuthProperties.tokenType",
            "properties.sourceRepository.sourceControlAuthProperties.token",
            "properties.sourceRepository.sourceControlAuthProperties.refreshToken",
            "properties.sourceRepository.sourceControlAuthProperties.scope",
            "properties.sourceRepository.sourceControlAuthProperties.expiresIn",
            "properties.platform.osType",
            "properties.platform.cpu",
            "properties.timeout"
        ],
        "pickPropertiesCreate": [
            "properties.alias",
            "properties.sourceRepository.sourceControlType",
            "properties.sourceRepository.repositoryUrl",
            "properties.sourceRepository.isCommitTriggerEnabled",
            "properties.sourceRepository.sourceControlAuthProperties.tokenType",
            "properties.sourceRepository.sourceControlAuthProperties.token",
            "properties.sourceRepository.sourceControlAuthProperties.refreshToken",
            "properties.sourceRepository.sourceControlAuthProperties.scope",
            "properties.sourceRepository.sourceControlAuthProperties.expiresIn",
            "properties.platform.osType",
            "properties.platform.cpu",
            "properties.timeout"
        ],
        "propertiesDefault": {
            "properties": {
                "sourceRepository": {
                    "isCommitTriggerEnabled": false
                },
                "timeout": 3600
            }
        }
    },
    {
        "type": "ConnectedRegistry",
        "group": "ContainerRegistry",
        "apiVersion": "2021-08-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/connectedRegistries/{connectedRegistryName}",
                "operationId": "ConnectedRegistries_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/connectedRegistries/{connectedRegistryName}",
                "operationId": "ConnectedRegistries_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/connectedRegistries/{connectedRegistryName}",
                "operationId": "ConnectedRegistries_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/connectedRegistries/{connectedRegistryName}",
                "operationId": "ConnectedRegistries_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/connectedRegistries",
                "operationId": "ConnectedRegistries_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.version",
            "properties.connectionState",
            "properties.lastActivityTime",
            "properties.activation",
            "properties.parent.id",
            "properties.parent.syncProperties.tokenId",
            "properties.parent.syncProperties.lastSyncTime",
            "properties.parent.syncProperties.gatewayEndpoint",
            "properties.loginServer.host",
            "properties.loginServer.tls",
            "properties.logging.auditLogStatus",
            "properties.statusDetails"
        ],
        "pickProperties": [
            "properties.mode",
            "properties.parent.syncProperties.schedule",
            "properties.parent.syncProperties.syncWindow",
            "properties.parent.syncProperties.messageTtl",
            "properties.clientTokenIds",
            "properties.logging.logLevel",
            "properties.notificationsList"
        ],
        "pickPropertiesCreate": [
            "properties.mode",
            "properties.parent.syncProperties.schedule",
            "properties.parent.syncProperties.syncWindow",
            "properties.parent.syncProperties.messageTtl",
            "properties.clientTokenIds",
            "properties.logging.logLevel",
            "properties.notificationsList"
        ],
        "propertiesDefault": {
            "properties": {
                "logging": {
                    "logLevel": "Information",
                    "auditLogStatus": "Disabled"
                }
            }
        }
    },
    {
        "type": "ExportPipeline",
        "group": "ContainerRegistry",
        "apiVersion": "2021-08-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/exportPipelines/{exportPipelineName}",
                "operationId": "ExportPipelines_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/exportPipelines/{exportPipelineName}",
                "operationId": "ExportPipelines_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/exportPipelines/{exportPipelineName}",
                "operationId": "ExportPipelines_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/exportPipelines",
                "operationId": "ExportPipelines_List"
            }
        },
        "omitProperties": [
            "identity.principalId",
            "identity.tenantId",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "location",
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.target.type",
            "properties.target.uri",
            "properties.target.keyVaultUri",
            "properties.options"
        ],
        "pickPropertiesCreate": [
            "location",
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.target.type",
            "properties.target.uri",
            "properties.target.keyVaultUri",
            "properties.options"
        ]
    },
    {
        "type": "ImportPipeline",
        "group": "ContainerRegistry",
        "apiVersion": "2021-08-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/importPipelines/{importPipelineName}",
                "operationId": "ImportPipelines_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/importPipelines/{importPipelineName}",
                "operationId": "ImportPipelines_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/importPipelines/{importPipelineName}",
                "operationId": "ImportPipelines_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/importPipelines",
                "operationId": "ImportPipelines_List"
            }
        },
        "omitProperties": [
            "identity.principalId",
            "identity.tenantId",
            "properties.trigger.sourceTrigger.status",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "location",
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.source.type",
            "properties.source.uri",
            "properties.source.keyVaultUri",
            "properties.options"
        ],
        "pickPropertiesCreate": [
            "location",
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.source.type",
            "properties.source.uri",
            "properties.source.keyVaultUri",
            "properties.options"
        ],
        "propertiesDefault": {
            "properties": {
                "source": {
                    "type": "AzureStorageBlobContainer"
                },
                "trigger": {
                    "sourceTrigger": {
                        "status": "Enabled"
                    }
                }
            }
        }
    },
    {
        "type": "PipelineRun",
        "group": "ContainerRegistry",
        "apiVersion": "2021-08-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/pipelineRuns/{pipelineRunName}",
                "operationId": "PipelineRuns_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/pipelineRuns/{pipelineRunName}",
                "operationId": "PipelineRuns_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/pipelineRuns/{pipelineRunName}",
                "operationId": "PipelineRuns_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/pipelineRuns",
                "operationId": "PipelineRuns_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.request.pipelineResourceId",
            "properties.response"
        ],
        "pickProperties": [
            "properties.request.artifacts",
            "properties.request.source.type",
            "properties.request.source.name",
            "properties.request.target.type",
            "properties.request.target.name",
            "properties.request.catalogDigest",
            "properties.forceUpdateTag"
        ],
        "pickPropertiesCreate": [
            "properties.request.artifacts",
            "properties.request.source.type",
            "properties.request.source.name",
            "properties.request.target.type",
            "properties.request.target.name",
            "properties.request.catalogDigest",
            "properties.forceUpdateTag"
        ],
        "propertiesDefault": {
            "properties": {
                "request": {
                    "source": {
                        "type": "AzureStorageBlob"
                    },
                    "target": {
                        "type": "AzureStorageBlob"
                    }
                },
                "response": {
                    "source": {
                        "type": "AzureStorageBlobContainer"
                    }
                }
            }
        }
    },
    {
        "type": "PrivateEndpointConnection",
        "group": "ContainerRegistry",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            },
            "privateEndpoint": {
                "type": "PrivateEndpoint",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/privateEndpointConnections",
                "operationId": "PrivateEndpointConnections_List"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "Registry",
        "group": "ContainerRegistry",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "privateEndpointConnection": {
                "type": "PrivateEndpointConnection",
                "group": "ContainerRegistry",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}",
                "operationId": "Registries_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}",
                "operationId": "Registries_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}",
                "operationId": "Registries_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}",
                "operationId": "Registries_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries",
                "operationId": "Registries_List"
            }
        },
        "omitProperties": [
            "sku.tier",
            "identity.principalId",
            "identity.tenantId",
            "properties.loginServer",
            "properties.creationDate",
            "properties.provisioningState",
            "properties.status",
            "properties.policies.quarantinePolicy.status",
            "properties.policies.trustPolicy.status",
            "properties.policies.retentionPolicy.lastUpdatedTime",
            "properties.policies.retentionPolicy.status",
            "properties.policies.exportPolicy.status",
            "properties.encryption.status",
            "properties.encryption.keyVaultProperties.versionedKeyIdentifier",
            "properties.encryption.keyVaultProperties.keyRotationEnabled",
            "properties.encryption.keyVaultProperties.lastKeyRotationTimestamp",
            "properties.dataEndpointHostNames",
            "properties.privateEndpointConnections"
        ],
        "pickProperties": [
            "sku.name",
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.adminUserEnabled",
            "properties.networkRuleSet.defaultAction",
            "properties.networkRuleSet.ipRules",
            "properties.policies.trustPolicy.type",
            "properties.policies.retentionPolicy.days",
            "properties.encryption.keyVaultProperties.keyIdentifier",
            "properties.encryption.keyVaultProperties.identity",
            "properties.dataEndpointEnabled",
            "properties.publicNetworkAccess",
            "properties.networkRuleBypassOptions",
            "properties.zoneRedundancy"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.adminUserEnabled",
            "properties.networkRuleSet.defaultAction",
            "properties.networkRuleSet.ipRules",
            "properties.policies.trustPolicy.type",
            "properties.policies.retentionPolicy.days",
            "properties.encryption.keyVaultProperties.keyIdentifier",
            "properties.encryption.keyVaultProperties.identity",
            "properties.dataEndpointEnabled",
            "properties.publicNetworkAccess",
            "properties.networkRuleBypassOptions",
            "properties.zoneRedundancy"
        ],
        "propertiesDefault": {
            "properties": {
                "adminUserEnabled": false,
                "networkRuleSet": {
                    "defaultAction": "Allow"
                },
                "policies": {
                    "quarantinePolicy": {
                        "status": "disabled"
                    },
                    "trustPolicy": {
                        "type": "Notary",
                        "status": "disabled"
                    },
                    "retentionPolicy": {
                        "days": 7,
                        "status": "disabled"
                    },
                    "exportPolicy": {
                        "status": "enabled"
                    }
                },
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices",
                "zoneRedundancy": "Disabled"
            }
        }
    },
    {
        "type": "RegistryProperties",
        "group": "ContainerRegistry",
        "apiVersion": "2016-06-27-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}",
                "operationId": "Registries_GetProperties"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}",
                "operationId": "Registries_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}",
                "operationId": "Registries_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}",
                "operationId": "Registries_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries",
                "operationId": "Registries_ListByResourceGroup"
            }
        },
        "omitProperties": [
            "properties.loginServer",
            "properties.creationDate"
        ],
        "pickProperties": [
            "properties.adminUserEnabled",
            "properties.storageAccount.name",
            "properties.storageAccount.accessKey"
        ],
        "pickPropertiesCreate": [
            "properties.adminUserEnabled",
            "properties.storageAccount.name",
            "properties.storageAccount.accessKey"
        ],
        "propertiesDefault": {
            "properties": {
                "adminUserEnabled": false
            }
        }
    },
    {
        "type": "Replication",
        "group": "ContainerRegistry",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}",
                "operationId": "Replications_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}",
                "operationId": "Replications_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}",
                "operationId": "Replications_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications/{replicationName}",
                "operationId": "Replications_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/replications",
                "operationId": "Replications_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.status"
        ],
        "pickProperties": [
            "properties.regionEndpointEnabled",
            "properties.zoneRedundancy"
        ],
        "pickPropertiesCreate": [
            "properties.regionEndpointEnabled",
            "properties.zoneRedundancy"
        ],
        "propertiesDefault": {
            "properties": {
                "regionEndpointEnabled": true,
                "zoneRedundancy": "Disabled"
            }
        }
    },
    {
        "type": "ScopeMap",
        "group": "ContainerRegistry",
        "apiVersion": "2021-08-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}",
                "operationId": "ScopeMaps_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}",
                "operationId": "ScopeMaps_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}",
                "operationId": "ScopeMaps_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}",
                "operationId": "ScopeMaps_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps",
                "operationId": "ScopeMaps_List"
            }
        },
        "omitProperties": [
            "properties.type",
            "properties.creationDate",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.description",
            "properties.actions"
        ],
        "pickPropertiesCreate": [
            "properties.description",
            "properties.actions"
        ]
    },
    {
        "type": "Task",
        "group": "ContainerRegistry",
        "apiVersion": "2019-06-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}",
                "operationId": "Tasks_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}",
                "operationId": "Tasks_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}",
                "operationId": "Tasks_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks/{taskName}",
                "operationId": "Tasks_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tasks",
                "operationId": "Tasks_List"
            }
        },
        "omitProperties": [
            "identity.principalId",
            "identity.tenantId",
            "properties.provisioningState",
            "properties.creationDate",
            "properties.status",
            "properties.step.baseImageDependencies",
            "properties.trigger.baseImageTrigger.status"
        ],
        "pickProperties": [
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.platform.os",
            "properties.platform.architecture",
            "properties.platform.variant",
            "properties.agentConfiguration.cpu",
            "properties.agentPoolName",
            "properties.timeout",
            "properties.step.type",
            "properties.step.contextPath",
            "properties.step.contextAccessToken",
            "properties.trigger.timerTriggers",
            "properties.trigger.sourceTriggers",
            "properties.trigger.baseImageTrigger.baseImageTriggerType",
            "properties.trigger.baseImageTrigger.updateTriggerEndpoint",
            "properties.trigger.baseImageTrigger.updateTriggerPayloadType",
            "properties.trigger.baseImageTrigger.name",
            "properties.credentials.sourceRegistry.loginMode",
            "properties.credentials.customRegistries",
            "properties.logTemplate",
            "properties.isSystemTask"
        ],
        "pickPropertiesCreate": [
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.platform.os",
            "properties.platform.architecture",
            "properties.platform.variant",
            "properties.agentConfiguration.cpu",
            "properties.agentPoolName",
            "properties.timeout",
            "properties.step.type",
            "properties.step.contextPath",
            "properties.step.contextAccessToken",
            "properties.trigger.timerTriggers",
            "properties.trigger.sourceTriggers",
            "properties.trigger.baseImageTrigger.baseImageTriggerType",
            "properties.trigger.baseImageTrigger.updateTriggerEndpoint",
            "properties.trigger.baseImageTrigger.updateTriggerPayloadType",
            "properties.trigger.baseImageTrigger.name",
            "properties.credentials.sourceRegistry.loginMode",
            "properties.credentials.customRegistries",
            "properties.logTemplate",
            "properties.isSystemTask"
        ],
        "propertiesDefault": {
            "properties": {
                "timeout": 3600,
                "trigger": {
                    "baseImageTrigger": {
                        "status": "Enabled"
                    }
                },
                "isSystemTask": false
            }
        }
    },
    {
        "type": "TaskRun",
        "group": "ContainerRegistry",
        "apiVersion": "2019-06-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            },
            "pipelineRun": {
                "type": "PipelineRun",
                "group": "ContainerRegistry",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}",
                "operationId": "TaskRuns_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}",
                "operationId": "TaskRuns_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}",
                "operationId": "TaskRuns_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}",
                "operationId": "TaskRuns_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns",
                "operationId": "TaskRuns_List"
            }
        },
        "omitProperties": [
            "identity.principalId",
            "identity.tenantId",
            "properties.provisioningState",
            "properties.runResult"
        ],
        "pickProperties": [
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.runRequest.type",
            "properties.runRequest.isArchiveEnabled",
            "properties.runRequest.agentPoolName",
            "properties.runRequest.logTemplate",
            "properties.forceUpdateTag",
            "location"
        ],
        "pickPropertiesCreate": [
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.runRequest.type",
            "properties.runRequest.isArchiveEnabled",
            "properties.runRequest.agentPoolName",
            "properties.runRequest.logTemplate",
            "properties.forceUpdateTag",
            "location"
        ],
        "propertiesDefault": {
            "properties": {
                "runRequest": {
                    "isArchiveEnabled": false
                },
                "runResult": {
                    "properties": {
                        "isArchiveEnabled": false
                    }
                }
            }
        }
    },
    {
        "type": "Token",
        "group": "ContainerRegistry",
        "apiVersion": "2021-08-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            },
            "scopeMap": {
                "type": "ScopeMap",
                "group": "ContainerRegistry",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}",
                "operationId": "Tokens_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}",
                "operationId": "Tokens_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}",
                "operationId": "Tokens_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}",
                "operationId": "Tokens_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens",
                "operationId": "Tokens_List"
            }
        },
        "omitProperties": [
            "properties.creationDate",
            "properties.provisioningState",
            "properties.scopeMapId",
            "properties.status"
        ],
        "pickProperties": [
            "properties.credentials.certificates",
            "properties.credentials.passwords"
        ],
        "pickPropertiesCreate": [
            "properties.credentials.certificates",
            "properties.credentials.passwords"
        ]
    },
    {
        "type": "Webhook",
        "group": "ContainerRegistry",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "registry": {
                "type": "Registry",
                "group": "ContainerRegistry",
                "name": "registryName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}",
                "operationId": "Webhooks_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}",
                "operationId": "Webhooks_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}",
                "operationId": "Webhooks_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}",
                "operationId": "Webhooks_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks",
                "operationId": "Webhooks_List"
            }
        },
        "omitProperties": [
            "properties.status",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.scope",
            "properties.actions"
        ],
        "pickPropertiesCreate": [
            "tags",
            "location",
            "properties.scope",
            "properties.actions"
        ]
    },
    {
        "type": "AgentPool",
        "group": "ContainerService",
        "apiVersion": "2021-10-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "resource": {
                "type": "ManagedCluster",
                "group": "ContainerService",
                "name": "resourceName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}",
                "operationId": "AgentPools_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}",
                "operationId": "AgentPools_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}",
                "operationId": "AgentPools_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools",
                "operationId": "AgentPools_List"
            }
        },
        "omitProperties": [
            "properties.vnetSubnetID",
            "properties.podSubnetID",
            "properties.nodeImageVersion",
            "properties.provisioningState",
            "properties.powerState",
            "properties.nodePublicIPPrefixID",
            "properties.proximityPlacementGroupID",
            "properties.creationData.sourceResourceId"
        ],
        "pickProperties": [
            "properties.count",
            "properties.vmSize",
            "properties.osDiskSizeGB",
            "properties.osDiskType",
            "properties.kubeletDiskType",
            "properties.workloadRuntime",
            "properties.maxPods",
            "properties.osType",
            "properties.osSKU",
            "properties.maxCount",
            "properties.minCount",
            "properties.enableAutoScaling",
            "properties.scaleDownMode",
            "properties.type",
            "properties.mode",
            "properties.orchestratorVersion",
            "properties.upgradeSettings.maxSurge",
            "properties.availabilityZones",
            "properties.enableNodePublicIP",
            "properties.scaleSetPriority",
            "properties.scaleSetEvictionPolicy",
            "properties.spotMaxPrice",
            "properties.tags",
            "properties.nodeLabels",
            "properties.nodeTaints",
            "properties.kubeletConfig.cpuManagerPolicy",
            "properties.kubeletConfig.cpuCfsQuota",
            "properties.kubeletConfig.cpuCfsQuotaPeriod",
            "properties.kubeletConfig.imageGcHighThreshold",
            "properties.kubeletConfig.imageGcLowThreshold",
            "properties.kubeletConfig.topologyManagerPolicy",
            "properties.kubeletConfig.allowedUnsafeSysctls",
            "properties.kubeletConfig.failSwapOn",
            "properties.kubeletConfig.containerLogMaxSizeMB",
            "properties.kubeletConfig.containerLogMaxFiles",
            "properties.kubeletConfig.podMaxPids",
            "properties.linuxOSConfig.sysctls.netCoreSomaxconn",
            "properties.linuxOSConfig.sysctls.netCoreNetdevMaxBacklog",
            "properties.linuxOSConfig.sysctls.netCoreRmemDefault",
            "properties.linuxOSConfig.sysctls.netCoreRmemMax",
            "properties.linuxOSConfig.sysctls.netCoreWmemDefault",
            "properties.linuxOSConfig.sysctls.netCoreWmemMax",
            "properties.linuxOSConfig.sysctls.netCoreOptmemMax",
            "properties.linuxOSConfig.sysctls.netIpv4TcpMaxSynBacklog",
            "properties.linuxOSConfig.sysctls.netIpv4TcpMaxTwBuckets",
            "properties.linuxOSConfig.sysctls.netIpv4TcpFinTimeout",
            "properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveTime",
            "properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveProbes",
            "properties.linuxOSConfig.sysctls.netIpv4TcpkeepaliveIntvl",
            "properties.linuxOSConfig.sysctls.netIpv4TcpTwReuse",
            "properties.linuxOSConfig.sysctls.netIpv4IpLocalPortRange",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh1",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh2",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh3",
            "properties.linuxOSConfig.sysctls.netNetfilterNfConntrackMax",
            "properties.linuxOSConfig.sysctls.netNetfilterNfConntrackBuckets",
            "properties.linuxOSConfig.sysctls.fsInotifyMaxUserWatches",
            "properties.linuxOSConfig.sysctls.fsFileMax",
            "properties.linuxOSConfig.sysctls.fsAioMaxNr",
            "properties.linuxOSConfig.sysctls.fsNrOpen",
            "properties.linuxOSConfig.sysctls.kernelThreadsMax",
            "properties.linuxOSConfig.sysctls.vmMaxMapCount",
            "properties.linuxOSConfig.sysctls.vmSwappiness",
            "properties.linuxOSConfig.sysctls.vmVfsCachePressure",
            "properties.linuxOSConfig.transparentHugePageEnabled",
            "properties.linuxOSConfig.transparentHugePageDefrag",
            "properties.linuxOSConfig.swapFileSizeMB",
            "properties.enableEncryptionAtHost",
            "properties.enableUltraSSD",
            "properties.enableFIPS",
            "properties.gpuInstanceProfile"
        ],
        "pickPropertiesCreate": [
            "properties.count",
            "properties.vmSize",
            "properties.osDiskSizeGB",
            "properties.osDiskType",
            "properties.kubeletDiskType",
            "properties.workloadRuntime",
            "properties.maxPods",
            "properties.osType",
            "properties.osSKU",
            "properties.maxCount",
            "properties.minCount",
            "properties.enableAutoScaling",
            "properties.scaleDownMode",
            "properties.type",
            "properties.mode",
            "properties.orchestratorVersion",
            "properties.upgradeSettings.maxSurge",
            "properties.availabilityZones",
            "properties.enableNodePublicIP",
            "properties.scaleSetPriority",
            "properties.scaleSetEvictionPolicy",
            "properties.spotMaxPrice",
            "properties.tags",
            "properties.nodeLabels",
            "properties.nodeTaints",
            "properties.kubeletConfig.cpuManagerPolicy",
            "properties.kubeletConfig.cpuCfsQuota",
            "properties.kubeletConfig.cpuCfsQuotaPeriod",
            "properties.kubeletConfig.imageGcHighThreshold",
            "properties.kubeletConfig.imageGcLowThreshold",
            "properties.kubeletConfig.topologyManagerPolicy",
            "properties.kubeletConfig.allowedUnsafeSysctls",
            "properties.kubeletConfig.failSwapOn",
            "properties.kubeletConfig.containerLogMaxSizeMB",
            "properties.kubeletConfig.containerLogMaxFiles",
            "properties.kubeletConfig.podMaxPids",
            "properties.linuxOSConfig.sysctls.netCoreSomaxconn",
            "properties.linuxOSConfig.sysctls.netCoreNetdevMaxBacklog",
            "properties.linuxOSConfig.sysctls.netCoreRmemDefault",
            "properties.linuxOSConfig.sysctls.netCoreRmemMax",
            "properties.linuxOSConfig.sysctls.netCoreWmemDefault",
            "properties.linuxOSConfig.sysctls.netCoreWmemMax",
            "properties.linuxOSConfig.sysctls.netCoreOptmemMax",
            "properties.linuxOSConfig.sysctls.netIpv4TcpMaxSynBacklog",
            "properties.linuxOSConfig.sysctls.netIpv4TcpMaxTwBuckets",
            "properties.linuxOSConfig.sysctls.netIpv4TcpFinTimeout",
            "properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveTime",
            "properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveProbes",
            "properties.linuxOSConfig.sysctls.netIpv4TcpkeepaliveIntvl",
            "properties.linuxOSConfig.sysctls.netIpv4TcpTwReuse",
            "properties.linuxOSConfig.sysctls.netIpv4IpLocalPortRange",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh1",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh2",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh3",
            "properties.linuxOSConfig.sysctls.netNetfilterNfConntrackMax",
            "properties.linuxOSConfig.sysctls.netNetfilterNfConntrackBuckets",
            "properties.linuxOSConfig.sysctls.fsInotifyMaxUserWatches",
            "properties.linuxOSConfig.sysctls.fsFileMax",
            "properties.linuxOSConfig.sysctls.fsAioMaxNr",
            "properties.linuxOSConfig.sysctls.fsNrOpen",
            "properties.linuxOSConfig.sysctls.kernelThreadsMax",
            "properties.linuxOSConfig.sysctls.vmMaxMapCount",
            "properties.linuxOSConfig.sysctls.vmSwappiness",
            "properties.linuxOSConfig.sysctls.vmVfsCachePressure",
            "properties.linuxOSConfig.transparentHugePageEnabled",
            "properties.linuxOSConfig.transparentHugePageDefrag",
            "properties.linuxOSConfig.swapFileSizeMB",
            "properties.enableEncryptionAtHost",
            "properties.enableUltraSSD",
            "properties.enableFIPS",
            "properties.gpuInstanceProfile"
        ],
        "propertiesDefault": {
            "properties": {
                "osType": "Linux",
                "scaleSetPriority": "Regular",
                "scaleSetEvictionPolicy": "Delete",
                "spotMaxPrice": -1
            }
        }
    },
    {
        "type": "ContainerService",
        "group": "ContainerService",
        "apiVersion": "2017-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
                "operationId": "ContainerServices_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
                "operationId": "ContainerServices_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
                "operationId": "ContainerServices_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/containerServices",
                "operationId": "ContainerServices_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.servicePrincipalProfile.clientId",
            "properties.servicePrincipalProfile.keyVaultSecretRef.vaultID",
            "properties.masterProfile.vnetSubnetID",
            "properties.masterProfile.fqdn",
            "properties.diagnosticsProfile.vmDiagnostics.storageUri"
        ],
        "pickProperties": [
            "properties.orchestratorProfile.orchestratorType",
            "properties.orchestratorProfile.orchestratorVersion",
            "properties.customProfile.orchestrator",
            "properties.servicePrincipalProfile.secret",
            "properties.servicePrincipalProfile.keyVaultSecretRef.secretName",
            "properties.servicePrincipalProfile.keyVaultSecretRef.version",
            "properties.masterProfile.count",
            "properties.masterProfile.dnsPrefix",
            "properties.masterProfile.vmSize",
            "properties.masterProfile.osDiskSizeGB",
            "properties.masterProfile.firstConsecutiveStaticIP",
            "properties.masterProfile.storageProfile",
            "properties.agentPoolProfiles",
            "properties.windowsProfile.adminUsername",
            "properties.windowsProfile.adminPassword",
            "properties.linuxProfile.adminUsername",
            "properties.linuxProfile.ssh.publicKeys",
            "properties.diagnosticsProfile.vmDiagnostics.enabled"
        ],
        "pickPropertiesCreate": [
            "properties.orchestratorProfile.orchestratorType",
            "properties.orchestratorProfile.orchestratorVersion",
            "properties.customProfile.orchestrator",
            "properties.servicePrincipalProfile.secret",
            "properties.servicePrincipalProfile.keyVaultSecretRef.secretName",
            "properties.servicePrincipalProfile.keyVaultSecretRef.version",
            "properties.masterProfile.count",
            "properties.masterProfile.dnsPrefix",
            "properties.masterProfile.vmSize",
            "properties.masterProfile.osDiskSizeGB",
            "properties.masterProfile.firstConsecutiveStaticIP",
            "properties.masterProfile.storageProfile",
            "properties.agentPoolProfiles",
            "properties.windowsProfile.adminUsername",
            "properties.windowsProfile.adminPassword",
            "properties.linuxProfile.adminUsername",
            "properties.linuxProfile.ssh.publicKeys",
            "properties.diagnosticsProfile.vmDiagnostics.enabled"
        ],
        "propertiesDefault": {
            "properties": {
                "masterProfile": {
                    "count": 1,
                    "firstConsecutiveStaticIP": "10.240.255.5"
                }
            }
        }
    },
    {
        "type": "MaintenanceConfiguration",
        "group": "ContainerService",
        "apiVersion": "2021-10-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "resource": {
                "type": "ManagedCluster",
                "group": "ContainerService",
                "name": "resourceName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/maintenanceConfigurations/{configName}",
                "operationId": "MaintenanceConfigurations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/maintenanceConfigurations/{configName}",
                "operationId": "MaintenanceConfigurations_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/maintenanceConfigurations/{configName}",
                "operationId": "MaintenanceConfigurations_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/maintenanceConfigurations",
                "operationId": "MaintenanceConfigurations_ListByManagedCluster"
            }
        },
        "omitProperties": [
            "systemData"
        ],
        "pickProperties": [
            "properties.timeInWeek",
            "properties.notAllowedTime"
        ],
        "pickPropertiesCreate": [
            "properties.timeInWeek",
            "properties.notAllowedTime"
        ]
    },
    {
        "type": "ManagedCluster",
        "group": "ContainerService",
        "apiVersion": "2021-10-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}",
                "operationId": "ManagedClusters_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}",
                "operationId": "ManagedClusters_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}",
                "operationId": "ManagedClusters_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}",
                "operationId": "ManagedClusters_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedClusters",
                "operationId": "ManagedClusters_List"
            }
        },
        "omitProperties": [
            "identity.principalId",
            "identity.tenantId",
            "properties.provisioningState",
            "properties.powerState",
            "properties.maxAgentPools",
            "properties.fqdn",
            "properties.privateFQDN",
            "properties.azurePortalFQDN",
            "properties.servicePrincipalProfile.clientId",
            "properties.aadProfile.clientAppID",
            "properties.aadProfile.serverAppID",
            "properties.aadProfile.tenantID",
            "properties.diskEncryptionSetID",
            "properties.securityProfile.azureDefender.logAnalyticsWorkspaceResourceId"
        ],
        "pickProperties": [
            "sku.name",
            "sku.tier",
            "extendedLocation.name",
            "extendedLocation.type",
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.kubernetesVersion",
            "properties.dnsPrefix",
            "properties.fqdnSubdomain",
            "properties.agentPoolProfiles",
            "properties.linuxProfile.adminUsername",
            "properties.linuxProfile.ssh.publicKeys",
            "properties.windowsProfile.adminUsername",
            "properties.windowsProfile.adminPassword",
            "properties.windowsProfile.licenseType",
            "properties.windowsProfile.enableCSIProxy",
            "properties.windowsProfile.gmsaProfile.enabled",
            "properties.windowsProfile.gmsaProfile.dnsServer",
            "properties.windowsProfile.gmsaProfile.rootDomainName",
            "properties.servicePrincipalProfile.secret",
            "properties.addonProfiles",
            "properties.podIdentityProfile.enabled",
            "properties.podIdentityProfile.allowNetworkPluginKubenet",
            "properties.podIdentityProfile.userAssignedIdentities",
            "properties.podIdentityProfile.userAssignedIdentityExceptions",
            "properties.nodeResourceGroup",
            "properties.enableRBAC",
            "properties.enablePodSecurityPolicy",
            "properties.networkProfile.networkPlugin",
            "properties.networkProfile.networkPolicy",
            "properties.networkProfile.networkMode",
            "properties.networkProfile.podCidr",
            "properties.networkProfile.serviceCidr",
            "properties.networkProfile.dnsServiceIP",
            "properties.networkProfile.dockerBridgeCidr",
            "properties.networkProfile.outboundType",
            "properties.networkProfile.loadBalancerSku",
            "properties.networkProfile.loadBalancerProfile.managedOutboundIPs.count",
            "properties.networkProfile.loadBalancerProfile.managedOutboundIPs.countIPv6",
            "properties.networkProfile.loadBalancerProfile.outboundIPPrefixes.publicIPPrefixes",
            "properties.networkProfile.loadBalancerProfile.outboundIPs.publicIPs",
            "properties.networkProfile.loadBalancerProfile.effectiveOutboundIPs",
            "properties.networkProfile.loadBalancerProfile.allocatedOutboundPorts",
            "properties.networkProfile.loadBalancerProfile.idleTimeoutInMinutes",
            "properties.networkProfile.loadBalancerProfile.enableMultipleStandardLoadBalancers",
            "properties.networkProfile.natGatewayProfile.managedOutboundIPProfile.count",
            "properties.networkProfile.natGatewayProfile.effectiveOutboundIPs",
            "properties.networkProfile.natGatewayProfile.idleTimeoutInMinutes",
            "properties.networkProfile.podCidrs",
            "properties.networkProfile.serviceCidrs",
            "properties.networkProfile.ipFamilies",
            "properties.aadProfile.managed",
            "properties.aadProfile.enableAzureRBAC",
            "properties.aadProfile.adminGroupObjectIDs",
            "properties.aadProfile.serverAppSecret",
            "properties.autoUpgradeProfile.upgradeChannel",
            "properties.autoScalerProfile.balance-similar-node-groups",
            "properties.autoScalerProfile.expander",
            "properties.autoScalerProfile.max-empty-bulk-delete",
            "properties.autoScalerProfile.max-graceful-termination-sec",
            "properties.autoScalerProfile.max-node-provision-time",
            "properties.autoScalerProfile.max-total-unready-percentage",
            "properties.autoScalerProfile.new-pod-scale-up-delay",
            "properties.autoScalerProfile.ok-total-unready-count",
            "properties.autoScalerProfile.scan-interval",
            "properties.autoScalerProfile.scale-down-delay-after-add",
            "properties.autoScalerProfile.scale-down-delay-after-delete",
            "properties.autoScalerProfile.scale-down-delay-after-failure",
            "properties.autoScalerProfile.scale-down-unneeded-time",
            "properties.autoScalerProfile.scale-down-unready-time",
            "properties.autoScalerProfile.scale-down-utilization-threshold",
            "properties.autoScalerProfile.skip-nodes-with-local-storage",
            "properties.autoScalerProfile.skip-nodes-with-system-pods",
            "properties.apiServerAccessProfile.authorizedIPRanges",
            "properties.apiServerAccessProfile.enablePrivateCluster",
            "properties.apiServerAccessProfile.privateDNSZone",
            "properties.apiServerAccessProfile.enablePrivateClusterPublicFQDN",
            "properties.apiServerAccessProfile.disableRunCommand",
            "properties.identityProfile",
            "properties.privateLinkResources",
            "properties.disableLocalAccounts",
            "properties.httpProxyConfig.httpProxy",
            "properties.httpProxyConfig.httpsProxy",
            "properties.httpProxyConfig.noProxy",
            "properties.httpProxyConfig.trustedCa",
            "properties.securityProfile.azureDefender.enabled",
            "properties.publicNetworkAccess"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "sku.tier",
            "extendedLocation.name",
            "extendedLocation.type",
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.kubernetesVersion",
            "properties.dnsPrefix",
            "properties.fqdnSubdomain",
            "properties.agentPoolProfiles",
            "properties.linuxProfile.adminUsername",
            "properties.linuxProfile.ssh.publicKeys",
            "properties.windowsProfile.adminUsername",
            "properties.windowsProfile.adminPassword",
            "properties.windowsProfile.licenseType",
            "properties.windowsProfile.enableCSIProxy",
            "properties.windowsProfile.gmsaProfile.enabled",
            "properties.windowsProfile.gmsaProfile.dnsServer",
            "properties.windowsProfile.gmsaProfile.rootDomainName",
            "properties.servicePrincipalProfile.secret",
            "properties.addonProfiles",
            "properties.podIdentityProfile.enabled",
            "properties.podIdentityProfile.allowNetworkPluginKubenet",
            "properties.podIdentityProfile.userAssignedIdentities",
            "properties.podIdentityProfile.userAssignedIdentityExceptions",
            "properties.nodeResourceGroup",
            "properties.enableRBAC",
            "properties.enablePodSecurityPolicy",
            "properties.networkProfile.networkPlugin",
            "properties.networkProfile.networkPolicy",
            "properties.networkProfile.networkMode",
            "properties.networkProfile.podCidr",
            "properties.networkProfile.serviceCidr",
            "properties.networkProfile.dnsServiceIP",
            "properties.networkProfile.dockerBridgeCidr",
            "properties.networkProfile.outboundType",
            "properties.networkProfile.loadBalancerSku",
            "properties.networkProfile.loadBalancerProfile.managedOutboundIPs.count",
            "properties.networkProfile.loadBalancerProfile.managedOutboundIPs.countIPv6",
            "properties.networkProfile.loadBalancerProfile.outboundIPPrefixes.publicIPPrefixes",
            "properties.networkProfile.loadBalancerProfile.outboundIPs.publicIPs",
            "properties.networkProfile.loadBalancerProfile.effectiveOutboundIPs",
            "properties.networkProfile.loadBalancerProfile.allocatedOutboundPorts",
            "properties.networkProfile.loadBalancerProfile.idleTimeoutInMinutes",
            "properties.networkProfile.loadBalancerProfile.enableMultipleStandardLoadBalancers",
            "properties.networkProfile.natGatewayProfile.managedOutboundIPProfile.count",
            "properties.networkProfile.natGatewayProfile.effectiveOutboundIPs",
            "properties.networkProfile.natGatewayProfile.idleTimeoutInMinutes",
            "properties.networkProfile.podCidrs",
            "properties.networkProfile.serviceCidrs",
            "properties.networkProfile.ipFamilies",
            "properties.aadProfile.managed",
            "properties.aadProfile.enableAzureRBAC",
            "properties.aadProfile.adminGroupObjectIDs",
            "properties.aadProfile.serverAppSecret",
            "properties.autoUpgradeProfile.upgradeChannel",
            "properties.autoScalerProfile.balance-similar-node-groups",
            "properties.autoScalerProfile.expander",
            "properties.autoScalerProfile.max-empty-bulk-delete",
            "properties.autoScalerProfile.max-graceful-termination-sec",
            "properties.autoScalerProfile.max-node-provision-time",
            "properties.autoScalerProfile.max-total-unready-percentage",
            "properties.autoScalerProfile.new-pod-scale-up-delay",
            "properties.autoScalerProfile.ok-total-unready-count",
            "properties.autoScalerProfile.scan-interval",
            "properties.autoScalerProfile.scale-down-delay-after-add",
            "properties.autoScalerProfile.scale-down-delay-after-delete",
            "properties.autoScalerProfile.scale-down-delay-after-failure",
            "properties.autoScalerProfile.scale-down-unneeded-time",
            "properties.autoScalerProfile.scale-down-unready-time",
            "properties.autoScalerProfile.scale-down-utilization-threshold",
            "properties.autoScalerProfile.skip-nodes-with-local-storage",
            "properties.autoScalerProfile.skip-nodes-with-system-pods",
            "properties.apiServerAccessProfile.authorizedIPRanges",
            "properties.apiServerAccessProfile.enablePrivateCluster",
            "properties.apiServerAccessProfile.privateDNSZone",
            "properties.apiServerAccessProfile.enablePrivateClusterPublicFQDN",
            "properties.apiServerAccessProfile.disableRunCommand",
            "properties.identityProfile",
            "properties.privateLinkResources",
            "properties.disableLocalAccounts",
            "properties.httpProxyConfig.httpProxy",
            "properties.httpProxyConfig.httpsProxy",
            "properties.httpProxyConfig.noProxy",
            "properties.httpProxyConfig.trustedCa",
            "properties.securityProfile.azureDefender.enabled",
            "properties.publicNetworkAccess"
        ],
        "propertiesDefault": {
            "properties": {
                "networkProfile": {
                    "networkPlugin": "kubenet",
                    "podCidr": "10.244.0.0/16",
                    "serviceCidr": "10.0.0.0/16",
                    "dnsServiceIP": "10.0.0.10",
                    "dockerBridgeCidr": "172.17.0.1/16",
                    "outboundType": "loadBalancer",
                    "loadBalancerProfile": {
                        "managedOutboundIPs": {
                            "count": 1,
                            "countIPv6": 0
                        },
                        "allocatedOutboundPorts": 0,
                        "idleTimeoutInMinutes": 30
                    },
                    "natGatewayProfile": {
                        "managedOutboundIPProfile": {
                            "count": 1
                        },
                        "idleTimeoutInMinutes": 4
                    }
                }
            }
        }
    },
    {
        "type": "PrivateEndpointConnection",
        "group": "ContainerService",
        "apiVersion": "2021-10-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "resource": {
                "type": "ManagedCluster",
                "group": "ContainerService",
                "name": "resourceName"
            },
            "privateEndpoint": {
                "type": "PrivateEndpoint",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/privateEndpointConnections",
                "operationId": "PrivateEndpointConnections_List"
            }
        },
        "omitProperties": [
            "id",
            "name",
            "type",
            "properties.provisioningState",
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "Snapshot",
        "group": "ContainerService",
        "apiVersion": "2021-10-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/snapshots/{resourceName}",
                "operationId": "Snapshots_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/snapshots/{resourceName}",
                "operationId": "Snapshots_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/snapshots/{resourceName}",
                "operationId": "Snapshots_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/snapshots/{resourceName}",
                "operationId": "Snapshots_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/snapshots",
                "operationId": "Snapshots_List"
            }
        },
        "omitProperties": [
            "systemData",
            "properties.creationData.sourceResourceId",
            "properties.kubernetesVersion",
            "properties.nodeImageVersion",
            "properties.osType",
            "properties.osSku",
            "properties.vmSize",
            "properties.enableFIPS"
        ],
        "pickProperties": [
            "properties.snapshotType"
        ],
        "pickPropertiesCreate": [
            "properties.snapshotType"
        ],
        "propertiesDefault": {
            "properties": {
                "snapshotType": "NodePool",
                "osType": "Linux"
            }
        }
    },
    {
        "type": "Key",
        "group": "KeyVault",
        "apiVersion": "2021-06-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "name": "vaultName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys/{keyName}",
                "operationId": "Keys_CreateIfNotExist"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys/{keyName}",
                "operationId": "Keys_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys",
                "operationId": "Keys_List"
            }
        },
        "omitProperties": [
            "properties.attributes.created",
            "properties.attributes.updated",
            "properties.attributes.recoveryLevel",
            "properties.keyUri",
            "properties.keyUriWithVersion",
            "properties.rotationPolicy.attributes.created",
            "properties.rotationPolicy.attributes.updated"
        ],
        "pickProperties": [
            "properties.attributes.enabled",
            "properties.attributes.nbf",
            "properties.attributes.exp",
            "properties.attributes.exportable",
            "properties.kty",
            "properties.keyOps",
            "properties.keySize",
            "properties.curveName",
            "properties.rotationPolicy.attributes.expiryTime",
            "properties.rotationPolicy.lifetimeActions",
            "properties.release_policy.contentType",
            "properties.release_policy.data"
        ],
        "pickPropertiesCreate": [
            "tags",
            "properties.attributes.enabled",
            "properties.attributes.nbf",
            "properties.attributes.exp",
            "properties.attributes.exportable",
            "properties.kty",
            "properties.keyOps",
            "properties.keySize",
            "properties.curveName",
            "properties.rotationPolicy.attributes.expiryTime",
            "properties.rotationPolicy.lifetimeActions",
            "properties.release_policy.contentType",
            "properties.release_policy.data"
        ],
        "propertiesDefault": {
            "properties": {
                "release_policy": {
                    "contentType": "application/json; charset=utf-8"
                }
            }
        }
    },
    {
        "type": "ManagedHsm",
        "group": "KeyVault",
        "apiVersion": "2021-06-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "privateEndpoint": {
                "type": "PrivateEndpoint",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}",
                "operationId": "ManagedHsms_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}",
                "operationId": "ManagedHsms_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}",
                "operationId": "ManagedHsms_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}",
                "operationId": "ManagedHsms_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/managedHSMs",
                "operationId": "ManagedHsms_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.tenantId",
            "properties.hsmUri",
            "properties.statusMessage",
            "properties.provisioningState",
            "properties.privateEndpointConnections",
            "properties.scheduledPurgeDate"
        ],
        "pickProperties": [
            "properties.initialAdminObjectIds",
            "properties.enableSoftDelete",
            "properties.softDeleteRetentionInDays",
            "properties.enablePurgeProtection",
            "properties.createMode",
            "properties.networkAcls.bypass",
            "properties.networkAcls.defaultAction",
            "properties.networkAcls.ipRules",
            "properties.networkAcls.virtualNetworkRules",
            "properties.publicNetworkAccess"
        ],
        "pickPropertiesCreate": [
            "properties.initialAdminObjectIds",
            "properties.enableSoftDelete",
            "properties.softDeleteRetentionInDays",
            "properties.enablePurgeProtection",
            "properties.createMode",
            "properties.networkAcls.bypass",
            "properties.networkAcls.defaultAction",
            "properties.networkAcls.ipRules",
            "properties.networkAcls.virtualNetworkRules",
            "properties.publicNetworkAccess"
        ],
        "propertiesDefault": {
            "properties": {
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enablePurgeProtection": true
            }
        }
    },
    {
        "type": "MHSMPrivateEndpointConnection",
        "group": "KeyVault",
        "apiVersion": "2021-06-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "ManagedHsm",
                "group": "KeyVault",
                "name": "name"
            },
            "privateEndpointConnection": {
                "type": "PrivateEndpointConnection",
                "group": "KeyVault",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "MHSMPrivateEndpointConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "MHSMPrivateEndpointConnections_Put"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "MHSMPrivateEndpointConnections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections",
                "operationId": "MHSMPrivateEndpointConnections_ListByResource"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "etag"
        ],
        "pickPropertiesCreate": [
            "etag"
        ]
    },
    {
        "type": "PrivateEndpointConnection",
        "group": "KeyVault",
        "apiVersion": "2021-06-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "name": "vaultName"
            },
            "mhsmPrivateEndpointConnection": {
                "type": "MHSMPrivateEndpointConnection",
                "group": "KeyVault",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Put"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/privateEndpointConnections",
                "operationId": "PrivateEndpointConnections_ListByResource"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "etag"
        ],
        "pickPropertiesCreate": [
            "etag"
        ]
    },
    {
        "type": "Secret",
        "group": "KeyVault",
        "apiVersion": "2021-06-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "name": "vaultName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets/{secretName}",
                "operationId": "Secrets_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets/{secretName}",
                "operationId": "Secrets_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets/{secretName}",
                "operationId": "Secrets_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets",
                "operationId": "Secrets_List"
            }
        },
        "omitProperties": [
            "properties.secretUri",
            "properties.secretUriWithVersion"
        ],
        "pickProperties": [
            "properties.value",
            "properties.contentType",
            "properties.attributes"
        ],
        "pickPropertiesCreate": [
            "tags",
            "properties.value",
            "properties.contentType",
            "properties.attributes"
        ]
    },
    {
        "type": "Vault",
        "group": "KeyVault",
        "apiVersion": "2021-06-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}",
                "operationId": "Vaults_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}",
                "operationId": "Vaults_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}",
                "operationId": "Vaults_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}",
                "operationId": "Vaults_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults",
                "operationId": "Vaults_ListBySubscription"
            }
        },
        "omitProperties": [
            "id",
            "name",
            "type",
            "systemData",
            "properties.tenantId",
            "properties.hsmPoolResourceId",
            "properties.createMode",
            "properties.provisioningState",
            "properties.privateEndpointConnections"
        ],
        "pickProperties": [
            "location",
            "tags",
            "properties.sku.family",
            "properties.sku.name",
            "properties.accessPolicies",
            "properties.vaultUri",
            "properties.enabledForDeployment",
            "properties.enabledForDiskEncryption",
            "properties.enabledForTemplateDeployment",
            "properties.enableSoftDelete",
            "properties.softDeleteRetentionInDays",
            "properties.enableRbacAuthorization",
            "properties.enablePurgeProtection",
            "properties.networkAcls.bypass",
            "properties.networkAcls.defaultAction",
            "properties.networkAcls.ipRules",
            "properties.networkAcls.virtualNetworkRules",
            "properties.publicNetworkAccess"
        ],
        "pickPropertiesCreate": [
            "location",
            "tags",
            "properties.sku.family",
            "properties.sku.name",
            "properties.accessPolicies",
            "properties.vaultUri",
            "properties.enabledForDeployment",
            "properties.enabledForDiskEncryption",
            "properties.enabledForTemplateDeployment",
            "properties.enableSoftDelete",
            "properties.softDeleteRetentionInDays",
            "properties.enableRbacAuthorization",
            "properties.enablePurgeProtection",
            "properties.networkAcls.bypass",
            "properties.networkAcls.defaultAction",
            "properties.networkAcls.ipRules",
            "properties.networkAcls.virtualNetworkRules",
            "properties.publicNetworkAccess"
        ],
        "propertiesDefault": {
            "properties": {
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "publicNetworkAccess": "enabled"
            }
        }
    },
    {
        "type": "UserAssignedIdentity",
        "group": "ManagedIdentity",
        "apiVersion": "2018-11-30",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}",
                "operationId": "UserAssignedIdentities_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}",
                "operationId": "UserAssignedIdentities_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}",
                "operationId": "UserAssignedIdentities_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resourceName}",
                "operationId": "UserAssignedIdentities_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities",
                "operationId": "UserAssignedIdentities_ListByResourceGroup"
            }
        },
        "omitProperties": [
            "properties"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "ApplicationGateway",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            },
            "secret": {
                "type": "Secret",
                "group": "KeyVault",
                "createOnly": true
            },
            "publicIpAddress": {
                "type": "PublicIPAddress",
                "group": "Network",
                "createOnly": true
            },
            "configuration": {
                "type": "Configuration",
                "group": "DBforPostgreSQL",
                "createOnly": true
            },
            "certificate": {
                "type": "Certificate",
                "group": "Web",
                "createOnly": true
            },
            "firewallPolicy": {
                "type": "FirewallPolicy",
                "group": "Network",
                "createOnly": true
            },
            "loadBalancerBackendAddressPool": {
                "type": "LoadBalancerBackendAddressPool",
                "group": "Network",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
                "operationId": "ApplicationGateways_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
                "operationId": "ApplicationGateways_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
                "operationId": "ApplicationGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
                "operationId": "ApplicationGateways_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways",
                "operationId": "ApplicationGateways_ListAll"
            }
        },
        "omitProperties": [
            "properties.operationalState",
            "properties.firewallPolicy.id",
            "properties.privateEndpointConnections",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag",
            "identity.principalId",
            "identity.tenantId"
        ],
        "pickProperties": [
            "properties.sku.name",
            "properties.sku.tier",
            "properties.sku.capacity",
            "properties.sslPolicy.disabledSslProtocols",
            "properties.sslPolicy.policyType",
            "properties.sslPolicy.policyName",
            "properties.sslPolicy.cipherSuites",
            "properties.sslPolicy.minProtocolVersion",
            "properties.gatewayIPConfigurations",
            "properties.authenticationCertificates",
            "properties.trustedRootCertificates",
            "properties.trustedClientCertificates",
            "properties.sslCertificates",
            "properties.frontendIPConfigurations",
            "properties.frontendPorts",
            "properties.probes",
            "properties.backendAddressPools",
            "properties.backendHttpSettingsCollection",
            "properties.httpListeners",
            "properties.sslProfiles",
            "properties.urlPathMaps",
            "properties.requestRoutingRules",
            "properties.rewriteRuleSets",
            "properties.redirectConfigurations",
            "properties.webApplicationFirewallConfiguration.enabled",
            "properties.webApplicationFirewallConfiguration.firewallMode",
            "properties.webApplicationFirewallConfiguration.ruleSetType",
            "properties.webApplicationFirewallConfiguration.ruleSetVersion",
            "properties.webApplicationFirewallConfiguration.disabledRuleGroups",
            "properties.webApplicationFirewallConfiguration.requestBodyCheck",
            "properties.webApplicationFirewallConfiguration.maxRequestBodySize",
            "properties.webApplicationFirewallConfiguration.maxRequestBodySizeInKb",
            "properties.webApplicationFirewallConfiguration.fileUploadLimitInMb",
            "properties.webApplicationFirewallConfiguration.exclusions",
            "properties.enableHttp2",
            "properties.enableFips",
            "properties.autoscaleConfiguration.minCapacity",
            "properties.autoscaleConfiguration.maxCapacity",
            "properties.privateLinkConfigurations",
            "properties.customErrorConfigurations",
            "properties.forceFirewallPolicyAssociation",
            "properties.loadDistributionPolicies",
            "properties.globalConfiguration.enableRequestBuffering",
            "properties.globalConfiguration.enableResponseBuffering",
            "zones",
            "identity.type",
            "identity.userAssignedIdentities"
        ],
        "pickPropertiesCreate": [
            "properties.sku.name",
            "properties.sku.tier",
            "properties.sku.capacity",
            "properties.sslPolicy.disabledSslProtocols",
            "properties.sslPolicy.policyType",
            "properties.sslPolicy.policyName",
            "properties.sslPolicy.cipherSuites",
            "properties.sslPolicy.minProtocolVersion",
            "properties.gatewayIPConfigurations",
            "properties.authenticationCertificates",
            "properties.trustedRootCertificates",
            "properties.trustedClientCertificates",
            "properties.sslCertificates",
            "properties.frontendIPConfigurations",
            "properties.frontendPorts",
            "properties.probes",
            "properties.backendAddressPools",
            "properties.backendHttpSettingsCollection",
            "properties.httpListeners",
            "properties.sslProfiles",
            "properties.urlPathMaps",
            "properties.requestRoutingRules",
            "properties.rewriteRuleSets",
            "properties.redirectConfigurations",
            "properties.webApplicationFirewallConfiguration.enabled",
            "properties.webApplicationFirewallConfiguration.firewallMode",
            "properties.webApplicationFirewallConfiguration.ruleSetType",
            "properties.webApplicationFirewallConfiguration.ruleSetVersion",
            "properties.webApplicationFirewallConfiguration.disabledRuleGroups",
            "properties.webApplicationFirewallConfiguration.requestBodyCheck",
            "properties.webApplicationFirewallConfiguration.maxRequestBodySize",
            "properties.webApplicationFirewallConfiguration.maxRequestBodySizeInKb",
            "properties.webApplicationFirewallConfiguration.fileUploadLimitInMb",
            "properties.webApplicationFirewallConfiguration.exclusions",
            "properties.enableHttp2",
            "properties.enableFips",
            "properties.autoscaleConfiguration.minCapacity",
            "properties.autoscaleConfiguration.maxCapacity",
            "properties.privateLinkConfigurations",
            "properties.customErrorConfigurations",
            "properties.forceFirewallPolicyAssociation",
            "properties.loadDistributionPolicies",
            "properties.globalConfiguration.enableRequestBuffering",
            "properties.globalConfiguration.enableResponseBuffering",
            "zones",
            "identity.type",
            "identity.userAssignedIdentities"
        ]
    },
    {
        "type": "ApplicationGatewayPrivateEndpointConnection",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "applicationGateway": {
                "type": "ApplicationGateway",
                "group": "Network",
                "name": "applicationGatewayName"
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            },
            "privateLinkService": {
                "type": "PrivateLinkService",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/{connectionName}",
                "operationId": "ApplicationGatewayPrivateEndpointConnections_Delete"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/{connectionName}",
                "operationId": "ApplicationGatewayPrivateEndpointConnections_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/{connectionName}",
                "operationId": "ApplicationGatewayPrivateEndpointConnections_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections",
                "operationId": "ApplicationGatewayPrivateEndpointConnections_List"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState",
            "properties.linkIdentifier",
            "etag",
            "type"
        ],
        "pickProperties": [
            "name"
        ],
        "pickPropertiesCreate": [
            "name"
        ],
        "propertiesDefault": {
            "properties": {
                "privateEndpoint": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "ApplicationSecurityGroup",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",
                "operationId": "ApplicationSecurityGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",
                "operationId": "ApplicationSecurityGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",
                "operationId": "ApplicationSecurityGroups_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",
                "operationId": "ApplicationSecurityGroups_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationSecurityGroups",
                "operationId": "ApplicationSecurityGroups_ListAll"
            }
        },
        "omitProperties": [
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "AzureFirewall",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            },
            "publicIpAddress": {
                "type": "PublicIPAddress",
                "group": "Network",
                "createOnly": true
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true
            },
            "firewallPolicy": {
                "type": "FirewallPolicy",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",
                "operationId": "AzureFirewalls_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",
                "operationId": "AzureFirewalls_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",
                "operationId": "AzureFirewalls_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",
                "operationId": "AzureFirewalls_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewalls",
                "operationId": "AzureFirewalls_ListAll"
            }
        },
        "omitProperties": [
            "properties.managementIpConfiguration.properties.privateIPAddress",
            "properties.managementIpConfiguration.properties.subnet.id",
            "properties.managementIpConfiguration.properties.publicIPAddress.id",
            "properties.managementIpConfiguration.properties.provisioningState",
            "properties.managementIpConfiguration.etag",
            "properties.managementIpConfiguration.type",
            "properties.provisioningState",
            "properties.virtualHub.id",
            "properties.firewallPolicy.id",
            "properties.ipGroups",
            "etag"
        ],
        "pickProperties": [
            "properties.applicationRuleCollections",
            "properties.natRuleCollections",
            "properties.networkRuleCollections",
            "properties.ipConfigurations",
            "properties.managementIpConfiguration.name",
            "properties.threatIntelMode",
            "properties.hubIPAddresses.publicIPs.addresses",
            "properties.hubIPAddresses.publicIPs.count",
            "properties.hubIPAddresses.privateIPAddress",
            "properties.sku.name",
            "properties.sku.tier",
            "properties.additionalProperties",
            "zones"
        ],
        "pickPropertiesCreate": [
            "properties.applicationRuleCollections",
            "properties.natRuleCollections",
            "properties.networkRuleCollections",
            "properties.ipConfigurations",
            "properties.managementIpConfiguration.name",
            "properties.threatIntelMode",
            "properties.hubIPAddresses.publicIPs.addresses",
            "properties.hubIPAddresses.publicIPs.count",
            "properties.hubIPAddresses.privateIPAddress",
            "properties.sku.name",
            "properties.sku.tier",
            "properties.additionalProperties",
            "zones"
        ]
    },
    {
        "type": "BastionHost",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            },
            "publicIpAddress": {
                "type": "PublicIPAddress",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}",
                "operationId": "BastionHosts_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}",
                "operationId": "BastionHosts_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}",
                "operationId": "BastionHosts_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}",
                "operationId": "BastionHosts_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/bastionHosts",
                "operationId": "BastionHosts_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.ipConfigurations",
            "properties.dnsName",
            "properties.scaleUnits",
            "properties.disableCopyPaste",
            "properties.enableFileCopy",
            "properties.enableIpConnect",
            "properties.enableShareableLink",
            "properties.enableTunneling",
            "sku.name"
        ],
        "pickPropertiesCreate": [
            "properties.ipConfigurations",
            "properties.dnsName",
            "properties.scaleUnits",
            "properties.disableCopyPaste",
            "properties.enableFileCopy",
            "properties.enableIpConnect",
            "properties.enableShareableLink",
            "properties.enableTunneling",
            "sku.name"
        ],
        "propertiesDefault": {
            "properties": {
                "disableCopyPaste": false,
                "enableFileCopy": false,
                "enableIpConnect": false,
                "enableShareableLink": false,
                "enableTunneling": false
            },
            "sku": {
                "name": "Standard"
            }
        }
    },
    {
        "type": "ConnectionMonitor",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "networkWatcher": {
                "type": "NetworkWatcher",
                "group": "Network",
                "name": "networkWatcherName"
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",
                "operationId": "ConnectionMonitors_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",
                "operationId": "ConnectionMonitors_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",
                "operationId": "ConnectionMonitors_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",
                "operationId": "ConnectionMonitors_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors",
                "operationId": "ConnectionMonitors_List"
            }
        },
        "omitProperties": [
            "name",
            "id",
            "etag",
            "type",
            "properties.provisioningState",
            "properties.startTime",
            "properties.monitoringStatus",
            "properties.connectionMonitorType"
        ],
        "pickProperties": [
            "location",
            "tags"
        ],
        "pickPropertiesCreate": [
            "location",
            "tags",
            "properties.source.port",
            "properties.destination.address",
            "properties.destination.port",
            "properties.autoStart",
            "properties.monitoringIntervalInSeconds",
            "properties.endpoints",
            "properties.testConfigurations",
            "properties.testGroups",
            "properties.outputs",
            "properties.notes"
        ]
    },
    {
        "type": "CustomIPPrefix",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}",
                "operationId": "CustomIPPrefixes_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}",
                "operationId": "CustomIPPrefixes_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}",
                "operationId": "CustomIPPrefixes_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}",
                "operationId": "CustomIPPrefixes_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes",
                "operationId": "CustomIPPrefixes_List"
            }
        },
        "omitProperties": [
            "properties.customIpPrefixParent.id",
            "properties.childCustomIpPrefixes",
            "properties.commissionedState",
            "properties.publicIpPrefixes",
            "properties.resourceGuid",
            "properties.failedReason",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.cidr",
            "properties.signedMessage",
            "properties.authorizationMessage",
            "zones"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.cidr",
            "properties.signedMessage",
            "properties.authorizationMessage",
            "zones"
        ]
    },
    {
        "type": "DdosProtectionPlan",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",
                "operationId": "DdosProtectionPlans_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",
                "operationId": "DdosProtectionPlans_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",
                "operationId": "DdosProtectionPlans_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",
                "operationId": "DdosProtectionPlans_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ddosProtectionPlans",
                "operationId": "DdosProtectionPlans_List"
            }
        },
        "omitProperties": [
            "id",
            "name",
            "type",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.virtualNetworks",
            "etag"
        ],
        "pickProperties": [
            "location",
            "tags"
        ],
        "pickPropertiesCreate": [
            "location",
            "tags"
        ]
    },
    {
        "type": "DscpConfiguration",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "configuration": {
                "type": "Configuration",
                "group": "DBforPostgreSQL",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}",
                "operationId": "DscpConfiguration_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}",
                "operationId": "DscpConfiguration_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}",
                "operationId": "DscpConfiguration_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dscpConfigurations",
                "operationId": "DscpConfiguration_ListAll"
            }
        },
        "omitProperties": [
            "properties.qosCollectionId",
            "properties.associatedNetworkInterfaces",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.markings",
            "properties.sourceIpRanges",
            "properties.destinationIpRanges",
            "properties.sourcePortRanges",
            "properties.destinationPortRanges",
            "properties.protocol",
            "properties.qosDefinitionCollection"
        ],
        "pickPropertiesCreate": [
            "properties.markings",
            "properties.sourceIpRanges",
            "properties.destinationIpRanges",
            "properties.sourcePortRanges",
            "properties.destinationPortRanges",
            "properties.protocol",
            "properties.qosDefinitionCollection"
        ]
    },
    {
        "type": "ExpressRouteCircuit",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "routeFilter": {
                "type": "RouteFilter",
                "group": "Network",
                "createOnly": true
            },
            "expressRouteConnection": {
                "type": "ExpressRouteConnection",
                "group": "Network",
                "createOnly": true
            },
            "route": {
                "type": "Route",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
                "operationId": "ExpressRouteCircuits_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
                "operationId": "ExpressRouteCircuits_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
                "operationId": "ExpressRouteCircuits_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
                "operationId": "ExpressRouteCircuits_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits",
                "operationId": "ExpressRouteCircuits_ListAll"
            }
        },
        "omitProperties": [
            "properties.circuitProvisioningState",
            "properties.serviceProviderProvisioningState",
            "properties.expressRoutePort.id",
            "properties.stag",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "sku.name",
            "sku.tier",
            "sku.family",
            "properties.allowClassicOperations",
            "properties.authorizations",
            "properties.peerings",
            "properties.serviceKey",
            "properties.serviceProviderNotes",
            "properties.serviceProviderProperties.serviceProviderName",
            "properties.serviceProviderProperties.peeringLocation",
            "properties.serviceProviderProperties.bandwidthInMbps",
            "properties.bandwidthInGbps",
            "properties.gatewayManagerEtag",
            "properties.globalReachEnabled"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "sku.tier",
            "sku.family",
            "properties.allowClassicOperations",
            "properties.authorizations",
            "properties.peerings",
            "properties.serviceKey",
            "properties.serviceProviderNotes",
            "properties.serviceProviderProperties.serviceProviderName",
            "properties.serviceProviderProperties.peeringLocation",
            "properties.serviceProviderProperties.bandwidthInMbps",
            "properties.bandwidthInGbps",
            "properties.gatewayManagerEtag",
            "properties.globalReachEnabled"
        ]
    },
    {
        "type": "ExpressRouteCircuitAuthorization",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "circuit": {
                "type": "ExpressRouteCircuit",
                "group": "Network",
                "name": "circuitName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",
                "operationId": "ExpressRouteCircuitAuthorizations_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",
                "operationId": "ExpressRouteCircuitAuthorizations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",
                "operationId": "ExpressRouteCircuitAuthorizations_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations",
                "operationId": "ExpressRouteCircuitAuthorizations_List"
            }
        },
        "omitProperties": [
            "properties.authorizationUseStatus",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.authorizationKey",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.authorizationKey",
            "name"
        ]
    },
    {
        "type": "ExpressRouteCircuitConnection",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "circuit": {
                "type": "ExpressRouteCircuit",
                "group": "Network",
                "name": "circuitName"
            },
            "peering": {
                "type": "ExpressRouteCircuitPeering",
                "group": "Network",
                "name": "peeringName"
            },
            "expressRouteCircuitPeering": {
                "type": "ExpressRouteCircuitPeering",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}",
                "operationId": "ExpressRouteCircuitConnections_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}",
                "operationId": "ExpressRouteCircuitConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}",
                "operationId": "ExpressRouteCircuitConnections_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections",
                "operationId": "ExpressRouteCircuitConnections_List"
            }
        },
        "omitProperties": [
            "properties.expressRouteCircuitPeering.id",
            "properties.peerExpressRouteCircuitPeering.id",
            "properties.ipv6CircuitConnectionConfig.circuitConnectionStatus",
            "properties.circuitConnectionStatus",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.addressPrefix",
            "properties.authorizationKey",
            "properties.ipv6CircuitConnectionConfig.addressPrefix",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.addressPrefix",
            "properties.authorizationKey",
            "properties.ipv6CircuitConnectionConfig.addressPrefix",
            "name"
        ]
    },
    {
        "type": "ExpressRouteCircuitPeering",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "circuit": {
                "type": "ExpressRouteCircuit",
                "group": "Network",
                "name": "circuitName"
            },
            "routeFilter": {
                "type": "RouteFilter",
                "group": "Network",
                "createOnly": true
            },
            "expressRouteConnection": {
                "type": "ExpressRouteConnection",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",
                "operationId": "ExpressRouteCircuitPeerings_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",
                "operationId": "ExpressRouteCircuitPeerings_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",
                "operationId": "ExpressRouteCircuitPeerings_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings",
                "operationId": "ExpressRouteCircuitPeerings_List"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.vlanId",
            "properties.microsoftPeeringConfig.advertisedPublicPrefixesState",
            "properties.provisioningState",
            "properties.lastModifiedBy",
            "properties.routeFilter.id",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixesState",
            "properties.ipv6PeeringConfig.routeFilter.id",
            "properties.ipv6PeeringConfig.state",
            "properties.expressRouteConnection.id",
            "properties.peeredConnections",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.peeringType",
            "properties.azureASN",
            "properties.peerASN",
            "properties.primaryPeerAddressPrefix",
            "properties.secondaryPeerAddressPrefix",
            "properties.primaryAzurePort",
            "properties.secondaryAzurePort",
            "properties.sharedKey",
            "properties.microsoftPeeringConfig.advertisedPublicPrefixes",
            "properties.microsoftPeeringConfig.advertisedCommunities",
            "properties.microsoftPeeringConfig.legacyMode",
            "properties.microsoftPeeringConfig.customerASN",
            "properties.microsoftPeeringConfig.routingRegistryName",
            "properties.stats.primarybytesIn",
            "properties.stats.primarybytesOut",
            "properties.stats.secondarybytesIn",
            "properties.stats.secondarybytesOut",
            "properties.gatewayManagerEtag",
            "properties.ipv6PeeringConfig.primaryPeerAddressPrefix",
            "properties.ipv6PeeringConfig.secondaryPeerAddressPrefix",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixes",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.advertisedCommunities",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.legacyMode",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.customerASN",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName",
            "properties.connections",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.peeringType",
            "properties.azureASN",
            "properties.peerASN",
            "properties.primaryPeerAddressPrefix",
            "properties.secondaryPeerAddressPrefix",
            "properties.primaryAzurePort",
            "properties.secondaryAzurePort",
            "properties.sharedKey",
            "properties.microsoftPeeringConfig.advertisedPublicPrefixes",
            "properties.microsoftPeeringConfig.advertisedCommunities",
            "properties.microsoftPeeringConfig.legacyMode",
            "properties.microsoftPeeringConfig.customerASN",
            "properties.microsoftPeeringConfig.routingRegistryName",
            "properties.stats.primarybytesIn",
            "properties.stats.primarybytesOut",
            "properties.stats.secondarybytesIn",
            "properties.stats.secondarybytesOut",
            "properties.gatewayManagerEtag",
            "properties.ipv6PeeringConfig.primaryPeerAddressPrefix",
            "properties.ipv6PeeringConfig.secondaryPeerAddressPrefix",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixes",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.advertisedCommunities",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.legacyMode",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.customerASN",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName",
            "properties.connections",
            "name"
        ]
    },
    {
        "type": "ExpressRouteConnection",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "expressRouteGateway": {
                "type": "ExpressRouteGateway",
                "group": "Network",
                "name": "expressRouteGatewayName"
            },
            "expressRouteCircuitPeering": {
                "type": "ExpressRouteCircuitPeering",
                "group": "Network",
                "createOnly": true
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}",
                "operationId": "ExpressRouteConnections_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}",
                "operationId": "ExpressRouteConnections_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}",
                "operationId": "ExpressRouteConnections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections",
                "operationId": "ExpressRouteConnections_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.expressRouteCircuitPeering.id",
            "properties.routingConfiguration.associatedRouteTable.id",
            "properties.routingConfiguration.vnetRoutes.bgpConnections"
        ],
        "pickProperties": [
            "properties.authorizationKey",
            "properties.routingWeight",
            "properties.enableInternetSecurity",
            "properties.expressRouteGatewayBypass",
            "properties.routingConfiguration.propagatedRouteTables.labels",
            "properties.routingConfiguration.propagatedRouteTables.ids",
            "properties.routingConfiguration.vnetRoutes.staticRoutes",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.authorizationKey",
            "properties.routingWeight",
            "properties.enableInternetSecurity",
            "properties.expressRouteGatewayBypass",
            "properties.routingConfiguration.propagatedRouteTables.labels",
            "properties.routingConfiguration.propagatedRouteTables.ids",
            "properties.routingConfiguration.vnetRoutes.staticRoutes",
            "name"
        ]
    },
    {
        "type": "ExpressRouteGateway",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "expressRouteCircuitPeering": {
                "type": "ExpressRouteCircuitPeering",
                "group": "Network",
                "createOnly": true
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",
                "operationId": "ExpressRouteGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",
                "operationId": "ExpressRouteGateways_UpdateTags"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",
                "operationId": "ExpressRouteGateways_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",
                "operationId": "ExpressRouteGateways_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteGateways",
                "operationId": "ExpressRouteGateways_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.expressRouteConnections",
            "properties.provisioningState",
            "properties.virtualHub.id",
            "etag"
        ],
        "pickProperties": [
            "properties.autoScaleConfiguration.bounds.min",
            "properties.autoScaleConfiguration.bounds.max"
        ],
        "pickPropertiesCreate": [
            "properties.autoScaleConfiguration.bounds.min",
            "properties.autoScaleConfiguration.bounds.max"
        ]
    },
    {
        "type": "FirewallPolicy",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            },
            "secret": {
                "type": "Secret",
                "group": "KeyVault",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}",
                "operationId": "FirewallPolicies_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}",
                "operationId": "FirewallPolicies_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}",
                "operationId": "FirewallPolicies_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies",
                "operationId": "FirewallPolicies_List"
            }
        },
        "omitProperties": [
            "properties.ruleCollectionGroups",
            "properties.provisioningState",
            "properties.basePolicy.id",
            "properties.firewalls",
            "properties.childPolicies",
            "properties.insights.logAnalyticsResources.defaultWorkspaceId",
            "properties.transportSecurity.certificateAuthority.keyVaultSecretId",
            "etag",
            "identity.principalId",
            "identity.tenantId"
        ],
        "pickProperties": [
            "properties.threatIntelMode",
            "properties.threatIntelWhitelist.ipAddresses",
            "properties.threatIntelWhitelist.fqdns",
            "properties.insights.isEnabled",
            "properties.insights.retentionDays",
            "properties.insights.logAnalyticsResources.workspaces",
            "properties.snat.privateRanges",
            "properties.sql.allowSqlRedirect",
            "properties.dnsSettings.servers",
            "properties.dnsSettings.enableProxy",
            "properties.dnsSettings.requireProxyForNetworkRules",
            "properties.explicitProxySettings.enableExplicitProxy",
            "properties.explicitProxySettings.httpPort",
            "properties.explicitProxySettings.httpsPort",
            "properties.explicitProxySettings.pacFilePort",
            "properties.explicitProxySettings.pacFile",
            "properties.intrusionDetection.mode",
            "properties.intrusionDetection.configuration.signatureOverrides",
            "properties.intrusionDetection.configuration.bypassTrafficSettings",
            "properties.transportSecurity.certificateAuthority.name",
            "properties.sku.tier",
            "identity.type",
            "identity.userAssignedIdentities"
        ],
        "pickPropertiesCreate": [
            "properties.threatIntelMode",
            "properties.threatIntelWhitelist.ipAddresses",
            "properties.threatIntelWhitelist.fqdns",
            "properties.insights.isEnabled",
            "properties.insights.retentionDays",
            "properties.insights.logAnalyticsResources.workspaces",
            "properties.snat.privateRanges",
            "properties.sql.allowSqlRedirect",
            "properties.dnsSettings.servers",
            "properties.dnsSettings.enableProxy",
            "properties.dnsSettings.requireProxyForNetworkRules",
            "properties.explicitProxySettings.enableExplicitProxy",
            "properties.explicitProxySettings.httpPort",
            "properties.explicitProxySettings.httpsPort",
            "properties.explicitProxySettings.pacFilePort",
            "properties.explicitProxySettings.pacFile",
            "properties.intrusionDetection.mode",
            "properties.intrusionDetection.configuration.signatureOverrides",
            "properties.intrusionDetection.configuration.bypassTrafficSettings",
            "properties.transportSecurity.certificateAuthority.name",
            "properties.sku.tier",
            "identity.type",
            "identity.userAssignedIdentities"
        ]
    },
    {
        "type": "FirewallPolicyIdpsSignaturesOverride",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "firewallPolicy": {
                "type": "FirewallPolicy",
                "group": "Network",
                "name": "firewallPolicyName"
            },
            "securityPartnerProvider": {
                "type": "SecurityPartnerProvider",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default",
                "operationId": "FirewallPolicyIdpsSignaturesOverrides_Patch"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default",
                "operationId": "FirewallPolicyIdpsSignaturesOverrides_Put"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides/default",
                "operationId": "FirewallPolicyIdpsSignaturesOverrides_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/signatureOverrides",
                "operationId": "FirewallPolicyIdpsSignaturesOverrides_List"
            }
        },
        "omitProperties": [
            "id"
        ],
        "pickProperties": [
            "name",
            "type",
            "properties.signatures"
        ],
        "pickPropertiesCreate": [
            "name",
            "type",
            "properties.signatures"
        ]
    },
    {
        "type": "FirewallPolicyRuleCollectionGroup",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "firewallPolicy": {
                "type": "FirewallPolicy",
                "group": "Network",
                "name": "firewallPolicyName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}",
                "operationId": "FirewallPolicyRuleCollectionGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}",
                "operationId": "FirewallPolicyRuleCollectionGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}",
                "operationId": "FirewallPolicyRuleCollectionGroups_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups",
                "operationId": "FirewallPolicyRuleCollectionGroups_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.priority",
            "properties.ruleCollections",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.priority",
            "properties.ruleCollections",
            "name"
        ]
    },
    {
        "type": "FirewallPolicyRuleGroup",
        "group": "Network",
        "apiVersion": "2020-04-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "firewallPolicy": {
                "type": "FirewallPolicy",
                "group": "Network",
                "name": "firewallPolicyName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups/{ruleGroupName}",
                "operationId": "FirewallPolicyRuleGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups/{ruleGroupName}",
                "operationId": "FirewallPolicyRuleGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups/{ruleGroupName}",
                "operationId": "FirewallPolicyRuleGroups_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups",
                "operationId": "FirewallPolicyRuleGroups_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.priority",
            "properties.rules",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.priority",
            "properties.rules",
            "name"
        ]
    },
    {
        "type": "FlowLog",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "networkWatcher": {
                "type": "NetworkWatcher",
                "group": "Network",
                "name": "networkWatcherName"
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
                "operationId": "FlowLogs_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
                "operationId": "FlowLogs_UpdateTags"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
                "operationId": "FlowLogs_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
                "operationId": "FlowLogs_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs",
                "operationId": "FlowLogs_List"
            }
        },
        "omitProperties": [
            "properties.targetResourceId",
            "properties.targetResourceGuid",
            "properties.storageId",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceId",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceResourceId",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.enabled",
            "properties.retentionPolicy.days",
            "properties.retentionPolicy.enabled",
            "properties.format.type",
            "properties.format.version",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceRegion",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.trafficAnalyticsInterval"
        ],
        "pickPropertiesCreate": [
            "properties.enabled",
            "properties.retentionPolicy.days",
            "properties.retentionPolicy.enabled",
            "properties.format.type",
            "properties.format.version",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceRegion",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.trafficAnalyticsInterval"
        ],
        "propertiesDefault": {
            "properties": {
                "retentionPolicy": {
                    "days": 0,
                    "enabled": false
                },
                "format": {
                    "version": 0
                }
            }
        }
    },
    {
        "type": "HubRouteTable",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/{routeTableName}",
                "operationId": "HubRouteTables_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/{routeTableName}",
                "operationId": "HubRouteTables_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/{routeTableName}",
                "operationId": "HubRouteTables_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables",
                "operationId": "HubRouteTables_List"
            }
        },
        "omitProperties": [
            "properties.associatedConnections",
            "properties.propagatingConnections",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.routes",
            "properties.labels",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.routes",
            "properties.labels",
            "name"
        ]
    },
    {
        "type": "HubVirtualNetworkConnection",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName"
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "createOnly": true
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}",
                "operationId": "HubVirtualNetworkConnections_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}",
                "operationId": "HubVirtualNetworkConnections_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}",
                "operationId": "HubVirtualNetworkConnections_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections",
                "operationId": "HubVirtualNetworkConnections_List"
            }
        },
        "omitProperties": [
            "properties.remoteVirtualNetwork.id",
            "properties.routingConfiguration.associatedRouteTable.id",
            "properties.routingConfiguration.vnetRoutes.bgpConnections",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.allowHubToRemoteVnetTransit",
            "properties.allowRemoteVnetToUseHubVnetGateways",
            "properties.enableInternetSecurity",
            "properties.routingConfiguration.propagatedRouteTables.labels",
            "properties.routingConfiguration.propagatedRouteTables.ids",
            "properties.routingConfiguration.vnetRoutes.staticRoutes",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.allowHubToRemoteVnetTransit",
            "properties.allowRemoteVnetToUseHubVnetGateways",
            "properties.enableInternetSecurity",
            "properties.routingConfiguration.propagatedRouteTables.labels",
            "properties.routingConfiguration.propagatedRouteTables.ids",
            "properties.routingConfiguration.vnetRoutes.staticRoutes",
            "name"
        ]
    },
    {
        "type": "InboundNatRule",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "name": "loadBalancerName",
                "createOnly": true
            },
            "configuration": {
                "type": "Configuration",
                "group": "DBforPostgreSQL",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            },
            "loadBalancerBackendAddressPool": {
                "type": "LoadBalancerBackendAddressPool",
                "group": "Network",
                "createOnly": true
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}",
                "operationId": "InboundNatRules_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}",
                "operationId": "InboundNatRules_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}",
                "operationId": "InboundNatRules_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules",
                "operationId": "InboundNatRules_List"
            }
        },
        "omitProperties": [
            "properties.frontendIPConfiguration.id",
            "properties.backendIPConfiguration",
            "properties.backendAddressPool.id",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.protocol",
            "properties.frontendPort",
            "properties.backendPort",
            "properties.idleTimeoutInMinutes",
            "properties.enableFloatingIP",
            "properties.enableTcpReset",
            "properties.frontendPortRangeStart",
            "properties.frontendPortRangeEnd",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.protocol",
            "properties.frontendPort",
            "properties.backendPort",
            "properties.idleTimeoutInMinutes",
            "properties.enableFloatingIP",
            "properties.enableTcpReset",
            "properties.frontendPortRangeStart",
            "properties.frontendPortRangeEnd",
            "name"
        ],
        "propertiesDefault": {
            "properties": {
                "backendIPConfiguration": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        },
                        "publicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                },
                                "servicePublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "linkedPublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "linkedPublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "servicePublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "IpAllocation",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}",
                "operationId": "IpAllocations_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}",
                "operationId": "IpAllocations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}",
                "operationId": "IpAllocations_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}",
                "operationId": "IpAllocations_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/IpAllocations",
                "operationId": "IpAllocations_List"
            }
        },
        "omitProperties": [
            "properties.subnet",
            "properties.virtualNetwork",
            "properties.ipamAllocationId",
            "etag"
        ],
        "pickProperties": [
            "properties.type",
            "properties.prefix",
            "properties.prefixLength",
            "properties.prefixType",
            "properties.allocationTags"
        ],
        "pickPropertiesCreate": [
            "properties.type",
            "properties.prefix",
            "properties.prefixLength",
            "properties.prefixType",
            "properties.allocationTags"
        ],
        "propertiesDefault": {
            "properties": {
                "prefixLength": 0
            }
        }
    },
    {
        "type": "IpGroup",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}",
                "operationId": "IpGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}",
                "operationId": "IpGroups_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}",
                "operationId": "IpGroups_UpdateGroups"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}",
                "operationId": "IpGroups_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ipGroups",
                "operationId": "IpGroups_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.firewalls",
            "properties.firewallPolicies",
            "etag"
        ],
        "pickProperties": [
            "properties.ipAddresses"
        ],
        "pickPropertiesCreate": [
            "properties.ipAddresses"
        ]
    },
    {
        "type": "LoadBalancer",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            },
            "configuration": {
                "type": "Configuration",
                "group": "DBforPostgreSQL",
                "createOnly": true
            },
            "loadBalancerBackendAddressPool": {
                "type": "LoadBalancerBackendAddressPool",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
                "operationId": "LoadBalancers_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
                "operationId": "LoadBalancers_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
                "operationId": "LoadBalancers_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
                "operationId": "LoadBalancers_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers",
                "operationId": "LoadBalancers_ListAll"
            }
        },
        "omitProperties": [
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.frontendIPConfigurations",
            "properties.backendAddressPools",
            "properties.loadBalancingRules",
            "properties.probes",
            "properties.inboundNatRules",
            "properties.inboundNatPools",
            "properties.outboundRules"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.frontendIPConfigurations",
            "properties.backendAddressPools",
            "properties.loadBalancingRules",
            "properties.probes",
            "properties.inboundNatRules",
            "properties.inboundNatPools",
            "properties.outboundRules"
        ]
    },
    {
        "type": "LoadBalancerBackendAddressPool",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "name": "loadBalancerName",
                "createOnly": true
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "createOnly": true
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            },
            "networkInterface": {
                "type": "NetworkInterface",
                "group": "Network",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}",
                "operationId": "LoadBalancerBackendAddressPools_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}",
                "operationId": "LoadBalancerBackendAddressPools_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}",
                "operationId": "LoadBalancerBackendAddressPools_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools",
                "operationId": "LoadBalancerBackendAddressPools_List"
            }
        },
        "omitProperties": [
            "properties.backendIPConfigurations",
            "properties.loadBalancingRules",
            "properties.outboundRule",
            "properties.outboundRules",
            "properties.inboundNatRules",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.location",
            "properties.tunnelInterfaces",
            "properties.loadBalancerBackendAddresses",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.location",
            "properties.tunnelInterfaces",
            "properties.loadBalancerBackendAddresses",
            "name"
        ]
    },
    {
        "type": "LocalNetworkGateway",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
                "operationId": "LocalNetworkGateways_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
                "operationId": "LocalNetworkGateways_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
                "operationId": "LocalNetworkGateways_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
                "operationId": "LocalNetworkGateways_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways",
                "operationId": "LocalNetworkGateways_List"
            }
        },
        "omitProperties": [
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.localNetworkAddressSpace.addressPrefixes",
            "properties.gatewayIpAddress",
            "properties.fqdn",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight",
            "properties.bgpSettings.bgpPeeringAddresses"
        ],
        "pickPropertiesCreate": [
            "properties.localNetworkAddressSpace.addressPrefixes",
            "properties.gatewayIpAddress",
            "properties.fqdn",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight",
            "properties.bgpSettings.bgpPeeringAddresses"
        ]
    },
    {
        "type": "NatGateway",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}",
                "operationId": "NatGateways_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}",
                "operationId": "NatGateways_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}",
                "operationId": "NatGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}",
                "operationId": "NatGateways_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/natGateways",
                "operationId": "NatGateways_ListAll"
            }
        },
        "omitProperties": [
            "properties.subnets",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "sku.name",
            "properties.idleTimeoutInMinutes",
            "properties.publicIpAddresses",
            "properties.publicIpPrefixes",
            "zones"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "properties.idleTimeoutInMinutes",
            "properties.publicIpAddresses",
            "properties.publicIpPrefixes",
            "zones"
        ]
    },
    {
        "type": "NatRule",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "gateway": {
                "type": "VpnGateway",
                "group": "Network",
                "name": "gatewayName"
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules/{natRuleName}",
                "operationId": "NatRules_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules/{natRuleName}",
                "operationId": "NatRules_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules/{natRuleName}",
                "operationId": "NatRules_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules",
                "operationId": "NatRules_ListByVpnGateway"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.ipConfigurationId",
            "properties.egressVpnSiteLinkConnections",
            "properties.ingressVpnSiteLinkConnections",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.type",
            "properties.mode",
            "properties.internalMappings",
            "properties.externalMappings",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.type",
            "properties.mode",
            "properties.internalMappings",
            "properties.externalMappings",
            "name"
        ]
    },
    {
        "type": "NetworkInterface",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            },
            "privateLinkService": {
                "type": "PrivateLinkService",
                "group": "Network",
                "createOnly": true
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
                "operationId": "NetworkInterfaces_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
                "operationId": "NetworkInterfaces_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
                "operationId": "NetworkInterfaces_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
                "operationId": "NetworkInterfaces_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces",
                "operationId": "NetworkInterfaces_ListAll"
            }
        },
        "omitProperties": [
            "properties.virtualMachine",
            "properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.networkSecurityGroup.properties.subnets",
            "properties.networkSecurityGroup.properties.flowLogs",
            "properties.networkSecurityGroup.properties.resourceGuid",
            "properties.networkSecurityGroup.properties.provisioningState",
            "properties.networkSecurityGroup.etag",
            "properties.privateEndpoint",
            "properties.tapConfigurations",
            "properties.dnsSettings.appliedDnsServers",
            "properties.dnsSettings.internalFqdn",
            "properties.dnsSettings.internalDomainNameSuffix",
            "properties.macAddress",
            "properties.primary",
            "properties.vnetEncryptionSupported",
            "properties.hostedWorkloads",
            "properties.dscpConfiguration",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.privateLinkService.properties.networkInterfaces",
            "properties.privateLinkService.properties.provisioningState",
            "properties.privateLinkService.properties.privateEndpointConnections",
            "properties.privateLinkService.properties.alias",
            "properties.privateLinkService.etag",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.networkSecurityGroup.properties.securityRules",
            "properties.ipConfigurations",
            "properties.dnsSettings.dnsServers",
            "properties.dnsSettings.internalDnsNameLabel",
            "properties.enableAcceleratedNetworking",
            "properties.enableIPForwarding",
            "properties.workloadType",
            "properties.nicType",
            "properties.privateLinkService.extendedLocation.name",
            "properties.privateLinkService.extendedLocation.type",
            "properties.privateLinkService.properties.loadBalancerFrontendIpConfigurations",
            "properties.privateLinkService.properties.ipConfigurations",
            "properties.privateLinkService.properties.visibility",
            "properties.privateLinkService.properties.autoApproval",
            "properties.privateLinkService.properties.fqdns",
            "properties.privateLinkService.properties.enableProxyProtocol",
            "properties.migrationPhase"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.networkSecurityGroup.properties.securityRules",
            "properties.ipConfigurations",
            "properties.dnsSettings.dnsServers",
            "properties.dnsSettings.internalDnsNameLabel",
            "properties.enableAcceleratedNetworking",
            "properties.enableIPForwarding",
            "properties.workloadType",
            "properties.nicType",
            "properties.privateLinkService.extendedLocation.name",
            "properties.privateLinkService.extendedLocation.type",
            "properties.privateLinkService.properties.loadBalancerFrontendIpConfigurations",
            "properties.privateLinkService.properties.ipConfigurations",
            "properties.privateLinkService.properties.visibility",
            "properties.privateLinkService.properties.autoApproval",
            "properties.privateLinkService.properties.fqdns",
            "properties.privateLinkService.properties.enableProxyProtocol",
            "properties.migrationPhase"
        ],
        "propertiesDefault": {
            "properties": {
                "privateEndpoint": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "NetworkInterfaceTapConfiguration",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "networkInterface": {
                "type": "NetworkInterface",
                "group": "Network",
                "name": "networkInterfaceName"
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            },
            "configuration": {
                "type": "Configuration",
                "group": "DBforPostgreSQL",
                "createOnly": true
            },
            "loadBalancerBackendAddressPool": {
                "type": "LoadBalancerBackendAddressPool",
                "group": "Network",
                "createOnly": true
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}",
                "operationId": "NetworkInterfaceTapConfigurations_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}",
                "operationId": "NetworkInterfaceTapConfigurations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}",
                "operationId": "NetworkInterfaceTapConfigurations_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations",
                "operationId": "NetworkInterfaceTapConfigurations_List"
            }
        },
        "omitProperties": [
            "properties.virtualNetworkTap.properties.networkInterfaceTapConfigurations",
            "properties.virtualNetworkTap.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.natGateway.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateEndpoints",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipConfigurations",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipConfigurationProfiles",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.resourceNavigationLinks",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceAssociationLinks",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.purpose",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.privateLinkConnectionProperties",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.inboundNatRules",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.inboundNatPools",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.outboundRules",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.loadBalancingRules",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.natGateway.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateEndpoints",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipConfigurations",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipConfigurationProfiles",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.resourceNavigationLinks",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceAssociationLinks",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.purpose",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.type",
            "properties.virtualNetworkTap.etag",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.addressPrefix",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.addressPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.routes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceEndpoints",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceEndpointPolicies",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipAllocations",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.delegations",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.primary",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.addressPrefix",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.addressPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.routes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceEndpoints",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceEndpointPolicies",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipAllocations",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.delegations",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.zones",
            "properties.virtualNetworkTap.properties.destinationPort",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.addressPrefix",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.addressPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.routes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceEndpoints",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceEndpointPolicies",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipAllocations",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.delegations",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.primary",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.name",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.addressPrefix",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.addressPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.routes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceEndpoints",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceEndpointPolicies",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipAllocations",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.delegations",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.deleteOption",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.zones",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.name",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.zones",
            "properties.virtualNetworkTap.properties.destinationPort",
            "name"
        ],
        "propertiesDefault": {
            "properties": {
                "virtualNetworkTap": {
                    "properties": {
                        "destinationNetworkInterfaceIPConfiguration": {
                            "properties": {
                                "subnet": {
                                    "properties": {
                                        "privateEndpointNetworkPolicies": "Enabled",
                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                },
                                "publicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "servicePublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                },
                                                "linkedPublicIPAddress": {
                                                    "properties": {
                                                        "ipConfiguration": {
                                                            "properties": {
                                                                "privateIPAllocationMethod": "Dynamic",
                                                                "subnet": {
                                                                    "properties": {
                                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "linkedPublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                },
                                                "servicePublicIPAddress": {
                                                    "properties": {
                                                        "ipConfiguration": {
                                                            "properties": {
                                                                "privateIPAllocationMethod": "Dynamic",
                                                                "subnet": {
                                                                    "properties": {
                                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "destinationLoadBalancerFrontEndIPConfiguration": {
                            "properties": {
                                "subnet": {
                                    "properties": {
                                        "privateEndpointNetworkPolicies": "Enabled",
                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                },
                                "publicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "servicePublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                },
                                                "linkedPublicIPAddress": {
                                                    "properties": {
                                                        "ipConfiguration": {
                                                            "properties": {
                                                                "privateIPAllocationMethod": "Dynamic",
                                                                "subnet": {
                                                                    "properties": {
                                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "linkedPublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                },
                                                "servicePublicIPAddress": {
                                                    "properties": {
                                                        "ipConfiguration": {
                                                            "properties": {
                                                                "privateIPAllocationMethod": "Dynamic",
                                                                "subnet": {
                                                                    "properties": {
                                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "NetworkProfile",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",
                "operationId": "NetworkProfiles_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",
                "operationId": "NetworkProfiles_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",
                "operationId": "NetworkProfiles_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",
                "operationId": "NetworkProfiles_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkProfiles",
                "operationId": "NetworkProfiles_ListAll"
            }
        },
        "omitProperties": [
            "properties.containerNetworkInterfaces",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.containerNetworkInterfaceConfigurations"
        ],
        "pickPropertiesCreate": [
            "properties.containerNetworkInterfaceConfigurations"
        ]
    },
    {
        "type": "NetworkSecurityGroup",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
                "operationId": "NetworkSecurityGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
                "operationId": "NetworkSecurityGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
                "operationId": "NetworkSecurityGroups_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
                "operationId": "NetworkSecurityGroups_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups",
                "operationId": "NetworkSecurityGroups_ListAll"
            }
        },
        "omitProperties": [
            "properties.defaultSecurityRules",
            "properties.networkInterfaces",
            "properties.subnets",
            "properties.flowLogs",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.securityRules"
        ],
        "pickPropertiesCreate": [
            "properties.securityRules"
        ]
    },
    {
        "type": "NetworkVirtualAppliance",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}",
                "operationId": "NetworkVirtualAppliances_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}",
                "operationId": "NetworkVirtualAppliances_Get"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}",
                "operationId": "NetworkVirtualAppliances_UpdateTags"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}",
                "operationId": "NetworkVirtualAppliances_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualAppliances",
                "operationId": "NetworkVirtualAppliances_List"
            }
        },
        "omitProperties": [
            "properties.addressPrefix",
            "properties.virtualHub.id",
            "properties.virtualApplianceNics",
            "properties.virtualApplianceSites",
            "properties.inboundSecurityRules",
            "properties.provisioningState",
            "identity.principalId",
            "identity.tenantId",
            "etag"
        ],
        "pickProperties": [
            "properties.nvaSku.vendor",
            "properties.nvaSku.bundledScaleUnit",
            "properties.nvaSku.marketPlaceVersion",
            "properties.bootStrapConfigurationBlobs",
            "properties.cloudInitConfigurationBlobs",
            "properties.cloudInitConfiguration",
            "properties.virtualApplianceAsn",
            "properties.sshPublicKey",
            "identity.type",
            "identity.userAssignedIdentities"
        ],
        "pickPropertiesCreate": [
            "properties.nvaSku.vendor",
            "properties.nvaSku.bundledScaleUnit",
            "properties.nvaSku.marketPlaceVersion",
            "properties.bootStrapConfigurationBlobs",
            "properties.cloudInitConfigurationBlobs",
            "properties.cloudInitConfiguration",
            "properties.virtualApplianceAsn",
            "properties.sshPublicKey",
            "identity.type",
            "identity.userAssignedIdentities"
        ]
    },
    {
        "type": "NetworkWatcher",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",
                "operationId": "NetworkWatchers_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",
                "operationId": "NetworkWatchers_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",
                "operationId": "NetworkWatchers_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",
                "operationId": "NetworkWatchers_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkWatchers",
                "operationId": "NetworkWatchers_ListAll"
            }
        },
        "omitProperties": [
            "etag",
            "properties.provisioningState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "P2sVpnGateway",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true
            },
            "vpnServerConfiguration": {
                "type": "VpnServerConfiguration",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",
                "operationId": "P2sVpnGateways_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",
                "operationId": "P2sVpnGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",
                "operationId": "P2sVpnGateways_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",
                "operationId": "P2sVpnGateways_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/p2svpnGateways",
                "operationId": "P2sVpnGateways_List"
            }
        },
        "omitProperties": [
            "properties.virtualHub.id",
            "properties.provisioningState",
            "properties.vpnServerConfiguration.id",
            "properties.vpnClientConnectionHealth",
            "etag"
        ],
        "pickProperties": [
            "properties.p2SConnectionConfigurations",
            "properties.vpnGatewayScaleUnit",
            "properties.customDnsServers",
            "properties.isRoutingPreferenceInternet"
        ],
        "pickPropertiesCreate": [
            "properties.p2SConnectionConfigurations",
            "properties.vpnGatewayScaleUnit",
            "properties.customDnsServers",
            "properties.isRoutingPreferenceInternet"
        ]
    },
    {
        "type": "P2sVpnServerConfiguration",
        "group": "Network",
        "apiVersion": "2019-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualWan": {
                "type": "VirtualWan",
                "group": "Network",
                "name": "virtualWanName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations/{p2SVpnServerConfigurationName}",
                "operationId": "P2sVpnServerConfigurations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations/{p2SVpnServerConfigurationName}",
                "operationId": "P2sVpnServerConfigurations_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations/{p2SVpnServerConfigurationName}",
                "operationId": "P2sVpnServerConfigurations_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations",
                "operationId": "P2sVpnServerConfigurations_ListByVirtualWan"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.p2SVpnGateways",
            "etag"
        ],
        "pickProperties": [
            "properties.name",
            "properties.vpnProtocols",
            "properties.p2SVpnServerConfigVpnClientRootCertificates",
            "properties.p2SVpnServerConfigVpnClientRevokedCertificates",
            "properties.p2SVpnServerConfigRadiusServerRootCertificates",
            "properties.p2SVpnServerConfigRadiusClientRootCertificates",
            "properties.vpnClientIpsecPolicies",
            "properties.radiusServerAddress",
            "properties.radiusServerSecret",
            "properties.etag",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.vpnProtocols",
            "properties.p2SVpnServerConfigVpnClientRootCertificates",
            "properties.p2SVpnServerConfigVpnClientRevokedCertificates",
            "properties.p2SVpnServerConfigRadiusServerRootCertificates",
            "properties.p2SVpnServerConfigRadiusClientRootCertificates",
            "properties.vpnClientIpsecPolicies",
            "properties.radiusServerAddress",
            "properties.radiusServerSecret",
            "properties.etag",
            "name"
        ]
    },
    {
        "type": "PacketCapture",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "networkWatcher": {
                "type": "NetworkWatcher",
                "group": "Network",
                "name": "networkWatcherName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}",
                "operationId": "PacketCaptures_Create"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}",
                "operationId": "PacketCaptures_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}",
                "operationId": "PacketCaptures_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures",
                "operationId": "PacketCaptures_List"
            }
        },
        "omitProperties": [
            "name",
            "id",
            "etag",
            "properties.provisioningState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": [
            "properties.target",
            "properties.bytesToCapturePerPacket",
            "properties.totalBytesPerSession",
            "properties.timeLimitInSeconds",
            "properties.storageLocation.storagePath",
            "properties.storageLocation.filePath",
            "properties.filters"
        ]
    },
    {
        "type": "PrivateDnsZoneGroup",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "privateEndpoint": {
                "type": "PrivateEndpoint",
                "group": "Network",
                "name": "privateEndpointName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups/{privateDnsZoneGroupName}",
                "operationId": "PrivateDnsZoneGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups/{privateDnsZoneGroupName}",
                "operationId": "PrivateDnsZoneGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups/{privateDnsZoneGroupName}",
                "operationId": "PrivateDnsZoneGroups_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups",
                "operationId": "PrivateDnsZoneGroups_List"
            }
        },
        "omitProperties": [
            "etag",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "name",
            "properties.privateDnsZoneConfigs"
        ],
        "pickPropertiesCreate": [
            "name",
            "properties.privateDnsZoneConfigs"
        ]
    },
    {
        "type": "PrivateEndpoint",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            },
            "privateLinkService": {
                "type": "PrivateLinkService",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}",
                "operationId": "PrivateEndpoints_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}",
                "operationId": "PrivateEndpoints_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}",
                "operationId": "PrivateEndpoints_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateEndpoints",
                "operationId": "PrivateEndpoints_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.subnet.properties.networkSecurityGroup.etag",
            "properties.subnet.properties.routeTable.properties.subnets",
            "properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.subnet.properties.routeTable.etag",
            "properties.subnet.properties.natGateway.id",
            "properties.subnet.properties.privateEndpoints",
            "properties.subnet.properties.ipConfigurations",
            "properties.subnet.properties.ipConfigurationProfiles",
            "properties.subnet.properties.resourceNavigationLinks",
            "properties.subnet.properties.serviceAssociationLinks",
            "properties.subnet.properties.purpose",
            "properties.subnet.properties.provisioningState",
            "properties.subnet.etag",
            "properties.networkInterfaces",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.subnet.properties.addressPrefix",
            "properties.subnet.properties.addressPrefixes",
            "properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.subnet.properties.routeTable.properties.routes",
            "properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.subnet.properties.serviceEndpoints",
            "properties.subnet.properties.serviceEndpointPolicies",
            "properties.subnet.properties.ipAllocations",
            "properties.subnet.properties.delegations",
            "properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.subnet.name",
            "properties.subnet.type",
            "properties.privateLinkServiceConnections",
            "properties.manualPrivateLinkServiceConnections",
            "properties.customDnsConfigs",
            "properties.applicationSecurityGroups",
            "properties.ipConfigurations",
            "properties.customNetworkInterfaceName"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.subnet.properties.addressPrefix",
            "properties.subnet.properties.addressPrefixes",
            "properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.subnet.properties.routeTable.properties.routes",
            "properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.subnet.properties.serviceEndpoints",
            "properties.subnet.properties.serviceEndpointPolicies",
            "properties.subnet.properties.ipAllocations",
            "properties.subnet.properties.delegations",
            "properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.subnet.name",
            "properties.subnet.type",
            "properties.privateLinkServiceConnections",
            "properties.manualPrivateLinkServiceConnections",
            "properties.customDnsConfigs",
            "properties.applicationSecurityGroups",
            "properties.ipConfigurations",
            "properties.customNetworkInterfaceName"
        ],
        "propertiesDefault": {
            "properties": {
                "subnet": {
                    "properties": {
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                }
            }
        }
    },
    {
        "type": "PrivateLinkService",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "createOnly": true
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}",
                "operationId": "PrivateLinkServices_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}",
                "operationId": "PrivateLinkServices_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}",
                "operationId": "PrivateLinkServices_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateLinkServices",
                "operationId": "PrivateLinkServices_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.networkInterfaces",
            "properties.provisioningState",
            "properties.privateEndpointConnections",
            "properties.alias",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.loadBalancerFrontendIpConfigurations",
            "properties.ipConfigurations",
            "properties.visibility",
            "properties.autoApproval",
            "properties.fqdns",
            "properties.enableProxyProtocol"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.loadBalancerFrontendIpConfigurations",
            "properties.ipConfigurations",
            "properties.visibility",
            "properties.autoApproval",
            "properties.fqdns",
            "properties.enableProxyProtocol"
        ]
    },
    {
        "type": "PrivateLinkServicePrivateEndpointConnection",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "service": {
                "type": "PrivateLinkService",
                "group": "Network",
                "name": "serviceName"
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            },
            "privateLinkService": {
                "type": "PrivateLinkService",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections/{peConnectionName}",
                "operationId": "PrivateLinkServices_GetPrivateEndpointConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections/{peConnectionName}",
                "operationId": "PrivateLinkServices_UpdatePrivateEndpointConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections/{peConnectionName}",
                "operationId": "PrivateLinkServices_DeletePrivateEndpointConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections",
                "operationId": "PrivateLinkServices_ListPrivateEndpointConnections"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState",
            "properties.linkIdentifier",
            "type",
            "etag"
        ],
        "pickProperties": [
            "name"
        ],
        "pickPropertiesCreate": [
            "name"
        ],
        "propertiesDefault": {
            "properties": {
                "privateEndpoint": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "PublicIPAddress",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
                "operationId": "PublicIPAddresses_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
                "operationId": "PublicIPAddresses_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
                "operationId": "PublicIPAddresses_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
                "operationId": "PublicIPAddresses_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses",
                "operationId": "PublicIPAddresses_List"
            }
        },
        "omitProperties": [
            "properties.ipConfiguration",
            "properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPPrefix.id",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.servicePublicIPAddress.properties.provisioningState",
            "properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.servicePublicIPAddress.etag",
            "properties.natGateway.properties.subnets",
            "properties.natGateway.properties.resourceGuid",
            "properties.natGateway.properties.provisioningState",
            "properties.natGateway.etag",
            "properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.linkedPublicIPAddress.etag",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.publicIPAllocationMethod",
            "properties.publicIPAddressVersion",
            "properties.dnsSettings.domainNameLabel",
            "properties.dnsSettings.fqdn",
            "properties.dnsSettings.reverseFqdn",
            "properties.ddosSettings.protectionCoverage",
            "properties.ddosSettings.protectedIP",
            "properties.ipTags",
            "properties.ipAddress",
            "properties.idleTimeoutInMinutes",
            "properties.servicePublicIPAddress.extendedLocation.name",
            "properties.servicePublicIPAddress.extendedLocation.type",
            "properties.servicePublicIPAddress.sku.name",
            "properties.servicePublicIPAddress.sku.tier",
            "properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.servicePublicIPAddress.properties.ipTags",
            "properties.servicePublicIPAddress.properties.ipAddress",
            "properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.servicePublicIPAddress.properties.deleteOption",
            "properties.servicePublicIPAddress.zones",
            "properties.natGateway.sku.name",
            "properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.natGateway.properties.publicIpAddresses",
            "properties.natGateway.properties.publicIpPrefixes",
            "properties.natGateway.zones",
            "properties.migrationPhase",
            "properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.linkedPublicIPAddress.sku.name",
            "properties.linkedPublicIPAddress.sku.tier",
            "properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.linkedPublicIPAddress.properties.ipTags",
            "properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.linkedPublicIPAddress.zones",
            "properties.deleteOption",
            "zones"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.publicIPAllocationMethod",
            "properties.publicIPAddressVersion",
            "properties.dnsSettings.domainNameLabel",
            "properties.dnsSettings.fqdn",
            "properties.dnsSettings.reverseFqdn",
            "properties.ddosSettings.protectionCoverage",
            "properties.ddosSettings.protectedIP",
            "properties.ipTags",
            "properties.ipAddress",
            "properties.idleTimeoutInMinutes",
            "properties.servicePublicIPAddress.extendedLocation.name",
            "properties.servicePublicIPAddress.extendedLocation.type",
            "properties.servicePublicIPAddress.sku.name",
            "properties.servicePublicIPAddress.sku.tier",
            "properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.servicePublicIPAddress.properties.ipTags",
            "properties.servicePublicIPAddress.properties.ipAddress",
            "properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.servicePublicIPAddress.properties.deleteOption",
            "properties.servicePublicIPAddress.zones",
            "properties.natGateway.sku.name",
            "properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.natGateway.properties.publicIpAddresses",
            "properties.natGateway.properties.publicIpPrefixes",
            "properties.natGateway.zones",
            "properties.migrationPhase",
            "properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.linkedPublicIPAddress.sku.name",
            "properties.linkedPublicIPAddress.sku.tier",
            "properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.linkedPublicIPAddress.properties.ipTags",
            "properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.linkedPublicIPAddress.zones",
            "properties.deleteOption",
            "zones"
        ],
        "propertiesDefault": {
            "properties": {
                "ipConfiguration": {
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    }
                },
                "servicePublicIPAddress": {
                    "properties": {
                        "ipConfiguration": {
                            "properties": {
                                "privateIPAllocationMethod": "Dynamic",
                                "subnet": {
                                    "properties": {
                                        "privateEndpointNetworkPolicies": "Enabled",
                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                }
                            }
                        },
                        "linkedPublicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "linkedPublicIPAddress": {
                    "properties": {
                        "ipConfiguration": {
                            "properties": {
                                "privateIPAllocationMethod": "Dynamic",
                                "subnet": {
                                    "properties": {
                                        "privateEndpointNetworkPolicies": "Enabled",
                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                }
                            }
                        },
                        "servicePublicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "PublicIPPrefix",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "createOnly": true
            },
            "customIpPrefix": {
                "type": "CustomIPPrefix",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",
                "operationId": "PublicIPPrefixes_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",
                "operationId": "PublicIPPrefixes_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",
                "operationId": "PublicIPPrefixes_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",
                "operationId": "PublicIPPrefixes_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes",
                "operationId": "PublicIPPrefixes_List"
            }
        },
        "omitProperties": [
            "properties.ipPrefix",
            "properties.publicIPAddresses",
            "properties.loadBalancerFrontendIpConfiguration",
            "properties.customIPPrefix.id",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.natGateway.properties.subnets",
            "properties.natGateway.properties.resourceGuid",
            "properties.natGateway.properties.provisioningState",
            "properties.natGateway.etag",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.publicIPAddressVersion",
            "properties.ipTags",
            "properties.prefixLength",
            "properties.natGateway.sku.name",
            "properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.natGateway.properties.publicIpAddresses",
            "properties.natGateway.properties.publicIpPrefixes",
            "properties.natGateway.zones",
            "zones"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.publicIPAddressVersion",
            "properties.ipTags",
            "properties.prefixLength",
            "properties.natGateway.sku.name",
            "properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.natGateway.properties.publicIpAddresses",
            "properties.natGateway.properties.publicIpPrefixes",
            "properties.natGateway.zones",
            "zones"
        ]
    },
    {
        "type": "Route",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "name": "routeTableName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",
                "operationId": "Routes_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",
                "operationId": "Routes_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",
                "operationId": "Routes_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes",
                "operationId": "Routes_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.addressPrefix",
            "properties.nextHopType",
            "properties.nextHopIpAddress",
            "properties.hasBgpOverride",
            "name",
            "type"
        ],
        "pickPropertiesCreate": [
            "properties.addressPrefix",
            "properties.nextHopType",
            "properties.nextHopIpAddress",
            "properties.hasBgpOverride",
            "name",
            "type"
        ]
    },
    {
        "type": "RouteFilter",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "route": {
                "type": "Route",
                "group": "Network",
                "createOnly": true
            },
            "expressRouteConnection": {
                "type": "ExpressRouteConnection",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",
                "operationId": "RouteFilters_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",
                "operationId": "RouteFilters_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",
                "operationId": "RouteFilters_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",
                "operationId": "RouteFilters_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters",
                "operationId": "RouteFilters_List"
            }
        },
        "omitProperties": [
            "properties.peerings",
            "properties.ipv6Peerings",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.rules"
        ],
        "pickPropertiesCreate": [
            "properties.rules"
        ]
    },
    {
        "type": "RouteFilterRule",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "routeFilter": {
                "type": "RouteFilter",
                "group": "Network",
                "name": "routeFilterName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",
                "operationId": "RouteFilterRules_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",
                "operationId": "RouteFilterRules_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",
                "operationId": "RouteFilterRules_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules",
                "operationId": "RouteFilterRules_ListByRouteFilter"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.access",
            "properties.routeFilterRuleType",
            "properties.communities",
            "name",
            "location"
        ],
        "pickPropertiesCreate": [
            "properties.access",
            "properties.routeFilterRuleType",
            "properties.communities",
            "name",
            "location"
        ]
    },
    {
        "type": "RouteTable",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
                "operationId": "RouteTables_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
                "operationId": "RouteTables_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
                "operationId": "RouteTables_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
                "operationId": "RouteTables_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables",
                "operationId": "RouteTables_ListAll"
            }
        },
        "omitProperties": [
            "properties.subnets",
            "properties.provisioningState",
            "properties.resourceGuid",
            "etag"
        ],
        "pickProperties": [
            "properties.routes",
            "properties.disableBgpRoutePropagation"
        ],
        "pickPropertiesCreate": [
            "properties.routes",
            "properties.disableBgpRoutePropagation"
        ]
    },
    {
        "type": "RoutingIntent",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent/{routingIntentName}",
                "operationId": "RoutingIntent_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent/{routingIntentName}",
                "operationId": "RoutingIntent_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent/{routingIntentName}",
                "operationId": "RoutingIntent_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent",
                "operationId": "RoutingIntent_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.routingPolicies",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.routingPolicies",
            "name"
        ]
    },
    {
        "type": "SecurityPartnerProvider",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}",
                "operationId": "SecurityPartnerProviders_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}",
                "operationId": "SecurityPartnerProviders_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}",
                "operationId": "SecurityPartnerProviders_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}",
                "operationId": "SecurityPartnerProviders_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/securityPartnerProviders",
                "operationId": "SecurityPartnerProviders_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.connectionStatus",
            "properties.virtualHub.id",
            "etag"
        ],
        "pickProperties": [
            "properties.securityProviderName"
        ],
        "pickPropertiesCreate": [
            "properties.securityProviderName"
        ]
    },
    {
        "type": "ServiceEndpointPolicy",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",
                "operationId": "ServiceEndpointPolicies_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",
                "operationId": "ServiceEndpointPolicies_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",
                "operationId": "ServiceEndpointPolicies_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",
                "operationId": "ServiceEndpointPolicies_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ServiceEndpointPolicies",
                "operationId": "ServiceEndpointPolicies_List"
            }
        },
        "omitProperties": [
            "properties.subnets",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag",
            "kind"
        ],
        "pickProperties": [
            "properties.serviceEndpointPolicyDefinitions",
            "properties.serviceAlias",
            "properties.contextualServiceEndpointPolicies"
        ],
        "pickPropertiesCreate": [
            "properties.serviceEndpointPolicyDefinitions",
            "properties.serviceAlias",
            "properties.contextualServiceEndpointPolicies"
        ]
    },
    {
        "type": "ServiceEndpointPolicyDefinition",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "serviceEndpointPolicy": {
                "type": "ServiceEndpointPolicy",
                "group": "Network",
                "name": "serviceEndpointPolicyName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}",
                "operationId": "ServiceEndpointPolicyDefinitions_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}",
                "operationId": "ServiceEndpointPolicyDefinitions_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}",
                "operationId": "ServiceEndpointPolicyDefinitions_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions",
                "operationId": "ServiceEndpointPolicyDefinitions_ListByResourceGroup"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.description",
            "properties.service",
            "properties.serviceResources",
            "name",
            "type"
        ],
        "pickPropertiesCreate": [
            "properties.description",
            "properties.service",
            "properties.serviceResources",
            "name",
            "type"
        ]
    },
    {
        "type": "Subnet",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "name": "virtualNetworkName"
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
                "operationId": "Subnets_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
                "operationId": "Subnets_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
                "operationId": "Subnets_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets",
                "operationId": "Subnets_List"
            }
        },
        "omitProperties": [
            "properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.networkSecurityGroup.properties.subnets",
            "properties.networkSecurityGroup.properties.flowLogs",
            "properties.networkSecurityGroup.properties.resourceGuid",
            "properties.networkSecurityGroup.properties.provisioningState",
            "properties.networkSecurityGroup.etag",
            "properties.routeTable.properties.subnets",
            "properties.routeTable.properties.provisioningState",
            "properties.routeTable.properties.resourceGuid",
            "properties.routeTable.etag",
            "properties.natGateway.id",
            "properties.privateEndpoints",
            "properties.ipConfigurations",
            "properties.ipConfigurationProfiles",
            "properties.resourceNavigationLinks",
            "properties.serviceAssociationLinks",
            "properties.purpose",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.addressPrefix",
            "properties.addressPrefixes",
            "properties.networkSecurityGroup.properties.securityRules",
            "properties.routeTable.properties.routes",
            "properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.serviceEndpoints",
            "properties.serviceEndpointPolicies",
            "properties.ipAllocations",
            "properties.delegations",
            "properties.privateEndpointNetworkPolicies",
            "properties.privateLinkServiceNetworkPolicies",
            "properties.applicationGatewayIpConfigurations",
            "name",
            "type"
        ],
        "pickPropertiesCreate": [
            "properties.addressPrefix",
            "properties.addressPrefixes",
            "properties.networkSecurityGroup.properties.securityRules",
            "properties.routeTable.properties.routes",
            "properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.serviceEndpoints",
            "properties.serviceEndpointPolicies",
            "properties.ipAllocations",
            "properties.delegations",
            "properties.privateEndpointNetworkPolicies",
            "properties.privateLinkServiceNetworkPolicies",
            "properties.applicationGatewayIpConfigurations",
            "name",
            "type"
        ],
        "propertiesDefault": {
            "properties": {
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        }
    },
    {
        "type": "VirtualApplianceSite",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "networkVirtualAppliance": {
                "type": "NetworkVirtualAppliance",
                "group": "Network",
                "name": "networkVirtualApplianceName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites/{siteName}",
                "operationId": "VirtualApplianceSites_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites/{siteName}",
                "operationId": "VirtualApplianceSites_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites/{siteName}",
                "operationId": "VirtualApplianceSites_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites",
                "operationId": "VirtualApplianceSites_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.addressPrefix",
            "properties.o365Policy.breakOutCategories.allow",
            "properties.o365Policy.breakOutCategories.optimize",
            "properties.o365Policy.breakOutCategories.default",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.addressPrefix",
            "properties.o365Policy.breakOutCategories.allow",
            "properties.o365Policy.breakOutCategories.optimize",
            "properties.o365Policy.breakOutCategories.default",
            "name"
        ]
    },
    {
        "type": "VirtualHub",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualWan": {
                "type": "VirtualWan",
                "group": "Network",
                "createOnly": true
            },
            "vpnGateway": {
                "type": "VpnGateway",
                "group": "Network",
                "createOnly": true
            },
            "p2sVpnGateway": {
                "type": "P2sVpnGateway",
                "group": "Network",
                "createOnly": true
            },
            "expressRouteGateway": {
                "type": "ExpressRouteGateway",
                "group": "Network",
                "createOnly": true
            },
            "azureFirewall": {
                "type": "AzureFirewall",
                "group": "Network",
                "createOnly": true
            },
            "securityPartnerProvider": {
                "type": "SecurityPartnerProvider",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",
                "operationId": "VirtualHubs_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",
                "operationId": "VirtualHubs_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",
                "operationId": "VirtualHubs_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",
                "operationId": "VirtualHubs_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualHubs",
                "operationId": "VirtualHubs_List"
            }
        },
        "omitProperties": [
            "properties.virtualWan.id",
            "properties.vpnGateway.id",
            "properties.p2SVpnGateway.id",
            "properties.expressRouteGateway.id",
            "properties.azureFirewall.id",
            "properties.securityPartnerProvider.id",
            "properties.provisioningState",
            "properties.routingState",
            "properties.bgpConnections",
            "properties.ipConfigurations",
            "etag",
            "kind"
        ],
        "pickProperties": [
            "properties.addressPrefix",
            "properties.routeTable.routes",
            "properties.securityProviderName",
            "properties.virtualHubRouteTableV2s",
            "properties.sku",
            "properties.virtualRouterAsn",
            "properties.virtualRouterIps",
            "properties.allowBranchToBranchTraffic",
            "properties.preferredRoutingGateway"
        ],
        "pickPropertiesCreate": [
            "properties.addressPrefix",
            "properties.routeTable.routes",
            "properties.securityProviderName",
            "properties.virtualHubRouteTableV2s",
            "properties.sku",
            "properties.virtualRouterAsn",
            "properties.virtualRouterIps",
            "properties.allowBranchToBranchTraffic",
            "properties.preferredRoutingGateway"
        ]
    },
    {
        "type": "VirtualHubBgpConnection",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName"
            },
            "hubVirtualNetworkConnection": {
                "type": "HubVirtualNetworkConnection",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}",
                "operationId": "VirtualHubBgpConnection_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}",
                "operationId": "VirtualHubBgpConnection_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}",
                "operationId": "VirtualHubBgpConnection_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections",
                "operationId": "VirtualHubBgpConnections_List"
            }
        },
        "omitProperties": [
            "properties.hubVirtualNetworkConnection.id",
            "properties.provisioningState",
            "properties.connectionState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.peerAsn",
            "properties.peerIp",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.peerAsn",
            "properties.peerIp",
            "name"
        ]
    },
    {
        "type": "VirtualHubIpConfiguration",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName"
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/{ipConfigName}",
                "operationId": "VirtualHubIpConfiguration_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/{ipConfigName}",
                "operationId": "VirtualHubIpConfiguration_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/{ipConfigName}",
                "operationId": "VirtualHubIpConfiguration_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations",
                "operationId": "VirtualHubIpConfiguration_List"
            }
        },
        "omitProperties": [
            "properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.subnet.properties.networkSecurityGroup.etag",
            "properties.subnet.properties.routeTable.properties.subnets",
            "properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.subnet.properties.routeTable.etag",
            "properties.subnet.properties.natGateway.id",
            "properties.subnet.properties.privateEndpoints",
            "properties.subnet.properties.ipConfigurations",
            "properties.subnet.properties.ipConfigurationProfiles",
            "properties.subnet.properties.resourceNavigationLinks",
            "properties.subnet.properties.serviceAssociationLinks",
            "properties.subnet.properties.purpose",
            "properties.subnet.properties.provisioningState",
            "properties.subnet.etag",
            "properties.publicIPAddress.properties.ipConfiguration",
            "properties.publicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPAddress.properties.publicIPPrefix.id",
            "properties.publicIPAddress.properties.resourceGuid",
            "properties.publicIPAddress.properties.provisioningState",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.publicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.publicIPAddress.properties.natGateway.properties.subnets",
            "properties.publicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.publicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.publicIPAddress.properties.natGateway.etag",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.publicIPAddress.etag",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.privateIPAddress",
            "properties.privateIPAllocationMethod",
            "properties.subnet.properties.addressPrefix",
            "properties.subnet.properties.addressPrefixes",
            "properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.subnet.properties.routeTable.properties.routes",
            "properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.subnet.properties.serviceEndpoints",
            "properties.subnet.properties.serviceEndpointPolicies",
            "properties.subnet.properties.ipAllocations",
            "properties.subnet.properties.delegations",
            "properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.subnet.name",
            "properties.subnet.type",
            "properties.publicIPAddress.extendedLocation.name",
            "properties.publicIPAddress.extendedLocation.type",
            "properties.publicIPAddress.sku.name",
            "properties.publicIPAddress.sku.tier",
            "properties.publicIPAddress.properties.publicIPAllocationMethod",
            "properties.publicIPAddress.properties.publicIPAddressVersion",
            "properties.publicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.publicIPAddress.properties.dnsSettings.fqdn",
            "properties.publicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.publicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.publicIPAddress.properties.ddosSettings.protectedIP",
            "properties.publicIPAddress.properties.ipTags",
            "properties.publicIPAddress.properties.ipAddress",
            "properties.publicIPAddress.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.publicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.publicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.publicIPAddress.properties.natGateway.sku.name",
            "properties.publicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.publicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.publicIPAddress.properties.natGateway.zones",
            "properties.publicIPAddress.properties.migrationPhase",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.publicIPAddress.properties.deleteOption",
            "properties.publicIPAddress.zones",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.privateIPAddress",
            "properties.privateIPAllocationMethod",
            "properties.subnet.properties.addressPrefix",
            "properties.subnet.properties.addressPrefixes",
            "properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.subnet.properties.routeTable.properties.routes",
            "properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.subnet.properties.serviceEndpoints",
            "properties.subnet.properties.serviceEndpointPolicies",
            "properties.subnet.properties.ipAllocations",
            "properties.subnet.properties.delegations",
            "properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.subnet.name",
            "properties.subnet.type",
            "properties.publicIPAddress.extendedLocation.name",
            "properties.publicIPAddress.extendedLocation.type",
            "properties.publicIPAddress.sku.name",
            "properties.publicIPAddress.sku.tier",
            "properties.publicIPAddress.properties.publicIPAllocationMethod",
            "properties.publicIPAddress.properties.publicIPAddressVersion",
            "properties.publicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.publicIPAddress.properties.dnsSettings.fqdn",
            "properties.publicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.publicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.publicIPAddress.properties.ddosSettings.protectedIP",
            "properties.publicIPAddress.properties.ipTags",
            "properties.publicIPAddress.properties.ipAddress",
            "properties.publicIPAddress.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.publicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.publicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.publicIPAddress.properties.natGateway.sku.name",
            "properties.publicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.publicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.publicIPAddress.properties.natGateway.zones",
            "properties.publicIPAddress.properties.migrationPhase",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.publicIPAddress.properties.deleteOption",
            "properties.publicIPAddress.zones",
            "name"
        ],
        "propertiesDefault": {
            "properties": {
                "subnet": {
                    "properties": {
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                },
                "publicIPAddress": {
                    "properties": {
                        "ipConfiguration": {
                            "properties": {
                                "privateIPAllocationMethod": "Dynamic",
                                "subnet": {
                                    "properties": {
                                        "privateEndpointNetworkPolicies": "Enabled",
                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                }
                            }
                        },
                        "servicePublicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                },
                                "linkedPublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "linkedPublicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                },
                                "servicePublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "VirtualHubRouteTableV2",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}",
                "operationId": "VirtualHubRouteTableV2s_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}",
                "operationId": "VirtualHubRouteTableV2s_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}",
                "operationId": "VirtualHubRouteTableV2s_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables",
                "operationId": "VirtualHubRouteTableV2s_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.routes",
            "properties.attachedConnections",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.routes",
            "properties.attachedConnections",
            "name"
        ]
    },
    {
        "type": "VirtualNetwork",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "ddosProtectionPlan": {
                "type": "DdosProtectionPlan",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
                "operationId": "VirtualNetworks_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
                "operationId": "VirtualNetworks_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
                "operationId": "VirtualNetworks_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
                "operationId": "VirtualNetworks_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworks",
                "operationId": "VirtualNetworks_ListAll"
            }
        },
        "omitProperties": [
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.ddosProtectionPlan.id",
            "properties.bgpCommunities.regionalCommunity",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.addressSpace.addressPrefixes",
            "properties.dhcpOptions.dnsServers",
            "properties.flowTimeoutInMinutes",
            "properties.subnets",
            "properties.virtualNetworkPeerings",
            "properties.enableDdosProtection",
            "properties.enableVmProtection",
            "properties.bgpCommunities.virtualNetworkCommunity",
            "properties.encryption.enabled",
            "properties.encryption.enforcement",
            "properties.ipAllocations"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.addressSpace.addressPrefixes",
            "properties.dhcpOptions.dnsServers",
            "properties.flowTimeoutInMinutes",
            "properties.subnets",
            "properties.virtualNetworkPeerings",
            "properties.enableDdosProtection",
            "properties.enableVmProtection",
            "properties.bgpCommunities.virtualNetworkCommunity",
            "properties.encryption.enabled",
            "properties.encryption.enforcement",
            "properties.ipAllocations"
        ],
        "propertiesDefault": {
            "properties": {
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        }
    },
    {
        "type": "VirtualNetworkGateway",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            },
            "publicIpAddress": {
                "type": "PublicIPAddress",
                "group": "Network",
                "createOnly": true
            },
            "site": {
                "type": "Site",
                "group": "Web",
                "createOnly": true
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
                "operationId": "VirtualNetworkGateways_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
                "operationId": "VirtualNetworkGateways_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
                "operationId": "VirtualNetworkGateways_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
                "operationId": "VirtualNetworkGateways_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways",
                "operationId": "VirtualNetworkGateways_List"
            }
        },
        "omitProperties": [
            "properties.gatewayDefaultSite.id",
            "properties.sku.capacity",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.inboundDnsForwardingEndpoint",
            "properties.vNetExtendedLocationResourceId",
            "etag"
        ],
        "pickProperties": [
            "properties.ipConfigurations",
            "properties.gatewayType",
            "properties.vpnType",
            "properties.vpnGatewayGeneration",
            "properties.enableBgp",
            "properties.enablePrivateIpAddress",
            "properties.activeActive",
            "properties.disableIPSecReplayProtection",
            "properties.sku.name",
            "properties.sku.tier",
            "properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes",
            "properties.vpnClientConfiguration.vpnClientRootCertificates",
            "properties.vpnClientConfiguration.vpnClientRevokedCertificates",
            "properties.vpnClientConfiguration.vpnClientProtocols",
            "properties.vpnClientConfiguration.vpnAuthenticationTypes",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies",
            "properties.vpnClientConfiguration.radiusServerAddress",
            "properties.vpnClientConfiguration.radiusServerSecret",
            "properties.vpnClientConfiguration.radiusServers",
            "properties.vpnClientConfiguration.aadTenant",
            "properties.vpnClientConfiguration.aadAudience",
            "properties.vpnClientConfiguration.aadIssuer",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight",
            "properties.bgpSettings.bgpPeeringAddresses",
            "properties.customRoutes.addressPrefixes",
            "properties.enableDnsForwarding",
            "properties.natRules",
            "properties.enableBgpRouteTranslationForNat",
            "extendedLocation.name",
            "extendedLocation.type"
        ],
        "pickPropertiesCreate": [
            "properties.ipConfigurations",
            "properties.gatewayType",
            "properties.vpnType",
            "properties.vpnGatewayGeneration",
            "properties.enableBgp",
            "properties.enablePrivateIpAddress",
            "properties.activeActive",
            "properties.disableIPSecReplayProtection",
            "properties.sku.name",
            "properties.sku.tier",
            "properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes",
            "properties.vpnClientConfiguration.vpnClientRootCertificates",
            "properties.vpnClientConfiguration.vpnClientRevokedCertificates",
            "properties.vpnClientConfiguration.vpnClientProtocols",
            "properties.vpnClientConfiguration.vpnAuthenticationTypes",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies",
            "properties.vpnClientConfiguration.radiusServerAddress",
            "properties.vpnClientConfiguration.radiusServerSecret",
            "properties.vpnClientConfiguration.radiusServers",
            "properties.vpnClientConfiguration.aadTenant",
            "properties.vpnClientConfiguration.aadAudience",
            "properties.vpnClientConfiguration.aadIssuer",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight",
            "properties.bgpSettings.bgpPeeringAddresses",
            "properties.customRoutes.addressPrefixes",
            "properties.enableDnsForwarding",
            "properties.natRules",
            "properties.enableBgpRouteTranslationForNat",
            "extendedLocation.name",
            "extendedLocation.type"
        ]
    },
    {
        "type": "VirtualNetworkGatewayConnection",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            },
            "publicIpAddress": {
                "type": "PublicIPAddress",
                "group": "Network",
                "createOnly": true
            },
            "site": {
                "type": "Site",
                "group": "Web",
                "createOnly": true
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
                "operationId": "VirtualNetworkGatewayConnections_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
                "operationId": "VirtualNetworkGatewayConnections_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
                "operationId": "VirtualNetworkGatewayConnections_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
                "operationId": "VirtualNetworkGatewayConnections_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections",
                "operationId": "VirtualNetworkGatewayConnections_List"
            }
        },
        "omitProperties": [
            "properties.virtualNetworkGateway1.properties.gatewayDefaultSite.id",
            "properties.virtualNetworkGateway1.properties.sku.capacity",
            "properties.virtualNetworkGateway1.properties.resourceGuid",
            "properties.virtualNetworkGateway1.properties.provisioningState",
            "properties.virtualNetworkGateway1.properties.inboundDnsForwardingEndpoint",
            "properties.virtualNetworkGateway1.properties.vNetExtendedLocationResourceId",
            "properties.virtualNetworkGateway1.etag",
            "properties.virtualNetworkGateway2.properties.gatewayDefaultSite.id",
            "properties.virtualNetworkGateway2.properties.sku.capacity",
            "properties.virtualNetworkGateway2.properties.resourceGuid",
            "properties.virtualNetworkGateway2.properties.provisioningState",
            "properties.virtualNetworkGateway2.properties.inboundDnsForwardingEndpoint",
            "properties.virtualNetworkGateway2.properties.vNetExtendedLocationResourceId",
            "properties.virtualNetworkGateway2.etag",
            "properties.localNetworkGateway2.properties.resourceGuid",
            "properties.localNetworkGateway2.properties.provisioningState",
            "properties.localNetworkGateway2.etag",
            "properties.connectionStatus",
            "properties.tunnelConnectionStatus",
            "properties.egressBytesTransferred",
            "properties.ingressBytesTransferred",
            "properties.peer.id",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.authorizationKey",
            "properties.virtualNetworkGateway1.properties.ipConfigurations",
            "properties.virtualNetworkGateway1.properties.gatewayType",
            "properties.virtualNetworkGateway1.properties.vpnType",
            "properties.virtualNetworkGateway1.properties.vpnGatewayGeneration",
            "properties.virtualNetworkGateway1.properties.enableBgp",
            "properties.virtualNetworkGateway1.properties.enablePrivateIpAddress",
            "properties.virtualNetworkGateway1.properties.activeActive",
            "properties.virtualNetworkGateway1.properties.disableIPSecReplayProtection",
            "properties.virtualNetworkGateway1.properties.sku.name",
            "properties.virtualNetworkGateway1.properties.sku.tier",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnClientRootCertificates",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnClientRevokedCertificates",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnClientProtocols",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnAuthenticationTypes",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnClientIpsecPolicies",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.radiusServerAddress",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.radiusServerSecret",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.radiusServers",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.aadTenant",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.aadAudience",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.aadIssuer",
            "properties.virtualNetworkGateway1.properties.bgpSettings.asn",
            "properties.virtualNetworkGateway1.properties.bgpSettings.bgpPeeringAddress",
            "properties.virtualNetworkGateway1.properties.bgpSettings.peerWeight",
            "properties.virtualNetworkGateway1.properties.bgpSettings.bgpPeeringAddresses",
            "properties.virtualNetworkGateway1.properties.customRoutes.addressPrefixes",
            "properties.virtualNetworkGateway1.properties.enableDnsForwarding",
            "properties.virtualNetworkGateway1.properties.natRules",
            "properties.virtualNetworkGateway1.properties.enableBgpRouteTranslationForNat",
            "properties.virtualNetworkGateway1.extendedLocation.name",
            "properties.virtualNetworkGateway1.extendedLocation.type",
            "properties.virtualNetworkGateway2.properties.ipConfigurations",
            "properties.virtualNetworkGateway2.properties.gatewayType",
            "properties.virtualNetworkGateway2.properties.vpnType",
            "properties.virtualNetworkGateway2.properties.vpnGatewayGeneration",
            "properties.virtualNetworkGateway2.properties.enableBgp",
            "properties.virtualNetworkGateway2.properties.enablePrivateIpAddress",
            "properties.virtualNetworkGateway2.properties.activeActive",
            "properties.virtualNetworkGateway2.properties.disableIPSecReplayProtection",
            "properties.virtualNetworkGateway2.properties.sku.name",
            "properties.virtualNetworkGateway2.properties.sku.tier",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnClientRootCertificates",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnClientRevokedCertificates",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnClientProtocols",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnAuthenticationTypes",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnClientIpsecPolicies",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.radiusServerAddress",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.radiusServerSecret",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.radiusServers",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.aadTenant",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.aadAudience",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.aadIssuer",
            "properties.virtualNetworkGateway2.properties.bgpSettings.asn",
            "properties.virtualNetworkGateway2.properties.bgpSettings.bgpPeeringAddress",
            "properties.virtualNetworkGateway2.properties.bgpSettings.peerWeight",
            "properties.virtualNetworkGateway2.properties.bgpSettings.bgpPeeringAddresses",
            "properties.virtualNetworkGateway2.properties.customRoutes.addressPrefixes",
            "properties.virtualNetworkGateway2.properties.enableDnsForwarding",
            "properties.virtualNetworkGateway2.properties.natRules",
            "properties.virtualNetworkGateway2.properties.enableBgpRouteTranslationForNat",
            "properties.virtualNetworkGateway2.extendedLocation.name",
            "properties.virtualNetworkGateway2.extendedLocation.type",
            "properties.localNetworkGateway2.properties.localNetworkAddressSpace.addressPrefixes",
            "properties.localNetworkGateway2.properties.gatewayIpAddress",
            "properties.localNetworkGateway2.properties.fqdn",
            "properties.localNetworkGateway2.properties.bgpSettings.asn",
            "properties.localNetworkGateway2.properties.bgpSettings.bgpPeeringAddress",
            "properties.localNetworkGateway2.properties.bgpSettings.peerWeight",
            "properties.localNetworkGateway2.properties.bgpSettings.bgpPeeringAddresses",
            "properties.ingressNatRules",
            "properties.egressNatRules",
            "properties.connectionType",
            "properties.connectionProtocol",
            "properties.routingWeight",
            "properties.dpdTimeoutSeconds",
            "properties.connectionMode",
            "properties.sharedKey",
            "properties.enableBgp",
            "properties.useLocalAzureIpAddress",
            "properties.usePolicyBasedTrafficSelectors",
            "properties.ipsecPolicies",
            "properties.trafficSelectorPolicies",
            "properties.expressRouteGatewayBypass"
        ],
        "pickPropertiesCreate": [
            "properties.authorizationKey",
            "properties.virtualNetworkGateway1.properties.ipConfigurations",
            "properties.virtualNetworkGateway1.properties.gatewayType",
            "properties.virtualNetworkGateway1.properties.vpnType",
            "properties.virtualNetworkGateway1.properties.vpnGatewayGeneration",
            "properties.virtualNetworkGateway1.properties.enableBgp",
            "properties.virtualNetworkGateway1.properties.enablePrivateIpAddress",
            "properties.virtualNetworkGateway1.properties.activeActive",
            "properties.virtualNetworkGateway1.properties.disableIPSecReplayProtection",
            "properties.virtualNetworkGateway1.properties.sku.name",
            "properties.virtualNetworkGateway1.properties.sku.tier",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnClientRootCertificates",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnClientRevokedCertificates",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnClientProtocols",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnAuthenticationTypes",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.vpnClientIpsecPolicies",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.radiusServerAddress",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.radiusServerSecret",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.radiusServers",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.aadTenant",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.aadAudience",
            "properties.virtualNetworkGateway1.properties.vpnClientConfiguration.aadIssuer",
            "properties.virtualNetworkGateway1.properties.bgpSettings.asn",
            "properties.virtualNetworkGateway1.properties.bgpSettings.bgpPeeringAddress",
            "properties.virtualNetworkGateway1.properties.bgpSettings.peerWeight",
            "properties.virtualNetworkGateway1.properties.bgpSettings.bgpPeeringAddresses",
            "properties.virtualNetworkGateway1.properties.customRoutes.addressPrefixes",
            "properties.virtualNetworkGateway1.properties.enableDnsForwarding",
            "properties.virtualNetworkGateway1.properties.natRules",
            "properties.virtualNetworkGateway1.properties.enableBgpRouteTranslationForNat",
            "properties.virtualNetworkGateway1.extendedLocation.name",
            "properties.virtualNetworkGateway1.extendedLocation.type",
            "properties.virtualNetworkGateway2.properties.ipConfigurations",
            "properties.virtualNetworkGateway2.properties.gatewayType",
            "properties.virtualNetworkGateway2.properties.vpnType",
            "properties.virtualNetworkGateway2.properties.vpnGatewayGeneration",
            "properties.virtualNetworkGateway2.properties.enableBgp",
            "properties.virtualNetworkGateway2.properties.enablePrivateIpAddress",
            "properties.virtualNetworkGateway2.properties.activeActive",
            "properties.virtualNetworkGateway2.properties.disableIPSecReplayProtection",
            "properties.virtualNetworkGateway2.properties.sku.name",
            "properties.virtualNetworkGateway2.properties.sku.tier",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnClientRootCertificates",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnClientRevokedCertificates",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnClientProtocols",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnAuthenticationTypes",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.vpnClientIpsecPolicies",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.radiusServerAddress",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.radiusServerSecret",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.radiusServers",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.aadTenant",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.aadAudience",
            "properties.virtualNetworkGateway2.properties.vpnClientConfiguration.aadIssuer",
            "properties.virtualNetworkGateway2.properties.bgpSettings.asn",
            "properties.virtualNetworkGateway2.properties.bgpSettings.bgpPeeringAddress",
            "properties.virtualNetworkGateway2.properties.bgpSettings.peerWeight",
            "properties.virtualNetworkGateway2.properties.bgpSettings.bgpPeeringAddresses",
            "properties.virtualNetworkGateway2.properties.customRoutes.addressPrefixes",
            "properties.virtualNetworkGateway2.properties.enableDnsForwarding",
            "properties.virtualNetworkGateway2.properties.natRules",
            "properties.virtualNetworkGateway2.properties.enableBgpRouteTranslationForNat",
            "properties.virtualNetworkGateway2.extendedLocation.name",
            "properties.virtualNetworkGateway2.extendedLocation.type",
            "properties.localNetworkGateway2.properties.localNetworkAddressSpace.addressPrefixes",
            "properties.localNetworkGateway2.properties.gatewayIpAddress",
            "properties.localNetworkGateway2.properties.fqdn",
            "properties.localNetworkGateway2.properties.bgpSettings.asn",
            "properties.localNetworkGateway2.properties.bgpSettings.bgpPeeringAddress",
            "properties.localNetworkGateway2.properties.bgpSettings.peerWeight",
            "properties.localNetworkGateway2.properties.bgpSettings.bgpPeeringAddresses",
            "properties.ingressNatRules",
            "properties.egressNatRules",
            "properties.connectionType",
            "properties.connectionProtocol",
            "properties.routingWeight",
            "properties.dpdTimeoutSeconds",
            "properties.connectionMode",
            "properties.sharedKey",
            "properties.enableBgp",
            "properties.useLocalAzureIpAddress",
            "properties.usePolicyBasedTrafficSelectors",
            "properties.ipsecPolicies",
            "properties.trafficSelectorPolicies",
            "properties.expressRouteGatewayBypass"
        ]
    },
    {
        "type": "VirtualNetworkGatewayConnectionSharedKey",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualNetworkGatewayConnection": {
                "type": "VirtualNetworkGatewayConnection",
                "group": "Network",
                "name": "virtualNetworkGatewayConnectionName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey",
                "operationId": "VirtualNetworkGatewayConnections_SetSharedKey"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey",
                "operationId": "VirtualNetworkGatewayConnections_GetSharedKey"
            }
        },
        "pickProperties": [
            "value"
        ],
        "pickPropertiesCreate": [
            "value"
        ]
    },
    {
        "type": "VirtualNetworkGatewayNatRule",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualNetworkGateway": {
                "type": "VirtualNetworkGateway",
                "group": "Network",
                "name": "virtualNetworkGatewayName"
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/{natRuleName}",
                "operationId": "VirtualNetworkGatewayNatRules_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/{natRuleName}",
                "operationId": "VirtualNetworkGatewayNatRules_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/{natRuleName}",
                "operationId": "VirtualNetworkGatewayNatRules_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules",
                "operationId": "VirtualNetworkGatewayNatRules_ListByVirtualNetworkGateway"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.ipConfigurationId",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.type",
            "properties.mode",
            "properties.internalMappings",
            "properties.externalMappings",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.type",
            "properties.mode",
            "properties.internalMappings",
            "properties.externalMappings",
            "name"
        ]
    },
    {
        "type": "VirtualNetworkPeering",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "name": "virtualNetworkName",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
                "operationId": "VirtualNetworkPeerings_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
                "operationId": "VirtualNetworkPeerings_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
                "operationId": "VirtualNetworkPeerings_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings",
                "operationId": "VirtualNetworkPeerings_List"
            }
        },
        "omitProperties": [
            "properties.remoteVirtualNetwork.id",
            "properties.remoteBgpCommunities.regionalCommunity",
            "properties.remoteVirtualNetworkEncryption",
            "properties.peeringState",
            "properties.provisioningState",
            "properties.resourceGuid",
            "etag"
        ],
        "pickProperties": [
            "properties.allowVirtualNetworkAccess",
            "properties.allowForwardedTraffic",
            "properties.allowGatewayTransit",
            "properties.useRemoteGateways",
            "properties.remoteAddressSpace.addressPrefixes",
            "properties.remoteVirtualNetworkAddressSpace.addressPrefixes",
            "properties.remoteBgpCommunities.virtualNetworkCommunity",
            "properties.peeringSyncLevel",
            "properties.doNotVerifyRemoteGateways",
            "name",
            "type"
        ],
        "pickPropertiesCreate": [
            "properties.allowVirtualNetworkAccess",
            "properties.allowForwardedTraffic",
            "properties.allowGatewayTransit",
            "properties.useRemoteGateways",
            "properties.remoteAddressSpace.addressPrefixes",
            "properties.remoteVirtualNetworkAddressSpace.addressPrefixes",
            "properties.remoteBgpCommunities.virtualNetworkCommunity",
            "properties.peeringSyncLevel",
            "properties.doNotVerifyRemoteGateways",
            "name",
            "type"
        ]
    },
    {
        "type": "VirtualNetworkTap",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "createOnly": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true
            },
            "configuration": {
                "type": "Configuration",
                "group": "DBforPostgreSQL",
                "createOnly": true
            },
            "loadBalancerBackendAddressPool": {
                "type": "LoadBalancerBackendAddressPool",
                "group": "Network",
                "createOnly": true
            },
            "virtualMachine": {
                "type": "VirtualMachine",
                "group": "Compute",
                "createOnly": true
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",
                "operationId": "VirtualNetworkTaps_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",
                "operationId": "VirtualNetworkTaps_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",
                "operationId": "VirtualNetworkTaps_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",
                "operationId": "VirtualNetworkTaps_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworkTaps",
                "operationId": "VirtualNetworkTaps_ListAll"
            }
        },
        "omitProperties": [
            "properties.networkInterfaceTapConfigurations",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.natGateway.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateEndpoints",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipConfigurations",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipConfigurationProfiles",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.resourceNavigationLinks",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceAssociationLinks",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.purpose",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipConfiguration",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.privateLinkConnectionProperties",
            "properties.destinationNetworkInterfaceIPConfiguration.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.inboundNatRules",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.inboundNatPools",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.outboundRules",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.loadBalancingRules",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.natGateway.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateEndpoints",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipConfigurations",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipConfigurationProfiles",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.resourceNavigationLinks",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceAssociationLinks",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.purpose",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipConfiguration",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.type",
            "etag"
        ],
        "pickProperties": [
            "properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.addressPrefix",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.addressPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.routes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceEndpoints",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceEndpointPolicies",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipAllocations",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.delegations",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.primary",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.extendedLocation.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.extendedLocation.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.sku.tier",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipTags",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.migrationPhase",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.deleteOption",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups",
            "properties.destinationNetworkInterfaceIPConfiguration.name",
            "properties.destinationNetworkInterfaceIPConfiguration.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.addressPrefix",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.addressPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.routes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceEndpoints",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceEndpointPolicies",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipAllocations",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.delegations",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.extendedLocation.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.extendedLocation.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.sku.tier",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipTags",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.migrationPhase",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.deleteOption",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.zones",
            "properties.destinationPort"
        ],
        "pickPropertiesCreate": [
            "properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.addressPrefix",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.addressPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.routes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceEndpoints",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceEndpointPolicies",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipAllocations",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.delegations",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.primary",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.extendedLocation.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.extendedLocation.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.sku.tier",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipTags",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.migrationPhase",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.deleteOption",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.zones",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups",
            "properties.destinationNetworkInterfaceIPConfiguration.name",
            "properties.destinationNetworkInterfaceIPConfiguration.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.addressPrefix",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.addressPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.securityRules",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.routes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.disableBgpRoutePropagation",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceEndpoints",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceEndpointPolicies",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipAllocations",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.delegations",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateEndpointNetworkPolicies",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateLinkServiceNetworkPolicies",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.applicationGatewayIpConfigurations",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.extendedLocation.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.extendedLocation.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.sku.tier",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipTags",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.migrationPhase",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.extendedLocation.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.sku.tier",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipTags",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.extendedLocation.type",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.sku.tier",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAllocationMethod",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPAddressVersion",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.domainNameLabel",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.fqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.dnsSettings.reverseFqdn",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectionCoverage",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.protectedIP",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipTags",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipAddress",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.migrationPhase",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.deleteOption",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.sku.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.idleTimeoutInMinutes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpAddresses",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.publicIpPrefixes",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.migrationPhase",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.deleteOption",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.deleteOption",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.zones",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.name",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.zones",
            "properties.destinationPort"
        ],
        "propertiesDefault": {
            "properties": {
                "destinationNetworkInterfaceIPConfiguration": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        },
                        "publicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                },
                                "servicePublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "linkedPublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "linkedPublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "servicePublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "destinationLoadBalancerFrontEndIPConfiguration": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        },
                        "publicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                },
                                "servicePublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "linkedPublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "linkedPublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "servicePublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "VirtualRouter",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}",
                "operationId": "VirtualRouters_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}",
                "operationId": "VirtualRouters_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}",
                "operationId": "VirtualRouters_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualRouters",
                "operationId": "VirtualRouters_List"
            }
        },
        "omitProperties": [
            "properties.hostedSubnet.id",
            "properties.hostedGateway.id",
            "properties.peerings",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.virtualRouterAsn",
            "properties.virtualRouterIps"
        ],
        "pickPropertiesCreate": [
            "properties.virtualRouterAsn",
            "properties.virtualRouterIps"
        ]
    },
    {
        "type": "VirtualRouterPeering",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualRouter": {
                "type": "VirtualRouter",
                "group": "Network",
                "name": "virtualRouterName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}",
                "operationId": "VirtualRouterPeerings_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}",
                "operationId": "VirtualRouterPeerings_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}",
                "operationId": "VirtualRouterPeerings_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings",
                "operationId": "VirtualRouterPeerings_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.peerAsn",
            "properties.peerIp",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.peerAsn",
            "properties.peerIp",
            "name"
        ]
    },
    {
        "type": "VirtualWan",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",
                "operationId": "VirtualWans_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",
                "operationId": "VirtualWans_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",
                "operationId": "VirtualWans_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",
                "operationId": "VirtualWans_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualWans",
                "operationId": "VirtualWans_List"
            }
        },
        "omitProperties": [
            "properties.virtualHubs",
            "properties.vpnSites",
            "properties.office365LocalBreakoutCategory",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.disableVpnEncryption",
            "properties.allowBranchToBranchTraffic",
            "properties.allowVnetToVnetTraffic",
            "properties.type"
        ],
        "pickPropertiesCreate": [
            "properties.disableVpnEncryption",
            "properties.allowBranchToBranchTraffic",
            "properties.allowVnetToVnetTraffic",
            "properties.type"
        ]
    },
    {
        "type": "VpnConnection",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "gateway": {
                "type": "VpnGateway",
                "group": "Network",
                "name": "gatewayName"
            },
            "vpnSite": {
                "type": "VpnSite",
                "group": "Network",
                "createOnly": true
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}",
                "operationId": "VpnConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}",
                "operationId": "VpnConnections_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}",
                "operationId": "VpnConnections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections",
                "operationId": "VpnConnections_ListByVpnGateway"
            }
        },
        "omitProperties": [
            "properties.remoteVpnSite.id",
            "properties.connectionStatus",
            "properties.ingressBytesTransferred",
            "properties.egressBytesTransferred",
            "properties.provisioningState",
            "properties.routingConfiguration.associatedRouteTable.id",
            "properties.routingConfiguration.vnetRoutes.bgpConnections",
            "etag"
        ],
        "pickProperties": [
            "properties.routingWeight",
            "properties.dpdTimeoutSeconds",
            "properties.vpnConnectionProtocolType",
            "properties.connectionBandwidth",
            "properties.sharedKey",
            "properties.enableBgp",
            "properties.usePolicyBasedTrafficSelectors",
            "properties.ipsecPolicies",
            "properties.trafficSelectorPolicies",
            "properties.enableRateLimiting",
            "properties.enableInternetSecurity",
            "properties.useLocalAzureIpAddress",
            "properties.vpnLinkConnections",
            "properties.routingConfiguration.propagatedRouteTables.labels",
            "properties.routingConfiguration.propagatedRouteTables.ids",
            "properties.routingConfiguration.vnetRoutes.staticRoutes",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.routingWeight",
            "properties.dpdTimeoutSeconds",
            "properties.vpnConnectionProtocolType",
            "properties.connectionBandwidth",
            "properties.sharedKey",
            "properties.enableBgp",
            "properties.usePolicyBasedTrafficSelectors",
            "properties.ipsecPolicies",
            "properties.trafficSelectorPolicies",
            "properties.enableRateLimiting",
            "properties.enableInternetSecurity",
            "properties.useLocalAzureIpAddress",
            "properties.vpnLinkConnections",
            "properties.routingConfiguration.propagatedRouteTables.labels",
            "properties.routingConfiguration.propagatedRouteTables.ids",
            "properties.routingConfiguration.vnetRoutes.staticRoutes",
            "name"
        ]
    },
    {
        "type": "VpnGateway",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true
            },
            "vpnSite": {
                "type": "VpnSite",
                "group": "Network",
                "createOnly": true
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",
                "operationId": "VpnGateways_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",
                "operationId": "VpnGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",
                "operationId": "VpnGateways_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",
                "operationId": "VpnGateways_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnGateways",
                "operationId": "VpnGateways_List"
            }
        },
        "omitProperties": [
            "properties.virtualHub.id",
            "properties.provisioningState",
            "properties.ipConfigurations",
            "etag"
        ],
        "pickProperties": [
            "properties.connections",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight",
            "properties.bgpSettings.bgpPeeringAddresses",
            "properties.vpnGatewayScaleUnit",
            "properties.enableBgpRouteTranslationForNat",
            "properties.isRoutingPreferenceInternet",
            "properties.natRules"
        ],
        "pickPropertiesCreate": [
            "properties.connections",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight",
            "properties.bgpSettings.bgpPeeringAddresses",
            "properties.vpnGatewayScaleUnit",
            "properties.enableBgpRouteTranslationForNat",
            "properties.isRoutingPreferenceInternet",
            "properties.natRules"
        ]
    },
    {
        "type": "VpnServerConfiguration",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true
            },
            "p2sVpnServerConfiguration": {
                "type": "P2sVpnServerConfiguration",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}",
                "operationId": "VpnServerConfigurations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}",
                "operationId": "VpnServerConfigurations_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}",
                "operationId": "VpnServerConfigurations_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}",
                "operationId": "VpnServerConfigurations_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnServerConfigurations",
                "operationId": "VpnServerConfigurations_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.p2SVpnGateways",
            "properties.etag",
            "etag"
        ],
        "pickProperties": [
            "properties.name",
            "properties.vpnProtocols",
            "properties.vpnAuthenticationTypes",
            "properties.vpnClientRootCertificates",
            "properties.vpnClientRevokedCertificates",
            "properties.radiusServerRootCertificates",
            "properties.radiusClientRootCertificates",
            "properties.vpnClientIpsecPolicies",
            "properties.radiusServerAddress",
            "properties.radiusServerSecret",
            "properties.radiusServers",
            "properties.aadAuthenticationParameters.aadTenant",
            "properties.aadAuthenticationParameters.aadAudience",
            "properties.aadAuthenticationParameters.aadIssuer",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.vpnProtocols",
            "properties.vpnAuthenticationTypes",
            "properties.vpnClientRootCertificates",
            "properties.vpnClientRevokedCertificates",
            "properties.radiusServerRootCertificates",
            "properties.radiusClientRootCertificates",
            "properties.vpnClientIpsecPolicies",
            "properties.radiusServerAddress",
            "properties.radiusServerSecret",
            "properties.radiusServers",
            "properties.aadAuthenticationParameters.aadTenant",
            "properties.aadAuthenticationParameters.aadAudience",
            "properties.aadAuthenticationParameters.aadIssuer",
            "name"
        ]
    },
    {
        "type": "VpnSite",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualWan": {
                "type": "VirtualWan",
                "group": "Network",
                "createOnly": true
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",
                "operationId": "VpnSites_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",
                "operationId": "VpnSites_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",
                "operationId": "VpnSites_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",
                "operationId": "VpnSites_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnSites",
                "operationId": "VpnSites_List"
            }
        },
        "omitProperties": [
            "properties.virtualWan.id",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.deviceProperties.deviceVendor",
            "properties.deviceProperties.deviceModel",
            "properties.deviceProperties.linkSpeedInMbps",
            "properties.ipAddress",
            "properties.siteKey",
            "properties.addressSpace.addressPrefixes",
            "properties.bgpProperties.asn",
            "properties.bgpProperties.bgpPeeringAddress",
            "properties.bgpProperties.peerWeight",
            "properties.bgpProperties.bgpPeeringAddresses",
            "properties.isSecuritySite",
            "properties.vpnSiteLinks",
            "properties.o365Policy.breakOutCategories.allow",
            "properties.o365Policy.breakOutCategories.optimize",
            "properties.o365Policy.breakOutCategories.default"
        ],
        "pickPropertiesCreate": [
            "properties.deviceProperties.deviceVendor",
            "properties.deviceProperties.deviceModel",
            "properties.deviceProperties.linkSpeedInMbps",
            "properties.ipAddress",
            "properties.siteKey",
            "properties.addressSpace.addressPrefixes",
            "properties.bgpProperties.asn",
            "properties.bgpProperties.bgpPeeringAddress",
            "properties.bgpProperties.peerWeight",
            "properties.bgpProperties.bgpPeeringAddresses",
            "properties.isSecuritySite",
            "properties.vpnSiteLinks",
            "properties.o365Policy.breakOutCategories.allow",
            "properties.o365Policy.breakOutCategories.optimize",
            "properties.o365Policy.breakOutCategories.default"
        ]
    },
    {
        "type": "WebApplicationFirewallPolicy",
        "group": "Network",
        "apiVersion": "2021-05-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "firewallPolicy": {
                "type": "FirewallPolicy",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}",
                "operationId": "WebApplicationFirewallPolicies_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}",
                "operationId": "WebApplicationFirewallPolicies_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}",
                "operationId": "WebApplicationFirewallPolicies_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
                "operationId": "WebApplicationFirewallPolicies_List"
            }
        },
        "omitProperties": [
            "properties.policySettings.state",
            "properties.applicationGateways",
            "properties.provisioningState",
            "properties.resourceState",
            "properties.httpListeners",
            "properties.pathBasedRules",
            "etag"
        ],
        "pickProperties": [
            "properties.policySettings.mode",
            "properties.policySettings.requestBodyCheck",
            "properties.policySettings.maxRequestBodySizeInKb",
            "properties.policySettings.fileUploadLimitInMb",
            "properties.customRules",
            "properties.managedRules.exclusions",
            "properties.managedRules.managedRuleSets"
        ],
        "pickPropertiesCreate": [
            "properties.policySettings.mode",
            "properties.policySettings.requestBodyCheck",
            "properties.policySettings.maxRequestBodySizeInKb",
            "properties.policySettings.fileUploadLimitInMb",
            "properties.customRules",
            "properties.managedRules.exclusions",
            "properties.managedRules.managedRuleSets"
        ]
    },
    {
        "type": "Cluster",
        "group": "OperationalInsights",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/clusters/{clusterName}",
                "operationId": "Clusters_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/clusters/{clusterName}",
                "operationId": "Clusters_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/clusters/{clusterName}",
                "operationId": "Clusters_Get"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/clusters/{clusterName}",
                "operationId": "Clusters_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/clusters",
                "operationId": "Clusters_List"
            }
        },
        "omitProperties": [
            "identity.principalId",
            "identity.tenantId",
            "properties.clusterId",
            "properties.provisioningState",
            "properties.isDoubleEncryptionEnabled",
            "properties.lastModifiedDate",
            "properties.createdDate",
            "properties.capacityReservationProperties.lastSkuUpdate",
            "properties.capacityReservationProperties.minCapacity"
        ],
        "pickProperties": [
            "identity.type",
            "identity.userAssignedIdentities",
            "sku.capacity",
            "sku.name",
            "properties.isAvailabilityZonesEnabled",
            "properties.billingType",
            "properties.keyVaultProperties.keyVaultUri",
            "properties.keyVaultProperties.keyName",
            "properties.keyVaultProperties.keyVersion",
            "properties.keyVaultProperties.keyRsaSize",
            "properties.associatedWorkspaces"
        ],
        "pickPropertiesCreate": [
            "identity.type",
            "identity.userAssignedIdentities",
            "sku.capacity",
            "sku.name",
            "properties.isAvailabilityZonesEnabled",
            "properties.billingType",
            "properties.keyVaultProperties.keyVaultUri",
            "properties.keyVaultProperties.keyName",
            "properties.keyVaultProperties.keyVersion",
            "properties.keyVaultProperties.keyRsaSize",
            "properties.associatedWorkspaces"
        ]
    },
    {
        "type": "DataCollectorLog",
        "group": "OperationalInsights",
        "apiVersion": "2020-03-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "name": "workspaceName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataCollectorLogs/{tableName}",
                "operationId": "DataCollectorLogs_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataCollectorLogs/{tableName}",
                "operationId": "DataCollectorLogs_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataCollectorLogs",
                "operationId": "DataCollectorLogs_ListByWorkspace"
            }
        },
        "pickProperties": [
            "properties.name"
        ],
        "pickPropertiesCreate": [
            "properties.name"
        ]
    },
    {
        "type": "DataExport",
        "group": "OperationalInsights",
        "apiVersion": "2020-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "name": "workspaceName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataExports/{dataExportName}",
                "operationId": "DataExports_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataExports/{dataExportName}",
                "operationId": "DataExports_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataExports/{dataExportName}",
                "operationId": "DataExports_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/dataExports",
                "operationId": "DataExports_ListByWorkspace"
            }
        },
        "omitProperties": [
            "properties.dataExportId",
            "properties.destination.resourceId",
            "properties.destination.type"
        ],
        "pickProperties": [
            "properties.tableNames",
            "properties.destination.metaData.eventHubName",
            "properties.enable",
            "properties.createdDate",
            "properties.lastModifiedDate"
        ],
        "pickPropertiesCreate": [
            "properties.tableNames",
            "properties.destination.metaData.eventHubName",
            "properties.enable",
            "properties.createdDate",
            "properties.lastModifiedDate"
        ]
    },
    {
        "type": "LinkedService",
        "group": "OperationalInsights",
        "apiVersion": "2020-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "name": "workspaceName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedServices/{linkedServiceName}",
                "operationId": "LinkedServices_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedServices/{linkedServiceName}",
                "operationId": "LinkedServices_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedServices/{linkedServiceName}",
                "operationId": "LinkedServices_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/linkedServices",
                "operationId": "LinkedServices_ListByWorkspace"
            }
        },
        "omitProperties": [
            "properties.resourceId",
            "properties.writeAccessResourceId",
            "properties.provisioningState",
            "tags"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "Query",
        "group": "OperationalInsights",
        "apiVersion": "2019-09-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "queryPack": {
                "type": "QueryPack",
                "group": "OperationalInsights",
                "name": "queryPackName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}",
                "operationId": "Queries_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}",
                "operationId": "Queries_Put"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}",
                "operationId": "Queries_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries/{id}",
                "operationId": "Queries_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}/queries",
                "operationId": "Queries_List"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.timeCreated",
            "properties.timeModified",
            "properties.author"
        ],
        "pickProperties": [
            "properties.displayName",
            "properties.description",
            "properties.body",
            "properties.related.categories",
            "properties.related.resourceTypes",
            "properties.related.solutions",
            "properties.tags",
            "properties.properties"
        ],
        "pickPropertiesCreate": [
            "properties.displayName",
            "properties.description",
            "properties.body",
            "properties.related.categories",
            "properties.related.resourceTypes",
            "properties.related.solutions",
            "properties.tags",
            "properties.properties"
        ]
    },
    {
        "type": "QueryPack",
        "group": "OperationalInsights",
        "apiVersion": "2019-09-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "query": {
                "type": "Query",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}",
                "operationId": "QueryPacks_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}",
                "operationId": "QueryPacks_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}",
                "operationId": "QueryPacks_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/queryPacks/{queryPackName}",
                "operationId": "QueryPacks_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/queryPacks",
                "operationId": "QueryPacks_List"
            }
        },
        "omitProperties": [
            "properties.queryPackId",
            "properties.timeCreated",
            "properties.timeModified",
            "properties.provisioningState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "SavedSearch",
        "group": "OperationalInsights",
        "apiVersion": "2020-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "name": "workspaceName"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches/{savedSearchId}",
                "operationId": "SavedSearches_Delete"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches/{savedSearchId}",
                "operationId": "SavedSearches_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches/{savedSearchId}",
                "operationId": "SavedSearches_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/savedSearches",
                "operationId": "SavedSearches_ListByWorkspace"
            }
        },
        "pickProperties": [
            "etag",
            "properties.category",
            "properties.displayName",
            "properties.query",
            "properties.functionAlias",
            "properties.functionParameters",
            "properties.version",
            "properties.tags"
        ],
        "pickPropertiesCreate": [
            "etag",
            "properties.category",
            "properties.displayName",
            "properties.query",
            "properties.functionAlias",
            "properties.functionParameters",
            "properties.version",
            "properties.tags"
        ]
    },
    {
        "type": "StorageInsight",
        "group": "OperationalInsights",
        "apiVersion": "2015-03-20",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "name": "workspaceName"
            },
            "linkedStorageAccount": {
                "type": "LinkedStorageAccount",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs/{storageInsightName}",
                "operationId": "StorageInsights_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs/{storageInsightName}",
                "operationId": "StorageInsights_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs/{storageInsightName}",
                "operationId": "StorageInsights_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs",
                "operationId": "StorageInsights_ListByWorkspace"
            }
        },
        "omitProperties": [
            "properties.storageAccount.id",
            "properties.status"
        ],
        "pickProperties": [
            "properties.containers",
            "properties.tables",
            "properties.storageAccount.key",
            "eTag"
        ],
        "pickPropertiesCreate": [
            "properties.containers",
            "properties.tables",
            "properties.storageAccount.key",
            "eTag"
        ]
    },
    {
        "type": "StorageInsightConfig",
        "group": "OperationalInsights",
        "apiVersion": "2020-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "workspace": {
                "type": "Workspace",
                "group": "OperationalInsights",
                "name": "workspaceName"
            },
            "linkedStorageAccount": {
                "type": "LinkedStorageAccount",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs/{storageInsightName}",
                "operationId": "StorageInsightConfigs_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs/{storageInsightName}",
                "operationId": "StorageInsightConfigs_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs/{storageInsightName}",
                "operationId": "StorageInsightConfigs_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}/storageInsightConfigs",
                "operationId": "StorageInsightConfigs_ListByWorkspace"
            }
        },
        "omitProperties": [
            "properties.storageAccount.id",
            "properties.status",
            "tags"
        ],
        "pickProperties": [
            "properties.containers",
            "properties.tables",
            "properties.storageAccount.key",
            "eTag"
        ],
        "pickPropertiesCreate": [
            "properties.containers",
            "properties.tables",
            "properties.storageAccount.key",
            "eTag"
        ]
    },
    {
        "type": "Workspace",
        "group": "OperationalInsights",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "cluster": {
                "type": "Cluster",
                "group": "OperationalInsights",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}",
                "operationId": "Workspaces_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}",
                "operationId": "Workspaces_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}",
                "operationId": "Workspaces_Get"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}",
                "operationId": "Workspaces_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.OperationalInsights/workspaces",
                "operationId": "Workspaces_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.customerId",
            "properties.sku.lastSkuUpdate",
            "properties.workspaceCapping.quotaNextResetTime",
            "properties.workspaceCapping.dataIngestionStatus",
            "properties.createdDate",
            "properties.modifiedDate",
            "properties.privateLinkScopedResources",
            "properties.features.clusterResourceId"
        ],
        "pickProperties": [
            "properties.sku.name",
            "properties.sku.capacityReservationLevel",
            "properties.retentionInDays",
            "properties.workspaceCapping.dailyQuotaGb",
            "properties.publicNetworkAccessForIngestion",
            "properties.publicNetworkAccessForQuery",
            "properties.forceCmkForQuery",
            "properties.features.enableDataExport",
            "properties.features.immediatePurgeDataOn30Days",
            "properties.features.enableLogAccessUsingOnlyResourcePermissions",
            "properties.features.disableLocalAuth",
            "eTag"
        ],
        "pickPropertiesCreate": [
            "properties.sku.name",
            "properties.sku.capacityReservationLevel",
            "properties.retentionInDays",
            "properties.workspaceCapping.dailyQuotaGb",
            "properties.publicNetworkAccessForIngestion",
            "properties.publicNetworkAccessForQuery",
            "properties.forceCmkForQuery",
            "properties.features.enableDataExport",
            "properties.features.immediatePurgeDataOn30Days",
            "properties.features.enableLogAccessUsingOnlyResourcePermissions",
            "properties.features.disableLocalAuth",
            "eTag"
        ],
        "propertiesDefault": {
            "properties": {
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        }
    },
    {
        "type": "Configuration",
        "group": "DBforPostgreSQL",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "server": {
                "type": "Server",
                "group": "DBforPostgreSQL",
                "name": "serverName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations/{configurationName}",
                "operationId": "Configurations_Get"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations/{configurationName}",
                "operationId": "Configurations_Update"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations/{configurationName}",
                "operationId": "Configurations_Put"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations",
                "operationId": "Configurations_ListByServer"
            }
        },
        "omitProperties": [
            "properties.description",
            "properties.defaultValue",
            "properties.dataType",
            "properties.allowedValues",
            "properties.isDynamicConfig",
            "properties.isReadOnly",
            "properties.isConfigPendingRestart",
            "properties.unit",
            "properties.documentationLink",
            "systemData"
        ],
        "pickProperties": [
            "properties.value",
            "properties.source"
        ],
        "pickPropertiesCreate": [
            "properties.value",
            "properties.source"
        ]
    },
    {
        "type": "Database",
        "group": "DBforPostgreSQL",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "server": {
                "type": "Server",
                "group": "DBforPostgreSQL",
                "name": "serverName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases/{databaseName}",
                "operationId": "Databases_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases/{databaseName}",
                "operationId": "Databases_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases/{databaseName}",
                "operationId": "Databases_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases",
                "operationId": "Databases_ListByServer"
            }
        },
        "omitProperties": [
            "systemData"
        ],
        "pickProperties": [
            "properties.charset",
            "properties.collation"
        ],
        "pickPropertiesCreate": [
            "properties.charset",
            "properties.collation"
        ]
    },
    {
        "type": "FirewallRule",
        "group": "DBforPostgreSQL",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "server": {
                "type": "Server",
                "group": "DBforPostgreSQL",
                "name": "serverName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}",
                "operationId": "FirewallRules_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}",
                "operationId": "FirewallRules_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}",
                "operationId": "FirewallRules_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules",
                "operationId": "FirewallRules_ListByServer"
            }
        },
        "omitProperties": [
            "systemData"
        ],
        "pickProperties": [
            "properties.startIpAddress",
            "properties.endIpAddress"
        ],
        "pickPropertiesCreate": [
            "properties.startIpAddress",
            "properties.endIpAddress"
        ]
    },
    {
        "type": "PrivateEndpointConnection",
        "group": "DBforPostgreSQL",
        "apiVersion": "2018-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "server": {
                "type": "P2sVpnServerConfiguration",
                "group": "Network",
                "name": "serverName"
            },
            "privateEndpoint": {
                "type": "PrivateEndpoint",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/privateEndpointConnections",
                "operationId": "PrivateEndpointConnections_ListByServer"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "Server",
        "group": "DBforPostgreSQL",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}",
                "operationId": "Servers_Create"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}",
                "operationId": "Servers_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}",
                "operationId": "Servers_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}",
                "operationId": "Servers_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/flexibleServers",
                "operationId": "Servers_List"
            }
        },
        "omitProperties": [
            "properties.administratorLogin",
            "properties.administratorLoginPassword",
            "properties.minorVersion",
            "properties.state",
            "properties.fullyQualifiedDomainName",
            "properties.backup.geoRedundantBackup",
            "properties.backup.earliestRestoreDate",
            "properties.network",
            "properties.highAvailability.state",
            "properties.maintenanceWindow",
            "properties.sourceServerResourceId",
            "properties.pointInTimeUTC",
            "properties.availabilityZone",
            "properties.createMode",
            "systemData"
        ],
        "pickProperties": [
            "sku.name",
            "sku.tier",
            "properties.version",
            "properties.storage.storageSizeGB",
            "properties.backup.backupRetentionDays",
            "properties.highAvailability.mode",
            "properties.highAvailability.standbyAvailabilityZone"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "sku.tier",
            "properties.version",
            "properties.storage.storageSizeGB",
            "properties.backup.backupRetentionDays",
            "properties.highAvailability.mode",
            "properties.highAvailability.standbyAvailabilityZone"
        ],
        "environmentVariables": [
            {
                "path": "properties.administratorLoginPassword",
                "suffix": "ADMINISTRATOR_LOGIN_PASSWORD"
            }
        ]
    },
    {
        "type": "ServerAdministrator",
        "group": "DBforPostgreSQL",
        "apiVersion": "2017-12-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "server": {
                "type": "P2sVpnServerConfiguration",
                "group": "Network",
                "name": "serverName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/administrators/activeDirectory",
                "operationId": "ServerAdministrators_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/administrators/activeDirectory",
                "operationId": "ServerAdministrators_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/administrators/activeDirectory",
                "operationId": "ServerAdministrators_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/administrators",
                "operationId": "ServerAdministrators_List"
            }
        },
        "omitProperties": [
            "properties.sid",
            "properties.tenantId"
        ],
        "pickProperties": [
            "properties.administratorType",
            "properties.login"
        ],
        "pickPropertiesCreate": [
            "properties.administratorType",
            "properties.login"
        ]
    },
    {
        "type": "ServerKey",
        "group": "DBforPostgreSQL",
        "apiVersion": "2020-01-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "server": {
                "type": "P2sVpnServerConfiguration",
                "group": "Network",
                "name": "serverName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/keys/{keyName}",
                "operationId": "ServerKeys_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/keys/{keyName}",
                "operationId": "ServerKeys_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/keys/{keyName}",
                "operationId": "ServerKeys_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/keys",
                "operationId": "ServerKeys_List"
            }
        },
        "omitProperties": [
            "kind",
            "properties.creationDate"
        ],
        "pickProperties": [
            "properties.serverKeyType",
            "properties.uri"
        ],
        "pickPropertiesCreate": [
            "properties.serverKeyType",
            "properties.uri"
        ]
    },
    {
        "type": "ServerSecurityAlertPolicy",
        "group": "DBforPostgreSQL",
        "apiVersion": "2017-12-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "server": {
                "type": "P2sVpnServerConfiguration",
                "group": "Network",
                "name": "serverName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}",
                "operationId": "ServerSecurityAlertPolicies_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}",
                "operationId": "ServerSecurityAlertPolicies_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/securityAlertPolicies",
                "operationId": "ServerSecurityAlertPolicies_ListByServer"
            }
        },
        "omitProperties": [
            "properties.state"
        ],
        "pickProperties": [
            "properties.disabledAlerts",
            "properties.emailAddresses",
            "properties.emailAccountAdmins",
            "properties.storageEndpoint",
            "properties.storageAccountAccessKey",
            "properties.retentionDays"
        ],
        "pickPropertiesCreate": [
            "properties.disabledAlerts",
            "properties.emailAddresses",
            "properties.emailAccountAdmins",
            "properties.storageEndpoint",
            "properties.storageAccountAccessKey",
            "properties.retentionDays"
        ]
    },
    {
        "type": "VirtualNetworkRule",
        "group": "DBforPostgreSQL",
        "apiVersion": "2017-12-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "server": {
                "type": "P2sVpnServerConfiguration",
                "group": "Network",
                "name": "serverName"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}",
                "operationId": "VirtualNetworkRules_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}",
                "operationId": "VirtualNetworkRules_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}",
                "operationId": "VirtualNetworkRules_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/virtualNetworkRules",
                "operationId": "VirtualNetworkRules_ListByServer"
            }
        },
        "omitProperties": [
            "properties.virtualNetworkSubnetId",
            "properties.state"
        ],
        "pickProperties": [
            "properties.ignoreMissingVnetServiceEndpoint"
        ],
        "pickPropertiesCreate": [
            "properties.ignoreMissingVnetServiceEndpoint"
        ]
    },
    {
        "type": "BlobContainer",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
                "operationId": "BlobContainers_Create"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
                "operationId": "BlobContainers_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
                "operationId": "BlobContainers_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
                "operationId": "BlobContainers_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers",
                "operationId": "BlobContainers_List"
            }
        },
        "omitProperties": [
            "properties.version",
            "properties.deleted",
            "properties.deletedTime",
            "properties.remainingRetentionDays",
            "properties.lastModifiedTime",
            "properties.leaseStatus",
            "properties.leaseState",
            "properties.leaseDuration",
            "properties.immutabilityPolicy",
            "properties.legalHold",
            "properties.hasLegalHold",
            "properties.hasImmutabilityPolicy",
            "properties.immutableStorageWithVersioning.timeStamp",
            "properties.immutableStorageWithVersioning.migrationState"
        ],
        "pickProperties": [
            "properties.defaultEncryptionScope",
            "properties.denyEncryptionScopeOverride",
            "properties.publicAccess",
            "properties.metadata",
            "properties.immutableStorageWithVersioning.enabled",
            "properties.enableNfsV3RootSquash",
            "properties.enableNfsV3AllSquash"
        ],
        "pickPropertiesCreate": [
            "properties.defaultEncryptionScope",
            "properties.denyEncryptionScopeOverride",
            "properties.publicAccess",
            "properties.metadata",
            "properties.immutableStorageWithVersioning.enabled",
            "properties.enableNfsV3RootSquash",
            "properties.enableNfsV3AllSquash"
        ]
    },
    {
        "type": "BlobService",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}",
                "operationId": "BlobServices_SetServiceProperties"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}",
                "operationId": "BlobServices_GetServiceProperties"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices",
                "operationId": "BlobServices_List"
            }
        },
        "omitProperties": [
            "properties.restorePolicy.lastEnabledTime",
            "properties.restorePolicy.minRestoreTime",
            "sku"
        ],
        "pickProperties": [
            "properties.cors.corsRules",
            "properties.defaultServiceVersion",
            "properties.deleteRetentionPolicy.enabled",
            "properties.deleteRetentionPolicy.days",
            "properties.isVersioningEnabled",
            "properties.automaticSnapshotPolicyEnabled",
            "properties.changeFeed.enabled",
            "properties.changeFeed.retentionInDays",
            "properties.restorePolicy.enabled",
            "properties.restorePolicy.days",
            "properties.containerDeleteRetentionPolicy.enabled",
            "properties.containerDeleteRetentionPolicy.days",
            "properties.lastAccessTimeTrackingPolicy.enable",
            "properties.lastAccessTimeTrackingPolicy.name",
            "properties.lastAccessTimeTrackingPolicy.trackingGranularityInDays",
            "properties.lastAccessTimeTrackingPolicy.blobType"
        ],
        "pickPropertiesCreate": [
            "properties.cors.corsRules",
            "properties.defaultServiceVersion",
            "properties.deleteRetentionPolicy.enabled",
            "properties.deleteRetentionPolicy.days",
            "properties.isVersioningEnabled",
            "properties.automaticSnapshotPolicyEnabled",
            "properties.changeFeed.enabled",
            "properties.changeFeed.retentionInDays",
            "properties.restorePolicy.enabled",
            "properties.restorePolicy.days",
            "properties.containerDeleteRetentionPolicy.enabled",
            "properties.containerDeleteRetentionPolicy.days",
            "properties.lastAccessTimeTrackingPolicy.enable",
            "properties.lastAccessTimeTrackingPolicy.name",
            "properties.lastAccessTimeTrackingPolicy.trackingGranularityInDays",
            "properties.lastAccessTimeTrackingPolicy.blobType"
        ]
    },
    {
        "type": "EncryptionScope",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
                "operationId": "EncryptionScopes_Put"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
                "operationId": "EncryptionScopes_Patch"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
                "operationId": "EncryptionScopes_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes",
                "operationId": "EncryptionScopes_List"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.creationTime",
            "properties.lastModifiedTime",
            "properties.keyVaultProperties.currentVersionedKeyIdentifier",
            "properties.keyVaultProperties.lastKeyRotationTimestamp"
        ],
        "pickProperties": [
            "properties.source",
            "properties.keyVaultProperties.keyUri",
            "properties.requireInfrastructureEncryption"
        ],
        "pickPropertiesCreate": [
            "properties.source",
            "properties.keyVaultProperties.keyUri",
            "properties.requireInfrastructureEncryption"
        ]
    },
    {
        "type": "FileService",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}",
                "operationId": "FileServices_SetServiceProperties"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}",
                "operationId": "FileServices_GetServiceProperties"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices",
                "operationId": "FileServices_List"
            }
        },
        "omitProperties": [
            "sku"
        ],
        "pickProperties": [
            "properties.cors.corsRules",
            "properties.shareDeleteRetentionPolicy.enabled",
            "properties.shareDeleteRetentionPolicy.days",
            "properties.protocolSettings.smb.multichannel.enabled",
            "properties.protocolSettings.smb.versions",
            "properties.protocolSettings.smb.authenticationMethods",
            "properties.protocolSettings.smb.kerberosTicketEncryption",
            "properties.protocolSettings.smb.channelEncryption"
        ],
        "pickPropertiesCreate": [
            "properties.cors.corsRules",
            "properties.shareDeleteRetentionPolicy.enabled",
            "properties.shareDeleteRetentionPolicy.days",
            "properties.protocolSettings.smb.multichannel.enabled",
            "properties.protocolSettings.smb.versions",
            "properties.protocolSettings.smb.authenticationMethods",
            "properties.protocolSettings.smb.kerberosTicketEncryption",
            "properties.protocolSettings.smb.channelEncryption"
        ]
    },
    {
        "type": "FileShare",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
                "operationId": "FileShares_Create"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
                "operationId": "FileShares_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
                "operationId": "FileShares_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
                "operationId": "FileShares_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares",
                "operationId": "FileShares_List"
            }
        },
        "omitProperties": [
            "properties.lastModifiedTime",
            "properties.enabledProtocols",
            "properties.version",
            "properties.deleted",
            "properties.deletedTime",
            "properties.remainingRetentionDays",
            "properties.accessTierChangeTime",
            "properties.accessTierStatus",
            "properties.shareUsageBytes",
            "properties.leaseStatus",
            "properties.leaseState",
            "properties.leaseDuration",
            "properties.snapshotTime"
        ],
        "pickProperties": [
            "properties.metadata",
            "properties.shareQuota",
            "properties.rootSquash",
            "properties.accessTier",
            "properties.signedIdentifiers"
        ],
        "pickPropertiesCreate": [
            "properties.metadata",
            "properties.shareQuota",
            "properties.rootSquash",
            "properties.accessTier",
            "properties.signedIdentifiers"
        ]
    },
    {
        "type": "ObjectReplicationPolicy",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}",
                "operationId": "ObjectReplicationPolicies_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}",
                "operationId": "ObjectReplicationPolicies_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}",
                "operationId": "ObjectReplicationPolicies_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies",
                "operationId": "ObjectReplicationPolicies_List"
            }
        },
        "omitProperties": [
            "properties.policyId",
            "properties.enabledTime"
        ],
        "pickProperties": [
            "properties.sourceAccount",
            "properties.destinationAccount",
            "properties.rules"
        ],
        "pickPropertiesCreate": [
            "properties.sourceAccount",
            "properties.destinationAccount",
            "properties.rules"
        ]
    },
    {
        "type": "PrivateEndpointConnection",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName"
            },
            "privateEndpoint": {
                "type": "PrivateEndpoint",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Put"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections",
                "operationId": "PrivateEndpointConnections_List"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "Queue",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}",
                "operationId": "Queue_Create"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}",
                "operationId": "Queue_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}",
                "operationId": "Queue_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}",
                "operationId": "Queue_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues",
                "operationId": "Queue_List"
            }
        },
        "omitProperties": [
            "properties.approximateMessageCount"
        ],
        "pickProperties": [
            "properties.metadata"
        ],
        "pickPropertiesCreate": [
            "properties.metadata"
        ]
    },
    {
        "type": "QueueService",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}",
                "operationId": "QueueServices_SetServiceProperties"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}",
                "operationId": "QueueServices_GetServiceProperties"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices",
                "operationId": "QueueServices_List"
            }
        },
        "pickProperties": [
            "properties.cors.corsRules"
        ],
        "pickPropertiesCreate": [
            "properties.cors.corsRules"
        ]
    },
    {
        "type": "StorageAccount",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
                "operationId": "StorageAccounts_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
                "operationId": "StorageAccounts_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
                "operationId": "StorageAccounts_GetProperties"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
                "operationId": "StorageAccounts_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts",
                "operationId": "StorageAccounts_List"
            }
        },
        "omitProperties": [
            "sku",
            "kind",
            "identity.principalId",
            "identity.tenantId",
            "properties.provisioningState",
            "properties.primaryEndpoints",
            "properties.primaryLocation",
            "properties.statusOfPrimary",
            "properties.lastGeoFailoverTime",
            "properties.secondaryLocation",
            "properties.statusOfSecondary",
            "properties.creationTime",
            "properties.customDomain",
            "properties.sasPolicy",
            "properties.keyPolicy",
            "properties.keyCreationTime",
            "properties.secondaryEndpoints",
            "properties.encryption",
            "properties.accessTier",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.domainGuid",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.domainSid",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.azureStorageSid",
            "properties.networkAcls",
            "properties.geoReplicationStats",
            "properties.failoverInProgress",
            "properties.largeFileSharesState",
            "properties.privateEndpointConnections",
            "properties.blobRestoreStatus",
            "properties.immutableStorageWithVersioning.immutabilityPolicy.state"
        ],
        "pickProperties": [
            "identity.type",
            "identity.userAssignedIdentities",
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.azureFilesIdentityBasedAuthentication.directoryServiceOptions",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.domainName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.netBiosDomainName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.forestName",
            "properties.azureFilesIdentityBasedAuthentication.defaultSharePermission",
            "properties.supportsHttpsTrafficOnly",
            "properties.isHnsEnabled",
            "properties.routingPreference.routingChoice",
            "properties.routingPreference.publishMicrosoftEndpoints",
            "properties.routingPreference.publishInternetEndpoints",
            "properties.allowBlobPublicAccess",
            "properties.minimumTlsVersion",
            "properties.allowSharedKeyAccess",
            "properties.isNfsV3Enabled",
            "properties.allowCrossTenantReplication",
            "properties.defaultToOAuthAuthentication",
            "properties.publicNetworkAccess",
            "properties.immutableStorageWithVersioning.enabled",
            "properties.immutableStorageWithVersioning.immutabilityPolicy.immutabilityPeriodSinceCreationInDays",
            "properties.immutableStorageWithVersioning.immutabilityPolicy.allowProtectedAppendWrites"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "kind",
            "location",
            "extendedLocation.name",
            "extendedLocation.type",
            "tags",
            "identity.type",
            "identity.userAssignedIdentities",
            "properties.publicNetworkAccess",
            "properties.sasPolicy.sasExpirationPeriod",
            "properties.sasPolicy.expirationAction",
            "properties.keyPolicy.keyExpirationPeriodInDays",
            "properties.customDomain.name",
            "properties.customDomain.useSubDomainName",
            "properties.encryption.services.blob.enabled",
            "properties.encryption.services.file.enabled",
            "properties.encryption.services.table.enabled",
            "properties.encryption.services.queue.enabled",
            "properties.encryption.keySource",
            "properties.encryption.requireInfrastructureEncryption",
            "properties.encryption.keyvaultproperties.keyname",
            "properties.encryption.keyvaultproperties.keyversion",
            "properties.encryption.keyvaultproperties.keyvaulturi",
            "properties.encryption.identity.userAssignedIdentity",
            "properties.networkAcls.bypass",
            "properties.networkAcls.resourceAccessRules",
            "properties.networkAcls.virtualNetworkRules",
            "properties.networkAcls.ipRules",
            "properties.networkAcls.defaultAction",
            "properties.accessTier",
            "properties.azureFilesIdentityBasedAuthentication.directoryServiceOptions",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.domainName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.netBiosDomainName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.forestName",
            "properties.azureFilesIdentityBasedAuthentication.defaultSharePermission",
            "properties.supportsHttpsTrafficOnly",
            "properties.isHnsEnabled",
            "properties.routingPreference.routingChoice",
            "properties.routingPreference.publishMicrosoftEndpoints",
            "properties.routingPreference.publishInternetEndpoints",
            "properties.allowBlobPublicAccess",
            "properties.minimumTlsVersion",
            "properties.allowSharedKeyAccess",
            "properties.isNfsV3Enabled",
            "properties.allowCrossTenantReplication",
            "properties.defaultToOAuthAuthentication",
            "properties.immutableStorageWithVersioning.enabled",
            "properties.immutableStorageWithVersioning.immutabilityPolicy.immutabilityPeriodSinceCreationInDays",
            "properties.immutableStorageWithVersioning.immutabilityPolicy.allowProtectedAppendWrites"
        ],
        "propertiesDefault": {
            "properties": {
                "sasPolicy": {
                    "expirationAction": "Log"
                },
                "encryption": {
                    "keySource": "Microsoft.Storage"
                },
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow"
                }
            }
        }
    },
    {
        "type": "Table",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}",
                "operationId": "Table_Create"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}",
                "operationId": "Table_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}",
                "operationId": "Table_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}",
                "operationId": "Table_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables",
                "operationId": "Table_List"
            }
        },
        "omitProperties": [
            "properties.tableName"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "TableService",
        "group": "Storage",
        "apiVersion": "2021-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}",
                "operationId": "TableServices_SetServiceProperties"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}",
                "operationId": "TableServices_GetServiceProperties"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices",
                "operationId": "TableServices_List"
            }
        },
        "pickProperties": [
            "properties.cors.corsRules"
        ],
        "pickPropertiesCreate": [
            "properties.cors.corsRules"
        ]
    },
    {
        "type": "AppServiceCertificateOrder",
        "group": "CertificateRegistration",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}",
                "operationId": "AppServiceCertificateOrders_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}",
                "operationId": "AppServiceCertificateOrders_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}",
                "operationId": "AppServiceCertificateOrders_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}",
                "operationId": "AppServiceCertificateOrders_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/certificateOrders",
                "operationId": "AppServiceCertificateOrders_List"
            }
        },
        "omitProperties": [
            "properties.distinguishedName",
            "properties.domainVerificationToken",
            "properties.validityInYears",
            "properties.keySize",
            "properties.productType",
            "properties.provisioningState",
            "properties.status",
            "properties.signedCertificate",
            "properties.csr",
            "properties.intermediate",
            "properties.root",
            "properties.serialNumber",
            "properties.lastCertificateIssuanceTime",
            "properties.expirationTime",
            "properties.isPrivateKeyExternal",
            "properties.appServiceCertificateNotRenewableReasons",
            "properties.nextAutoRenewalTimeStamp",
            "properties.contact"
        ],
        "pickProperties": [
            "properties.certificates",
            "properties.autoRenew"
        ],
        "pickPropertiesCreate": [
            "properties.certificates",
            "properties.autoRenew"
        ],
        "propertiesDefault": {
            "properties": {
                "validityInYears": 1,
                "keySize": 2048,
                "autoRenew": true
            }
        }
    },
    {
        "type": "AppServiceCertificateOrderCertificate",
        "group": "CertificateRegistration",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "certificateOrder": {
                "type": "AppServiceCertificateOrder",
                "group": "CertificateRegistration",
                "name": "certificateOrderName"
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "AppServiceCertificateOrders_GetCertificate"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "AppServiceCertificateOrders_CreateOrUpdateCertificate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "AppServiceCertificateOrders_DeleteCertificate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "AppServiceCertificateOrders_UpdateCertificate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates",
                "operationId": "AppServiceCertificateOrders_ListCertificates"
            }
        },
        "omitProperties": [
            "properties.keyVaultId",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.keyVaultSecretName"
        ],
        "pickPropertiesCreate": [
            "properties.keyVaultSecretName"
        ]
    },
    {
        "type": "Domain",
        "group": "DomainRegistration",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}",
                "operationId": "Domains_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}",
                "operationId": "Domains_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}",
                "operationId": "Domains_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}",
                "operationId": "Domains_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/domains",
                "operationId": "Domains_List"
            }
        },
        "omitProperties": [
            "properties.contactAdmin",
            "properties.contactBilling",
            "properties.contactRegistrant",
            "properties.contactTech",
            "properties.registrationStatus",
            "properties.provisioningState",
            "properties.nameServers",
            "properties.createdTime",
            "properties.expirationTime",
            "properties.lastRenewedTime",
            "properties.readyForDnsRecordManagement",
            "properties.managedHostNames",
            "properties.consent",
            "properties.domainNotRenewableReasons",
            "properties.dnsZoneId",
            "properties.authCode"
        ],
        "pickProperties": [
            "properties.privacy",
            "properties.autoRenew",
            "properties.dnsType",
            "properties.targetDnsType"
        ],
        "pickPropertiesCreate": [
            "properties.privacy",
            "properties.autoRenew",
            "properties.dnsType",
            "properties.targetDnsType"
        ],
        "propertiesDefault": {
            "properties": {
                "autoRenew": true
            }
        }
    },
    {
        "type": "DomainOwnershipIdentifier",
        "group": "DomainRegistration",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "domain": {
                "type": "Domain",
                "group": "DomainRegistration",
                "name": "domainName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}",
                "operationId": "Domains_GetOwnershipIdentifier"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}",
                "operationId": "Domains_CreateOrUpdateOwnershipIdentifier"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}",
                "operationId": "Domains_DeleteOwnershipIdentifier"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}",
                "operationId": "Domains_UpdateOwnershipIdentifier"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers",
                "operationId": "Domains_ListOwnershipIdentifiers"
            }
        },
        "omitProperties": [
            "properties.ownershipId"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "AppServiceEnvironment",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "AppServiceEnvironments_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "AppServiceEnvironments_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "AppServiceEnvironments_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "AppServiceEnvironments_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/hostingEnvironments",
                "operationId": "AppServiceEnvironments_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.status",
            "properties.virtualNetwork.id",
            "properties.virtualNetwork.name",
            "properties.virtualNetwork.type",
            "properties.multiRoleCount",
            "properties.maximumNumberOfMachines",
            "properties.suspended",
            "properties.hasLinuxWorkers"
        ],
        "pickProperties": [
            "properties.virtualNetwork.subnet",
            "properties.internalLoadBalancingMode",
            "properties.multiSize",
            "properties.ipsslAddressCount",
            "properties.dnsSuffix",
            "properties.frontEndScaleFactor",
            "properties.clusterSettings",
            "properties.userWhitelistedIpRanges",
            "properties.dedicatedHostCount",
            "properties.zoneRedundant"
        ],
        "pickPropertiesCreate": [
            "properties.virtualNetwork.subnet",
            "properties.internalLoadBalancingMode",
            "properties.multiSize",
            "properties.ipsslAddressCount",
            "properties.dnsSuffix",
            "properties.frontEndScaleFactor",
            "properties.clusterSettings",
            "properties.userWhitelistedIpRanges",
            "properties.dedicatedHostCount",
            "properties.zoneRedundant"
        ]
    },
    {
        "type": "AppServiceEnvironmentAseV3NetworkingConfiguration",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/configurations/networking",
                "operationId": "AppServiceEnvironments_GetAseV3NetworkingConfiguration"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/configurations/networking",
                "operationId": "AppServiceEnvironments_UpdateAseNetworkingConfiguration"
            }
        },
        "omitProperties": [
            "properties.windowsOutboundIpAddresses",
            "properties.linuxOutboundIpAddresses",
            "properties.externalInboundIpAddresses",
            "properties.internalInboundIpAddresses"
        ],
        "pickProperties": [
            "properties.allowNewPrivateEndpointConnections"
        ],
        "pickPropertiesCreate": [
            "properties.allowNewPrivateEndpointConnections"
        ]
    },
    {
        "type": "AppServiceEnvironmentMultiRolePool",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
                "operationId": "AppServiceEnvironments_GetMultiRolePool"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
                "operationId": "AppServiceEnvironments_CreateOrUpdateMultiRolePool"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
                "operationId": "AppServiceEnvironments_UpdateMultiRolePool"
            }
        },
        "omitProperties": [
            "properties.workerSizeId",
            "properties.instanceNames"
        ],
        "pickProperties": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.locations",
            "sku.capabilities"
        ],
        "pickPropertiesCreate": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.locations",
            "sku.capabilities"
        ]
    },
    {
        "type": "AppServiceEnvironmentPrivateEndpointConnection",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "AppServiceEnvironments_GetPrivateEndpointConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "AppServiceEnvironments_ApproveOrRejectPrivateEndpointConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "AppServiceEnvironments_DeletePrivateEndpointConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections",
                "operationId": "AppServiceEnvironments_GetPrivateEndpointConnectionList"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState"
        ],
        "pickProperties": [
            "properties.ipAddresses"
        ],
        "pickPropertiesCreate": []
    },
    {
        "type": "AppServiceEnvironmentWorkerPool",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
                "operationId": "AppServiceEnvironments_GetWorkerPool"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
                "operationId": "AppServiceEnvironments_CreateOrUpdateWorkerPool"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
                "operationId": "AppServiceEnvironments_UpdateWorkerPool"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools",
                "operationId": "AppServiceEnvironments_ListWorkerPools"
            }
        },
        "omitProperties": [
            "properties.workerSizeId",
            "properties.instanceNames"
        ],
        "pickProperties": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.locations",
            "sku.capabilities"
        ],
        "pickPropertiesCreate": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.locations",
            "sku.capabilities"
        ]
    },
    {
        "type": "AppServicePlan",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true
            },
            "kubeEnvironment": {
                "type": "KubeEnvironment",
                "group": "Web",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "AppServicePlans_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "AppServicePlans_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "AppServicePlans_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "AppServicePlans_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/serverfarms",
                "operationId": "AppServicePlans_List"
            }
        },
        "omitProperties": [
            "properties.status",
            "properties.subscription",
            "properties.hostingEnvironmentProfile",
            "properties.maximumNumberOfWorkers",
            "properties.geoRegion",
            "properties.numberOfSites",
            "properties.resourceGroup",
            "properties.reserved",
            "properties.isXenon",
            "properties.hyperV",
            "properties.targetWorkerSizeId",
            "properties.provisioningState",
            "properties.kubeEnvironmentProfile.id",
            "properties.kubeEnvironmentProfile.name",
            "properties.kubeEnvironmentProfile.type",
            "extendedLocation.type"
        ],
        "pickProperties": [
            "properties.workerTierName",
            "properties.perSiteScaling",
            "properties.elasticScaleEnabled",
            "properties.maximumElasticWorkerCount",
            "properties.isSpot",
            "properties.spotExpirationTime",
            "properties.freeOfferExpirationTime",
            "properties.targetWorkerCount",
            "properties.zoneRedundant",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.locations",
            "sku.capabilities",
            "extendedLocation.name"
        ],
        "pickPropertiesCreate": [
            "properties.workerTierName",
            "properties.perSiteScaling",
            "properties.elasticScaleEnabled",
            "properties.maximumElasticWorkerCount",
            "properties.isSpot",
            "properties.spotExpirationTime",
            "properties.freeOfferExpirationTime",
            "properties.targetWorkerCount",
            "properties.zoneRedundant",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.locations",
            "sku.capabilities",
            "extendedLocation.name"
        ],
        "propertiesDefault": {
            "properties": {
                "perSiteScaling": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "zoneRedundant": false
            }
        }
    },
    {
        "type": "AppServicePlanRouteForVnet",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "AppServicePlan",
                "group": "Web",
                "name": "name"
            },
            "vnet": {
                "type": "HubVirtualNetworkConnection",
                "group": "Network",
                "name": "vnetName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}",
                "operationId": "AppServicePlans_GetRouteForVnet"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}",
                "operationId": "AppServicePlans_CreateOrUpdateVnetRoute"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}",
                "operationId": "AppServicePlans_DeleteVnetRoute"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}",
                "operationId": "AppServicePlans_UpdateVnetRoute"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes",
                "operationId": "AppServicePlans_ListRoutesForVnet"
            }
        },
        "pickProperties": [],
        "pickPropertiesCreate": [
            "properties.startAddress",
            "properties.endAddress",
            "properties.routeType"
        ]
    },
    {
        "type": "Certificate",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            },
            "serverFarm": {
                "type": "ServerFarm",
                "group": "Web",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}",
                "operationId": "Certificates_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}",
                "operationId": "Certificates_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}",
                "operationId": "Certificates_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}",
                "operationId": "Certificates_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/certificates",
                "operationId": "Certificates_List"
            }
        },
        "omitProperties": [
            "properties.password",
            "properties.friendlyName",
            "properties.subjectName",
            "properties.siteName",
            "properties.selfLink",
            "properties.issuer",
            "properties.issueDate",
            "properties.expirationDate",
            "properties.thumbprint",
            "properties.valid",
            "properties.cerBlob",
            "properties.publicKeyHash",
            "properties.hostingEnvironmentProfile",
            "properties.keyVaultId",
            "properties.keyVaultSecretStatus",
            "properties.serverFarmId"
        ],
        "pickProperties": [
            "properties.hostNames",
            "properties.pfxBlob",
            "properties.keyVaultSecretName",
            "properties.canonicalName",
            "properties.domainValidationMethod"
        ],
        "pickPropertiesCreate": [
            "properties.hostNames",
            "properties.pfxBlob",
            "properties.keyVaultSecretName",
            "properties.canonicalName",
            "properties.domainValidationMethod"
        ]
    },
    {
        "type": "CertificateOrder",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}",
                "operationId": "CertificateOrders_GetCertificateOrder"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}",
                "operationId": "CertificateOrders_CreateOrUpdateCertificateOrder"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}",
                "operationId": "CertificateOrders_DeleteCertificateOrder"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}",
                "operationId": "CertificateOrders_UpdateCertificateOrder"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/certificateOrders",
                "operationId": "GlobalCertificateOrder_GetAllCertificateOrders"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.status"
        ],
        "pickProperties": [
            "properties.certificates",
            "properties.distinguishedName",
            "properties.domainVerificationToken",
            "properties.validityInYears",
            "properties.keySize",
            "properties.productType",
            "properties.autoRenew",
            "properties.signedCertificate.properties.version",
            "properties.signedCertificate.properties.serialNumber",
            "properties.signedCertificate.properties.thumbprint",
            "properties.signedCertificate.properties.subject",
            "properties.signedCertificate.properties.notBefore",
            "properties.signedCertificate.properties.notAfter",
            "properties.signedCertificate.properties.signatureAlgorithm",
            "properties.signedCertificate.properties.issuer",
            "properties.signedCertificate.properties.rawData",
            "properties.csr",
            "properties.intermediate.properties.version",
            "properties.intermediate.properties.serialNumber",
            "properties.intermediate.properties.thumbprint",
            "properties.intermediate.properties.subject",
            "properties.intermediate.properties.notBefore",
            "properties.intermediate.properties.notAfter",
            "properties.intermediate.properties.signatureAlgorithm",
            "properties.intermediate.properties.issuer",
            "properties.intermediate.properties.rawData",
            "properties.root.properties.version",
            "properties.root.properties.serialNumber",
            "properties.root.properties.thumbprint",
            "properties.root.properties.subject",
            "properties.root.properties.notBefore",
            "properties.root.properties.notAfter",
            "properties.root.properties.signatureAlgorithm",
            "properties.root.properties.issuer",
            "properties.root.properties.rawData",
            "properties.serialNumber",
            "properties.lastCertificateIssuanceTime",
            "properties.expirationTime"
        ],
        "pickPropertiesCreate": [
            "properties.certificates",
            "properties.distinguishedName",
            "properties.domainVerificationToken",
            "properties.validityInYears",
            "properties.keySize",
            "properties.productType",
            "properties.autoRenew",
            "properties.signedCertificate.properties.version",
            "properties.signedCertificate.properties.serialNumber",
            "properties.signedCertificate.properties.thumbprint",
            "properties.signedCertificate.properties.subject",
            "properties.signedCertificate.properties.notBefore",
            "properties.signedCertificate.properties.notAfter",
            "properties.signedCertificate.properties.signatureAlgorithm",
            "properties.signedCertificate.properties.issuer",
            "properties.signedCertificate.properties.rawData",
            "properties.csr",
            "properties.intermediate.properties.version",
            "properties.intermediate.properties.serialNumber",
            "properties.intermediate.properties.thumbprint",
            "properties.intermediate.properties.subject",
            "properties.intermediate.properties.notBefore",
            "properties.intermediate.properties.notAfter",
            "properties.intermediate.properties.signatureAlgorithm",
            "properties.intermediate.properties.issuer",
            "properties.intermediate.properties.rawData",
            "properties.root.properties.version",
            "properties.root.properties.serialNumber",
            "properties.root.properties.thumbprint",
            "properties.root.properties.subject",
            "properties.root.properties.notBefore",
            "properties.root.properties.notAfter",
            "properties.root.properties.signatureAlgorithm",
            "properties.root.properties.issuer",
            "properties.root.properties.rawData",
            "properties.serialNumber",
            "properties.lastCertificateIssuanceTime",
            "properties.expirationTime"
        ]
    },
    {
        "type": "CertificateOrderCertificate",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "certificateOrder": {
                "type": "AppServiceCertificateOrder",
                "group": "CertificateRegistration",
                "name": "certificateOrderName"
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "CertificateOrders_GetCertificate"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "CertificateOrders_CreateOrUpdateCertificate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "CertificateOrders_DeleteCertificate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "CertificateOrders_UpdateCertificate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates",
                "operationId": "CertificateOrders_GetCertificates"
            }
        },
        "omitProperties": [
            "properties.keyVaultId",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.keyVaultSecretName"
        ],
        "pickPropertiesCreate": [
            "properties.keyVaultSecretName"
        ]
    },
    {
        "type": "Connection",
        "group": "Web",
        "apiVersion": "2016-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}",
                "operationId": "Connections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}",
                "operationId": "Connections_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}",
                "operationId": "Connections_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}",
                "operationId": "Connections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections",
                "operationId": "Connections_List"
            }
        },
        "omitProperties": [
            "properties.statuses"
        ],
        "pickProperties": [
            "properties.displayName",
            "properties.parameterValues",
            "properties.customParameterValues",
            "properties.nonSecretParameterValues",
            "properties.createdTime",
            "properties.changedTime",
            "properties.api.swagger",
            "properties.api.brandColor",
            "properties.api.description",
            "properties.api.displayName",
            "properties.api.iconUri",
            "properties.api.name",
            "properties.testLinks"
        ],
        "pickPropertiesCreate": [
            "properties.displayName",
            "properties.parameterValues",
            "properties.customParameterValues",
            "properties.nonSecretParameterValues",
            "properties.createdTime",
            "properties.changedTime",
            "properties.api.swagger",
            "properties.api.brandColor",
            "properties.api.description",
            "properties.api.displayName",
            "properties.api.iconUri",
            "properties.api.name",
            "properties.testLinks"
        ]
    },
    {
        "type": "ConnectionGateway",
        "group": "Web",
        "apiVersion": "2016-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connectionGateways/{connectionGatewayName}",
                "operationId": "ConnectionGateways_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connectionGateways/{connectionGatewayName}",
                "operationId": "ConnectionGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connectionGateways/{connectionGatewayName}",
                "operationId": "ConnectionGateways_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connectionGateways/{connectionGatewayName}",
                "operationId": "ConnectionGateways_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/connectionGateways",
                "operationId": "ConnectionGateways_List"
            }
        },
        "omitProperties": [
            "properties.status"
        ],
        "pickProperties": [
            "properties.connectionGatewayInstallation.location",
            "properties.connectionGatewayInstallation.name",
            "properties.contactInformation",
            "properties.displayName",
            "properties.description",
            "properties.machineName",
            "properties.backendUri"
        ],
        "pickPropertiesCreate": [
            "properties.connectionGatewayInstallation.location",
            "properties.connectionGatewayInstallation.name",
            "properties.contactInformation",
            "properties.displayName",
            "properties.description",
            "properties.machineName",
            "properties.backendUri"
        ]
    },
    {
        "type": "CustomApi",
        "group": "Web",
        "apiVersion": "2016-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}",
                "operationId": "CustomApis_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}",
                "operationId": "CustomApis_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}",
                "operationId": "CustomApis_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}",
                "operationId": "CustomApis_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/customApis",
                "operationId": "CustomApis_List"
            }
        },
        "pickProperties": [
            "properties.connectionParameters",
            "properties.runtimeUrls",
            "properties.capabilities",
            "properties.swagger",
            "properties.brandColor",
            "properties.description",
            "properties.displayName",
            "properties.iconUri",
            "properties.backendService.serviceUrl",
            "properties.apiDefinitions.originalSwaggerUrl",
            "properties.apiDefinitions.modifiedSwaggerUrl",
            "properties.apiType",
            "properties.wsdlDefinition.url",
            "properties.wsdlDefinition.content",
            "properties.wsdlDefinition.service.qualifiedName",
            "properties.wsdlDefinition.service.endpointQualifiedNames",
            "properties.wsdlDefinition.importMethod"
        ],
        "pickPropertiesCreate": [
            "properties.connectionParameters",
            "properties.runtimeUrls",
            "properties.capabilities",
            "properties.swagger",
            "properties.brandColor",
            "properties.description",
            "properties.displayName",
            "properties.iconUri",
            "properties.backendService.serviceUrl",
            "properties.apiDefinitions.originalSwaggerUrl",
            "properties.apiDefinitions.modifiedSwaggerUrl",
            "properties.apiType",
            "properties.wsdlDefinition.url",
            "properties.wsdlDefinition.content",
            "properties.wsdlDefinition.service.qualifiedName",
            "properties.wsdlDefinition.service.endpointQualifiedNames",
            "properties.wsdlDefinition.importMethod"
        ]
    },
    {
        "type": "HostingEnvironment",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "createOnly": true
            },
            "globalSubscriptionPublishingCredentials": {
                "type": "GlobalSubscriptionPublishingCredentials",
                "group": "Web",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "HostingEnvironments_GetHostingEnvironment"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "HostingEnvironments_CreateOrUpdateHostingEnvironment"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "HostingEnvironments_DeleteHostingEnvironment"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/hostingEnvironments",
                "operationId": "Global_GetAllHostingEnvironments"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.status",
            "properties.virtualNetwork.id",
            "properties.subscriptionId",
            "properties.environmentStatus",
            "properties.apiManagementAccountId"
        ],
        "pickProperties": [
            "properties.name",
            "properties.location",
            "properties.vnetName",
            "properties.vnetResourceGroupName",
            "properties.vnetSubnetName",
            "properties.virtualNetwork.name",
            "properties.virtualNetwork.type",
            "properties.virtualNetwork.subnet",
            "properties.internalLoadBalancingMode",
            "properties.multiSize",
            "properties.multiRoleCount",
            "properties.workerPools",
            "properties.ipsslAddressCount",
            "properties.databaseEdition",
            "properties.databaseServiceObjective",
            "properties.upgradeDomains",
            "properties.dnsSuffix",
            "properties.lastAction",
            "properties.lastActionResult",
            "properties.allowedMultiSizes",
            "properties.allowedWorkerSizes",
            "properties.maximumNumberOfMachines",
            "properties.vipMappings",
            "properties.environmentCapacities",
            "properties.networkAccessControlList",
            "properties.environmentIsHealthy",
            "properties.resourceGroup",
            "properties.suspended",
            "properties.clusterSettings"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.location",
            "properties.vnetName",
            "properties.vnetResourceGroupName",
            "properties.vnetSubnetName",
            "properties.virtualNetwork.name",
            "properties.virtualNetwork.type",
            "properties.virtualNetwork.subnet",
            "properties.internalLoadBalancingMode",
            "properties.multiSize",
            "properties.multiRoleCount",
            "properties.workerPools",
            "properties.ipsslAddressCount",
            "properties.databaseEdition",
            "properties.databaseServiceObjective",
            "properties.upgradeDomains",
            "properties.dnsSuffix",
            "properties.lastAction",
            "properties.lastActionResult",
            "properties.allowedMultiSizes",
            "properties.allowedWorkerSizes",
            "properties.maximumNumberOfMachines",
            "properties.vipMappings",
            "properties.environmentCapacities",
            "properties.networkAccessControlList",
            "properties.environmentIsHealthy",
            "properties.resourceGroup",
            "properties.suspended",
            "properties.clusterSettings"
        ]
    },
    {
        "type": "HostingEnvironmentMultiRolePool",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
                "operationId": "HostingEnvironments_GetMultiRolePool"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
                "operationId": "HostingEnvironments_CreateOrUpdateMultiRolePool"
            }
        },
        "omitProperties": [
            "properties.workerSizeId"
        ],
        "pickProperties": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "properties.instanceNames",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ],
        "pickPropertiesCreate": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "properties.instanceNames",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ]
    },
    {
        "type": "HostingEnvironmentWorkerPool",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
                "operationId": "HostingEnvironments_GetWorkerPool"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
                "operationId": "HostingEnvironments_CreateOrUpdateWorkerPool"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools",
                "operationId": "HostingEnvironments_GetWorkerPools"
            }
        },
        "omitProperties": [
            "properties.workerSizeId"
        ],
        "pickProperties": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "properties.instanceNames",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ],
        "pickPropertiesCreate": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "properties.instanceNames",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ]
    },
    {
        "type": "KubeEnvironment",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments/{name}",
                "operationId": "KubeEnvironments_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments/{name}",
                "operationId": "KubeEnvironments_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments/{name}",
                "operationId": "KubeEnvironments_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/kubeEnvironments/{name}",
                "operationId": "KubeEnvironments_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/kubeEnvironments",
                "operationId": "KubeEnvironments_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.deploymentErrors",
            "properties.internalLoadBalancerEnabled",
            "properties.defaultDomain",
            "properties.staticIp",
            "properties.arcConfiguration.artifactsStorageType",
            "properties.arcConfiguration.artifactStorageClassName",
            "properties.arcConfiguration.artifactStorageMountPath",
            "properties.arcConfiguration.artifactStorageNodeName",
            "properties.arcConfiguration.artifactStorageAccessMode",
            "properties.arcConfiguration.kubeConfig",
            "properties.appLogsConfiguration.logAnalyticsConfiguration.customerId",
            "properties.appLogsConfiguration.logAnalyticsConfiguration.sharedKey",
            "properties.aksResourceID",
            "extendedLocation.type"
        ],
        "pickProperties": [
            "properties.arcConfiguration.frontEndServiceConfiguration.kind",
            "properties.appLogsConfiguration.destination",
            "extendedLocation.name"
        ],
        "pickPropertiesCreate": [
            "properties.arcConfiguration.frontEndServiceConfiguration.kind",
            "properties.appLogsConfiguration.destination",
            "extendedLocation.name"
        ],
        "environmentVariables": [
            {
                "path": "properties.arcConfiguration.kubeConfig",
                "suffix": "KUBE_CONFIG"
            },
            {
                "path": "properties.appLogsConfiguration.logAnalyticsConfiguration.sharedKey",
                "suffix": "SHARED_KEY"
            }
        ]
    },
    {
        "type": "ServerFarm",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "ServerFarms_GetServerFarm"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "ServerFarms_CreateOrUpdateServerFarm"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "ServerFarms_DeleteServerFarm"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/serverfarms",
                "operationId": "Global_GetAllServerFarms"
            }
        },
        "omitProperties": [
            "properties.status",
            "properties.subscription",
            "properties.hostingEnvironmentProfile.id",
            "properties.geoRegion",
            "properties.numberOfSites",
            "properties.resourceGroup"
        ],
        "pickProperties": [
            "properties.name",
            "properties.workerTierName",
            "properties.adminSiteName",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.maximumNumberOfWorkers",
            "properties.perSiteScaling",
            "properties.reserved",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.workerTierName",
            "properties.adminSiteName",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.maximumNumberOfWorkers",
            "properties.perSiteScaling",
            "properties.reserved",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ]
    },
    {
        "type": "ServerFarmRouteForVnet",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "AppServicePlan",
                "group": "Web",
                "name": "name"
            },
            "vnet": {
                "type": "HubVirtualNetworkConnection",
                "group": "Network",
                "name": "vnetName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}",
                "operationId": "ServerFarms_GetRouteForVnet"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}",
                "operationId": "ServerFarms_CreateOrUpdateVnetRoute"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}",
                "operationId": "ServerFarms_DeleteVnetRoute"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes/{routeName}",
                "operationId": "ServerFarms_UpdateVnetRoute"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}/virtualNetworkConnections/{vnetName}/routes",
                "operationId": "ServerFarms_GetRoutesForVnet"
            }
        },
        "pickProperties": [],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.startAddress",
            "properties.endAddress",
            "properties.routeType"
        ]
    },
    {
        "type": "Site",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "serverFarm": {
                "type": "ServerFarm",
                "group": "Web",
                "createOnly": true
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true
            },
            "webApp": {
                "type": "WebApp",
                "group": "Web",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "Sites_GetSite"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "Sites_CreateOrUpdateSite"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "Sites_DeleteSite"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/sites",
                "operationId": "Global_GetAllSites"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.hostNames",
            "properties.repositorySiteName",
            "properties.usageState",
            "properties.enabledHostNames",
            "properties.availabilityState",
            "properties.hostNameSslStates",
            "properties.serverFarmId",
            "properties.lastModifiedTimeUtc",
            "properties.siteConfig.properties.autoHealRules.triggers.statusCodes",
            "properties.trafficManagerHostNames",
            "properties.premiumAppDeployed",
            "properties.targetSwapSlot",
            "properties.hostingEnvironmentProfile.id",
            "properties.outboundIpAddresses",
            "properties.cloningInfo.correlationId",
            "properties.cloningInfo.sourceWebAppId",
            "properties.cloningInfo.trafficManagerProfileId",
            "properties.resourceGroup",
            "properties.isDefaultContainer",
            "properties.defaultHostName"
        ],
        "pickProperties": [
            "properties.name",
            "properties.enabled",
            "properties.siteConfig.properties.numberOfWorkers",
            "properties.siteConfig.properties.defaultDocuments",
            "properties.siteConfig.properties.netFrameworkVersion",
            "properties.siteConfig.properties.phpVersion",
            "properties.siteConfig.properties.pythonVersion",
            "properties.siteConfig.properties.nodeVersion",
            "properties.siteConfig.properties.requestTracingEnabled",
            "properties.siteConfig.properties.requestTracingExpirationTime",
            "properties.siteConfig.properties.remoteDebuggingEnabled",
            "properties.siteConfig.properties.remoteDebuggingVersion",
            "properties.siteConfig.properties.httpLoggingEnabled",
            "properties.siteConfig.properties.logsDirectorySizeLimit",
            "properties.siteConfig.properties.detailedErrorLoggingEnabled",
            "properties.siteConfig.properties.publishingUsername",
            "properties.siteConfig.properties.publishingPassword",
            "properties.siteConfig.properties.appSettings",
            "properties.siteConfig.properties.metadata",
            "properties.siteConfig.properties.connectionStrings",
            "properties.siteConfig.properties.handlerMappings",
            "properties.siteConfig.properties.documentRoot",
            "properties.siteConfig.properties.scmType",
            "properties.siteConfig.properties.use32BitWorkerProcess",
            "properties.siteConfig.properties.webSocketsEnabled",
            "properties.siteConfig.properties.alwaysOn",
            "properties.siteConfig.properties.javaVersion",
            "properties.siteConfig.properties.javaContainer",
            "properties.siteConfig.properties.javaContainerVersion",
            "properties.siteConfig.properties.appCommandLine",
            "properties.siteConfig.properties.managedPipelineMode",
            "properties.siteConfig.properties.virtualApplications",
            "properties.siteConfig.properties.loadBalancing",
            "properties.siteConfig.properties.experiments.rampUpRules",
            "properties.siteConfig.properties.limits.maxPercentageCpu",
            "properties.siteConfig.properties.limits.maxMemoryInMb",
            "properties.siteConfig.properties.limits.maxDiskSizeInMb",
            "properties.siteConfig.properties.autoHealEnabled",
            "properties.siteConfig.properties.autoHealRules.triggers.requests.count",
            "properties.siteConfig.properties.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.properties.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.properties.autoHealRules.actions.actionType",
            "properties.siteConfig.properties.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.properties.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.properties.tracingOptions",
            "properties.siteConfig.properties.vnetName",
            "properties.siteConfig.properties.cors.allowedOrigins",
            "properties.siteConfig.properties.apiDefinition.url",
            "properties.siteConfig.properties.autoSwapSlotName",
            "properties.siteConfig.properties.localMySqlEnabled",
            "properties.siteConfig.properties.ipSecurityRestrictions",
            "properties.scmSiteAlsoStopped",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.microService",
            "properties.gatewaySiteName",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.appSettingsOverrides",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.enabled",
            "properties.siteConfig.properties.numberOfWorkers",
            "properties.siteConfig.properties.defaultDocuments",
            "properties.siteConfig.properties.netFrameworkVersion",
            "properties.siteConfig.properties.phpVersion",
            "properties.siteConfig.properties.pythonVersion",
            "properties.siteConfig.properties.nodeVersion",
            "properties.siteConfig.properties.requestTracingEnabled",
            "properties.siteConfig.properties.requestTracingExpirationTime",
            "properties.siteConfig.properties.remoteDebuggingEnabled",
            "properties.siteConfig.properties.remoteDebuggingVersion",
            "properties.siteConfig.properties.httpLoggingEnabled",
            "properties.siteConfig.properties.logsDirectorySizeLimit",
            "properties.siteConfig.properties.detailedErrorLoggingEnabled",
            "properties.siteConfig.properties.publishingUsername",
            "properties.siteConfig.properties.publishingPassword",
            "properties.siteConfig.properties.appSettings",
            "properties.siteConfig.properties.metadata",
            "properties.siteConfig.properties.connectionStrings",
            "properties.siteConfig.properties.handlerMappings",
            "properties.siteConfig.properties.documentRoot",
            "properties.siteConfig.properties.scmType",
            "properties.siteConfig.properties.use32BitWorkerProcess",
            "properties.siteConfig.properties.webSocketsEnabled",
            "properties.siteConfig.properties.alwaysOn",
            "properties.siteConfig.properties.javaVersion",
            "properties.siteConfig.properties.javaContainer",
            "properties.siteConfig.properties.javaContainerVersion",
            "properties.siteConfig.properties.appCommandLine",
            "properties.siteConfig.properties.managedPipelineMode",
            "properties.siteConfig.properties.virtualApplications",
            "properties.siteConfig.properties.loadBalancing",
            "properties.siteConfig.properties.experiments.rampUpRules",
            "properties.siteConfig.properties.limits.maxPercentageCpu",
            "properties.siteConfig.properties.limits.maxMemoryInMb",
            "properties.siteConfig.properties.limits.maxDiskSizeInMb",
            "properties.siteConfig.properties.autoHealEnabled",
            "properties.siteConfig.properties.autoHealRules.triggers.requests.count",
            "properties.siteConfig.properties.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.properties.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.properties.autoHealRules.actions.actionType",
            "properties.siteConfig.properties.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.properties.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.properties.tracingOptions",
            "properties.siteConfig.properties.vnetName",
            "properties.siteConfig.properties.cors.allowedOrigins",
            "properties.siteConfig.properties.apiDefinition.url",
            "properties.siteConfig.properties.autoSwapSlotName",
            "properties.siteConfig.properties.localMySqlEnabled",
            "properties.siteConfig.properties.ipSecurityRestrictions",
            "properties.scmSiteAlsoStopped",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.microService",
            "properties.gatewaySiteName",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.appSettingsOverrides",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName"
        ]
    },
    {
        "type": "SiteBackupStatus",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}",
                "operationId": "Sites_GetSiteBackupStatus"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}",
                "operationId": "Sites_DeleteBackup"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups",
                "operationId": "Sites_ListSiteBackups"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.status",
            "properties.correlationId"
        ],
        "pickProperties": [
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.websiteSizeInBytes"
        ],
        "pickPropertiesCreate": [
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.websiteSizeInBytes"
        ]
    },
    {
        "type": "SiteBackupStatusSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}",
                "operationId": "Sites_GetSiteBackupStatusSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}",
                "operationId": "Sites_DeleteBackupSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups",
                "operationId": "Sites_ListSiteBackupsSlot"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.status",
            "properties.correlationId"
        ],
        "pickProperties": [
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.websiteSizeInBytes"
        ],
        "pickPropertiesCreate": [
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.websiteSizeInBytes"
        ]
    },
    {
        "type": "SiteConfig",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "Sites_GetSiteConfig"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "Sites_CreateOrUpdateSiteConfig"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "Sites_UpdateSiteConfig"
            }
        },
        "omitProperties": [
            "properties.autoHealRules.triggers.statusCodes"
        ],
        "pickProperties": [
            "properties.numberOfWorkers",
            "properties.defaultDocuments",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.publishingPassword",
            "properties.appSettings",
            "properties.metadata",
            "properties.connectionStrings",
            "properties.handlerMappings",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules",
            "properties.limits.maxPercentageCpu",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.cors.allowedOrigins",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.ipSecurityRestrictions"
        ],
        "pickPropertiesCreate": [
            "properties.numberOfWorkers",
            "properties.defaultDocuments",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.publishingPassword",
            "properties.appSettings",
            "properties.metadata",
            "properties.connectionStrings",
            "properties.handlerMappings",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules",
            "properties.limits.maxPercentageCpu",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.cors.allowedOrigins",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.ipSecurityRestrictions"
        ]
    },
    {
        "type": "SiteConfigSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "Sites_GetSiteConfigSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "Sites_CreateOrUpdateSiteConfigSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "Sites_UpdateSiteConfigSlot"
            }
        },
        "omitProperties": [
            "properties.autoHealRules.triggers.statusCodes"
        ],
        "pickProperties": [
            "properties.numberOfWorkers",
            "properties.defaultDocuments",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.publishingPassword",
            "properties.appSettings",
            "properties.metadata",
            "properties.connectionStrings",
            "properties.handlerMappings",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules",
            "properties.limits.maxPercentageCpu",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.cors.allowedOrigins",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.ipSecurityRestrictions"
        ],
        "pickPropertiesCreate": [
            "properties.numberOfWorkers",
            "properties.defaultDocuments",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.publishingPassword",
            "properties.appSettings",
            "properties.metadata",
            "properties.connectionStrings",
            "properties.handlerMappings",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules",
            "properties.limits.maxPercentageCpu",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.cors.allowedOrigins",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.ipSecurityRestrictions"
        ]
    },
    {
        "type": "SiteDeployment",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "Sites_GetDeployment"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "Sites_CreateDeployment"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "Sites_DeleteDeployment"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments",
                "operationId": "Sites_GetDeployments"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.status"
        ],
        "pickProperties": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ],
        "pickPropertiesCreate": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ]
    },
    {
        "type": "SiteDeploymentSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "Sites_GetDeploymentSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "Sites_CreateDeploymentSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "Sites_DeleteDeploymentSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments",
                "operationId": "Sites_GetDeploymentsSlot"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.status"
        ],
        "pickProperties": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ],
        "pickPropertiesCreate": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ]
    },
    {
        "type": "SiteHostNameBinding",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "domain": {
                "type": "Domain",
                "group": "DomainRegistration",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "Sites_GetSiteHostNameBinding"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "Sites_CreateOrUpdateSiteHostNameBinding"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "Sites_DeleteSiteHostNameBinding"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings",
                "operationId": "Sites_GetSiteHostNameBindings"
            }
        },
        "omitProperties": [
            "properties.domainId"
        ],
        "pickProperties": [
            "properties.name",
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType"
        ]
    },
    {
        "type": "SiteHostNameBindingSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            },
            "domain": {
                "type": "Domain",
                "group": "DomainRegistration",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "Sites_GetSiteHostNameBindingSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "Sites_CreateOrUpdateSiteHostNameBindingSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "Sites_DeleteSiteHostNameBindingSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings",
                "operationId": "Sites_GetSiteHostNameBindingsSlot"
            }
        },
        "omitProperties": [
            "properties.domainId"
        ],
        "pickProperties": [
            "properties.name",
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType"
        ]
    },
    {
        "type": "SiteInstanceDeployment",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "instanceId": {
                "type": "CloudServiceRoleInstance",
                "group": "Compute",
                "name": "instanceId"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments/{id}",
                "operationId": "Sites_GetInstanceDeployment"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments/{id}",
                "operationId": "Sites_CreateInstanceDeployment"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments/{id}",
                "operationId": "Sites_DeleteInstanceDeployment"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/deployments",
                "operationId": "Sites_GetInstanceDeployments"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.status"
        ],
        "pickProperties": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ],
        "pickPropertiesCreate": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ]
    },
    {
        "type": "SiteInstanceDeploymentSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            },
            "instanceId": {
                "type": "CloudServiceRoleInstance",
                "group": "Compute",
                "name": "instanceId"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments/{id}",
                "operationId": "Sites_GetInstanceDeploymentSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments/{id}",
                "operationId": "Sites_CreateInstanceDeploymentSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments/{id}",
                "operationId": "Sites_DeleteInstanceDeploymentSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/deployments",
                "operationId": "Sites_GetInstanceDeploymentsSlot"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.status"
        ],
        "pickProperties": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ],
        "pickPropertiesCreate": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ]
    },
    {
        "type": "SiteLogsConfig",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs",
                "operationId": "Sites_GetSiteLogsConfig"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs",
                "operationId": "Sites_UpdateSiteLogsConfig"
            }
        },
        "pickProperties": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "pickPropertiesCreate": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ]
    },
    {
        "type": "SiteLogsConfigSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs",
                "operationId": "Sites_GetSiteLogsConfigSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs",
                "operationId": "Sites_UpdateSiteLogsConfigSlot"
            }
        },
        "pickProperties": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "pickPropertiesCreate": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ]
    },
    {
        "type": "SitePremierAddOn",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_GetSitePremierAddOn"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_AddSitePremierAddOn"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_DeleteSitePremierAddOn"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons",
                "operationId": "Sites_ListSitePremierAddOns"
            }
        },
        "pickProperties": [],
        "pickPropertiesCreate": [
            "location",
            "tags",
            "plan.name",
            "plan.publisher",
            "plan.product",
            "plan.promotionCode",
            "plan.version",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ]
    },
    {
        "type": "SitePremierAddOnSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_GetSitePremierAddOnSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_AddSitePremierAddOnSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_DeleteSitePremierAddOnSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons",
                "operationId": "Sites_ListSitePremierAddOnsSlot"
            }
        },
        "pickProperties": [],
        "pickPropertiesCreate": [
            "location",
            "tags",
            "plan.name",
            "plan.publisher",
            "plan.product",
            "plan.promotionCode",
            "plan.version",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ]
    },
    {
        "type": "SiteRelayServiceConnection",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "Sites_GetSiteRelayServiceConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "Sites_CreateOrUpdateSiteRelayServiceConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "Sites_DeleteSiteRelayServiceConnection"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "Sites_UpdateSiteRelayServiceConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection",
                "operationId": "Sites_ListSiteRelayServiceConnections"
            }
        },
        "pickProperties": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ],
        "pickPropertiesCreate": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ]
    },
    {
        "type": "SiteRelayServiceConnectionSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "Sites_GetSiteRelayServiceConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "Sites_CreateOrUpdateSiteRelayServiceConnectionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "Sites_DeleteSiteRelayServiceConnectionSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "Sites_UpdateSiteRelayServiceConnectionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection",
                "operationId": "Sites_ListSiteRelayServiceConnectionsSlot"
            }
        },
        "pickProperties": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ],
        "pickPropertiesCreate": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ]
    },
    {
        "type": "SiteSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "serverFarm": {
                "type": "ServerFarm",
                "group": "Web",
                "createOnly": true
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true
            },
            "webApp": {
                "type": "WebApp",
                "group": "Web",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "Sites_GetSiteSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "Sites_CreateOrUpdateSiteSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "Sites_DeleteSiteSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots",
                "operationId": "Sites_GetSiteSlots"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.hostNames",
            "properties.repositorySiteName",
            "properties.usageState",
            "properties.enabledHostNames",
            "properties.availabilityState",
            "properties.hostNameSslStates",
            "properties.serverFarmId",
            "properties.lastModifiedTimeUtc",
            "properties.siteConfig.properties.autoHealRules.triggers.statusCodes",
            "properties.trafficManagerHostNames",
            "properties.premiumAppDeployed",
            "properties.targetSwapSlot",
            "properties.hostingEnvironmentProfile.id",
            "properties.outboundIpAddresses",
            "properties.cloningInfo.correlationId",
            "properties.cloningInfo.sourceWebAppId",
            "properties.cloningInfo.trafficManagerProfileId",
            "properties.resourceGroup",
            "properties.isDefaultContainer",
            "properties.defaultHostName"
        ],
        "pickProperties": [
            "properties.name",
            "properties.enabled",
            "properties.siteConfig.properties.numberOfWorkers",
            "properties.siteConfig.properties.defaultDocuments",
            "properties.siteConfig.properties.netFrameworkVersion",
            "properties.siteConfig.properties.phpVersion",
            "properties.siteConfig.properties.pythonVersion",
            "properties.siteConfig.properties.nodeVersion",
            "properties.siteConfig.properties.requestTracingEnabled",
            "properties.siteConfig.properties.requestTracingExpirationTime",
            "properties.siteConfig.properties.remoteDebuggingEnabled",
            "properties.siteConfig.properties.remoteDebuggingVersion",
            "properties.siteConfig.properties.httpLoggingEnabled",
            "properties.siteConfig.properties.logsDirectorySizeLimit",
            "properties.siteConfig.properties.detailedErrorLoggingEnabled",
            "properties.siteConfig.properties.publishingUsername",
            "properties.siteConfig.properties.publishingPassword",
            "properties.siteConfig.properties.appSettings",
            "properties.siteConfig.properties.metadata",
            "properties.siteConfig.properties.connectionStrings",
            "properties.siteConfig.properties.handlerMappings",
            "properties.siteConfig.properties.documentRoot",
            "properties.siteConfig.properties.scmType",
            "properties.siteConfig.properties.use32BitWorkerProcess",
            "properties.siteConfig.properties.webSocketsEnabled",
            "properties.siteConfig.properties.alwaysOn",
            "properties.siteConfig.properties.javaVersion",
            "properties.siteConfig.properties.javaContainer",
            "properties.siteConfig.properties.javaContainerVersion",
            "properties.siteConfig.properties.appCommandLine",
            "properties.siteConfig.properties.managedPipelineMode",
            "properties.siteConfig.properties.virtualApplications",
            "properties.siteConfig.properties.loadBalancing",
            "properties.siteConfig.properties.experiments.rampUpRules",
            "properties.siteConfig.properties.limits.maxPercentageCpu",
            "properties.siteConfig.properties.limits.maxMemoryInMb",
            "properties.siteConfig.properties.limits.maxDiskSizeInMb",
            "properties.siteConfig.properties.autoHealEnabled",
            "properties.siteConfig.properties.autoHealRules.triggers.requests.count",
            "properties.siteConfig.properties.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.properties.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.properties.autoHealRules.actions.actionType",
            "properties.siteConfig.properties.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.properties.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.properties.tracingOptions",
            "properties.siteConfig.properties.vnetName",
            "properties.siteConfig.properties.cors.allowedOrigins",
            "properties.siteConfig.properties.apiDefinition.url",
            "properties.siteConfig.properties.autoSwapSlotName",
            "properties.siteConfig.properties.localMySqlEnabled",
            "properties.siteConfig.properties.ipSecurityRestrictions",
            "properties.scmSiteAlsoStopped",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.microService",
            "properties.gatewaySiteName",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.appSettingsOverrides",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.enabled",
            "properties.siteConfig.properties.numberOfWorkers",
            "properties.siteConfig.properties.defaultDocuments",
            "properties.siteConfig.properties.netFrameworkVersion",
            "properties.siteConfig.properties.phpVersion",
            "properties.siteConfig.properties.pythonVersion",
            "properties.siteConfig.properties.nodeVersion",
            "properties.siteConfig.properties.requestTracingEnabled",
            "properties.siteConfig.properties.requestTracingExpirationTime",
            "properties.siteConfig.properties.remoteDebuggingEnabled",
            "properties.siteConfig.properties.remoteDebuggingVersion",
            "properties.siteConfig.properties.httpLoggingEnabled",
            "properties.siteConfig.properties.logsDirectorySizeLimit",
            "properties.siteConfig.properties.detailedErrorLoggingEnabled",
            "properties.siteConfig.properties.publishingUsername",
            "properties.siteConfig.properties.publishingPassword",
            "properties.siteConfig.properties.appSettings",
            "properties.siteConfig.properties.metadata",
            "properties.siteConfig.properties.connectionStrings",
            "properties.siteConfig.properties.handlerMappings",
            "properties.siteConfig.properties.documentRoot",
            "properties.siteConfig.properties.scmType",
            "properties.siteConfig.properties.use32BitWorkerProcess",
            "properties.siteConfig.properties.webSocketsEnabled",
            "properties.siteConfig.properties.alwaysOn",
            "properties.siteConfig.properties.javaVersion",
            "properties.siteConfig.properties.javaContainer",
            "properties.siteConfig.properties.javaContainerVersion",
            "properties.siteConfig.properties.appCommandLine",
            "properties.siteConfig.properties.managedPipelineMode",
            "properties.siteConfig.properties.virtualApplications",
            "properties.siteConfig.properties.loadBalancing",
            "properties.siteConfig.properties.experiments.rampUpRules",
            "properties.siteConfig.properties.limits.maxPercentageCpu",
            "properties.siteConfig.properties.limits.maxMemoryInMb",
            "properties.siteConfig.properties.limits.maxDiskSizeInMb",
            "properties.siteConfig.properties.autoHealEnabled",
            "properties.siteConfig.properties.autoHealRules.triggers.requests.count",
            "properties.siteConfig.properties.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.properties.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.properties.autoHealRules.actions.actionType",
            "properties.siteConfig.properties.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.properties.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.properties.tracingOptions",
            "properties.siteConfig.properties.vnetName",
            "properties.siteConfig.properties.cors.allowedOrigins",
            "properties.siteConfig.properties.apiDefinition.url",
            "properties.siteConfig.properties.autoSwapSlotName",
            "properties.siteConfig.properties.localMySqlEnabled",
            "properties.siteConfig.properties.ipSecurityRestrictions",
            "properties.scmSiteAlsoStopped",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.microService",
            "properties.gatewaySiteName",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.appSettingsOverrides",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName"
        ]
    },
    {
        "type": "SiteSlotConfigNames",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames",
                "operationId": "Sites_GetSlotConfigNames"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames",
                "operationId": "Sites_UpdateSlotConfigNames"
            }
        },
        "pickProperties": [
            "properties.connectionStringNames",
            "properties.appSettingNames"
        ],
        "pickPropertiesCreate": [
            "properties.connectionStringNames",
            "properties.appSettingNames"
        ]
    },
    {
        "type": "SiteSourceControl",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "Sites_GetSiteSourceControl"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "Sites_CreateOrUpdateSiteSourceControl"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "Sites_DeleteSiteSourceControl"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "Sites_UpdateSiteSourceControl"
            }
        },
        "pickProperties": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial"
        ],
        "pickPropertiesCreate": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial"
        ]
    },
    {
        "type": "SiteSourceControlSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "Sites_GetSiteSourceControlSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "Sites_CreateOrUpdateSiteSourceControlSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "Sites_DeleteSiteSourceControlSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "Sites_UpdateSiteSourceControlSlot"
            }
        },
        "pickProperties": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial"
        ],
        "pickPropertiesCreate": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial"
        ]
    },
    {
        "type": "SiteVNETConnection",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_GetSiteVNETConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_CreateOrUpdateSiteVNETConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_DeleteSiteVNETConnection"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_UpdateSiteVNETConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections",
                "operationId": "Sites_GetSiteVNETConnections"
            }
        },
        "omitProperties": [
            "properties.vnetResourceId"
        ],
        "pickProperties": [
            "properties.certThumbprint",
            "properties.certBlob",
            "properties.routes",
            "properties.resyncRequired",
            "properties.dnsServers"
        ],
        "pickPropertiesCreate": [
            "properties.certThumbprint",
            "properties.certBlob",
            "properties.routes",
            "properties.resyncRequired",
            "properties.dnsServers"
        ]
    },
    {
        "type": "SiteVNETConnectionSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_GetSiteVNETConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_CreateOrUpdateSiteVNETConnectionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_DeleteSiteVNETConnectionSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_UpdateSiteVNETConnectionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections",
                "operationId": "Sites_GetSiteVNETConnectionsSlot"
            }
        },
        "omitProperties": [
            "properties.vnetResourceId"
        ],
        "pickProperties": [
            "properties.certThumbprint",
            "properties.certBlob",
            "properties.routes",
            "properties.resyncRequired",
            "properties.dnsServers"
        ],
        "pickPropertiesCreate": [
            "properties.certThumbprint",
            "properties.certBlob",
            "properties.routes",
            "properties.resyncRequired",
            "properties.dnsServers"
        ]
    },
    {
        "type": "StaticSite",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
                "operationId": "StaticSites_GetStaticSite"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
                "operationId": "StaticSites_CreateOrUpdateStaticSite"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
                "operationId": "StaticSites_DeleteStaticSite"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
                "operationId": "StaticSites_UpdateStaticSite"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/staticSites",
                "operationId": "StaticSites_List"
            }
        },
        "omitProperties": [
            "properties.defaultHostname",
            "properties.customDomains",
            "properties.privateEndpointConnections",
            "properties.contentDistributionEndpoint",
            "properties.keyVaultReferenceIdentity",
            "properties.userProvidedFunctionApps",
            "properties.provider",
            "identity.tenantId",
            "identity.principalId"
        ],
        "pickProperties": [
            "properties.repositoryUrl",
            "properties.branch",
            "properties.repositoryToken",
            "properties.buildProperties.appLocation",
            "properties.buildProperties.apiLocation",
            "properties.buildProperties.appArtifactLocation",
            "properties.buildProperties.outputLocation",
            "properties.buildProperties.appBuildCommand",
            "properties.buildProperties.apiBuildCommand",
            "properties.buildProperties.skipGithubActionWorkflowGeneration",
            "properties.buildProperties.githubActionSecretNameOverride",
            "properties.stagingEnvironmentPolicy",
            "properties.allowConfigFileUpdates",
            "properties.templateProperties.templateRepositoryUrl",
            "properties.templateProperties.owner",
            "properties.templateProperties.repositoryName",
            "properties.templateProperties.description",
            "properties.templateProperties.isPrivate",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.locations",
            "sku.capabilities",
            "identity.type",
            "identity.userAssignedIdentities"
        ],
        "pickPropertiesCreate": [
            "properties.repositoryUrl",
            "properties.branch",
            "properties.repositoryToken",
            "properties.buildProperties.appLocation",
            "properties.buildProperties.apiLocation",
            "properties.buildProperties.appArtifactLocation",
            "properties.buildProperties.outputLocation",
            "properties.buildProperties.appBuildCommand",
            "properties.buildProperties.apiBuildCommand",
            "properties.buildProperties.skipGithubActionWorkflowGeneration",
            "properties.buildProperties.githubActionSecretNameOverride",
            "properties.stagingEnvironmentPolicy",
            "properties.allowConfigFileUpdates",
            "properties.templateProperties.templateRepositoryUrl",
            "properties.templateProperties.owner",
            "properties.templateProperties.repositoryName",
            "properties.templateProperties.description",
            "properties.templateProperties.isPrivate",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.locations",
            "sku.capabilities",
            "identity.type",
            "identity.userAssignedIdentities"
        ]
    },
    {
        "type": "StaticSiteBuild",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "StaticSite",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}",
                "operationId": "StaticSites_GetStaticSiteBuild"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}",
                "operationId": "StaticSites_DeleteStaticSiteBuild"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds",
                "operationId": "StaticSites_GetStaticSiteBuilds"
            }
        },
        "omitProperties": [
            "properties.buildId",
            "properties.sourceBranch",
            "properties.pullRequestTitle",
            "properties.hostname",
            "properties.createdTimeUtc",
            "properties.lastUpdatedOn",
            "properties.status",
            "properties.userProvidedFunctionApps"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "StaticSiteCustomDomain",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "StaticSite",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}",
                "operationId": "StaticSites_GetStaticSiteCustomDomain"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}",
                "operationId": "StaticSites_CreateOrUpdateStaticSiteCustomDomain"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}",
                "operationId": "StaticSites_DeleteStaticSiteCustomDomain"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains",
                "operationId": "StaticSites_ListStaticSiteCustomDomains"
            }
        },
        "omitProperties": [
            "properties.domainName",
            "properties.createdOn",
            "properties.status",
            "properties.validationToken",
            "properties.errorMessage"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": [
            "properties.validationMethod"
        ]
    },
    {
        "type": "StaticSitePrivateEndpointConnection",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "StaticSite",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "StaticSites_GetPrivateEndpointConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "StaticSites_ApproveOrRejectPrivateEndpointConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "StaticSites_DeletePrivateEndpointConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections",
                "operationId": "StaticSites_GetPrivateEndpointConnectionList"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState"
        ],
        "pickProperties": [
            "properties.ipAddresses"
        ],
        "pickPropertiesCreate": []
    },
    {
        "type": "UserProvidedFunctionAppForStaticSite",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "StaticSite",
                "group": "Web",
                "name": "name"
            },
            "userProvidedFunctionAppForStaticSiteBuild": {
                "type": "UserProvidedFunctionAppForStaticSiteBuild",
                "group": "Web",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_GetUserProvidedFunctionAppForStaticSite"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_RegisterUserProvidedFunctionAppWithStaticSite"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_DetachUserProvidedFunctionAppFromStaticSite"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps",
                "operationId": "StaticSites_GetUserProvidedFunctionAppsForStaticSite"
            }
        },
        "omitProperties": [
            "properties.functionAppResourceId",
            "properties.createdOn"
        ],
        "pickProperties": [
            "properties.functionAppRegion"
        ],
        "pickPropertiesCreate": [
            "properties.functionAppRegion"
        ]
    },
    {
        "type": "UserProvidedFunctionAppForStaticSiteBuild",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "StaticSite",
                "group": "Web",
                "name": "name"
            },
            "environment": {
                "type": "StaticSiteBuild",
                "group": "Web",
                "name": "environmentName"
            },
            "userProvidedFunctionAppForStaticSite": {
                "type": "UserProvidedFunctionAppForStaticSite",
                "group": "Web",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_GetUserProvidedFunctionAppForStaticSiteBuild"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_RegisterUserProvidedFunctionAppWithStaticSiteBuild"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_DetachUserProvidedFunctionAppFromStaticSiteBuild"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps",
                "operationId": "StaticSites_GetUserProvidedFunctionAppsForStaticSiteBuild"
            }
        },
        "omitProperties": [
            "properties.functionAppResourceId",
            "properties.createdOn"
        ],
        "pickProperties": [
            "properties.functionAppRegion"
        ],
        "pickPropertiesCreate": [
            "properties.functionAppRegion"
        ]
    },
    {
        "type": "WebApp",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "serverFarm": {
                "type": "ServerFarm",
                "group": "Web",
                "createOnly": true
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "WebApps_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "WebApps_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "WebApps_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "WebApps_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/sites",
                "operationId": "WebApps_List"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.hostNames",
            "properties.repositorySiteName",
            "properties.usageState",
            "properties.enabledHostNames",
            "properties.availabilityState",
            "properties.hostNameSslStates",
            "properties.serverFarmId",
            "properties.reserved",
            "properties.isXenon",
            "properties.hyperV",
            "properties.lastModifiedTimeUtc",
            "properties.siteConfig.acrUserManagedIdentityID",
            "properties.siteConfig.machineKey",
            "properties.siteConfig.autoHealRules.triggers.statusCodes",
            "properties.siteConfig.autoHealRules.triggers.statusCodesRange",
            "properties.siteConfig.vnetName",
            "properties.siteConfig.apiManagementConfig.id",
            "properties.siteConfig.managedServiceIdentityId",
            "properties.siteConfig.xManagedServiceIdentityId",
            "properties.siteConfig.ftpsState",
            "properties.trafficManagerHostNames",
            "properties.targetSwapSlot",
            "properties.hostingEnvironmentProfile",
            "properties.customDomainVerificationId",
            "properties.outboundIpAddresses",
            "properties.possibleOutboundIpAddresses",
            "properties.suspendedTill",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo",
            "properties.resourceGroup",
            "properties.isDefaultContainer",
            "properties.defaultHostName",
            "properties.slotSwapStatus",
            "properties.inProgressOperationId",
            "properties.virtualNetworkSubnetId",
            "identity.tenantId",
            "identity.principalId",
            "extendedLocation.type"
        ],
        "pickProperties": [
            "properties.enabled",
            "properties.siteConfig.numberOfWorkers",
            "properties.siteConfig.defaultDocuments",
            "properties.siteConfig.netFrameworkVersion",
            "properties.siteConfig.phpVersion",
            "properties.siteConfig.pythonVersion",
            "properties.siteConfig.nodeVersion",
            "properties.siteConfig.powerShellVersion",
            "properties.siteConfig.linuxFxVersion",
            "properties.siteConfig.windowsFxVersion",
            "properties.siteConfig.requestTracingEnabled",
            "properties.siteConfig.requestTracingExpirationTime",
            "properties.siteConfig.remoteDebuggingEnabled",
            "properties.siteConfig.remoteDebuggingVersion",
            "properties.siteConfig.httpLoggingEnabled",
            "properties.siteConfig.acrUseManagedIdentityCreds",
            "properties.siteConfig.logsDirectorySizeLimit",
            "properties.siteConfig.detailedErrorLoggingEnabled",
            "properties.siteConfig.publishingUsername",
            "properties.siteConfig.appSettings",
            "properties.siteConfig.connectionStrings",
            "properties.siteConfig.handlerMappings",
            "properties.siteConfig.documentRoot",
            "properties.siteConfig.scmType",
            "properties.siteConfig.use32BitWorkerProcess",
            "properties.siteConfig.webSocketsEnabled",
            "properties.siteConfig.alwaysOn",
            "properties.siteConfig.javaVersion",
            "properties.siteConfig.javaContainer",
            "properties.siteConfig.javaContainerVersion",
            "properties.siteConfig.appCommandLine",
            "properties.siteConfig.managedPipelineMode",
            "properties.siteConfig.virtualApplications",
            "properties.siteConfig.loadBalancing",
            "properties.siteConfig.experiments.rampUpRules",
            "properties.siteConfig.limits.maxPercentageCpu",
            "properties.siteConfig.limits.maxMemoryInMb",
            "properties.siteConfig.limits.maxDiskSizeInMb",
            "properties.siteConfig.autoHealEnabled",
            "properties.siteConfig.autoHealRules.triggers.requests.count",
            "properties.siteConfig.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.path",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath",
            "properties.siteConfig.autoHealRules.actions.actionType",
            "properties.siteConfig.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.tracingOptions",
            "properties.siteConfig.vnetRouteAllEnabled",
            "properties.siteConfig.vnetPrivatePortsCount",
            "properties.siteConfig.cors.allowedOrigins",
            "properties.siteConfig.cors.supportCredentials",
            "properties.siteConfig.push.properties.isPushEnabled",
            "properties.siteConfig.push.properties.tagWhitelistJson",
            "properties.siteConfig.push.properties.tagsRequiringAuth",
            "properties.siteConfig.push.properties.dynamicTagsJson",
            "properties.siteConfig.apiDefinition.url",
            "properties.siteConfig.autoSwapSlotName",
            "properties.siteConfig.localMySqlEnabled",
            "properties.siteConfig.keyVaultReferenceIdentity",
            "properties.siteConfig.ipSecurityRestrictions",
            "properties.siteConfig.scmIpSecurityRestrictions",
            "properties.siteConfig.scmIpSecurityRestrictionsUseMain",
            "properties.siteConfig.http20Enabled",
            "properties.siteConfig.minTlsVersion",
            "properties.siteConfig.scmMinTlsVersion",
            "properties.siteConfig.preWarmedInstanceCount",
            "properties.siteConfig.functionAppScaleLimit",
            "properties.siteConfig.healthCheckPath",
            "properties.siteConfig.functionsRuntimeScaleMonitoringEnabled",
            "properties.siteConfig.websiteTimeZone",
            "properties.siteConfig.minimumElasticInstanceCount",
            "properties.siteConfig.azureStorageAccounts",
            "properties.siteConfig.publicNetworkAccess",
            "properties.scmSiteAlsoStopped",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.clientCertMode",
            "properties.clientCertExclusionPaths",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.dailyMemoryTimeQuota",
            "properties.httpsOnly",
            "properties.redundancyMode",
            "properties.storageAccountRequired",
            "properties.keyVaultReferenceIdentity",
            "identity.type",
            "identity.userAssignedIdentities",
            "extendedLocation.name"
        ],
        "pickPropertiesCreate": [
            "properties.enabled",
            "properties.siteConfig.numberOfWorkers",
            "properties.siteConfig.defaultDocuments",
            "properties.siteConfig.netFrameworkVersion",
            "properties.siteConfig.phpVersion",
            "properties.siteConfig.pythonVersion",
            "properties.siteConfig.nodeVersion",
            "properties.siteConfig.powerShellVersion",
            "properties.siteConfig.linuxFxVersion",
            "properties.siteConfig.windowsFxVersion",
            "properties.siteConfig.requestTracingEnabled",
            "properties.siteConfig.requestTracingExpirationTime",
            "properties.siteConfig.remoteDebuggingEnabled",
            "properties.siteConfig.remoteDebuggingVersion",
            "properties.siteConfig.httpLoggingEnabled",
            "properties.siteConfig.acrUseManagedIdentityCreds",
            "properties.siteConfig.logsDirectorySizeLimit",
            "properties.siteConfig.detailedErrorLoggingEnabled",
            "properties.siteConfig.publishingUsername",
            "properties.siteConfig.appSettings",
            "properties.siteConfig.connectionStrings",
            "properties.siteConfig.handlerMappings",
            "properties.siteConfig.documentRoot",
            "properties.siteConfig.scmType",
            "properties.siteConfig.use32BitWorkerProcess",
            "properties.siteConfig.webSocketsEnabled",
            "properties.siteConfig.alwaysOn",
            "properties.siteConfig.javaVersion",
            "properties.siteConfig.javaContainer",
            "properties.siteConfig.javaContainerVersion",
            "properties.siteConfig.appCommandLine",
            "properties.siteConfig.managedPipelineMode",
            "properties.siteConfig.virtualApplications",
            "properties.siteConfig.loadBalancing",
            "properties.siteConfig.experiments.rampUpRules",
            "properties.siteConfig.limits.maxPercentageCpu",
            "properties.siteConfig.limits.maxMemoryInMb",
            "properties.siteConfig.limits.maxDiskSizeInMb",
            "properties.siteConfig.autoHealEnabled",
            "properties.siteConfig.autoHealRules.triggers.requests.count",
            "properties.siteConfig.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.path",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath",
            "properties.siteConfig.autoHealRules.actions.actionType",
            "properties.siteConfig.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.tracingOptions",
            "properties.siteConfig.vnetRouteAllEnabled",
            "properties.siteConfig.vnetPrivatePortsCount",
            "properties.siteConfig.cors.allowedOrigins",
            "properties.siteConfig.cors.supportCredentials",
            "properties.siteConfig.push.properties.isPushEnabled",
            "properties.siteConfig.push.properties.tagWhitelistJson",
            "properties.siteConfig.push.properties.tagsRequiringAuth",
            "properties.siteConfig.push.properties.dynamicTagsJson",
            "properties.siteConfig.apiDefinition.url",
            "properties.siteConfig.autoSwapSlotName",
            "properties.siteConfig.localMySqlEnabled",
            "properties.siteConfig.keyVaultReferenceIdentity",
            "properties.siteConfig.ipSecurityRestrictions",
            "properties.siteConfig.scmIpSecurityRestrictions",
            "properties.siteConfig.scmIpSecurityRestrictionsUseMain",
            "properties.siteConfig.http20Enabled",
            "properties.siteConfig.minTlsVersion",
            "properties.siteConfig.scmMinTlsVersion",
            "properties.siteConfig.preWarmedInstanceCount",
            "properties.siteConfig.functionAppScaleLimit",
            "properties.siteConfig.healthCheckPath",
            "properties.siteConfig.functionsRuntimeScaleMonitoringEnabled",
            "properties.siteConfig.websiteTimeZone",
            "properties.siteConfig.minimumElasticInstanceCount",
            "properties.siteConfig.azureStorageAccounts",
            "properties.siteConfig.publicNetworkAccess",
            "properties.scmSiteAlsoStopped",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.clientCertMode",
            "properties.clientCertExclusionPaths",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.dailyMemoryTimeQuota",
            "properties.httpsOnly",
            "properties.redundancyMode",
            "properties.storageAccountRequired",
            "properties.keyVaultReferenceIdentity",
            "identity.type",
            "identity.userAssignedIdentities",
            "extendedLocation.name"
        ],
        "propertiesDefault": {
            "properties": {
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "netFrameworkVersion": "v4.6",
                    "localMySqlEnabled": false,
                    "http20Enabled": true
                },
                "scmSiteAlsoStopped": false
            }
        }
    },
    {
        "type": "WebAppBackupStatus",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}",
                "operationId": "WebApps_GetBackupStatus"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}",
                "operationId": "WebApps_DeleteBackup"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups",
                "operationId": "WebApps_ListBackups"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.status",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.correlationId",
            "properties.websiteSizeInBytes"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppBackupStatusSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}",
                "operationId": "WebApps_GetBackupStatusSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}",
                "operationId": "WebApps_DeleteBackupSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups",
                "operationId": "WebApps_ListBackupsSlot"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.status",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.correlationId",
            "properties.websiteSizeInBytes"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppConfiguration",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "WebApps_GetConfiguration"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "WebApps_CreateOrUpdateConfiguration"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "WebApps_UpdateConfiguration"
            }
        },
        "omitProperties": [
            "properties.acrUserManagedIdentityID",
            "properties.machineKey",
            "properties.autoHealRules.triggers.statusCodes",
            "properties.autoHealRules.triggers.statusCodesRange",
            "properties.vnetName",
            "properties.apiManagementConfig.id",
            "properties.managedServiceIdentityId",
            "properties.xManagedServiceIdentityId",
            "properties.ftpsState"
        ],
        "pickProperties": [
            "properties.numberOfWorkers",
            "properties.defaultDocuments",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.powerShellVersion",
            "properties.linuxFxVersion",
            "properties.windowsFxVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.acrUseManagedIdentityCreds",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings",
            "properties.connectionStrings",
            "properties.handlerMappings",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules",
            "properties.limits.maxPercentageCpu",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.path",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.triggers.slowRequestsWithPath",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetRouteAllEnabled",
            "properties.vnetPrivatePortsCount",
            "properties.cors.allowedOrigins",
            "properties.cors.supportCredentials",
            "properties.push.properties.isPushEnabled",
            "properties.push.properties.tagWhitelistJson",
            "properties.push.properties.tagsRequiringAuth",
            "properties.push.properties.dynamicTagsJson",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.keyVaultReferenceIdentity",
            "properties.ipSecurityRestrictions",
            "properties.scmIpSecurityRestrictions",
            "properties.scmIpSecurityRestrictionsUseMain",
            "properties.http20Enabled",
            "properties.minTlsVersion",
            "properties.scmMinTlsVersion",
            "properties.preWarmedInstanceCount",
            "properties.functionAppScaleLimit",
            "properties.healthCheckPath",
            "properties.functionsRuntimeScaleMonitoringEnabled",
            "properties.websiteTimeZone",
            "properties.minimumElasticInstanceCount",
            "properties.azureStorageAccounts",
            "properties.publicNetworkAccess"
        ],
        "pickPropertiesCreate": [
            "properties.numberOfWorkers",
            "properties.defaultDocuments",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.powerShellVersion",
            "properties.linuxFxVersion",
            "properties.windowsFxVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.acrUseManagedIdentityCreds",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings",
            "properties.connectionStrings",
            "properties.handlerMappings",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules",
            "properties.limits.maxPercentageCpu",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.path",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.triggers.slowRequestsWithPath",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetRouteAllEnabled",
            "properties.vnetPrivatePortsCount",
            "properties.cors.allowedOrigins",
            "properties.cors.supportCredentials",
            "properties.push.properties.isPushEnabled",
            "properties.push.properties.tagWhitelistJson",
            "properties.push.properties.tagsRequiringAuth",
            "properties.push.properties.dynamicTagsJson",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.keyVaultReferenceIdentity",
            "properties.ipSecurityRestrictions",
            "properties.scmIpSecurityRestrictions",
            "properties.scmIpSecurityRestrictionsUseMain",
            "properties.http20Enabled",
            "properties.minTlsVersion",
            "properties.scmMinTlsVersion",
            "properties.preWarmedInstanceCount",
            "properties.functionAppScaleLimit",
            "properties.healthCheckPath",
            "properties.functionsRuntimeScaleMonitoringEnabled",
            "properties.websiteTimeZone",
            "properties.minimumElasticInstanceCount",
            "properties.azureStorageAccounts",
            "properties.publicNetworkAccess"
        ],
        "propertiesDefault": {
            "properties": {
                "netFrameworkVersion": "v4.6",
                "localMySqlEnabled": false,
                "http20Enabled": true
            }
        }
    },
    {
        "type": "WebAppConfigurationSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "WebApps_GetConfigurationSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "WebApps_CreateOrUpdateConfigurationSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "WebApps_UpdateConfigurationSlot"
            }
        },
        "omitProperties": [
            "properties.acrUserManagedIdentityID",
            "properties.machineKey",
            "properties.autoHealRules.triggers.statusCodes",
            "properties.autoHealRules.triggers.statusCodesRange",
            "properties.vnetName",
            "properties.apiManagementConfig.id",
            "properties.managedServiceIdentityId",
            "properties.xManagedServiceIdentityId",
            "properties.ftpsState"
        ],
        "pickProperties": [
            "properties.numberOfWorkers",
            "properties.defaultDocuments",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.powerShellVersion",
            "properties.linuxFxVersion",
            "properties.windowsFxVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.acrUseManagedIdentityCreds",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings",
            "properties.connectionStrings",
            "properties.handlerMappings",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules",
            "properties.limits.maxPercentageCpu",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.path",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.triggers.slowRequestsWithPath",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetRouteAllEnabled",
            "properties.vnetPrivatePortsCount",
            "properties.cors.allowedOrigins",
            "properties.cors.supportCredentials",
            "properties.push.properties.isPushEnabled",
            "properties.push.properties.tagWhitelistJson",
            "properties.push.properties.tagsRequiringAuth",
            "properties.push.properties.dynamicTagsJson",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.keyVaultReferenceIdentity",
            "properties.ipSecurityRestrictions",
            "properties.scmIpSecurityRestrictions",
            "properties.scmIpSecurityRestrictionsUseMain",
            "properties.http20Enabled",
            "properties.minTlsVersion",
            "properties.scmMinTlsVersion",
            "properties.preWarmedInstanceCount",
            "properties.functionAppScaleLimit",
            "properties.healthCheckPath",
            "properties.functionsRuntimeScaleMonitoringEnabled",
            "properties.websiteTimeZone",
            "properties.minimumElasticInstanceCount",
            "properties.azureStorageAccounts",
            "properties.publicNetworkAccess"
        ],
        "pickPropertiesCreate": [
            "properties.numberOfWorkers",
            "properties.defaultDocuments",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.powerShellVersion",
            "properties.linuxFxVersion",
            "properties.windowsFxVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.acrUseManagedIdentityCreds",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings",
            "properties.connectionStrings",
            "properties.handlerMappings",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules",
            "properties.limits.maxPercentageCpu",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.path",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.triggers.slowRequestsWithPath",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetRouteAllEnabled",
            "properties.vnetPrivatePortsCount",
            "properties.cors.allowedOrigins",
            "properties.cors.supportCredentials",
            "properties.push.properties.isPushEnabled",
            "properties.push.properties.tagWhitelistJson",
            "properties.push.properties.tagsRequiringAuth",
            "properties.push.properties.dynamicTagsJson",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.keyVaultReferenceIdentity",
            "properties.ipSecurityRestrictions",
            "properties.scmIpSecurityRestrictions",
            "properties.scmIpSecurityRestrictionsUseMain",
            "properties.http20Enabled",
            "properties.minTlsVersion",
            "properties.scmMinTlsVersion",
            "properties.preWarmedInstanceCount",
            "properties.functionAppScaleLimit",
            "properties.healthCheckPath",
            "properties.functionsRuntimeScaleMonitoringEnabled",
            "properties.websiteTimeZone",
            "properties.minimumElasticInstanceCount",
            "properties.azureStorageAccounts",
            "properties.publicNetworkAccess"
        ],
        "propertiesDefault": {
            "properties": {
                "netFrameworkVersion": "v4.6",
                "localMySqlEnabled": false,
                "http20Enabled": true
            }
        }
    },
    {
        "type": "WebAppContinuousWebJob",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}",
                "operationId": "WebApps_GetContinuousWebJob"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}",
                "operationId": "WebApps_DeleteContinuousWebJob"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs",
                "operationId": "WebApps_ListContinuousWebJobs"
            }
        },
        "omitProperties": [
            "properties.status",
            "properties.detailed_status"
        ],
        "pickProperties": [
            "properties.log_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk",
            "properties.settings"
        ],
        "pickPropertiesCreate": [
            "properties.log_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk",
            "properties.settings"
        ]
    },
    {
        "type": "WebAppContinuousWebJobSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}",
                "operationId": "WebApps_GetContinuousWebJobSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}",
                "operationId": "WebApps_DeleteContinuousWebJobSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs",
                "operationId": "WebApps_ListContinuousWebJobsSlot"
            }
        },
        "omitProperties": [
            "properties.status",
            "properties.detailed_status"
        ],
        "pickProperties": [
            "properties.log_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk",
            "properties.settings"
        ],
        "pickPropertiesCreate": [
            "properties.log_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk",
            "properties.settings"
        ]
    },
    {
        "type": "WebAppDeployment",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "WebApps_GetDeployment"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "WebApps_CreateDeployment"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "WebApps_DeleteDeployment"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments",
                "operationId": "WebApps_ListDeployments"
            }
        },
        "omitProperties": [
            "properties.status"
        ],
        "pickProperties": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ],
        "pickPropertiesCreate": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ]
    },
    {
        "type": "WebAppDeploymentSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "WebApps_GetDeploymentSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "WebApps_CreateDeploymentSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "WebApps_DeleteDeploymentSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments",
                "operationId": "WebApps_ListDeploymentsSlot"
            }
        },
        "omitProperties": [
            "properties.status"
        ],
        "pickProperties": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ],
        "pickPropertiesCreate": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ]
    },
    {
        "type": "WebAppDiagnosticLogsConfiguration",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs",
                "operationId": "WebApps_GetDiagnosticLogsConfiguration"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs",
                "operationId": "WebApps_UpdateDiagnosticLogsConfig"
            }
        },
        "pickProperties": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "pickPropertiesCreate": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "propertiesDefault": {
            "properties": {
                "applicationLogs": {
                    "fileSystem": {
                        "level": "Off"
                    }
                }
            }
        }
    },
    {
        "type": "WebAppDiagnosticLogsConfigurationSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs",
                "operationId": "WebApps_GetDiagnosticLogsConfigurationSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs",
                "operationId": "WebApps_UpdateDiagnosticLogsConfigSlot"
            }
        },
        "pickProperties": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "pickPropertiesCreate": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "propertiesDefault": {
            "properties": {
                "applicationLogs": {
                    "fileSystem": {
                        "level": "Off"
                    }
                }
            }
        }
    },
    {
        "type": "WebAppDomainOwnershipIdentifier",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_GetDomainOwnershipIdentifier"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_CreateOrUpdateDomainOwnershipIdentifier"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_DeleteDomainOwnershipIdentifier"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_UpdateDomainOwnershipIdentifier"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers",
                "operationId": "WebApps_ListDomainOwnershipIdentifiers"
            }
        },
        "omitProperties": [
            "properties.id"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppDomainOwnershipIdentifierSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_GetDomainOwnershipIdentifierSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_CreateOrUpdateDomainOwnershipIdentifierSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_DeleteDomainOwnershipIdentifierSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_UpdateDomainOwnershipIdentifierSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers",
                "operationId": "WebApps_ListDomainOwnershipIdentifiersSlot"
            }
        },
        "omitProperties": [
            "properties.id"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppFtpAllowed",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/ftp",
                "operationId": "WebApps_GetFtpAllowed"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/ftp",
                "operationId": "WebApps_UpdateFtpAllowed"
            }
        },
        "pickProperties": [
            "properties.allow"
        ],
        "pickPropertiesCreate": [
            "properties.allow"
        ]
    },
    {
        "type": "WebAppFtpAllowedSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/ftp",
                "operationId": "WebApps_GetFtpAllowedSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/ftp",
                "operationId": "WebApps_UpdateFtpAllowedSlot"
            }
        },
        "pickProperties": [
            "properties.allow"
        ],
        "pickPropertiesCreate": [
            "properties.allow"
        ]
    },
    {
        "type": "WebAppFunction",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}",
                "operationId": "WebApps_GetFunction"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}",
                "operationId": "WebApps_CreateFunction"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}",
                "operationId": "WebApps_DeleteFunction"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions",
                "operationId": "WebApps_ListFunctions"
            }
        },
        "omitProperties": [
            "properties.function_app_id"
        ],
        "pickProperties": [
            "properties.script_root_path_href",
            "properties.script_href",
            "properties.config_href",
            "properties.test_data_href",
            "properties.secrets_file_href",
            "properties.href",
            "properties.config",
            "properties.files",
            "properties.test_data",
            "properties.invoke_url_template",
            "properties.language",
            "properties.isDisabled"
        ],
        "pickPropertiesCreate": [
            "properties.script_root_path_href",
            "properties.script_href",
            "properties.config_href",
            "properties.test_data_href",
            "properties.secrets_file_href",
            "properties.href",
            "properties.config",
            "properties.files",
            "properties.test_data",
            "properties.invoke_url_template",
            "properties.language",
            "properties.isDisabled"
        ]
    },
    {
        "type": "WebAppHostNameBinding",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "domain": {
                "type": "Domain",
                "group": "DomainRegistration",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "WebApps_GetHostNameBinding"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "WebApps_CreateOrUpdateHostNameBinding"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "WebApps_DeleteHostNameBinding"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings",
                "operationId": "WebApps_ListHostNameBindings"
            }
        },
        "omitProperties": [
            "properties.siteName",
            "properties.domainId",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType",
            "properties.sslState",
            "properties.thumbprint",
            "properties.virtualIP"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppHostNameBindingSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            },
            "domain": {
                "type": "Domain",
                "group": "DomainRegistration",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "WebApps_GetHostNameBindingSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "WebApps_CreateOrUpdateHostNameBindingSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "WebApps_DeleteHostNameBindingSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings",
                "operationId": "WebApps_ListHostNameBindingsSlot"
            }
        },
        "omitProperties": [
            "properties.siteName",
            "properties.domainId",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType",
            "properties.sslState",
            "properties.thumbprint",
            "properties.virtualIP"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppInstanceFunctionSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}",
                "operationId": "WebApps_GetInstanceFunctionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}",
                "operationId": "WebApps_CreateInstanceFunctionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}",
                "operationId": "WebApps_DeleteInstanceFunctionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions",
                "operationId": "WebApps_ListInstanceFunctionsSlot"
            }
        },
        "omitProperties": [
            "properties.function_app_id"
        ],
        "pickProperties": [
            "properties.script_root_path_href",
            "properties.script_href",
            "properties.config_href",
            "properties.test_data_href",
            "properties.secrets_file_href",
            "properties.href",
            "properties.config",
            "properties.files",
            "properties.test_data",
            "properties.invoke_url_template",
            "properties.language",
            "properties.isDisabled"
        ],
        "pickPropertiesCreate": [
            "properties.script_root_path_href",
            "properties.script_href",
            "properties.config_href",
            "properties.test_data_href",
            "properties.secrets_file_href",
            "properties.href",
            "properties.config",
            "properties.files",
            "properties.test_data",
            "properties.invoke_url_template",
            "properties.language",
            "properties.isDisabled"
        ]
    },
    {
        "type": "WebAppInstanceMsDeployStatus",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "instanceId": {
                "type": "CloudServiceRoleInstance",
                "group": "Compute",
                "name": "instanceId"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/extensions/MSDeploy",
                "operationId": "WebApps_GetInstanceMsDeployStatus"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/extensions/MSDeploy",
                "operationId": "WebApps_CreateInstanceMSDeployOperation"
            }
        },
        "omitProperties": [
            "properties.deployer",
            "properties.provisioningState",
            "properties.startTime",
            "properties.endTime",
            "properties.complete"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": [
            "properties.addOnPackages"
        ]
    },
    {
        "type": "WebAppInstanceMsDeployStatusSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            },
            "instanceId": {
                "type": "CloudServiceRoleInstance",
                "group": "Compute",
                "name": "instanceId"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/extensions/MSDeploy",
                "operationId": "WebApps_GetInstanceMsDeployStatusSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/extensions/MSDeploy",
                "operationId": "WebApps_CreateInstanceMSDeployOperationSlot"
            }
        },
        "omitProperties": [
            "properties.deployer",
            "properties.provisioningState",
            "properties.startTime",
            "properties.endTime",
            "properties.complete"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": [
            "properties.addOnPackages"
        ]
    },
    {
        "type": "WebAppInstanceProcess",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "instanceId": {
                "type": "CloudServiceRoleInstance",
                "group": "Compute",
                "name": "instanceId"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}",
                "operationId": "WebApps_GetInstanceProcess"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}",
                "operationId": "WebApps_DeleteInstanceProcess"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes",
                "operationId": "WebApps_ListInstanceProcesses"
            }
        },
        "omitProperties": [
            "properties.identifier"
        ],
        "pickProperties": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.iis_profile_timeout_in_seconds",
            "properties.parent",
            "properties.children",
            "properties.threads",
            "properties.open_file_handles",
            "properties.modules",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.environment_variables",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ],
        "pickPropertiesCreate": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.iis_profile_timeout_in_seconds",
            "properties.parent",
            "properties.children",
            "properties.threads",
            "properties.open_file_handles",
            "properties.modules",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.environment_variables",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ]
    },
    {
        "type": "WebAppInstanceProcessSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            },
            "instanceId": {
                "type": "CloudServiceRoleInstance",
                "group": "Compute",
                "name": "instanceId"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}",
                "operationId": "WebApps_GetInstanceProcessSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}",
                "operationId": "WebApps_DeleteInstanceProcessSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes",
                "operationId": "WebApps_ListInstanceProcessesSlot"
            }
        },
        "omitProperties": [
            "properties.identifier"
        ],
        "pickProperties": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.iis_profile_timeout_in_seconds",
            "properties.parent",
            "properties.children",
            "properties.threads",
            "properties.open_file_handles",
            "properties.modules",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.environment_variables",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ],
        "pickPropertiesCreate": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.iis_profile_timeout_in_seconds",
            "properties.parent",
            "properties.children",
            "properties.threads",
            "properties.open_file_handles",
            "properties.modules",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.environment_variables",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ]
    },
    {
        "type": "WebAppListSlotConfigurationNames",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames",
                "operationId": "WebApps_ListSlotConfigurationNames"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames",
                "operationId": "WebApps_UpdateSlotConfigurationNames"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames",
                "operationId": "WebApps_ListSlotConfigurationNames"
            }
        },
        "pickProperties": [
            "properties.connectionStringNames",
            "properties.appSettingNames",
            "properties.azureStorageConfigNames"
        ],
        "pickPropertiesCreate": [
            "properties.connectionStringNames",
            "properties.appSettingNames",
            "properties.azureStorageConfigNames"
        ]
    },
    {
        "type": "WebAppMSDeployStatus",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/MSDeploy",
                "operationId": "WebApps_GetMSDeployStatus"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/MSDeploy",
                "operationId": "WebApps_CreateMSDeployOperation"
            }
        },
        "omitProperties": [
            "properties.deployer",
            "properties.provisioningState",
            "properties.startTime",
            "properties.endTime",
            "properties.complete"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": [
            "properties.addOnPackages"
        ]
    },
    {
        "type": "WebAppMSDeployStatusSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/extensions/MSDeploy",
                "operationId": "WebApps_GetMSDeployStatusSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/extensions/MSDeploy",
                "operationId": "WebApps_CreateMSDeployOperationSlot"
            }
        },
        "omitProperties": [
            "properties.deployer",
            "properties.provisioningState",
            "properties.startTime",
            "properties.endTime",
            "properties.complete"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": [
            "properties.addOnPackages"
        ]
    },
    {
        "type": "WebAppPremierAddOn",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_GetPremierAddOn"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_AddPremierAddOn"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_DeletePremierAddOn"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_UpdatePremierAddOn"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons",
                "operationId": "WebApps_ListPremierAddOns"
            }
        },
        "pickProperties": [
            "properties.sku",
            "properties.product",
            "properties.vendor",
            "properties.marketplacePublisher",
            "properties.marketplaceOffer"
        ],
        "pickPropertiesCreate": [
            "properties.sku",
            "properties.product",
            "properties.vendor",
            "properties.marketplacePublisher",
            "properties.marketplaceOffer"
        ]
    },
    {
        "type": "WebAppPremierAddOnSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_GetPremierAddOnSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_AddPremierAddOnSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_DeletePremierAddOnSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_UpdatePremierAddOnSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons",
                "operationId": "WebApps_ListPremierAddOnsSlot"
            }
        },
        "pickProperties": [
            "properties.sku",
            "properties.product",
            "properties.vendor",
            "properties.marketplacePublisher",
            "properties.marketplaceOffer"
        ],
        "pickPropertiesCreate": [
            "properties.sku",
            "properties.product",
            "properties.vendor",
            "properties.marketplacePublisher",
            "properties.marketplaceOffer"
        ]
    },
    {
        "type": "WebAppPrivateAccess",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateAccess/virtualNetworks",
                "operationId": "WebApps_GetPrivateAccess"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateAccess/virtualNetworks",
                "operationId": "WebApps_PutPrivateAccessVnet"
            }
        },
        "pickProperties": [
            "properties.enabled",
            "properties.virtualNetworks"
        ],
        "pickPropertiesCreate": [
            "properties.enabled",
            "properties.virtualNetworks"
        ]
    },
    {
        "type": "WebAppPrivateAccessSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateAccess/virtualNetworks",
                "operationId": "WebApps_GetPrivateAccessSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateAccess/virtualNetworks",
                "operationId": "WebApps_PutPrivateAccessVnetSlot"
            }
        },
        "pickProperties": [
            "properties.enabled",
            "properties.virtualNetworks"
        ],
        "pickPropertiesCreate": [
            "properties.enabled",
            "properties.virtualNetworks"
        ]
    },
    {
        "type": "WebAppPrivateEndpointConnection",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_GetPrivateEndpointConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_ApproveOrRejectPrivateEndpointConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_DeletePrivateEndpointConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections",
                "operationId": "WebApps_GetPrivateEndpointConnectionList"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState"
        ],
        "pickProperties": [
            "properties.ipAddresses"
        ],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppPrivateEndpointConnectionSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_GetPrivateEndpointConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_ApproveOrRejectPrivateEndpointConnectionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_DeletePrivateEndpointConnectionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections",
                "operationId": "WebApps_GetPrivateEndpointConnectionListSlot"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState"
        ],
        "pickProperties": [
            "properties.ipAddresses"
        ],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppProcess",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}",
                "operationId": "WebApps_GetProcess"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}",
                "operationId": "WebApps_DeleteProcess"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes",
                "operationId": "WebApps_ListProcesses"
            }
        },
        "omitProperties": [
            "properties.identifier"
        ],
        "pickProperties": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.iis_profile_timeout_in_seconds",
            "properties.parent",
            "properties.children",
            "properties.threads",
            "properties.open_file_handles",
            "properties.modules",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.environment_variables",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ],
        "pickPropertiesCreate": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.iis_profile_timeout_in_seconds",
            "properties.parent",
            "properties.children",
            "properties.threads",
            "properties.open_file_handles",
            "properties.modules",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.environment_variables",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ]
    },
    {
        "type": "WebAppProcessSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}",
                "operationId": "WebApps_GetProcessSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}",
                "operationId": "WebApps_DeleteProcessSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes",
                "operationId": "WebApps_ListProcessesSlot"
            }
        },
        "omitProperties": [
            "properties.identifier"
        ],
        "pickProperties": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.iis_profile_timeout_in_seconds",
            "properties.parent",
            "properties.children",
            "properties.threads",
            "properties.open_file_handles",
            "properties.modules",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.environment_variables",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ],
        "pickPropertiesCreate": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.iis_profile_timeout_in_seconds",
            "properties.parent",
            "properties.children",
            "properties.threads",
            "properties.open_file_handles",
            "properties.modules",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.environment_variables",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ]
    },
    {
        "type": "WebAppPublicCertificate",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_GetPublicCertificate"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_CreateOrUpdatePublicCertificate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_DeletePublicCertificate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates",
                "operationId": "WebApps_ListPublicCertificates"
            }
        },
        "omitProperties": [
            "properties.thumbprint"
        ],
        "pickProperties": [
            "properties.blob",
            "properties.publicCertificateLocation"
        ],
        "pickPropertiesCreate": [
            "properties.blob",
            "properties.publicCertificateLocation"
        ]
    },
    {
        "type": "WebAppPublicCertificateSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_GetPublicCertificateSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_CreateOrUpdatePublicCertificateSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_DeletePublicCertificateSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates",
                "operationId": "WebApps_ListPublicCertificatesSlot"
            }
        },
        "omitProperties": [
            "properties.thumbprint"
        ],
        "pickProperties": [
            "properties.blob",
            "properties.publicCertificateLocation"
        ],
        "pickPropertiesCreate": [
            "properties.blob",
            "properties.publicCertificateLocation"
        ]
    },
    {
        "type": "WebAppRelayServiceConnection",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "WebApps_GetRelayServiceConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "WebApps_CreateOrUpdateRelayServiceConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "WebApps_DeleteRelayServiceConnection"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "WebApps_UpdateRelayServiceConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection",
                "operationId": "WebApps_ListRelayServiceConnections"
            }
        },
        "pickProperties": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ],
        "pickPropertiesCreate": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ]
    },
    {
        "type": "WebAppRelayServiceConnectionSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "WebApps_GetRelayServiceConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "WebApps_CreateOrUpdateRelayServiceConnectionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "WebApps_DeleteRelayServiceConnectionSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "WebApps_UpdateRelayServiceConnectionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection",
                "operationId": "WebApps_ListRelayServiceConnectionsSlot"
            }
        },
        "pickProperties": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ],
        "pickPropertiesCreate": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ]
    },
    {
        "type": "WebAppScmAllowed",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/scm",
                "operationId": "WebApps_GetScmAllowed"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/scm",
                "operationId": "WebApps_UpdateScmAllowed"
            }
        },
        "pickProperties": [
            "properties.allow"
        ],
        "pickPropertiesCreate": [
            "properties.allow"
        ]
    },
    {
        "type": "WebAppScmAllowedSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/scm",
                "operationId": "WebApps_GetScmAllowedSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/scm",
                "operationId": "WebApps_UpdateScmAllowedSlot"
            }
        },
        "pickProperties": [
            "properties.allow"
        ],
        "pickPropertiesCreate": [
            "properties.allow"
        ]
    },
    {
        "type": "WebAppSiteExtension",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_GetSiteExtension"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_InstallSiteExtension"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_DeleteSiteExtension"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions",
                "operationId": "WebApps_ListSiteExtensions"
            }
        },
        "omitProperties": [
            "properties.extension_id",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.title",
            "properties.extension_type",
            "properties.summary",
            "properties.description",
            "properties.version",
            "properties.extension_url",
            "properties.project_url",
            "properties.icon_url",
            "properties.license_url",
            "properties.feed_url",
            "properties.authors",
            "properties.installer_command_line_params",
            "properties.published_date_time",
            "properties.download_count",
            "properties.local_is_latest_version",
            "properties.local_path",
            "properties.installed_date_time",
            "properties.comment"
        ],
        "pickPropertiesCreate": [
            "properties.title",
            "properties.extension_type",
            "properties.summary",
            "properties.description",
            "properties.version",
            "properties.extension_url",
            "properties.project_url",
            "properties.icon_url",
            "properties.license_url",
            "properties.feed_url",
            "properties.authors",
            "properties.installer_command_line_params",
            "properties.published_date_time",
            "properties.download_count",
            "properties.local_is_latest_version",
            "properties.local_path",
            "properties.installed_date_time",
            "properties.comment"
        ]
    },
    {
        "type": "WebAppSiteExtensionSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_GetSiteExtensionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_InstallSiteExtensionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_DeleteSiteExtensionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions",
                "operationId": "WebApps_ListSiteExtensionsSlot"
            }
        },
        "omitProperties": [
            "properties.extension_id",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.title",
            "properties.extension_type",
            "properties.summary",
            "properties.description",
            "properties.version",
            "properties.extension_url",
            "properties.project_url",
            "properties.icon_url",
            "properties.license_url",
            "properties.feed_url",
            "properties.authors",
            "properties.installer_command_line_params",
            "properties.published_date_time",
            "properties.download_count",
            "properties.local_is_latest_version",
            "properties.local_path",
            "properties.installed_date_time",
            "properties.comment"
        ],
        "pickPropertiesCreate": [
            "properties.title",
            "properties.extension_type",
            "properties.summary",
            "properties.description",
            "properties.version",
            "properties.extension_url",
            "properties.project_url",
            "properties.icon_url",
            "properties.license_url",
            "properties.feed_url",
            "properties.authors",
            "properties.installer_command_line_params",
            "properties.published_date_time",
            "properties.download_count",
            "properties.local_is_latest_version",
            "properties.local_path",
            "properties.installed_date_time",
            "properties.comment"
        ]
    },
    {
        "type": "WebAppSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "serverFarm": {
                "type": "ServerFarm",
                "group": "Web",
                "createOnly": true
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true
            },
            "webApp": {
                "type": "WebApp",
                "group": "Web",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "WebApps_GetSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "WebApps_CreateOrUpdateSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "WebApps_DeleteSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "WebApps_UpdateSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots",
                "operationId": "WebApps_ListSlots"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.hostNames",
            "properties.repositorySiteName",
            "properties.usageState",
            "properties.enabledHostNames",
            "properties.availabilityState",
            "properties.hostNameSslStates",
            "properties.serverFarmId",
            "properties.reserved",
            "properties.isXenon",
            "properties.hyperV",
            "properties.lastModifiedTimeUtc",
            "properties.siteConfig.acrUserManagedIdentityID",
            "properties.siteConfig.machineKey",
            "properties.siteConfig.autoHealRules.triggers.statusCodes",
            "properties.siteConfig.autoHealRules.triggers.statusCodesRange",
            "properties.siteConfig.vnetName",
            "properties.siteConfig.apiManagementConfig.id",
            "properties.siteConfig.managedServiceIdentityId",
            "properties.siteConfig.xManagedServiceIdentityId",
            "properties.siteConfig.ftpsState",
            "properties.trafficManagerHostNames",
            "properties.targetSwapSlot",
            "properties.hostingEnvironmentProfile",
            "properties.customDomainVerificationId",
            "properties.outboundIpAddresses",
            "properties.possibleOutboundIpAddresses",
            "properties.suspendedTill",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo",
            "properties.resourceGroup",
            "properties.isDefaultContainer",
            "properties.defaultHostName",
            "properties.slotSwapStatus",
            "properties.inProgressOperationId",
            "properties.virtualNetworkSubnetId",
            "identity.tenantId",
            "identity.principalId",
            "extendedLocation.type"
        ],
        "pickProperties": [
            "properties.enabled",
            "properties.siteConfig.numberOfWorkers",
            "properties.siteConfig.defaultDocuments",
            "properties.siteConfig.netFrameworkVersion",
            "properties.siteConfig.phpVersion",
            "properties.siteConfig.pythonVersion",
            "properties.siteConfig.nodeVersion",
            "properties.siteConfig.powerShellVersion",
            "properties.siteConfig.linuxFxVersion",
            "properties.siteConfig.windowsFxVersion",
            "properties.siteConfig.requestTracingEnabled",
            "properties.siteConfig.requestTracingExpirationTime",
            "properties.siteConfig.remoteDebuggingEnabled",
            "properties.siteConfig.remoteDebuggingVersion",
            "properties.siteConfig.httpLoggingEnabled",
            "properties.siteConfig.acrUseManagedIdentityCreds",
            "properties.siteConfig.logsDirectorySizeLimit",
            "properties.siteConfig.detailedErrorLoggingEnabled",
            "properties.siteConfig.publishingUsername",
            "properties.siteConfig.appSettings",
            "properties.siteConfig.connectionStrings",
            "properties.siteConfig.handlerMappings",
            "properties.siteConfig.documentRoot",
            "properties.siteConfig.scmType",
            "properties.siteConfig.use32BitWorkerProcess",
            "properties.siteConfig.webSocketsEnabled",
            "properties.siteConfig.alwaysOn",
            "properties.siteConfig.javaVersion",
            "properties.siteConfig.javaContainer",
            "properties.siteConfig.javaContainerVersion",
            "properties.siteConfig.appCommandLine",
            "properties.siteConfig.managedPipelineMode",
            "properties.siteConfig.virtualApplications",
            "properties.siteConfig.loadBalancing",
            "properties.siteConfig.experiments.rampUpRules",
            "properties.siteConfig.limits.maxPercentageCpu",
            "properties.siteConfig.limits.maxMemoryInMb",
            "properties.siteConfig.limits.maxDiskSizeInMb",
            "properties.siteConfig.autoHealEnabled",
            "properties.siteConfig.autoHealRules.triggers.requests.count",
            "properties.siteConfig.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.path",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath",
            "properties.siteConfig.autoHealRules.actions.actionType",
            "properties.siteConfig.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.tracingOptions",
            "properties.siteConfig.vnetRouteAllEnabled",
            "properties.siteConfig.vnetPrivatePortsCount",
            "properties.siteConfig.cors.allowedOrigins",
            "properties.siteConfig.cors.supportCredentials",
            "properties.siteConfig.push.properties.isPushEnabled",
            "properties.siteConfig.push.properties.tagWhitelistJson",
            "properties.siteConfig.push.properties.tagsRequiringAuth",
            "properties.siteConfig.push.properties.dynamicTagsJson",
            "properties.siteConfig.apiDefinition.url",
            "properties.siteConfig.autoSwapSlotName",
            "properties.siteConfig.localMySqlEnabled",
            "properties.siteConfig.keyVaultReferenceIdentity",
            "properties.siteConfig.ipSecurityRestrictions",
            "properties.siteConfig.scmIpSecurityRestrictions",
            "properties.siteConfig.scmIpSecurityRestrictionsUseMain",
            "properties.siteConfig.http20Enabled",
            "properties.siteConfig.minTlsVersion",
            "properties.siteConfig.scmMinTlsVersion",
            "properties.siteConfig.preWarmedInstanceCount",
            "properties.siteConfig.functionAppScaleLimit",
            "properties.siteConfig.healthCheckPath",
            "properties.siteConfig.functionsRuntimeScaleMonitoringEnabled",
            "properties.siteConfig.websiteTimeZone",
            "properties.siteConfig.minimumElasticInstanceCount",
            "properties.siteConfig.azureStorageAccounts",
            "properties.siteConfig.publicNetworkAccess",
            "properties.scmSiteAlsoStopped",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.clientCertMode",
            "properties.clientCertExclusionPaths",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.dailyMemoryTimeQuota",
            "properties.httpsOnly",
            "properties.redundancyMode",
            "properties.storageAccountRequired",
            "properties.keyVaultReferenceIdentity",
            "identity.type",
            "identity.userAssignedIdentities",
            "extendedLocation.name"
        ],
        "pickPropertiesCreate": [
            "properties.enabled",
            "properties.siteConfig.numberOfWorkers",
            "properties.siteConfig.defaultDocuments",
            "properties.siteConfig.netFrameworkVersion",
            "properties.siteConfig.phpVersion",
            "properties.siteConfig.pythonVersion",
            "properties.siteConfig.nodeVersion",
            "properties.siteConfig.powerShellVersion",
            "properties.siteConfig.linuxFxVersion",
            "properties.siteConfig.windowsFxVersion",
            "properties.siteConfig.requestTracingEnabled",
            "properties.siteConfig.requestTracingExpirationTime",
            "properties.siteConfig.remoteDebuggingEnabled",
            "properties.siteConfig.remoteDebuggingVersion",
            "properties.siteConfig.httpLoggingEnabled",
            "properties.siteConfig.acrUseManagedIdentityCreds",
            "properties.siteConfig.logsDirectorySizeLimit",
            "properties.siteConfig.detailedErrorLoggingEnabled",
            "properties.siteConfig.publishingUsername",
            "properties.siteConfig.appSettings",
            "properties.siteConfig.connectionStrings",
            "properties.siteConfig.handlerMappings",
            "properties.siteConfig.documentRoot",
            "properties.siteConfig.scmType",
            "properties.siteConfig.use32BitWorkerProcess",
            "properties.siteConfig.webSocketsEnabled",
            "properties.siteConfig.alwaysOn",
            "properties.siteConfig.javaVersion",
            "properties.siteConfig.javaContainer",
            "properties.siteConfig.javaContainerVersion",
            "properties.siteConfig.appCommandLine",
            "properties.siteConfig.managedPipelineMode",
            "properties.siteConfig.virtualApplications",
            "properties.siteConfig.loadBalancing",
            "properties.siteConfig.experiments.rampUpRules",
            "properties.siteConfig.limits.maxPercentageCpu",
            "properties.siteConfig.limits.maxMemoryInMb",
            "properties.siteConfig.limits.maxDiskSizeInMb",
            "properties.siteConfig.autoHealEnabled",
            "properties.siteConfig.autoHealRules.triggers.requests.count",
            "properties.siteConfig.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.path",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath",
            "properties.siteConfig.autoHealRules.actions.actionType",
            "properties.siteConfig.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.tracingOptions",
            "properties.siteConfig.vnetRouteAllEnabled",
            "properties.siteConfig.vnetPrivatePortsCount",
            "properties.siteConfig.cors.allowedOrigins",
            "properties.siteConfig.cors.supportCredentials",
            "properties.siteConfig.push.properties.isPushEnabled",
            "properties.siteConfig.push.properties.tagWhitelistJson",
            "properties.siteConfig.push.properties.tagsRequiringAuth",
            "properties.siteConfig.push.properties.dynamicTagsJson",
            "properties.siteConfig.apiDefinition.url",
            "properties.siteConfig.autoSwapSlotName",
            "properties.siteConfig.localMySqlEnabled",
            "properties.siteConfig.keyVaultReferenceIdentity",
            "properties.siteConfig.ipSecurityRestrictions",
            "properties.siteConfig.scmIpSecurityRestrictions",
            "properties.siteConfig.scmIpSecurityRestrictionsUseMain",
            "properties.siteConfig.http20Enabled",
            "properties.siteConfig.minTlsVersion",
            "properties.siteConfig.scmMinTlsVersion",
            "properties.siteConfig.preWarmedInstanceCount",
            "properties.siteConfig.functionAppScaleLimit",
            "properties.siteConfig.healthCheckPath",
            "properties.siteConfig.functionsRuntimeScaleMonitoringEnabled",
            "properties.siteConfig.websiteTimeZone",
            "properties.siteConfig.minimumElasticInstanceCount",
            "properties.siteConfig.azureStorageAccounts",
            "properties.siteConfig.publicNetworkAccess",
            "properties.scmSiteAlsoStopped",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.clientCertMode",
            "properties.clientCertExclusionPaths",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.dailyMemoryTimeQuota",
            "properties.httpsOnly",
            "properties.redundancyMode",
            "properties.storageAccountRequired",
            "properties.keyVaultReferenceIdentity",
            "identity.type",
            "identity.userAssignedIdentities",
            "extendedLocation.name"
        ],
        "propertiesDefault": {
            "properties": {
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "netFrameworkVersion": "v4.6",
                    "localMySqlEnabled": false,
                    "http20Enabled": true
                },
                "scmSiteAlsoStopped": false
            }
        }
    },
    {
        "type": "WebAppSourceControl",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "WebApps_GetSourceControl"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "WebApps_CreateOrUpdateSourceControl"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "WebApps_DeleteSourceControl"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "WebApps_UpdateSourceControl"
            }
        },
        "omitProperties": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.isGitHubAction",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial",
            "properties.gitHubActionConfiguration.containerConfiguration.password"
        ],
        "pickProperties": [
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeStack",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeVersion",
            "properties.gitHubActionConfiguration.containerConfiguration.serverUrl",
            "properties.gitHubActionConfiguration.containerConfiguration.imageName",
            "properties.gitHubActionConfiguration.containerConfiguration.username",
            "properties.gitHubActionConfiguration.isLinux",
            "properties.gitHubActionConfiguration.generateWorkflowFile"
        ],
        "pickPropertiesCreate": [
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeStack",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeVersion",
            "properties.gitHubActionConfiguration.containerConfiguration.serverUrl",
            "properties.gitHubActionConfiguration.containerConfiguration.imageName",
            "properties.gitHubActionConfiguration.containerConfiguration.username",
            "properties.gitHubActionConfiguration.isLinux",
            "properties.gitHubActionConfiguration.generateWorkflowFile"
        ],
        "environmentVariables": [
            {
                "path": "properties.gitHubActionConfiguration.containerConfiguration.password",
                "suffix": "PASSWORD"
            }
        ]
    },
    {
        "type": "WebAppSourceControlSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "WebApps_GetSourceControlSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "WebApps_CreateOrUpdateSourceControlSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "WebApps_DeleteSourceControlSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "WebApps_UpdateSourceControlSlot"
            }
        },
        "omitProperties": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.isGitHubAction",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial",
            "properties.gitHubActionConfiguration.containerConfiguration.password"
        ],
        "pickProperties": [
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeStack",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeVersion",
            "properties.gitHubActionConfiguration.containerConfiguration.serverUrl",
            "properties.gitHubActionConfiguration.containerConfiguration.imageName",
            "properties.gitHubActionConfiguration.containerConfiguration.username",
            "properties.gitHubActionConfiguration.isLinux",
            "properties.gitHubActionConfiguration.generateWorkflowFile"
        ],
        "pickPropertiesCreate": [
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeStack",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeVersion",
            "properties.gitHubActionConfiguration.containerConfiguration.serverUrl",
            "properties.gitHubActionConfiguration.containerConfiguration.imageName",
            "properties.gitHubActionConfiguration.containerConfiguration.username",
            "properties.gitHubActionConfiguration.isLinux",
            "properties.gitHubActionConfiguration.generateWorkflowFile"
        ],
        "environmentVariables": [
            {
                "path": "properties.gitHubActionConfiguration.containerConfiguration.password",
                "suffix": "PASSWORD"
            }
        ]
    },
    {
        "type": "WebAppSwiftVirtualNetworkConnection",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork",
                "operationId": "WebApps_GetSwiftVirtualNetworkConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork",
                "operationId": "WebApps_CreateOrUpdateSwiftVirtualNetworkConnectionWithCheck"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork",
                "operationId": "WebApps_DeleteSwiftVirtualNetwork"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork",
                "operationId": "WebApps_UpdateSwiftVirtualNetworkConnectionWithCheck"
            }
        },
        "omitProperties": [
            "properties.subnetResourceId"
        ],
        "pickProperties": [
            "properties.swiftSupported"
        ],
        "pickPropertiesCreate": [
            "properties.swiftSupported"
        ]
    },
    {
        "type": "WebAppSwiftVirtualNetworkConnectionSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork",
                "operationId": "WebApps_GetSwiftVirtualNetworkConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork",
                "operationId": "WebApps_CreateOrUpdateSwiftVirtualNetworkConnectionWithCheckSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork",
                "operationId": "WebApps_DeleteSwiftVirtualNetworkSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork",
                "operationId": "WebApps_UpdateSwiftVirtualNetworkConnectionWithCheckSlot"
            }
        },
        "omitProperties": [
            "properties.subnetResourceId"
        ],
        "pickProperties": [
            "properties.swiftSupported"
        ],
        "pickPropertiesCreate": [
            "properties.swiftSupported"
        ]
    },
    {
        "type": "WebAppTriggeredWebJob",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}",
                "operationId": "WebApps_GetTriggeredWebJob"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}",
                "operationId": "WebApps_DeleteTriggeredWebJob"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs",
                "operationId": "WebApps_ListTriggeredWebJobs"
            }
        },
        "omitProperties": [
            "properties.latest_run.web_job_id",
            "properties.latest_run.status"
        ],
        "pickProperties": [
            "properties.latest_run.web_job_name",
            "properties.latest_run.start_time",
            "properties.latest_run.end_time",
            "properties.latest_run.duration",
            "properties.latest_run.output_url",
            "properties.latest_run.error_url",
            "properties.latest_run.url",
            "properties.latest_run.job_name",
            "properties.latest_run.trigger",
            "properties.history_url",
            "properties.scheduler_logs_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk",
            "properties.settings"
        ],
        "pickPropertiesCreate": [
            "properties.latest_run.web_job_name",
            "properties.latest_run.start_time",
            "properties.latest_run.end_time",
            "properties.latest_run.duration",
            "properties.latest_run.output_url",
            "properties.latest_run.error_url",
            "properties.latest_run.url",
            "properties.latest_run.job_name",
            "properties.latest_run.trigger",
            "properties.history_url",
            "properties.scheduler_logs_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk",
            "properties.settings"
        ]
    },
    {
        "type": "WebAppTriggeredWebJobSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}",
                "operationId": "WebApps_GetTriggeredWebJobSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}",
                "operationId": "WebApps_DeleteTriggeredWebJobSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs",
                "operationId": "WebApps_ListTriggeredWebJobsSlot"
            }
        },
        "omitProperties": [
            "properties.latest_run.web_job_id",
            "properties.latest_run.status"
        ],
        "pickProperties": [
            "properties.latest_run.web_job_name",
            "properties.latest_run.start_time",
            "properties.latest_run.end_time",
            "properties.latest_run.duration",
            "properties.latest_run.output_url",
            "properties.latest_run.error_url",
            "properties.latest_run.url",
            "properties.latest_run.job_name",
            "properties.latest_run.trigger",
            "properties.history_url",
            "properties.scheduler_logs_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk",
            "properties.settings"
        ],
        "pickPropertiesCreate": [
            "properties.latest_run.web_job_name",
            "properties.latest_run.start_time",
            "properties.latest_run.end_time",
            "properties.latest_run.duration",
            "properties.latest_run.output_url",
            "properties.latest_run.error_url",
            "properties.latest_run.url",
            "properties.latest_run.job_name",
            "properties.latest_run.trigger",
            "properties.history_url",
            "properties.scheduler_logs_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk",
            "properties.settings"
        ]
    },
    {
        "type": "WebAppVnetConnection",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_GetVnetConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_CreateOrUpdateVnetConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_DeleteVnetConnection"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_UpdateVnetConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections",
                "operationId": "WebApps_ListVnetConnections"
            }
        },
        "omitProperties": [
            "properties.vnetResourceId",
            "properties.certThumbprint",
            "properties.routes",
            "properties.resyncRequired"
        ],
        "pickProperties": [
            "properties.certBlob",
            "properties.dnsServers",
            "properties.isSwift"
        ],
        "pickPropertiesCreate": [
            "properties.certBlob",
            "properties.dnsServers",
            "properties.isSwift"
        ]
    },
    {
        "type": "WebAppVnetConnectionSlot",
        "group": "Web",
        "apiVersion": "2021-02-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name"
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_GetVnetConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_CreateOrUpdateVnetConnectionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_DeleteVnetConnectionSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_UpdateVnetConnectionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections",
                "operationId": "WebApps_ListVnetConnectionsSlot"
            }
        },
        "omitProperties": [
            "properties.vnetResourceId",
            "properties.certThumbprint",
            "properties.routes",
            "properties.resyncRequired"
        ],
        "pickProperties": [
            "properties.certBlob",
            "properties.dnsServers",
            "properties.isSwift"
        ],
        "pickPropertiesCreate": [
            "properties.certBlob",
            "properties.dnsServers",
            "properties.isSwift"
        ]
    }
]