[
    {
        "type": "ApplicationGateway",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "managedIdentities": {
                "type": "UserAssignedIdentity",
                "group": "ManagedIdentity",
                "createOnly": true,
                "list": true
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.frontendIPConfigurations.items.subnet.id"
            },
            "publicIpAddress": {
                "type": "PublicIPAddress",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.frontendIPConfigurations.items.publicIPAddress.id"
            },
            "firewallPolicy": {
                "type": "FirewallPolicy",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.firewallPolicy.id"
            },
            "loadBalancerBackendAddressPool": {
                "type": "LoadBalancerBackendAddressPool",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.routingRules.items.backendAddressPool.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
                "operationId": "ApplicationGateways_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
                "operationId": "ApplicationGateways_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
                "operationId": "ApplicationGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}",
                "operationId": "ApplicationGateways_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationGateways",
                "operationId": "ApplicationGateways_ListAll"
            }
        },
        "omitProperties": [
            "properties.operationalState",
            "properties.firewallPolicy.id",
            "properties.privateEndpointConnections",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag",
            "identity.principalId",
            "identity.tenantId"
        ],
        "pickProperties": [
            "properties.sku.name",
            "properties.sku.tier",
            "properties.sku.capacity",
            "properties.sslPolicy.policyType",
            "properties.sslPolicy.policyName",
            "properties.sslPolicy.minProtocolVersion",
            "properties.gatewayIPConfigurations[].name",
            "properties.authenticationCertificates[].properties.data",
            "properties.authenticationCertificates[].name",
            "properties.trustedRootCertificates[].properties.data",
            "properties.trustedRootCertificates[].name",
            "properties.trustedClientCertificates[].properties.data",
            "properties.trustedClientCertificates[].name",
            "properties.sslCertificates[].properties.data",
            "properties.sslCertificates[].name",
            "properties.frontendIPConfigurations[].properties.privateIPAddress",
            "properties.frontendIPConfigurations[].properties.privateIPAllocationMethod",
            "properties.frontendIPConfigurations[].name",
            "properties.frontendPorts[].properties.port",
            "properties.frontendPorts[].name",
            "properties.probes[].properties.protocol",
            "properties.probes[].properties.host",
            "properties.probes[].properties.path",
            "properties.probes[].properties.interval",
            "properties.probes[].properties.timeout",
            "properties.probes[].properties.unhealthyThreshold",
            "properties.probes[].properties.pickHostNameFromBackendHttpSettings",
            "properties.probes[].properties.pickHostNameFromBackendSettings",
            "properties.probes[].properties.minServers",
            "properties.probes[].properties.match.body",
            "properties.probes[].properties.port",
            "properties.probes[].name",
            "properties.backendAddressPools[].properties.backendAddresses[].fqdn",
            "properties.backendAddressPools[].properties.backendAddresses[].ipAddress",
            "properties.backendAddressPools[].name",
            "properties.backendHttpSettingsCollection[].properties.port",
            "properties.backendHttpSettingsCollection[].properties.protocol",
            "properties.backendHttpSettingsCollection[].properties.cookieBasedAffinity",
            "properties.backendHttpSettingsCollection[].properties.requestTimeout",
            "properties.backendHttpSettingsCollection[].properties.connectionDraining.enabled",
            "properties.backendHttpSettingsCollection[].properties.connectionDraining.drainTimeoutInSec",
            "properties.backendHttpSettingsCollection[].properties.hostName",
            "properties.backendHttpSettingsCollection[].properties.pickHostNameFromBackendAddress",
            "properties.backendHttpSettingsCollection[].properties.affinityCookieName",
            "properties.backendHttpSettingsCollection[].properties.probeEnabled",
            "properties.backendHttpSettingsCollection[].properties.path",
            "properties.backendHttpSettingsCollection[].name",
            "properties.backendSettingsCollection[].properties.port",
            "properties.backendSettingsCollection[].properties.protocol",
            "properties.backendSettingsCollection[].properties.timeout",
            "properties.backendSettingsCollection[].properties.hostName",
            "properties.backendSettingsCollection[].properties.pickHostNameFromBackendAddress",
            "properties.backendSettingsCollection[].name",
            "properties.httpListeners[].properties.protocol",
            "properties.httpListeners[].properties.hostName",
            "properties.httpListeners[].properties.requireServerNameIndication",
            "properties.httpListeners[].properties.customErrorConfigurations[].customErrorPageUrl",
            "properties.httpListeners[].name",
            "properties.listeners[].properties.protocol",
            "properties.listeners[].name",
            "properties.sslProfiles[].properties.sslPolicy.policyType",
            "properties.sslProfiles[].properties.sslPolicy.policyName",
            "properties.sslProfiles[].properties.sslPolicy.minProtocolVersion",
            "properties.sslProfiles[].properties.clientAuthConfiguration.verifyClientCertIssuerDN",
            "properties.sslProfiles[].name",
            "properties.urlPathMaps[].properties.pathRules[].name",
            "properties.urlPathMaps[].name",
            "properties.requestRoutingRules[].properties.ruleType",
            "properties.requestRoutingRules[].properties.priority",
            "properties.requestRoutingRules[].name",
            "properties.routingRules[].properties.ruleType",
            "properties.routingRules[].name",
            "properties.rewriteRuleSets[].properties.rewriteRules[].name",
            "properties.rewriteRuleSets[].properties.rewriteRules[].ruleSequence",
            "properties.rewriteRuleSets[].properties.rewriteRules[].conditions[].variable",
            "properties.rewriteRuleSets[].properties.rewriteRules[].conditions[].pattern",
            "properties.rewriteRuleSets[].properties.rewriteRules[].conditions[].ignoreCase",
            "properties.rewriteRuleSets[].properties.rewriteRules[].conditions[].negate",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.requestHeaderConfigurations[].headerName",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.requestHeaderConfigurations[].headerValue",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.responseHeaderConfigurations[].headerName",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.responseHeaderConfigurations[].headerValue",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.urlConfiguration.modifiedPath",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.urlConfiguration.modifiedQueryString",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.urlConfiguration.reroute",
            "properties.rewriteRuleSets[].name",
            "properties.redirectConfigurations[].properties.redirectType",
            "properties.redirectConfigurations[].properties.targetUrl",
            "properties.redirectConfigurations[].properties.includePath",
            "properties.redirectConfigurations[].properties.includeQueryString",
            "properties.redirectConfigurations[].name",
            "properties.webApplicationFirewallConfiguration.enabled",
            "properties.webApplicationFirewallConfiguration.firewallMode",
            "properties.webApplicationFirewallConfiguration.ruleSetType",
            "properties.webApplicationFirewallConfiguration.ruleSetVersion",
            "properties.webApplicationFirewallConfiguration.disabledRuleGroups[].ruleGroupName",
            "properties.webApplicationFirewallConfiguration.requestBodyCheck",
            "properties.webApplicationFirewallConfiguration.maxRequestBodySize",
            "properties.webApplicationFirewallConfiguration.maxRequestBodySizeInKb",
            "properties.webApplicationFirewallConfiguration.fileUploadLimitInMb",
            "properties.webApplicationFirewallConfiguration.exclusions[].matchVariable",
            "properties.webApplicationFirewallConfiguration.exclusions[].selectorMatchOperator",
            "properties.webApplicationFirewallConfiguration.exclusions[].selector",
            "properties.enableHttp2",
            "properties.enableFips",
            "properties.autoscaleConfiguration.minCapacity",
            "properties.autoscaleConfiguration.maxCapacity",
            "properties.privateLinkConfigurations[].properties.ipConfigurations[].properties.privateIPAddress",
            "properties.privateLinkConfigurations[].properties.ipConfigurations[].properties.privateIPAllocationMethod",
            "properties.privateLinkConfigurations[].properties.ipConfigurations[].properties.primary",
            "properties.privateLinkConfigurations[].properties.ipConfigurations[].name",
            "properties.privateLinkConfigurations[].name",
            "properties.customErrorConfigurations[].customErrorPageUrl",
            "properties.forceFirewallPolicyAssociation",
            "properties.loadDistributionPolicies[].properties.loadDistributionTargets[].properties.weightPerServer",
            "properties.loadDistributionPolicies[].properties.loadDistributionTargets[].name",
            "properties.loadDistributionPolicies[].properties.loadDistributionAlgorithm",
            "properties.loadDistributionPolicies[].name",
            "properties.globalConfiguration.enableRequestBuffering",
            "properties.globalConfiguration.enableResponseBuffering",
            "identity.type"
        ],
        "pickPropertiesCreate": [
            "properties.sku.name",
            "properties.sku.tier",
            "properties.sku.capacity",
            "properties.sslPolicy.policyType",
            "properties.sslPolicy.policyName",
            "properties.sslPolicy.minProtocolVersion",
            "properties.gatewayIPConfigurations[].name",
            "properties.authenticationCertificates[].properties.data",
            "properties.authenticationCertificates[].name",
            "properties.trustedRootCertificates[].properties.data",
            "properties.trustedRootCertificates[].name",
            "properties.trustedClientCertificates[].properties.data",
            "properties.trustedClientCertificates[].name",
            "properties.sslCertificates[].properties.data",
            "properties.sslCertificates[].name",
            "properties.frontendIPConfigurations[].properties.privateIPAddress",
            "properties.frontendIPConfigurations[].properties.privateIPAllocationMethod",
            "properties.frontendIPConfigurations[].name",
            "properties.frontendPorts[].properties.port",
            "properties.frontendPorts[].name",
            "properties.probes[].properties.protocol",
            "properties.probes[].properties.host",
            "properties.probes[].properties.path",
            "properties.probes[].properties.interval",
            "properties.probes[].properties.timeout",
            "properties.probes[].properties.unhealthyThreshold",
            "properties.probes[].properties.pickHostNameFromBackendHttpSettings",
            "properties.probes[].properties.pickHostNameFromBackendSettings",
            "properties.probes[].properties.minServers",
            "properties.probes[].properties.match.body",
            "properties.probes[].properties.port",
            "properties.probes[].name",
            "properties.backendAddressPools[].properties.backendAddresses[].fqdn",
            "properties.backendAddressPools[].properties.backendAddresses[].ipAddress",
            "properties.backendAddressPools[].name",
            "properties.backendHttpSettingsCollection[].properties.port",
            "properties.backendHttpSettingsCollection[].properties.protocol",
            "properties.backendHttpSettingsCollection[].properties.cookieBasedAffinity",
            "properties.backendHttpSettingsCollection[].properties.requestTimeout",
            "properties.backendHttpSettingsCollection[].properties.connectionDraining.enabled",
            "properties.backendHttpSettingsCollection[].properties.connectionDraining.drainTimeoutInSec",
            "properties.backendHttpSettingsCollection[].properties.hostName",
            "properties.backendHttpSettingsCollection[].properties.pickHostNameFromBackendAddress",
            "properties.backendHttpSettingsCollection[].properties.affinityCookieName",
            "properties.backendHttpSettingsCollection[].properties.probeEnabled",
            "properties.backendHttpSettingsCollection[].properties.path",
            "properties.backendHttpSettingsCollection[].name",
            "properties.backendSettingsCollection[].properties.port",
            "properties.backendSettingsCollection[].properties.protocol",
            "properties.backendSettingsCollection[].properties.timeout",
            "properties.backendSettingsCollection[].properties.hostName",
            "properties.backendSettingsCollection[].properties.pickHostNameFromBackendAddress",
            "properties.backendSettingsCollection[].name",
            "properties.httpListeners[].properties.protocol",
            "properties.httpListeners[].properties.hostName",
            "properties.httpListeners[].properties.requireServerNameIndication",
            "properties.httpListeners[].properties.customErrorConfigurations[].customErrorPageUrl",
            "properties.httpListeners[].name",
            "properties.listeners[].properties.protocol",
            "properties.listeners[].name",
            "properties.sslProfiles[].properties.sslPolicy.policyType",
            "properties.sslProfiles[].properties.sslPolicy.policyName",
            "properties.sslProfiles[].properties.sslPolicy.minProtocolVersion",
            "properties.sslProfiles[].properties.clientAuthConfiguration.verifyClientCertIssuerDN",
            "properties.sslProfiles[].name",
            "properties.urlPathMaps[].properties.pathRules[].name",
            "properties.urlPathMaps[].name",
            "properties.requestRoutingRules[].properties.ruleType",
            "properties.requestRoutingRules[].properties.priority",
            "properties.requestRoutingRules[].name",
            "properties.routingRules[].properties.ruleType",
            "properties.routingRules[].name",
            "properties.rewriteRuleSets[].properties.rewriteRules[].name",
            "properties.rewriteRuleSets[].properties.rewriteRules[].ruleSequence",
            "properties.rewriteRuleSets[].properties.rewriteRules[].conditions[].variable",
            "properties.rewriteRuleSets[].properties.rewriteRules[].conditions[].pattern",
            "properties.rewriteRuleSets[].properties.rewriteRules[].conditions[].ignoreCase",
            "properties.rewriteRuleSets[].properties.rewriteRules[].conditions[].negate",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.requestHeaderConfigurations[].headerName",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.requestHeaderConfigurations[].headerValue",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.responseHeaderConfigurations[].headerName",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.responseHeaderConfigurations[].headerValue",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.urlConfiguration.modifiedPath",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.urlConfiguration.modifiedQueryString",
            "properties.rewriteRuleSets[].properties.rewriteRules[].actionSet.urlConfiguration.reroute",
            "properties.rewriteRuleSets[].name",
            "properties.redirectConfigurations[].properties.redirectType",
            "properties.redirectConfigurations[].properties.targetUrl",
            "properties.redirectConfigurations[].properties.includePath",
            "properties.redirectConfigurations[].properties.includeQueryString",
            "properties.redirectConfigurations[].name",
            "properties.webApplicationFirewallConfiguration.enabled",
            "properties.webApplicationFirewallConfiguration.firewallMode",
            "properties.webApplicationFirewallConfiguration.ruleSetType",
            "properties.webApplicationFirewallConfiguration.ruleSetVersion",
            "properties.webApplicationFirewallConfiguration.disabledRuleGroups[].ruleGroupName",
            "properties.webApplicationFirewallConfiguration.requestBodyCheck",
            "properties.webApplicationFirewallConfiguration.maxRequestBodySize",
            "properties.webApplicationFirewallConfiguration.maxRequestBodySizeInKb",
            "properties.webApplicationFirewallConfiguration.fileUploadLimitInMb",
            "properties.webApplicationFirewallConfiguration.exclusions[].matchVariable",
            "properties.webApplicationFirewallConfiguration.exclusions[].selectorMatchOperator",
            "properties.webApplicationFirewallConfiguration.exclusions[].selector",
            "properties.enableHttp2",
            "properties.enableFips",
            "properties.autoscaleConfiguration.minCapacity",
            "properties.autoscaleConfiguration.maxCapacity",
            "properties.privateLinkConfigurations[].properties.ipConfigurations[].properties.privateIPAddress",
            "properties.privateLinkConfigurations[].properties.ipConfigurations[].properties.privateIPAllocationMethod",
            "properties.privateLinkConfigurations[].properties.ipConfigurations[].properties.primary",
            "properties.privateLinkConfigurations[].properties.ipConfigurations[].name",
            "properties.privateLinkConfigurations[].name",
            "properties.customErrorConfigurations[].customErrorPageUrl",
            "properties.forceFirewallPolicyAssociation",
            "properties.loadDistributionPolicies[].properties.loadDistributionTargets[].properties.weightPerServer",
            "properties.loadDistributionPolicies[].properties.loadDistributionTargets[].name",
            "properties.loadDistributionPolicies[].properties.loadDistributionAlgorithm",
            "properties.loadDistributionPolicies[].name",
            "properties.globalConfiguration.enableRequestBuffering",
            "properties.globalConfiguration.enableResponseBuffering",
            "identity.type"
        ]
    },
    {
        "type": "ApplicationGatewayPrivateEndpointConnection",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "applicationGateway": {
                "type": "ApplicationGateway",
                "group": "Network",
                "name": "applicationGatewayName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/{connectionName}",
                "operationId": "ApplicationGatewayPrivateEndpointConnections_Delete"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/{connectionName}",
                "operationId": "ApplicationGatewayPrivateEndpointConnections_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections/{connectionName}",
                "operationId": "ApplicationGatewayPrivateEndpointConnections_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationGateways/{applicationGatewayName}/privateEndpointConnections",
                "operationId": "ApplicationGatewayPrivateEndpointConnections_List"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState",
            "properties.linkIdentifier",
            "etag",
            "type"
        ],
        "pickProperties": [
            "name"
        ],
        "pickPropertiesCreate": [
            "name"
        ],
        "propertiesDefault": {
            "properties": {
                "privateEndpoint": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "ApplicationSecurityGroup",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",
                "operationId": "ApplicationSecurityGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",
                "operationId": "ApplicationSecurityGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",
                "operationId": "ApplicationSecurityGroups_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/applicationSecurityGroups/{applicationSecurityGroupName}",
                "operationId": "ApplicationSecurityGroups_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/applicationSecurityGroups",
                "operationId": "ApplicationSecurityGroups_ListAll"
            }
        },
        "omitProperties": [
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "AzureFirewall",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.managementIpConfiguration.subnet.id"
            },
            "publicIpAddress": {
                "type": "PublicIPAddress",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.managementIpConfiguration.publicIPAddress.id"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualHub.id"
            },
            "firewallPolicy": {
                "type": "FirewallPolicy",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.firewallPolicy.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",
                "operationId": "AzureFirewalls_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",
                "operationId": "AzureFirewalls_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",
                "operationId": "AzureFirewalls_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/azureFirewalls/{azureFirewallName}",
                "operationId": "AzureFirewalls_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/azureFirewalls",
                "operationId": "AzureFirewalls_ListAll"
            }
        },
        "omitProperties": [
            "properties.managementIpConfiguration.properties.privateIPAddress",
            "properties.managementIpConfiguration.properties.subnet.id",
            "properties.managementIpConfiguration.properties.publicIPAddress.id",
            "properties.managementIpConfiguration.properties.provisioningState",
            "properties.managementIpConfiguration.etag",
            "properties.managementIpConfiguration.type",
            "properties.provisioningState",
            "properties.virtualHub.id",
            "properties.firewallPolicy.id",
            "properties.ipGroups",
            "etag"
        ],
        "pickProperties": [
            "properties.applicationRuleCollections[].properties.priority",
            "properties.applicationRuleCollections[].properties.action.type",
            "properties.applicationRuleCollections[].properties.rules[].name",
            "properties.applicationRuleCollections[].properties.rules[].description",
            "properties.applicationRuleCollections[].properties.rules[].protocols[].protocolType",
            "properties.applicationRuleCollections[].properties.rules[].protocols[].port",
            "properties.applicationRuleCollections[].name",
            "properties.natRuleCollections[].properties.priority",
            "properties.natRuleCollections[].properties.action.type",
            "properties.natRuleCollections[].properties.rules[].name",
            "properties.natRuleCollections[].properties.rules[].description",
            "properties.natRuleCollections[].properties.rules[].translatedAddress",
            "properties.natRuleCollections[].properties.rules[].translatedPort",
            "properties.natRuleCollections[].properties.rules[].translatedFqdn",
            "properties.natRuleCollections[].name",
            "properties.networkRuleCollections[].properties.priority",
            "properties.networkRuleCollections[].properties.action.type",
            "properties.networkRuleCollections[].properties.rules[].name",
            "properties.networkRuleCollections[].properties.rules[].description",
            "properties.networkRuleCollections[].name",
            "properties.ipConfigurations[].name",
            "",
            "properties.threatIntelMode",
            "properties.hubIPAddresses.publicIPs.addresses[].address",
            "properties.hubIPAddresses.publicIPs.count",
            "properties.hubIPAddresses.privateIPAddress",
            "properties.sku.name",
            "properties.sku.tier"
        ],
        "pickPropertiesCreate": [
            "properties.applicationRuleCollections[].properties.priority",
            "properties.applicationRuleCollections[].properties.action.type",
            "properties.applicationRuleCollections[].properties.rules[].name",
            "properties.applicationRuleCollections[].properties.rules[].description",
            "properties.applicationRuleCollections[].properties.rules[].protocols[].protocolType",
            "properties.applicationRuleCollections[].properties.rules[].protocols[].port",
            "properties.applicationRuleCollections[].name",
            "properties.natRuleCollections[].properties.priority",
            "properties.natRuleCollections[].properties.action.type",
            "properties.natRuleCollections[].properties.rules[].name",
            "properties.natRuleCollections[].properties.rules[].description",
            "properties.natRuleCollections[].properties.rules[].translatedAddress",
            "properties.natRuleCollections[].properties.rules[].translatedPort",
            "properties.natRuleCollections[].properties.rules[].translatedFqdn",
            "properties.natRuleCollections[].name",
            "properties.networkRuleCollections[].properties.priority",
            "properties.networkRuleCollections[].properties.action.type",
            "properties.networkRuleCollections[].properties.rules[].name",
            "properties.networkRuleCollections[].properties.rules[].description",
            "properties.networkRuleCollections[].name",
            "properties.ipConfigurations[].name",
            "",
            "properties.threatIntelMode",
            "properties.hubIPAddresses.publicIPs.addresses[].address",
            "properties.hubIPAddresses.publicIPs.count",
            "properties.hubIPAddresses.privateIPAddress",
            "properties.sku.name",
            "properties.sku.tier"
        ]
    },
    {
        "type": "BastionHost",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.ipConfigurations.items.subnet.id"
            },
            "publicIpAddress": {
                "type": "PublicIPAddress",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.ipConfigurations.items.publicIPAddress.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}",
                "operationId": "BastionHosts_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}",
                "operationId": "BastionHosts_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}",
                "operationId": "BastionHosts_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/bastionHosts/{bastionHostName}",
                "operationId": "BastionHosts_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/bastionHosts",
                "operationId": "BastionHosts_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.ipConfigurations[].properties.privateIPAllocationMethod",
            "properties.ipConfigurations[].name",
            "properties.dnsName",
            "properties.scaleUnits",
            "properties.disableCopyPaste",
            "properties.enableFileCopy",
            "properties.enableIpConnect",
            "properties.enableShareableLink",
            "properties.enableTunneling",
            "sku.name"
        ],
        "pickPropertiesCreate": [
            "properties.ipConfigurations[].properties.privateIPAllocationMethod",
            "properties.ipConfigurations[].name",
            "properties.dnsName",
            "properties.scaleUnits",
            "properties.disableCopyPaste",
            "properties.enableFileCopy",
            "properties.enableIpConnect",
            "properties.enableShareableLink",
            "properties.enableTunneling",
            "sku.name"
        ],
        "propertiesDefault": {
            "properties": {
                "disableCopyPaste": false,
                "enableFileCopy": false,
                "enableIpConnect": false,
                "enableShareableLink": false,
                "enableTunneling": false
            },
            "sku": {
                "name": "Standard"
            }
        }
    },
    {
        "type": "ConfigurationPolicyGroup",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "vpnServerConfiguration": {
                "type": "VpnServerConfiguration",
                "group": "Network",
                "name": "vpnServerConfigurationName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/configurationPolicyGroups/{configurationPolicyGroupName}",
                "operationId": "ConfigurationPolicyGroups_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/configurationPolicyGroups/{configurationPolicyGroupName}",
                "operationId": "ConfigurationPolicyGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/configurationPolicyGroups/{configurationPolicyGroupName}",
                "operationId": "ConfigurationPolicyGroups_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}/configurationPolicyGroups",
                "operationId": "configurationPolicyGroups_ListByVpnServerConfiguration"
            }
        },
        "omitProperties": [
            "properties.p2SConnectionConfigurations",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.isDefault",
            "properties.priority",
            "properties.policyMembers[].name",
            "properties.policyMembers[].attributeType",
            "properties.policyMembers[].attributeValue",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.isDefault",
            "properties.priority",
            "properties.policyMembers[].name",
            "properties.policyMembers[].attributeType",
            "properties.policyMembers[].attributeValue",
            "name"
        ]
    },
    {
        "type": "ConnectionMonitor",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "networkWatcher": {
                "type": "NetworkWatcher",
                "group": "Network",
                "name": "networkWatcherName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",
                "operationId": "ConnectionMonitors_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",
                "operationId": "ConnectionMonitors_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",
                "operationId": "ConnectionMonitors_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}",
                "operationId": "ConnectionMonitors_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors",
                "operationId": "ConnectionMonitors_List"
            }
        },
        "omitProperties": [
            "name",
            "id",
            "etag",
            "type",
            "properties.provisioningState",
            "properties.startTime",
            "properties.monitoringStatus",
            "properties.connectionMonitorType"
        ],
        "pickProperties": [
            "location",
            "properties,source,port.properties,destination,address.properties,destination,port.properties,autoStart.properties,monitoringIntervalInSeconds.properties,endpoints[],name.properties,endpoints[],type.properties,endpoints[],address.properties,endpoints[],filter,type.properties,endpoints[],filter,items[],type.properties,endpoints[],filter,items[],address.properties,endpoints[],scope,include[],address.properties,endpoints[],scope,exclude[],address.properties,endpoints[],coverageLevel.properties,testConfigurations[],name.properties,testConfigurations[],testFrequencySec.properties,testConfigurations[],protocol.properties,testConfigurations[],preferredIPVersion.properties,testConfigurations[],httpConfiguration,port.properties,testConfigurations[],httpConfiguration,method.properties,testConfigurations[],httpConfiguration,path.properties,testConfigurations[],httpConfiguration,requestHeaders[],name.properties,testConfigurations[],httpConfiguration,requestHeaders[],value.properties,testConfigurations[],httpConfiguration,preferHTTPS.properties,testConfigurations[],tcpConfiguration,port.properties,testConfigurations[],tcpConfiguration,disableTraceRoute.properties,testConfigurations[],tcpConfiguration,destinationPortBehavior.properties,testConfigurations[],icmpConfiguration,disableTraceRoute.properties,testConfigurations[],successThreshold,checksFailedPercent.properties,testGroups[],name.properties,testGroups[],disable.properties,outputs[],type.properties,notes"
        ],
        "pickPropertiesCreate": [
            "location",
            "properties.source.port",
            "properties.destination.address",
            "properties.destination.port",
            "properties.autoStart",
            "properties.monitoringIntervalInSeconds",
            "properties.endpoints[].name",
            "properties.endpoints[].type",
            "properties.endpoints[].address",
            "properties.endpoints[].filter.type",
            "properties.endpoints[].filter.items[].type",
            "properties.endpoints[].filter.items[].address",
            "properties.endpoints[].scope.include[].address",
            "properties.endpoints[].scope.exclude[].address",
            "properties.endpoints[].coverageLevel",
            "properties.testConfigurations[].name",
            "properties.testConfigurations[].testFrequencySec",
            "properties.testConfigurations[].protocol",
            "properties.testConfigurations[].preferredIPVersion",
            "properties.testConfigurations[].httpConfiguration.port",
            "properties.testConfigurations[].httpConfiguration.method",
            "properties.testConfigurations[].httpConfiguration.path",
            "properties.testConfigurations[].httpConfiguration.requestHeaders[].name",
            "properties.testConfigurations[].httpConfiguration.requestHeaders[].value",
            "properties.testConfigurations[].httpConfiguration.preferHTTPS",
            "properties.testConfigurations[].tcpConfiguration.port",
            "properties.testConfigurations[].tcpConfiguration.disableTraceRoute",
            "properties.testConfigurations[].tcpConfiguration.destinationPortBehavior",
            "properties.testConfigurations[].icmpConfiguration.disableTraceRoute",
            "properties.testConfigurations[].successThreshold.checksFailedPercent",
            "properties.testGroups[].name",
            "properties.testGroups[].disable",
            "properties.outputs[].type",
            "properties.notes"
        ]
    },
    {
        "type": "CustomIPPrefix",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}",
                "operationId": "CustomIPPrefixes_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}",
                "operationId": "CustomIPPrefixes_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}",
                "operationId": "CustomIPPrefixes_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes/{customIpPrefixName}",
                "operationId": "CustomIPPrefixes_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/customIpPrefixes",
                "operationId": "CustomIPPrefixes_List"
            }
        },
        "omitProperties": [
            "properties.customIpPrefixParent.id",
            "properties.childCustomIpPrefixes",
            "properties.commissionedState",
            "properties.publicIpPrefixes",
            "properties.resourceGuid",
            "properties.failedReason",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.cidr",
            "properties.signedMessage",
            "properties.authorizationMessage"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.cidr",
            "properties.signedMessage",
            "properties.authorizationMessage"
        ]
    },
    {
        "type": "DdosProtectionPlan",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",
                "operationId": "DdosProtectionPlans_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",
                "operationId": "DdosProtectionPlans_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",
                "operationId": "DdosProtectionPlans_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ddosProtectionPlans/{ddosProtectionPlanName}",
                "operationId": "DdosProtectionPlans_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ddosProtectionPlans",
                "operationId": "DdosProtectionPlans_List"
            }
        },
        "omitProperties": [
            "id",
            "name",
            "type",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.virtualNetworks",
            "etag"
        ],
        "pickProperties": [
            "location"
        ],
        "pickPropertiesCreate": [
            "location"
        ]
    },
    {
        "type": "DscpConfiguration",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}",
                "operationId": "DscpConfiguration_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}",
                "operationId": "DscpConfiguration_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dscpConfigurations/{dscpConfigurationName}",
                "operationId": "DscpConfiguration_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dscpConfigurations",
                "operationId": "DscpConfiguration_ListAll"
            }
        },
        "omitProperties": [
            "properties.qosCollectionId",
            "properties.associatedNetworkInterfaces",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.sourceIpRanges[].startIP",
            "properties.sourceIpRanges[].endIP",
            "properties.destinationIpRanges[].startIP",
            "properties.destinationIpRanges[].endIP",
            "properties.sourcePortRanges[].start",
            "properties.sourcePortRanges[].end",
            "properties.destinationPortRanges[].start",
            "properties.destinationPortRanges[].end",
            "properties.protocol",
            "properties.qosDefinitionCollection[].sourceIpRanges[].startIP",
            "properties.qosDefinitionCollection[].sourceIpRanges[].endIP",
            "properties.qosDefinitionCollection[].destinationIpRanges[].startIP",
            "properties.qosDefinitionCollection[].destinationIpRanges[].endIP",
            "properties.qosDefinitionCollection[].sourcePortRanges[].start",
            "properties.qosDefinitionCollection[].sourcePortRanges[].end",
            "properties.qosDefinitionCollection[].destinationPortRanges[].start",
            "properties.qosDefinitionCollection[].destinationPortRanges[].end",
            "properties.qosDefinitionCollection[].protocol"
        ],
        "pickPropertiesCreate": [
            "properties.sourceIpRanges[].startIP",
            "properties.sourceIpRanges[].endIP",
            "properties.destinationIpRanges[].startIP",
            "properties.destinationIpRanges[].endIP",
            "properties.sourcePortRanges[].start",
            "properties.sourcePortRanges[].end",
            "properties.destinationPortRanges[].start",
            "properties.destinationPortRanges[].end",
            "properties.protocol",
            "properties.qosDefinitionCollection[].sourceIpRanges[].startIP",
            "properties.qosDefinitionCollection[].sourceIpRanges[].endIP",
            "properties.qosDefinitionCollection[].destinationIpRanges[].startIP",
            "properties.qosDefinitionCollection[].destinationIpRanges[].endIP",
            "properties.qosDefinitionCollection[].sourcePortRanges[].start",
            "properties.qosDefinitionCollection[].sourcePortRanges[].end",
            "properties.qosDefinitionCollection[].destinationPortRanges[].start",
            "properties.qosDefinitionCollection[].destinationPortRanges[].end",
            "properties.qosDefinitionCollection[].protocol"
        ]
    },
    {
        "type": "ExpressRouteCircuit",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "routeFilter": {
                "type": "RouteFilter",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.peerings.items.ipv6PeeringConfig.routeFilter.id"
            },
            "expressRouteConnection": {
                "type": "ExpressRouteConnection",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.peerings.items.expressRouteConnection.id"
            },
            "route": {
                "type": "Route",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.expressRoutePort.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
                "operationId": "ExpressRouteCircuits_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
                "operationId": "ExpressRouteCircuits_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
                "operationId": "ExpressRouteCircuits_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}",
                "operationId": "ExpressRouteCircuits_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits",
                "operationId": "ExpressRouteCircuits_ListAll"
            }
        },
        "omitProperties": [
            "properties.circuitProvisioningState",
            "properties.serviceProviderProvisioningState",
            "properties.expressRoutePort.id",
            "properties.stag",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "sku.name",
            "sku.tier",
            "sku.family",
            "properties.allowClassicOperations",
            "properties.authorizations[].properties.authorizationKey",
            "properties.authorizations[].name",
            "properties.peerings[].properties.peeringType",
            "properties.peerings[].properties.azureASN",
            "properties.peerings[].properties.peerASN",
            "properties.peerings[].properties.primaryPeerAddressPrefix",
            "properties.peerings[].properties.secondaryPeerAddressPrefix",
            "properties.peerings[].properties.primaryAzurePort",
            "properties.peerings[].properties.secondaryAzurePort",
            "properties.peerings[].properties.sharedKey",
            "properties.peerings[].properties.microsoftPeeringConfig.legacyMode",
            "properties.peerings[].properties.microsoftPeeringConfig.customerASN",
            "properties.peerings[].properties.microsoftPeeringConfig.routingRegistryName",
            "properties.peerings[].properties.stats.primarybytesIn",
            "properties.peerings[].properties.stats.primarybytesOut",
            "properties.peerings[].properties.stats.secondarybytesIn",
            "properties.peerings[].properties.stats.secondarybytesOut",
            "properties.peerings[].properties.gatewayManagerEtag",
            "properties.peerings[].properties.ipv6PeeringConfig.primaryPeerAddressPrefix",
            "properties.peerings[].properties.ipv6PeeringConfig.secondaryPeerAddressPrefix",
            "properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig.legacyMode",
            "properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig.customerASN",
            "properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName",
            "properties.peerings[].properties.connections[].properties.addressPrefix",
            "properties.peerings[].properties.connections[].properties.authorizationKey",
            "properties.peerings[].properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix",
            "properties.peerings[].properties.connections[].name",
            "properties.peerings[].name",
            "properties.serviceKey",
            "properties.serviceProviderNotes",
            "properties.serviceProviderProperties.serviceProviderName",
            "properties.serviceProviderProperties.peeringLocation",
            "properties.serviceProviderProperties.bandwidthInMbps",
            "properties.gatewayManagerEtag",
            "properties.globalReachEnabled",
            "properties.authorizationKey"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "sku.tier",
            "sku.family",
            "properties.allowClassicOperations",
            "properties.authorizations[].properties.authorizationKey",
            "properties.authorizations[].name",
            "properties.peerings[].properties.peeringType",
            "properties.peerings[].properties.azureASN",
            "properties.peerings[].properties.peerASN",
            "properties.peerings[].properties.primaryPeerAddressPrefix",
            "properties.peerings[].properties.secondaryPeerAddressPrefix",
            "properties.peerings[].properties.primaryAzurePort",
            "properties.peerings[].properties.secondaryAzurePort",
            "properties.peerings[].properties.sharedKey",
            "properties.peerings[].properties.microsoftPeeringConfig.legacyMode",
            "properties.peerings[].properties.microsoftPeeringConfig.customerASN",
            "properties.peerings[].properties.microsoftPeeringConfig.routingRegistryName",
            "properties.peerings[].properties.stats.primarybytesIn",
            "properties.peerings[].properties.stats.primarybytesOut",
            "properties.peerings[].properties.stats.secondarybytesIn",
            "properties.peerings[].properties.stats.secondarybytesOut",
            "properties.peerings[].properties.gatewayManagerEtag",
            "properties.peerings[].properties.ipv6PeeringConfig.primaryPeerAddressPrefix",
            "properties.peerings[].properties.ipv6PeeringConfig.secondaryPeerAddressPrefix",
            "properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig.legacyMode",
            "properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig.customerASN",
            "properties.peerings[].properties.ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName",
            "properties.peerings[].properties.connections[].properties.addressPrefix",
            "properties.peerings[].properties.connections[].properties.authorizationKey",
            "properties.peerings[].properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix",
            "properties.peerings[].properties.connections[].name",
            "properties.peerings[].name",
            "properties.serviceKey",
            "properties.serviceProviderNotes",
            "properties.serviceProviderProperties.serviceProviderName",
            "properties.serviceProviderProperties.peeringLocation",
            "properties.serviceProviderProperties.bandwidthInMbps",
            "properties.gatewayManagerEtag",
            "properties.globalReachEnabled",
            "properties.authorizationKey"
        ]
    },
    {
        "type": "ExpressRouteCircuitAuthorization",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "circuit": {
                "type": "ExpressRouteCircuit",
                "group": "Network",
                "name": "circuitName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",
                "operationId": "ExpressRouteCircuitAuthorizations_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",
                "operationId": "ExpressRouteCircuitAuthorizations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}",
                "operationId": "ExpressRouteCircuitAuthorizations_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations",
                "operationId": "ExpressRouteCircuitAuthorizations_List"
            }
        },
        "omitProperties": [
            "properties.authorizationUseStatus",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.authorizationKey",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.authorizationKey",
            "name"
        ]
    },
    {
        "type": "ExpressRouteCircuitConnection",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "expressRouteCircuitPeering": {
                "type": "ExpressRouteCircuitPeering",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.peerExpressRouteCircuitPeering.id"
            },
            "circuit": {
                "type": "ExpressRouteCircuit",
                "group": "Network",
                "name": "circuitName",
                "parent": true
            },
            "peering": {
                "type": "ExpressRouteCircuitPeering",
                "group": "Network",
                "name": "peeringName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}",
                "operationId": "ExpressRouteCircuitConnections_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}",
                "operationId": "ExpressRouteCircuitConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections/{connectionName}",
                "operationId": "ExpressRouteCircuitConnections_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/connections",
                "operationId": "ExpressRouteCircuitConnections_List"
            }
        },
        "omitProperties": [
            "properties.expressRouteCircuitPeering.id",
            "properties.peerExpressRouteCircuitPeering.id",
            "properties.ipv6CircuitConnectionConfig.circuitConnectionStatus",
            "properties.circuitConnectionStatus",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.addressPrefix",
            "properties.authorizationKey",
            "properties.ipv6CircuitConnectionConfig.addressPrefix",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.addressPrefix",
            "properties.authorizationKey",
            "properties.ipv6CircuitConnectionConfig.addressPrefix",
            "name"
        ]
    },
    {
        "type": "ExpressRouteCircuitPeering",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "routeFilter": {
                "type": "RouteFilter",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.ipv6PeeringConfig.routeFilter.id"
            },
            "expressRouteConnection": {
                "type": "ExpressRouteConnection",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.expressRouteConnection.id"
            },
            "circuit": {
                "type": "ExpressRouteCircuit",
                "group": "Network",
                "name": "circuitName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",
                "operationId": "ExpressRouteCircuitPeerings_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",
                "operationId": "ExpressRouteCircuitPeerings_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}",
                "operationId": "ExpressRouteCircuitPeerings_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings",
                "operationId": "ExpressRouteCircuitPeerings_List"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.vlanId",
            "properties.microsoftPeeringConfig.advertisedPublicPrefixesState",
            "properties.provisioningState",
            "properties.lastModifiedBy",
            "properties.routeFilter.id",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixesState",
            "properties.ipv6PeeringConfig.routeFilter.id",
            "properties.ipv6PeeringConfig.state",
            "properties.expressRouteConnection.id",
            "properties.peeredConnections",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.peeringType",
            "properties.azureASN",
            "properties.peerASN",
            "properties.primaryPeerAddressPrefix",
            "properties.secondaryPeerAddressPrefix",
            "properties.primaryAzurePort",
            "properties.secondaryAzurePort",
            "properties.sharedKey",
            "properties.microsoftPeeringConfig.legacyMode",
            "properties.microsoftPeeringConfig.customerASN",
            "properties.microsoftPeeringConfig.routingRegistryName",
            "properties.stats.primarybytesIn",
            "properties.stats.primarybytesOut",
            "properties.stats.secondarybytesIn",
            "properties.stats.secondarybytesOut",
            "properties.gatewayManagerEtag",
            "properties.ipv6PeeringConfig.primaryPeerAddressPrefix",
            "properties.ipv6PeeringConfig.secondaryPeerAddressPrefix",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.legacyMode",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.customerASN",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName",
            "properties.connections[].properties.addressPrefix",
            "properties.connections[].properties.authorizationKey",
            "properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix",
            "properties.connections[].name",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.peeringType",
            "properties.azureASN",
            "properties.peerASN",
            "properties.primaryPeerAddressPrefix",
            "properties.secondaryPeerAddressPrefix",
            "properties.primaryAzurePort",
            "properties.secondaryAzurePort",
            "properties.sharedKey",
            "properties.microsoftPeeringConfig.legacyMode",
            "properties.microsoftPeeringConfig.customerASN",
            "properties.microsoftPeeringConfig.routingRegistryName",
            "properties.stats.primarybytesIn",
            "properties.stats.primarybytesOut",
            "properties.stats.secondarybytesIn",
            "properties.stats.secondarybytesOut",
            "properties.gatewayManagerEtag",
            "properties.ipv6PeeringConfig.primaryPeerAddressPrefix",
            "properties.ipv6PeeringConfig.secondaryPeerAddressPrefix",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.legacyMode",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.customerASN",
            "properties.ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName",
            "properties.connections[].properties.addressPrefix",
            "properties.connections[].properties.authorizationKey",
            "properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix",
            "properties.connections[].name",
            "name"
        ]
    },
    {
        "type": "ExpressRouteConnection",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "expressRouteCircuitPeering": {
                "type": "ExpressRouteCircuitPeering",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.expressRouteCircuitPeering.id"
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.routingConfiguration.associatedRouteTable.id"
            },
            "expressRouteGateway": {
                "type": "ExpressRouteGateway",
                "group": "Network",
                "name": "expressRouteGatewayName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}",
                "operationId": "ExpressRouteConnections_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}",
                "operationId": "ExpressRouteConnections_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}",
                "operationId": "ExpressRouteConnections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections",
                "operationId": "ExpressRouteConnections_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.expressRouteCircuitPeering.id",
            "properties.routingConfiguration.associatedRouteTable.id",
            "properties.routingConfiguration.vnetRoutes.bgpConnections"
        ],
        "pickProperties": [
            "properties.authorizationKey",
            "properties.routingWeight",
            "properties.enableInternetSecurity",
            "properties.expressRouteGatewayBypass",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.authorizationKey",
            "properties.routingWeight",
            "properties.enableInternetSecurity",
            "properties.expressRouteGatewayBypass",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "name"
        ]
    },
    {
        "type": "ExpressRouteGateway",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "expressRouteCircuitPeering": {
                "type": "ExpressRouteCircuitPeering",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.expressRouteConnections.items.expressRouteCircuitPeering.id"
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.expressRouteConnections.items.routingConfiguration.associatedRouteTable.id"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualHub.id"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",
                "operationId": "ExpressRouteGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",
                "operationId": "ExpressRouteGateways_UpdateTags"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",
                "operationId": "ExpressRouteGateways_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}",
                "operationId": "ExpressRouteGateways_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteGateways",
                "operationId": "ExpressRouteGateways_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.virtualHub.id",
            "etag"
        ],
        "pickProperties": [
            "properties.autoScaleConfiguration.bounds.min",
            "properties.autoScaleConfiguration.bounds.max",
            "properties.expressRouteConnections[].properties.authorizationKey",
            "properties.expressRouteConnections[].properties.routingWeight",
            "properties.expressRouteConnections[].properties.enableInternetSecurity",
            "properties.expressRouteConnections[].properties.expressRouteGatewayBypass",
            "properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "properties.expressRouteConnections[].name"
        ],
        "pickPropertiesCreate": [
            "properties.autoScaleConfiguration.bounds.min",
            "properties.autoScaleConfiguration.bounds.max",
            "properties.expressRouteConnections[].properties.authorizationKey",
            "properties.expressRouteConnections[].properties.routingWeight",
            "properties.expressRouteConnections[].properties.enableInternetSecurity",
            "properties.expressRouteConnections[].properties.expressRouteGatewayBypass",
            "properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "properties.expressRouteConnections[].name"
        ]
    },
    {
        "type": "ExpressRoutePortAuthorization",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "expressRoutePort": {
                "type": "ExpressRoutePortAuthorization",
                "group": "Network",
                "name": "expressRoutePortName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/authorizations/{authorizationName}",
                "operationId": "ExpressRoutePortAuthorizations_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/authorizations/{authorizationName}",
                "operationId": "ExpressRoutePortAuthorizations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/authorizations/{authorizationName}",
                "operationId": "ExpressRoutePortAuthorizations_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRoutePorts/{expressRoutePortName}/authorizations",
                "operationId": "ExpressRoutePortAuthorizations_List"
            }
        },
        "omitProperties": [
            "properties.authorizationKey",
            "properties.authorizationUseStatus",
            "properties.circuitResourceUri",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "name"
        ],
        "pickPropertiesCreate": [
            "name"
        ]
    },
    {
        "type": "FirewallPolicy",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "managedIdentities": {
                "type": "UserAssignedIdentity",
                "group": "ManagedIdentity",
                "createOnly": true,
                "list": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}",
                "operationId": "FirewallPolicies_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}",
                "operationId": "FirewallPolicies_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}",
                "operationId": "FirewallPolicies_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}",
                "operationId": "FirewallPolicies_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies",
                "operationId": "FirewallPolicies_List"
            }
        },
        "omitProperties": [
            "properties.ruleCollectionGroups",
            "properties.provisioningState",
            "properties.basePolicy.id",
            "properties.firewalls",
            "properties.childPolicies",
            "properties.insights.logAnalyticsResources.defaultWorkspaceId",
            "properties.transportSecurity.certificateAuthority.keyVaultSecretId",
            "etag",
            "identity.principalId",
            "identity.tenantId"
        ],
        "pickProperties": [
            "properties.threatIntelMode",
            "properties.insights.isEnabled",
            "properties.insights.retentionDays",
            "properties.insights.logAnalyticsResources.workspaces[].region",
            "properties.sql.allowSqlRedirect",
            "properties.dnsSettings.enableProxy",
            "properties.dnsSettings.requireProxyForNetworkRules",
            "properties.explicitProxySettings.enableExplicitProxy",
            "properties.explicitProxySettings.httpPort",
            "properties.explicitProxySettings.httpsPort",
            "properties.explicitProxySettings.pacFilePort",
            "properties.explicitProxySettings.pacFile",
            "properties.intrusionDetection.mode",
            "properties.intrusionDetection.configuration.signatureOverrides[].mode",
            "properties.intrusionDetection.configuration.bypassTrafficSettings[].name",
            "properties.intrusionDetection.configuration.bypassTrafficSettings[].description",
            "properties.intrusionDetection.configuration.bypassTrafficSettings[].protocol",
            "properties.transportSecurity.certificateAuthority.name",
            "properties.sku.tier",
            "identity.type"
        ],
        "pickPropertiesCreate": [
            "properties.threatIntelMode",
            "properties.insights.isEnabled",
            "properties.insights.retentionDays",
            "properties.insights.logAnalyticsResources.workspaces[].region",
            "properties.sql.allowSqlRedirect",
            "properties.dnsSettings.enableProxy",
            "properties.dnsSettings.requireProxyForNetworkRules",
            "properties.explicitProxySettings.enableExplicitProxy",
            "properties.explicitProxySettings.httpPort",
            "properties.explicitProxySettings.httpsPort",
            "properties.explicitProxySettings.pacFilePort",
            "properties.explicitProxySettings.pacFile",
            "properties.intrusionDetection.mode",
            "properties.intrusionDetection.configuration.signatureOverrides[].mode",
            "properties.intrusionDetection.configuration.bypassTrafficSettings[].name",
            "properties.intrusionDetection.configuration.bypassTrafficSettings[].description",
            "properties.intrusionDetection.configuration.bypassTrafficSettings[].protocol",
            "properties.transportSecurity.certificateAuthority.name",
            "properties.sku.tier",
            "identity.type"
        ]
    },
    {
        "type": "FirewallPolicyRuleCollectionGroup",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "firewallPolicy": {
                "type": "FirewallPolicy",
                "group": "Network",
                "name": "firewallPolicyName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}",
                "operationId": "FirewallPolicyRuleCollectionGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}",
                "operationId": "FirewallPolicyRuleCollectionGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups/{ruleCollectionGroupName}",
                "operationId": "FirewallPolicyRuleCollectionGroups_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleCollectionGroups",
                "operationId": "FirewallPolicyRuleCollectionGroups_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.priority",
            "properties.ruleCollections[].ruleCollectionType",
            "properties.ruleCollections[].name",
            "properties.ruleCollections[].priority",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.priority",
            "properties.ruleCollections[].ruleCollectionType",
            "properties.ruleCollections[].name",
            "properties.ruleCollections[].priority",
            "name"
        ]
    },
    {
        "type": "FirewallPolicyRuleGroup",
        "group": "Network",
        "apiVersion": "2020-04-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "firewallPolicy": {
                "type": "FirewallPolicy",
                "group": "Network",
                "name": "firewallPolicyName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups/{ruleGroupName}",
                "operationId": "FirewallPolicyRuleGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups/{ruleGroupName}",
                "operationId": "FirewallPolicyRuleGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups/{ruleGroupName}",
                "operationId": "FirewallPolicyRuleGroups_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/ruleGroups",
                "operationId": "FirewallPolicyRuleGroups_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.priority",
            "properties.rules[].ruleType",
            "properties.rules[].name",
            "properties.rules[].priority",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.priority",
            "properties.rules[].ruleType",
            "properties.rules[].name",
            "properties.rules[].priority",
            "name"
        ]
    },
    {
        "type": "FlowLog",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "networkWatcher": {
                "type": "NetworkWatcher",
                "group": "Network",
                "name": "networkWatcherName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
                "operationId": "FlowLogs_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
                "operationId": "FlowLogs_UpdateTags"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
                "operationId": "FlowLogs_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs/{flowLogName}",
                "operationId": "FlowLogs_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/flowLogs",
                "operationId": "FlowLogs_List"
            }
        },
        "omitProperties": [
            "properties.targetResourceId",
            "properties.targetResourceGuid",
            "properties.storageId",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceId",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceResourceId",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.enabled",
            "properties.retentionPolicy.days",
            "properties.retentionPolicy.enabled",
            "properties.format.type",
            "properties.format.version",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceRegion",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.trafficAnalyticsInterval"
        ],
        "pickPropertiesCreate": [
            "properties.enabled",
            "properties.retentionPolicy.days",
            "properties.retentionPolicy.enabled",
            "properties.format.type",
            "properties.format.version",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceRegion",
            "properties.flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.trafficAnalyticsInterval"
        ],
        "propertiesDefault": {
            "properties": {
                "retentionPolicy": {
                    "days": 0,
                    "enabled": false
                },
                "format": {
                    "version": 0
                }
            }
        }
    },
    {
        "type": "HubRouteTable",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/{routeTableName}",
                "operationId": "HubRouteTables_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/{routeTableName}",
                "operationId": "HubRouteTables_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables/{routeTableName}",
                "operationId": "HubRouteTables_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubRouteTables",
                "operationId": "HubRouteTables_List"
            }
        },
        "omitProperties": [
            "properties.associatedConnections",
            "properties.propagatingConnections",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.routes[].name",
            "properties.routes[].destinationType",
            "properties.routes[].nextHopType",
            "properties.routes[].nextHop",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.routes[].name",
            "properties.routes[].destinationType",
            "properties.routes[].nextHopType",
            "properties.routes[].nextHop",
            "name"
        ]
    },
    {
        "type": "HubVirtualNetworkConnection",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.remoteVirtualNetwork.id"
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.routingConfiguration.associatedRouteTable.id"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}",
                "operationId": "HubVirtualNetworkConnections_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}",
                "operationId": "HubVirtualNetworkConnections_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}",
                "operationId": "HubVirtualNetworkConnections_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections",
                "operationId": "HubVirtualNetworkConnections_List"
            }
        },
        "omitProperties": [
            "properties.remoteVirtualNetwork.id",
            "properties.routingConfiguration.associatedRouteTable.id",
            "properties.routingConfiguration.vnetRoutes.bgpConnections",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.allowHubToRemoteVnetTransit",
            "properties.allowRemoteVnetToUseHubVnetGateways",
            "properties.enableInternetSecurity",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.allowHubToRemoteVnetTransit",
            "properties.allowRemoteVnetToUseHubVnetGateways",
            "properties.enableInternetSecurity",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "name"
        ]
    },
    {
        "type": "InboundNatRule",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "loadBalancerBackendAddressPool": {
                "type": "LoadBalancerBackendAddressPool",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.backendAddressPool.id"
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "name": "loadBalancerName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}",
                "operationId": "InboundNatRules_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}",
                "operationId": "InboundNatRules_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules/{inboundNatRuleName}",
                "operationId": "InboundNatRules_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/inboundNatRules",
                "operationId": "InboundNatRules_List"
            }
        },
        "omitProperties": [
            "properties.frontendIPConfiguration.id",
            "properties.backendIPConfiguration",
            "properties.backendAddressPool.id",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.protocol",
            "properties.frontendPort",
            "properties.backendPort",
            "properties.idleTimeoutInMinutes",
            "properties.enableFloatingIP",
            "properties.enableTcpReset",
            "properties.frontendPortRangeStart",
            "properties.frontendPortRangeEnd",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.protocol",
            "properties.frontendPort",
            "properties.backendPort",
            "properties.idleTimeoutInMinutes",
            "properties.enableFloatingIP",
            "properties.enableTcpReset",
            "properties.frontendPortRangeStart",
            "properties.frontendPortRangeEnd",
            "name"
        ],
        "propertiesDefault": {
            "properties": {
                "backendIPConfiguration": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        },
                        "publicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                },
                                "servicePublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "linkedPublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "linkedPublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "servicePublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "IpAllocation",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.subnet.id"
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualNetwork.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}",
                "operationId": "IpAllocations_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}",
                "operationId": "IpAllocations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}",
                "operationId": "IpAllocations_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/IpAllocations/{ipAllocationName}",
                "operationId": "IpAllocations_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/IpAllocations",
                "operationId": "IpAllocations_List"
            }
        },
        "omitProperties": [
            "properties.subnet",
            "properties.virtualNetwork",
            "properties.ipamAllocationId",
            "etag"
        ],
        "pickProperties": [
            "properties.type",
            "properties.prefix",
            "properties.prefixLength",
            "properties.prefixType"
        ],
        "pickPropertiesCreate": [
            "properties.type",
            "properties.prefix",
            "properties.prefixLength",
            "properties.prefixType"
        ],
        "propertiesDefault": {
            "properties": {
                "prefixLength": 0
            }
        }
    },
    {
        "type": "IpGroup",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}",
                "operationId": "IpGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}",
                "operationId": "IpGroups_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}",
                "operationId": "IpGroups_UpdateGroups"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ipGroups/{ipGroupsName}",
                "operationId": "IpGroups_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ipGroups",
                "operationId": "IpGroups_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.firewalls",
            "properties.firewallPolicies",
            "etag"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "LoadBalancer",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.frontendIPConfigurations.items.subnet.natGateway.id"
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.frontendIPConfigurations.items.publicIPAddress.linkedPublicIPAddress.servicePublicIPAddress.ddosSettings.ddosCustomPolicy.id"
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.frontendIPConfigurations.items.publicIPPrefix.id"
            },
            "loadBalancerBackendAddressPool": {
                "type": "LoadBalancerBackendAddressPool",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.outboundRules.items.backendAddressPool.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
                "operationId": "LoadBalancers_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
                "operationId": "LoadBalancers_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
                "operationId": "LoadBalancers_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
                "operationId": "LoadBalancers_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers",
                "operationId": "LoadBalancers_ListAll"
            }
        },
        "omitProperties": [
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.frontendIPConfigurations[].properties.privateIPAddress",
            "properties.frontendIPConfigurations[].properties.privateIPAllocationMethod",
            "properties.frontendIPConfigurations[].properties.privateIPAddressVersion",
            "",
            "properties,frontendIPConfigurations[],properties,publicIPAddress,location",
            "properties.frontendIPConfigurations[].name",
            "properties.backendAddressPools[].properties.location",
            "properties.backendAddressPools[].properties.tunnelInterfaces[].port",
            "properties.backendAddressPools[].properties.tunnelInterfaces[].identifier",
            "properties.backendAddressPools[].properties.tunnelInterfaces[].protocol",
            "properties.backendAddressPools[].properties.tunnelInterfaces[].type",
            "properties.backendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress",
            "properties.backendAddressPools[].properties.loadBalancerBackendAddresses[].name",
            "properties.backendAddressPools[].properties.drainPeriodInSeconds",
            "properties.backendAddressPools[].name",
            "properties.loadBalancingRules[].properties.protocol",
            "properties.loadBalancingRules[].properties.loadDistribution",
            "properties.loadBalancingRules[].properties.frontendPort",
            "properties.loadBalancingRules[].properties.backendPort",
            "properties.loadBalancingRules[].properties.idleTimeoutInMinutes",
            "properties.loadBalancingRules[].properties.enableFloatingIP",
            "properties.loadBalancingRules[].properties.enableTcpReset",
            "properties.loadBalancingRules[].properties.disableOutboundSnat",
            "properties.loadBalancingRules[].name",
            "properties.probes[].properties.protocol",
            "properties.probes[].properties.port",
            "properties.probes[].properties.intervalInSeconds",
            "properties.probes[].properties.numberOfProbes",
            "properties.probes[].properties.requestPath",
            "properties.probes[].name",
            "properties.inboundNatRules[].properties.protocol",
            "properties.inboundNatRules[].properties.frontendPort",
            "properties.inboundNatRules[].properties.backendPort",
            "properties.inboundNatRules[].properties.idleTimeoutInMinutes",
            "properties.inboundNatRules[].properties.enableFloatingIP",
            "properties.inboundNatRules[].properties.enableTcpReset",
            "properties.inboundNatRules[].properties.frontendPortRangeStart",
            "properties.inboundNatRules[].properties.frontendPortRangeEnd",
            "properties.inboundNatRules[].name",
            "properties.inboundNatPools[].properties.protocol",
            "properties.inboundNatPools[].properties.frontendPortRangeStart",
            "properties.inboundNatPools[].properties.frontendPortRangeEnd",
            "properties.inboundNatPools[].properties.backendPort",
            "properties.inboundNatPools[].properties.idleTimeoutInMinutes",
            "properties.inboundNatPools[].properties.enableFloatingIP",
            "properties.inboundNatPools[].properties.enableTcpReset",
            "properties.inboundNatPools[].name",
            "properties.outboundRules[].properties.allocatedOutboundPorts",
            "properties.outboundRules[].properties.protocol",
            "properties.outboundRules[].properties.enableTcpReset",
            "properties.outboundRules[].properties.idleTimeoutInMinutes",
            "properties.outboundRules[].name"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.frontendIPConfigurations[].properties.privateIPAddress",
            "properties.frontendIPConfigurations[].properties.privateIPAllocationMethod",
            "properties.frontendIPConfigurations[].properties.privateIPAddressVersion",
            "",
            "properties,frontendIPConfigurations[],properties,publicIPAddress,location",
            "properties.frontendIPConfigurations[].name",
            "properties.backendAddressPools[].properties.location",
            "properties.backendAddressPools[].properties.tunnelInterfaces[].port",
            "properties.backendAddressPools[].properties.tunnelInterfaces[].identifier",
            "properties.backendAddressPools[].properties.tunnelInterfaces[].protocol",
            "properties.backendAddressPools[].properties.tunnelInterfaces[].type",
            "properties.backendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress",
            "properties.backendAddressPools[].properties.loadBalancerBackendAddresses[].name",
            "properties.backendAddressPools[].properties.drainPeriodInSeconds",
            "properties.backendAddressPools[].name",
            "properties.loadBalancingRules[].properties.protocol",
            "properties.loadBalancingRules[].properties.loadDistribution",
            "properties.loadBalancingRules[].properties.frontendPort",
            "properties.loadBalancingRules[].properties.backendPort",
            "properties.loadBalancingRules[].properties.idleTimeoutInMinutes",
            "properties.loadBalancingRules[].properties.enableFloatingIP",
            "properties.loadBalancingRules[].properties.enableTcpReset",
            "properties.loadBalancingRules[].properties.disableOutboundSnat",
            "properties.loadBalancingRules[].name",
            "properties.probes[].properties.protocol",
            "properties.probes[].properties.port",
            "properties.probes[].properties.intervalInSeconds",
            "properties.probes[].properties.numberOfProbes",
            "properties.probes[].properties.requestPath",
            "properties.probes[].name",
            "properties.inboundNatRules[].properties.protocol",
            "properties.inboundNatRules[].properties.frontendPort",
            "properties.inboundNatRules[].properties.backendPort",
            "properties.inboundNatRules[].properties.idleTimeoutInMinutes",
            "properties.inboundNatRules[].properties.enableFloatingIP",
            "properties.inboundNatRules[].properties.enableTcpReset",
            "properties.inboundNatRules[].properties.frontendPortRangeStart",
            "properties.inboundNatRules[].properties.frontendPortRangeEnd",
            "properties.inboundNatRules[].name",
            "properties.inboundNatPools[].properties.protocol",
            "properties.inboundNatPools[].properties.frontendPortRangeStart",
            "properties.inboundNatPools[].properties.frontendPortRangeEnd",
            "properties.inboundNatPools[].properties.backendPort",
            "properties.inboundNatPools[].properties.idleTimeoutInMinutes",
            "properties.inboundNatPools[].properties.enableFloatingIP",
            "properties.inboundNatPools[].properties.enableTcpReset",
            "properties.inboundNatPools[].name",
            "properties.outboundRules[].properties.allocatedOutboundPorts",
            "properties.outboundRules[].properties.protocol",
            "properties.outboundRules[].properties.enableTcpReset",
            "properties.outboundRules[].properties.idleTimeoutInMinutes",
            "properties.outboundRules[].name"
        ]
    },
    {
        "type": "LoadBalancerBackendAddressPool",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.loadBalancerBackendAddresses.items.virtualNetwork.id"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.loadBalancerBackendAddresses.items.subnet.id"
            },
            "networkInterface": {
                "type": "NetworkInterface",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.loadBalancerBackendAddresses.items.networkInterfaceIPConfiguration.id"
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "name": "loadBalancerName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}",
                "operationId": "LoadBalancerBackendAddressPools_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}",
                "operationId": "LoadBalancerBackendAddressPools_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools/{backendAddressPoolName}",
                "operationId": "LoadBalancerBackendAddressPools_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/backendAddressPools",
                "operationId": "LoadBalancerBackendAddressPools_List"
            }
        },
        "omitProperties": [
            "properties.backendIPConfigurations",
            "properties.loadBalancingRules",
            "properties.outboundRule",
            "properties.outboundRules",
            "properties.inboundNatRules",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.location",
            "properties.tunnelInterfaces[].port",
            "properties.tunnelInterfaces[].identifier",
            "properties.tunnelInterfaces[].protocol",
            "properties.tunnelInterfaces[].type",
            "properties.loadBalancerBackendAddresses[].properties.ipAddress",
            "properties.loadBalancerBackendAddresses[].name",
            "properties.drainPeriodInSeconds",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.location",
            "properties.tunnelInterfaces[].port",
            "properties.tunnelInterfaces[].identifier",
            "properties.tunnelInterfaces[].protocol",
            "properties.tunnelInterfaces[].type",
            "properties.loadBalancerBackendAddresses[].properties.ipAddress",
            "properties.loadBalancerBackendAddresses[].name",
            "properties.drainPeriodInSeconds",
            "name"
        ]
    },
    {
        "type": "LocalNetworkGateway",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.bgpSettings.bgpPeeringAddresses.items.ipconfigurationId"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
                "operationId": "LocalNetworkGateways_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
                "operationId": "LocalNetworkGateways_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
                "operationId": "LocalNetworkGateways_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways/{localNetworkGatewayName}",
                "operationId": "LocalNetworkGateways_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/localNetworkGateways",
                "operationId": "LocalNetworkGateways_List"
            }
        },
        "omitProperties": [
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.gatewayIpAddress",
            "properties.fqdn",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight"
        ],
        "pickPropertiesCreate": [
            "properties.gatewayIpAddress",
            "properties.fqdn",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight"
        ]
    },
    {
        "type": "NatGateway",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}",
                "operationId": "NatGateways_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}",
                "operationId": "NatGateways_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}",
                "operationId": "NatGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/natGateways/{natGatewayName}",
                "operationId": "NatGateways_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/natGateways",
                "operationId": "NatGateways_ListAll"
            }
        },
        "omitProperties": [
            "properties.subnets",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "sku.name",
            "properties.idleTimeoutInMinutes"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "properties.idleTimeoutInMinutes"
        ]
    },
    {
        "type": "NatRule",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.ipConfigurationId"
            },
            "gateway": {
                "type": "VpnGateway",
                "group": "Network",
                "name": "gatewayName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules/{natRuleName}",
                "operationId": "NatRules_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules/{natRuleName}",
                "operationId": "NatRules_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules/{natRuleName}",
                "operationId": "NatRules_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/natRules",
                "operationId": "NatRules_ListByVpnGateway"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.ipConfigurationId",
            "properties.egressVpnSiteLinkConnections",
            "properties.ingressVpnSiteLinkConnections",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.type",
            "properties.mode",
            "properties.internalMappings[].addressSpace",
            "properties.internalMappings[].portRange",
            "properties.externalMappings[].addressSpace",
            "properties.externalMappings[].portRange",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.type",
            "properties.mode",
            "properties.internalMappings[].addressSpace",
            "properties.internalMappings[].portRange",
            "properties.externalMappings[].addressSpace",
            "properties.externalMappings[].portRange",
            "name"
        ]
    },
    {
        "type": "NetworkInterface",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.privateLinkService.loadBalancerFrontendIpConfigurations.items.gatewayLoadBalancer.id"
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.privateLinkService.ipConfigurations.items.subnet.natGateway.id"
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.privateLinkService.loadBalancerFrontendIpConfigurations.items.publicIPAddress.linkedPublicIPAddress.servicePublicIPAddress.ddosSettings.ddosCustomPolicy.id"
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.privateLinkService.loadBalancerFrontendIpConfigurations.items.publicIPPrefix.id"
            },
            "dscpConfiguration": {
                "type": "DscpConfiguration",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.dscpConfiguration.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
                "operationId": "NetworkInterfaces_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
                "operationId": "NetworkInterfaces_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
                "operationId": "NetworkInterfaces_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
                "operationId": "NetworkInterfaces_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces",
                "operationId": "NetworkInterfaces_ListAll"
            }
        },
        "omitProperties": [
            "properties.virtualMachine",
            "properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.networkSecurityGroup.properties.subnets",
            "properties.networkSecurityGroup.properties.flowLogs",
            "properties.networkSecurityGroup.properties.resourceGuid",
            "properties.networkSecurityGroup.properties.provisioningState",
            "properties.networkSecurityGroup.etag",
            "properties.privateEndpoint",
            "properties.tapConfigurations",
            "properties.dnsSettings.appliedDnsServers",
            "properties.dnsSettings.internalFqdn",
            "properties.dnsSettings.internalDomainNameSuffix",
            "properties.macAddress",
            "properties.primary",
            "properties.vnetEncryptionSupported",
            "properties.hostedWorkloads",
            "properties.dscpConfiguration",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.privateLinkService.properties.networkInterfaces",
            "properties.privateLinkService.properties.provisioningState",
            "properties.privateLinkService.properties.privateEndpointConnections",
            "properties.privateLinkService.properties.alias",
            "properties.privateLinkService.etag",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties,networkSecurityGroup,location",
            "",
            "",
            "properties.ipConfigurations[].properties.virtualNetworkTaps[].properties.destinationPort",
            "properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].fqdn",
            "properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].ipAddress",
            "properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools[].name",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.location",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].port",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].identifier",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].protocol",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].type",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].name",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.drainPeriodInSeconds",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableTcpReset",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPortRangeStart",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPortRangeEnd",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name",
            "properties.ipConfigurations[].properties.privateIPAddress",
            "properties.ipConfigurations[].properties.privateIPAllocationMethod",
            "properties.ipConfigurations[].properties.privateIPAddressVersion",
            "",
            "properties.ipConfigurations[].properties.primary",
            "properties,ipConfigurations[],properties,publicIPAddress,location",
            "properties.ipConfigurations[].name",
            "properties.ipConfigurations[].type",
            "properties.dnsSettings.internalDnsNameLabel",
            "properties.enableAcceleratedNetworking",
            "properties.enableIPForwarding",
            "properties.workloadType",
            "properties.nicType",
            "properties,privateLinkService,location",
            "properties.migrationPhase",
            "properties.auxiliaryMode"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties,networkSecurityGroup,location",
            "",
            "",
            "properties.ipConfigurations[].properties.virtualNetworkTaps[].properties.destinationPort",
            "properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].fqdn",
            "properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].ipAddress",
            "properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools[].name",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.location",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].port",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].identifier",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].protocol",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].type",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].name",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].properties.drainPeriodInSeconds",
            "properties.ipConfigurations[].properties.loadBalancerBackendAddressPools[].name",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.protocol",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPort",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.backendPort",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableFloatingIP",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.enableTcpReset",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPortRangeStart",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].properties.frontendPortRangeEnd",
            "properties.ipConfigurations[].properties.loadBalancerInboundNatRules[].name",
            "properties.ipConfigurations[].properties.privateIPAddress",
            "properties.ipConfigurations[].properties.privateIPAllocationMethod",
            "properties.ipConfigurations[].properties.privateIPAddressVersion",
            "",
            "properties.ipConfigurations[].properties.primary",
            "properties,ipConfigurations[],properties,publicIPAddress,location",
            "properties.ipConfigurations[].name",
            "properties.ipConfigurations[].type",
            "properties.dnsSettings.internalDnsNameLabel",
            "properties.enableAcceleratedNetworking",
            "properties.enableIPForwarding",
            "properties.workloadType",
            "properties.nicType",
            "properties,privateLinkService,location",
            "properties.migrationPhase",
            "properties.auxiliaryMode"
        ],
        "propertiesDefault": {
            "properties": {
                "privateEndpoint": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "NetworkInterfaceTapConfiguration",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualNetworkTap.destinationLoadBalancerFrontEndIPConfiguration.gatewayLoadBalancer.id"
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualNetworkTap.destinationLoadBalancerFrontEndIPConfiguration.subnet.natGateway.id"
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualNetworkTap.destinationLoadBalancerFrontEndIPConfiguration.publicIPAddress.linkedPublicIPAddress.servicePublicIPAddress.ddosSettings.ddosCustomPolicy.id"
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualNetworkTap.destinationLoadBalancerFrontEndIPConfiguration.publicIPPrefix.id"
            },
            "loadBalancerBackendAddressPool": {
                "type": "LoadBalancerBackendAddressPool",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualNetworkTap.destinationNetworkInterfaceIPConfiguration.loadBalancerInboundNatRules.items.backendAddressPool.id"
            },
            "networkInterface": {
                "type": "NetworkInterface",
                "group": "Network",
                "name": "networkInterfaceName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}",
                "operationId": "NetworkInterfaceTapConfigurations_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}",
                "operationId": "NetworkInterfaceTapConfigurations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}",
                "operationId": "NetworkInterfaceTapConfigurations_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations",
                "operationId": "NetworkInterfaceTapConfigurations_List"
            }
        },
        "omitProperties": [
            "properties.virtualNetworkTap.properties.networkInterfaceTapConfigurations",
            "properties.virtualNetworkTap.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.natGateway.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateEndpoints",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipConfigurations",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipConfigurationProfiles",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.resourceNavigationLinks",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceAssociationLinks",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.purpose",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.properties.privateLinkConnectionProperties",
            "properties.virtualNetworkTap.properties.destinationNetworkInterfaceIPConfiguration.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.inboundNatRules",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.inboundNatPools",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.outboundRules",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.loadBalancingRules",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.natGateway.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateEndpoints",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipConfigurations",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipConfigurationProfiles",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.resourceNavigationLinks",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceAssociationLinks",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.purpose",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer.id",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.provisioningState",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.etag",
            "properties.virtualNetworkTap.properties.destinationLoadBalancerFrontEndIPConfiguration.type",
            "properties.virtualNetworkTap.etag",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties,virtualNetworkTap,location",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties,virtualNetworkTap,location",
            "name"
        ],
        "propertiesDefault": {
            "properties": {
                "virtualNetworkTap": {
                    "properties": {
                        "destinationNetworkInterfaceIPConfiguration": {
                            "properties": {
                                "subnet": {
                                    "properties": {
                                        "privateEndpointNetworkPolicies": "Enabled",
                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                },
                                "publicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "servicePublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                },
                                                "linkedPublicIPAddress": {
                                                    "properties": {
                                                        "ipConfiguration": {
                                                            "properties": {
                                                                "privateIPAllocationMethod": "Dynamic",
                                                                "subnet": {
                                                                    "properties": {
                                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "linkedPublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                },
                                                "servicePublicIPAddress": {
                                                    "properties": {
                                                        "ipConfiguration": {
                                                            "properties": {
                                                                "privateIPAllocationMethod": "Dynamic",
                                                                "subnet": {
                                                                    "properties": {
                                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "destinationLoadBalancerFrontEndIPConfiguration": {
                            "properties": {
                                "subnet": {
                                    "properties": {
                                        "privateEndpointNetworkPolicies": "Enabled",
                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                },
                                "publicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "servicePublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                },
                                                "linkedPublicIPAddress": {
                                                    "properties": {
                                                        "ipConfiguration": {
                                                            "properties": {
                                                                "privateIPAllocationMethod": "Dynamic",
                                                                "subnet": {
                                                                    "properties": {
                                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "linkedPublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                },
                                                "servicePublicIPAddress": {
                                                    "properties": {
                                                        "ipConfiguration": {
                                                            "properties": {
                                                                "privateIPAllocationMethod": "Dynamic",
                                                                "subnet": {
                                                                    "properties": {
                                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "NetworkProfile",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",
                "operationId": "NetworkProfiles_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",
                "operationId": "NetworkProfiles_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",
                "operationId": "NetworkProfiles_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkProfiles/{networkProfileName}",
                "operationId": "NetworkProfiles_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkProfiles",
                "operationId": "NetworkProfiles_ListAll"
            }
        },
        "omitProperties": [
            "properties.containerNetworkInterfaces",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "",
            "properties.containerNetworkInterfaceConfigurations[].properties.ipConfigurations[].name",
            "properties.containerNetworkInterfaceConfigurations[].name"
        ],
        "pickPropertiesCreate": [
            "",
            "properties.containerNetworkInterfaceConfigurations[].properties.ipConfigurations[].name",
            "properties.containerNetworkInterfaceConfigurations[].name"
        ]
    },
    {
        "type": "NetworkSecurityGroup",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
                "operationId": "NetworkSecurityGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
                "operationId": "NetworkSecurityGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
                "operationId": "NetworkSecurityGroups_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkSecurityGroups/{networkSecurityGroupName}",
                "operationId": "NetworkSecurityGroups_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkSecurityGroups",
                "operationId": "NetworkSecurityGroups_ListAll"
            }
        },
        "omitProperties": [
            "properties.defaultSecurityRules",
            "properties.networkInterfaces",
            "properties.subnets",
            "properties.flowLogs",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.securityRules[].properties.description",
            "properties.securityRules[].properties.protocol",
            "properties.securityRules[].properties.sourcePortRange",
            "properties.securityRules[].properties.destinationPortRange",
            "properties.securityRules[].properties.sourceAddressPrefix",
            "properties.securityRules[].properties.destinationAddressPrefix",
            "properties.securityRules[].properties.access",
            "properties.securityRules[].properties.priority",
            "properties.securityRules[].properties.direction",
            "properties.securityRules[].name",
            "properties.securityRules[].type"
        ],
        "pickPropertiesCreate": [
            "properties.securityRules[].properties.description",
            "properties.securityRules[].properties.protocol",
            "properties.securityRules[].properties.sourcePortRange",
            "properties.securityRules[].properties.destinationPortRange",
            "properties.securityRules[].properties.sourceAddressPrefix",
            "properties.securityRules[].properties.destinationAddressPrefix",
            "properties.securityRules[].properties.access",
            "properties.securityRules[].properties.priority",
            "properties.securityRules[].properties.direction",
            "properties.securityRules[].name",
            "properties.securityRules[].type"
        ]
    },
    {
        "type": "NetworkVirtualAppliance",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "managedIdentities": {
                "type": "UserAssignedIdentity",
                "group": "ManagedIdentity",
                "createOnly": true,
                "list": true
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualHub.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}",
                "operationId": "NetworkVirtualAppliances_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}",
                "operationId": "NetworkVirtualAppliances_Get"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}",
                "operationId": "NetworkVirtualAppliances_UpdateTags"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}",
                "operationId": "NetworkVirtualAppliances_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkVirtualAppliances",
                "operationId": "NetworkVirtualAppliances_List"
            }
        },
        "omitProperties": [
            "properties.addressPrefix",
            "properties.virtualHub.id",
            "properties.virtualApplianceNics",
            "properties.virtualApplianceSites",
            "properties.inboundSecurityRules",
            "properties.provisioningState",
            "identity.principalId",
            "identity.tenantId",
            "etag"
        ],
        "pickProperties": [
            "properties.nvaSku.vendor",
            "properties.nvaSku.bundledScaleUnit",
            "properties.nvaSku.marketPlaceVersion",
            "properties.cloudInitConfiguration",
            "properties.virtualApplianceAsn",
            "properties.sshPublicKey",
            "identity.type"
        ],
        "pickPropertiesCreate": [
            "properties.nvaSku.vendor",
            "properties.nvaSku.bundledScaleUnit",
            "properties.nvaSku.marketPlaceVersion",
            "properties.cloudInitConfiguration",
            "properties.virtualApplianceAsn",
            "properties.sshPublicKey",
            "identity.type"
        ]
    },
    {
        "type": "NetworkWatcher",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",
                "operationId": "NetworkWatchers_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",
                "operationId": "NetworkWatchers_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",
                "operationId": "NetworkWatchers_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}",
                "operationId": "NetworkWatchers_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkWatchers",
                "operationId": "NetworkWatchers_ListAll"
            }
        },
        "omitProperties": [
            "etag",
            "properties.provisioningState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "P2sVpnGateway",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualHub.id"
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.p2SConnectionConfigurations.items.routingConfiguration.associatedRouteTable.id"
            },
            "vpnServerConfiguration": {
                "type": "VpnServerConfiguration",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.vpnServerConfiguration.id"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",
                "operationId": "P2sVpnGateways_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",
                "operationId": "P2sVpnGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",
                "operationId": "P2sVpnGateways_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/p2svpnGateways/{gatewayName}",
                "operationId": "P2sVpnGateways_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/p2svpnGateways",
                "operationId": "P2sVpnGateways_List"
            }
        },
        "omitProperties": [
            "properties.virtualHub.id",
            "properties.provisioningState",
            "properties.vpnServerConfiguration.id",
            "properties.vpnClientConnectionHealth",
            "etag"
        ],
        "pickProperties": [
            "properties.p2SConnectionConfigurations[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.p2SConnectionConfigurations[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "properties.p2SConnectionConfigurations[].properties.enableInternetSecurity",
            "properties.p2SConnectionConfigurations[].name",
            "properties.vpnGatewayScaleUnit",
            "properties.isRoutingPreferenceInternet"
        ],
        "pickPropertiesCreate": [
            "properties.p2SConnectionConfigurations[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.p2SConnectionConfigurations[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "properties.p2SConnectionConfigurations[].properties.enableInternetSecurity",
            "properties.p2SConnectionConfigurations[].name",
            "properties.vpnGatewayScaleUnit",
            "properties.isRoutingPreferenceInternet"
        ]
    },
    {
        "type": "P2sVpnServerConfiguration",
        "group": "Network",
        "apiVersion": "2019-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualWan": {
                "type": "VirtualWan",
                "group": "Network",
                "name": "virtualWanName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations/{p2SVpnServerConfigurationName}",
                "operationId": "P2sVpnServerConfigurations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations/{p2SVpnServerConfigurationName}",
                "operationId": "P2sVpnServerConfigurations_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations/{p2SVpnServerConfigurationName}",
                "operationId": "P2sVpnServerConfigurations_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{virtualWanName}/p2sVpnServerConfigurations",
                "operationId": "P2sVpnServerConfigurations_ListByVirtualWan"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.p2SVpnGateways",
            "etag"
        ],
        "pickProperties": [
            "properties.name",
            "properties.p2SVpnServerConfigVpnClientRootCertificates[].properties.publicCertData",
            "properties.p2SVpnServerConfigVpnClientRootCertificates[].name",
            "properties.p2SVpnServerConfigVpnClientRootCertificates[].etag",
            "properties.p2SVpnServerConfigVpnClientRevokedCertificates[].properties.thumbprint",
            "properties.p2SVpnServerConfigVpnClientRevokedCertificates[].name",
            "properties.p2SVpnServerConfigVpnClientRevokedCertificates[].etag",
            "properties.p2SVpnServerConfigRadiusServerRootCertificates[].properties.publicCertData",
            "properties.p2SVpnServerConfigRadiusServerRootCertificates[].name",
            "properties.p2SVpnServerConfigRadiusServerRootCertificates[].etag",
            "properties.p2SVpnServerConfigRadiusClientRootCertificates[].properties.thumbprint",
            "properties.p2SVpnServerConfigRadiusClientRootCertificates[].name",
            "properties.p2SVpnServerConfigRadiusClientRootCertificates[].etag",
            "properties.vpnClientIpsecPolicies[].saLifeTimeSeconds",
            "properties.vpnClientIpsecPolicies[].saDataSizeKilobytes",
            "properties.vpnClientIpsecPolicies[].ipsecEncryption",
            "properties.vpnClientIpsecPolicies[].ipsecIntegrity",
            "properties.vpnClientIpsecPolicies[].ikeEncryption",
            "properties.vpnClientIpsecPolicies[].ikeIntegrity",
            "properties.vpnClientIpsecPolicies[].dhGroup",
            "properties.vpnClientIpsecPolicies[].pfsGroup",
            "properties.radiusServerAddress",
            "properties.radiusServerSecret",
            "properties.etag",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.p2SVpnServerConfigVpnClientRootCertificates[].properties.publicCertData",
            "properties.p2SVpnServerConfigVpnClientRootCertificates[].name",
            "properties.p2SVpnServerConfigVpnClientRootCertificates[].etag",
            "properties.p2SVpnServerConfigVpnClientRevokedCertificates[].properties.thumbprint",
            "properties.p2SVpnServerConfigVpnClientRevokedCertificates[].name",
            "properties.p2SVpnServerConfigVpnClientRevokedCertificates[].etag",
            "properties.p2SVpnServerConfigRadiusServerRootCertificates[].properties.publicCertData",
            "properties.p2SVpnServerConfigRadiusServerRootCertificates[].name",
            "properties.p2SVpnServerConfigRadiusServerRootCertificates[].etag",
            "properties.p2SVpnServerConfigRadiusClientRootCertificates[].properties.thumbprint",
            "properties.p2SVpnServerConfigRadiusClientRootCertificates[].name",
            "properties.p2SVpnServerConfigRadiusClientRootCertificates[].etag",
            "properties.vpnClientIpsecPolicies[].saLifeTimeSeconds",
            "properties.vpnClientIpsecPolicies[].saDataSizeKilobytes",
            "properties.vpnClientIpsecPolicies[].ipsecEncryption",
            "properties.vpnClientIpsecPolicies[].ipsecIntegrity",
            "properties.vpnClientIpsecPolicies[].ikeEncryption",
            "properties.vpnClientIpsecPolicies[].ikeIntegrity",
            "properties.vpnClientIpsecPolicies[].dhGroup",
            "properties.vpnClientIpsecPolicies[].pfsGroup",
            "properties.radiusServerAddress",
            "properties.radiusServerSecret",
            "properties.etag",
            "name"
        ]
    },
    {
        "type": "PacketCapture",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "networkWatcher": {
                "type": "NetworkWatcher",
                "group": "Network",
                "name": "networkWatcherName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}",
                "operationId": "PacketCaptures_Create"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}",
                "operationId": "PacketCaptures_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}",
                "operationId": "PacketCaptures_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures",
                "operationId": "PacketCaptures_List"
            }
        },
        "omitProperties": [
            "name",
            "id",
            "etag",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties,target.properties,bytesToCapturePerPacket.properties,totalBytesPerSession.properties,timeLimitInSeconds.properties,storageLocation,storagePath.properties,storageLocation,filePath.properties,filters[],protocol.properties,filters[],localIPAddress.properties,filters[],remoteIPAddress.properties,filters[],localPort.properties,filters[],remotePort"
        ],
        "pickPropertiesCreate": [
            "properties.target",
            "properties.bytesToCapturePerPacket",
            "properties.totalBytesPerSession",
            "properties.timeLimitInSeconds",
            "properties.storageLocation.storagePath",
            "properties.storageLocation.filePath",
            "properties.filters[].protocol",
            "properties.filters[].localIPAddress",
            "properties.filters[].remoteIPAddress",
            "properties.filters[].localPort",
            "properties.filters[].remotePort"
        ]
    },
    {
        "type": "PrivateDnsZoneGroup",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "privateEndpoint": {
                "type": "PrivateEndpoint",
                "group": "Network",
                "name": "privateEndpointName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups/{privateDnsZoneGroupName}",
                "operationId": "PrivateDnsZoneGroups_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups/{privateDnsZoneGroupName}",
                "operationId": "PrivateDnsZoneGroups_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups/{privateDnsZoneGroupName}",
                "operationId": "PrivateDnsZoneGroups_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}/privateDnsZoneGroups",
                "operationId": "PrivateDnsZoneGroups_List"
            }
        },
        "omitProperties": [
            "etag",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "name",
            "properties.privateDnsZoneConfigs[].name"
        ],
        "pickPropertiesCreate": [
            "name",
            "properties.privateDnsZoneConfigs[].name"
        ]
    },
    {
        "type": "PrivateEndpoint",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.subnet.natGateway.id"
            },
            "privateLinkService": {
                "type": "PrivateLinkService",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.manualPrivateLinkServiceConnections.items.privateLinkServiceId"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}",
                "operationId": "PrivateEndpoints_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}",
                "operationId": "PrivateEndpoints_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}",
                "operationId": "PrivateEndpoints_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateEndpoints",
                "operationId": "PrivateEndpoints_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.subnet.properties.networkSecurityGroup.etag",
            "properties.subnet.properties.routeTable.properties.subnets",
            "properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.subnet.properties.routeTable.etag",
            "properties.subnet.properties.natGateway.id",
            "properties.subnet.properties.privateEndpoints",
            "properties.subnet.properties.ipConfigurations",
            "properties.subnet.properties.ipConfigurationProfiles",
            "properties.subnet.properties.resourceNavigationLinks",
            "properties.subnet.properties.serviceAssociationLinks",
            "properties.subnet.properties.purpose",
            "properties.subnet.properties.provisioningState",
            "properties.subnet.etag",
            "properties.networkInterfaces",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "",
            "properties.privateLinkServiceConnections[].properties.requestMessage",
            "properties.privateLinkServiceConnections[].name",
            "properties.manualPrivateLinkServiceConnections[].properties.requestMessage",
            "properties.manualPrivateLinkServiceConnections[].name",
            "properties.customDnsConfigs[].fqdn",
            "properties.ipConfigurations[].properties.memberName",
            "properties.ipConfigurations[].properties.privateIPAddress",
            "properties.ipConfigurations[].name",
            "properties.customNetworkInterfaceName"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "",
            "properties.privateLinkServiceConnections[].properties.requestMessage",
            "properties.privateLinkServiceConnections[].name",
            "properties.manualPrivateLinkServiceConnections[].properties.requestMessage",
            "properties.manualPrivateLinkServiceConnections[].name",
            "properties.customDnsConfigs[].fqdn",
            "properties.ipConfigurations[].properties.memberName",
            "properties.ipConfigurations[].properties.privateIPAddress",
            "properties.ipConfigurations[].name",
            "properties.customNetworkInterfaceName"
        ],
        "propertiesDefault": {
            "properties": {
                "subnet": {
                    "properties": {
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                }
            }
        }
    },
    {
        "type": "PrivateLinkService",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.ipConfigurations.items.subnet.natGateway.id"
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.loadBalancerFrontendIpConfigurations.items.publicIPAddress.linkedPublicIPAddress.servicePublicIPAddress.ddosSettings.ddosCustomPolicy.id"
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.loadBalancerFrontendIpConfigurations.items.publicIPPrefix.id"
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.loadBalancerFrontendIpConfigurations.items.gatewayLoadBalancer.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}",
                "operationId": "PrivateLinkServices_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}",
                "operationId": "PrivateLinkServices_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}",
                "operationId": "PrivateLinkServices_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/privateLinkServices",
                "operationId": "PrivateLinkServices_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.networkInterfaces",
            "properties.provisioningState",
            "properties.privateEndpointConnections",
            "properties.alias",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.loadBalancerFrontendIpConfigurations[].properties.privateIPAddress",
            "properties.loadBalancerFrontendIpConfigurations[].properties.privateIPAllocationMethod",
            "properties.loadBalancerFrontendIpConfigurations[].properties.privateIPAddressVersion",
            "",
            "properties,loadBalancerFrontendIpConfigurations[],properties,publicIPAddress,location",
            "properties.loadBalancerFrontendIpConfigurations[].name",
            "properties.ipConfigurations[].properties.privateIPAddress",
            "properties.ipConfigurations[].properties.privateIPAllocationMethod",
            "",
            "properties.ipConfigurations[].properties.primary",
            "properties.ipConfigurations[].properties.privateIPAddressVersion",
            "properties.ipConfigurations[].name",
            "",
            "",
            "properties.enableProxyProtocol"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.loadBalancerFrontendIpConfigurations[].properties.privateIPAddress",
            "properties.loadBalancerFrontendIpConfigurations[].properties.privateIPAllocationMethod",
            "properties.loadBalancerFrontendIpConfigurations[].properties.privateIPAddressVersion",
            "",
            "properties,loadBalancerFrontendIpConfigurations[],properties,publicIPAddress,location",
            "properties.loadBalancerFrontendIpConfigurations[].name",
            "properties.ipConfigurations[].properties.privateIPAddress",
            "properties.ipConfigurations[].properties.privateIPAllocationMethod",
            "",
            "properties.ipConfigurations[].properties.primary",
            "properties.ipConfigurations[].properties.privateIPAddressVersion",
            "properties.ipConfigurations[].name",
            "",
            "",
            "properties.enableProxyProtocol"
        ]
    },
    {
        "type": "PrivateLinkServicePrivateEndpointConnection",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "service": {
                "type": "PrivateLinkService",
                "group": "Network",
                "name": "serviceName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections/{peConnectionName}",
                "operationId": "PrivateLinkServices_GetPrivateEndpointConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections/{peConnectionName}",
                "operationId": "PrivateLinkServices_UpdatePrivateEndpointConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections/{peConnectionName}",
                "operationId": "PrivateLinkServices_DeletePrivateEndpointConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateLinkServices/{serviceName}/privateEndpointConnections",
                "operationId": "PrivateLinkServices_ListPrivateEndpointConnections"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState",
            "properties.linkIdentifier",
            "type",
            "etag"
        ],
        "pickProperties": [
            "name"
        ],
        "pickPropertiesCreate": [
            "name"
        ],
        "propertiesDefault": {
            "properties": {
                "privateEndpoint": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "PublicIPAddress",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.linkedPublicIPAddress.servicePublicIPAddress.ddosSettings.ddosCustomPolicy.id"
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.linkedPublicIPAddress.servicePublicIPAddress.publicIPPrefix.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
                "operationId": "PublicIPAddresses_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
                "operationId": "PublicIPAddresses_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
                "operationId": "PublicIPAddresses_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses/{publicIpAddressName}",
                "operationId": "PublicIPAddresses_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPAddresses",
                "operationId": "PublicIPAddresses_List"
            }
        },
        "omitProperties": [
            "properties.ipConfiguration",
            "properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPPrefix.id",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.servicePublicIPAddress.properties.provisioningState",
            "properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.servicePublicIPAddress.etag",
            "properties.natGateway.properties.subnets",
            "properties.natGateway.properties.resourceGuid",
            "properties.natGateway.properties.provisioningState",
            "properties.natGateway.etag",
            "properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.linkedPublicIPAddress.etag",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.publicIPAllocationMethod",
            "properties.publicIPAddressVersion",
            "properties.dnsSettings.domainNameLabel",
            "properties.dnsSettings.fqdn",
            "properties.dnsSettings.reverseFqdn",
            "properties.ddosSettings.protectionCoverage",
            "properties.ddosSettings.protectedIP",
            "properties.ipTags[].ipTagType",
            "properties.ipTags[].tag",
            "properties.ipAddress",
            "properties.idleTimeoutInMinutes",
            "properties,servicePublicIPAddress,location",
            "properties,natGateway,location",
            "properties.migrationPhase",
            "properties,linkedPublicIPAddress,location",
            "properties.deleteOption"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.publicIPAllocationMethod",
            "properties.publicIPAddressVersion",
            "properties.dnsSettings.domainNameLabel",
            "properties.dnsSettings.fqdn",
            "properties.dnsSettings.reverseFqdn",
            "properties.ddosSettings.protectionCoverage",
            "properties.ddosSettings.protectedIP",
            "properties.ipTags[].ipTagType",
            "properties.ipTags[].tag",
            "properties.ipAddress",
            "properties.idleTimeoutInMinutes",
            "properties,servicePublicIPAddress,location",
            "properties,natGateway,location",
            "properties.migrationPhase",
            "properties,linkedPublicIPAddress,location",
            "properties.deleteOption"
        ],
        "propertiesDefault": {
            "properties": {
                "ipConfiguration": {
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    }
                },
                "servicePublicIPAddress": {
                    "properties": {
                        "ipConfiguration": {
                            "properties": {
                                "privateIPAllocationMethod": "Dynamic",
                                "subnet": {
                                    "properties": {
                                        "privateEndpointNetworkPolicies": "Enabled",
                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                }
                            }
                        },
                        "linkedPublicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "linkedPublicIPAddress": {
                    "properties": {
                        "ipConfiguration": {
                            "properties": {
                                "privateIPAllocationMethod": "Dynamic",
                                "subnet": {
                                    "properties": {
                                        "privateEndpointNetworkPolicies": "Enabled",
                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                }
                            }
                        },
                        "servicePublicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "PublicIPPrefix",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.loadBalancerFrontendIpConfiguration.id"
            },
            "customIpPrefix": {
                "type": "CustomIPPrefix",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.customIPPrefix.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",
                "operationId": "PublicIPPrefixes_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",
                "operationId": "PublicIPPrefixes_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",
                "operationId": "PublicIPPrefixes_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",
                "operationId": "PublicIPPrefixes_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes",
                "operationId": "PublicIPPrefixes_List"
            }
        },
        "omitProperties": [
            "properties.ipPrefix",
            "properties.publicIPAddresses",
            "properties.loadBalancerFrontendIpConfiguration",
            "properties.customIPPrefix.id",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.natGateway.properties.subnets",
            "properties.natGateway.properties.resourceGuid",
            "properties.natGateway.properties.provisioningState",
            "properties.natGateway.etag",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.publicIPAddressVersion",
            "properties.ipTags[].ipTagType",
            "properties.ipTags[].tag",
            "properties.prefixLength",
            "properties,natGateway,location"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "sku.name",
            "sku.tier",
            "properties.publicIPAddressVersion",
            "properties.ipTags[].ipTagType",
            "properties.ipTags[].tag",
            "properties.prefixLength",
            "properties,natGateway,location"
        ]
    },
    {
        "type": "Route",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "name": "routeTableName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",
                "operationId": "Routes_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",
                "operationId": "Routes_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}",
                "operationId": "Routes_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes",
                "operationId": "Routes_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.addressPrefix",
            "properties.nextHopType",
            "properties.nextHopIpAddress",
            "properties.hasBgpOverride",
            "name",
            "type"
        ],
        "pickPropertiesCreate": [
            "properties.addressPrefix",
            "properties.nextHopType",
            "properties.nextHopIpAddress",
            "properties.hasBgpOverride",
            "name",
            "type"
        ]
    },
    {
        "type": "RouteFilter",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",
                "operationId": "RouteFilters_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",
                "operationId": "RouteFilters_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",
                "operationId": "RouteFilters_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}",
                "operationId": "RouteFilters_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters",
                "operationId": "RouteFilters_List"
            }
        },
        "omitProperties": [
            "properties.peerings",
            "properties.ipv6Peerings",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.rules[].properties.access",
            "properties.rules[].properties.routeFilterRuleType",
            "properties.rules[].name",
            "properties.rules[].location"
        ],
        "pickPropertiesCreate": [
            "properties.rules[].properties.access",
            "properties.rules[].properties.routeFilterRuleType",
            "properties.rules[].name",
            "properties.rules[].location"
        ]
    },
    {
        "type": "RouteFilterRule",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "routeFilter": {
                "type": "RouteFilter",
                "group": "Network",
                "name": "routeFilterName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",
                "operationId": "RouteFilterRules_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",
                "operationId": "RouteFilterRules_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}",
                "operationId": "RouteFilterRules_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules",
                "operationId": "RouteFilterRules_ListByRouteFilter"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.access",
            "properties.routeFilterRuleType",
            "name",
            "location"
        ],
        "pickPropertiesCreate": [
            "properties.access",
            "properties.routeFilterRuleType",
            "name",
            "location"
        ]
    },
    {
        "type": "RouteTable",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
                "operationId": "RouteTables_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
                "operationId": "RouteTables_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
                "operationId": "RouteTables_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}",
                "operationId": "RouteTables_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables",
                "operationId": "RouteTables_ListAll"
            }
        },
        "omitProperties": [
            "properties.subnets",
            "properties.provisioningState",
            "properties.resourceGuid",
            "etag"
        ],
        "pickProperties": [
            "properties.routes[].properties.addressPrefix",
            "properties.routes[].properties.nextHopType",
            "properties.routes[].properties.nextHopIpAddress",
            "properties.routes[].properties.hasBgpOverride",
            "properties.routes[].name",
            "properties.routes[].type",
            "properties.disableBgpRoutePropagation"
        ],
        "pickPropertiesCreate": [
            "properties.routes[].properties.addressPrefix",
            "properties.routes[].properties.nextHopType",
            "properties.routes[].properties.nextHopIpAddress",
            "properties.routes[].properties.hasBgpOverride",
            "properties.routes[].name",
            "properties.routes[].type",
            "properties.disableBgpRoutePropagation"
        ]
    },
    {
        "type": "RoutingIntent",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent/{routingIntentName}",
                "operationId": "RoutingIntent_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent/{routingIntentName}",
                "operationId": "RoutingIntent_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent/{routingIntentName}",
                "operationId": "RoutingIntent_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routingIntent",
                "operationId": "RoutingIntent_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.routingPolicies[].name",
            "properties.routingPolicies[].nextHop",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.routingPolicies[].name",
            "properties.routingPolicies[].nextHop",
            "name"
        ]
    },
    {
        "type": "SecurityPartnerProvider",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualHub.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}",
                "operationId": "SecurityPartnerProviders_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}",
                "operationId": "SecurityPartnerProviders_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}",
                "operationId": "SecurityPartnerProviders_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/securityPartnerProviders/{securityPartnerProviderName}",
                "operationId": "SecurityPartnerProviders_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/securityPartnerProviders",
                "operationId": "SecurityPartnerProviders_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.connectionStatus",
            "properties.virtualHub.id",
            "etag"
        ],
        "pickProperties": [
            "properties.securityProviderName"
        ],
        "pickPropertiesCreate": [
            "properties.securityProviderName"
        ]
    },
    {
        "type": "ServiceEndpointPolicy",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",
                "operationId": "ServiceEndpointPolicies_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",
                "operationId": "ServiceEndpointPolicies_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",
                "operationId": "ServiceEndpointPolicies_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}",
                "operationId": "ServiceEndpointPolicies_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/ServiceEndpointPolicies",
                "operationId": "ServiceEndpointPolicies_List"
            }
        },
        "omitProperties": [
            "properties.subnets",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag",
            "kind"
        ],
        "pickProperties": [
            "properties.serviceEndpointPolicyDefinitions[].properties.description",
            "properties.serviceEndpointPolicyDefinitions[].properties.service",
            "properties.serviceEndpointPolicyDefinitions[].name",
            "properties.serviceEndpointPolicyDefinitions[].type",
            "properties.serviceAlias"
        ],
        "pickPropertiesCreate": [
            "properties.serviceEndpointPolicyDefinitions[].properties.description",
            "properties.serviceEndpointPolicyDefinitions[].properties.service",
            "properties.serviceEndpointPolicyDefinitions[].name",
            "properties.serviceEndpointPolicyDefinitions[].type",
            "properties.serviceAlias"
        ]
    },
    {
        "type": "ServiceEndpointPolicyDefinition",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "serviceEndpointPolicy": {
                "type": "ServiceEndpointPolicy",
                "group": "Network",
                "name": "serviceEndpointPolicyName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}",
                "operationId": "ServiceEndpointPolicyDefinitions_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}",
                "operationId": "ServiceEndpointPolicyDefinitions_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions/{serviceEndpointPolicyDefinitionName}",
                "operationId": "ServiceEndpointPolicyDefinitions_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/serviceEndpointPolicies/{serviceEndpointPolicyName}/serviceEndpointPolicyDefinitions",
                "operationId": "ServiceEndpointPolicyDefinitions_ListByResourceGroup"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.description",
            "properties.service",
            "name",
            "type"
        ],
        "pickPropertiesCreate": [
            "properties.description",
            "properties.service",
            "name",
            "type"
        ]
    },
    {
        "type": "Subnet",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.natGateway.id"
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "name": "virtualNetworkName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
                "operationId": "Subnets_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
                "operationId": "Subnets_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
                "operationId": "Subnets_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets",
                "operationId": "Subnets_List"
            }
        },
        "omitProperties": [
            "properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.networkSecurityGroup.properties.subnets",
            "properties.networkSecurityGroup.properties.flowLogs",
            "properties.networkSecurityGroup.properties.resourceGuid",
            "properties.networkSecurityGroup.properties.provisioningState",
            "properties.networkSecurityGroup.etag",
            "properties.routeTable.properties.subnets",
            "properties.routeTable.properties.provisioningState",
            "properties.routeTable.properties.resourceGuid",
            "properties.routeTable.etag",
            "properties.natGateway.id",
            "properties.privateEndpoints",
            "properties.ipConfigurations",
            "properties.ipConfigurationProfiles",
            "properties.resourceNavigationLinks",
            "properties.serviceAssociationLinks",
            "properties.purpose",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.addressPrefix",
            "properties,networkSecurityGroup,location",
            "properties,routeTable,location",
            "properties.serviceEndpoints[].service",
            "properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description",
            "properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service",
            "properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name",
            "properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].type",
            "properties.serviceEndpointPolicies[].properties.serviceAlias",
            "properties.delegations[].properties.serviceName",
            "properties.delegations[].name",
            "properties.delegations[].type",
            "properties.privateEndpointNetworkPolicies",
            "properties.privateLinkServiceNetworkPolicies",
            "properties.applicationGatewayIpConfigurations[].name",
            "name",
            "type"
        ],
        "pickPropertiesCreate": [
            "properties.addressPrefix",
            "properties,networkSecurityGroup,location",
            "properties,routeTable,location",
            "properties.serviceEndpoints[].service",
            "properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description",
            "properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service",
            "properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name",
            "properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].type",
            "properties.serviceEndpointPolicies[].properties.serviceAlias",
            "properties.delegations[].properties.serviceName",
            "properties.delegations[].name",
            "properties.delegations[].type",
            "properties.privateEndpointNetworkPolicies",
            "properties.privateLinkServiceNetworkPolicies",
            "properties.applicationGatewayIpConfigurations[].name",
            "name",
            "type"
        ],
        "propertiesDefault": {
            "properties": {
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        }
    },
    {
        "type": "VirtualApplianceSite",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "networkVirtualAppliance": {
                "type": "NetworkVirtualAppliance",
                "group": "Network",
                "name": "networkVirtualApplianceName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites/{siteName}",
                "operationId": "VirtualApplianceSites_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites/{siteName}",
                "operationId": "VirtualApplianceSites_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites/{siteName}",
                "operationId": "VirtualApplianceSites_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/virtualApplianceSites",
                "operationId": "VirtualApplianceSites_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.addressPrefix",
            "properties.o365Policy.breakOutCategories.allow",
            "properties.o365Policy.breakOutCategories.optimize",
            "properties.o365Policy.breakOutCategories.default",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.addressPrefix",
            "properties.o365Policy.breakOutCategories.allow",
            "properties.o365Policy.breakOutCategories.optimize",
            "properties.o365Policy.breakOutCategories.default",
            "name"
        ]
    },
    {
        "type": "VirtualHub",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualWan": {
                "type": "VirtualWan",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualWan.id"
            },
            "vpnGateway": {
                "type": "VpnGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.vpnGateway.id"
            },
            "p2sVpnGateway": {
                "type": "P2sVpnGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.p2SVpnGateway.id"
            },
            "expressRouteGateway": {
                "type": "ExpressRouteGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.expressRouteGateway.id"
            },
            "azureFirewall": {
                "type": "AzureFirewall",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.azureFirewall.id"
            },
            "securityPartnerProvider": {
                "type": "SecurityPartnerProvider",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.securityPartnerProvider.id"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",
                "operationId": "VirtualHubs_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",
                "operationId": "VirtualHubs_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",
                "operationId": "VirtualHubs_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}",
                "operationId": "VirtualHubs_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualHubs",
                "operationId": "VirtualHubs_List"
            }
        },
        "omitProperties": [
            "properties.virtualWan.id",
            "properties.vpnGateway.id",
            "properties.p2SVpnGateway.id",
            "properties.expressRouteGateway.id",
            "properties.azureFirewall.id",
            "properties.securityPartnerProvider.id",
            "properties.provisioningState",
            "properties.routingState",
            "properties.bgpConnections",
            "properties.ipConfigurations",
            "etag",
            "kind"
        ],
        "pickProperties": [
            "properties.addressPrefix",
            "properties.routeTable.routes[].nextHopIpAddress",
            "properties.securityProviderName",
            "properties.virtualHubRouteTableV2s[].properties.routes[].destinationType",
            "properties.virtualHubRouteTableV2s[].properties.routes[].nextHopType",
            "properties.virtualHubRouteTableV2s[].name",
            "properties.sku",
            "properties.virtualRouterAsn",
            "properties.allowBranchToBranchTraffic",
            "properties.preferredRoutingGateway",
            "properties.hubRoutingPreference"
        ],
        "pickPropertiesCreate": [
            "properties.addressPrefix",
            "properties.routeTable.routes[].nextHopIpAddress",
            "properties.securityProviderName",
            "properties.virtualHubRouteTableV2s[].properties.routes[].destinationType",
            "properties.virtualHubRouteTableV2s[].properties.routes[].nextHopType",
            "properties.virtualHubRouteTableV2s[].name",
            "properties.sku",
            "properties.virtualRouterAsn",
            "properties.allowBranchToBranchTraffic",
            "properties.preferredRoutingGateway",
            "properties.hubRoutingPreference"
        ]
    },
    {
        "type": "VirtualHubBgpConnection",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "hubVirtualNetworkConnection": {
                "type": "HubVirtualNetworkConnection",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.hubVirtualNetworkConnection.id"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}",
                "operationId": "VirtualHubBgpConnection_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}",
                "operationId": "VirtualHubBgpConnection_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections/{connectionName}",
                "operationId": "VirtualHubBgpConnection_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/bgpConnections",
                "operationId": "VirtualHubBgpConnections_List"
            }
        },
        "omitProperties": [
            "properties.hubVirtualNetworkConnection.id",
            "properties.provisioningState",
            "properties.connectionState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.peerAsn",
            "properties.peerIp",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.peerAsn",
            "properties.peerIp",
            "name"
        ]
    },
    {
        "type": "VirtualHubIpConfiguration",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.subnet.natGateway.id"
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.publicIPAddress.linkedPublicIPAddress.servicePublicIPAddress.ddosSettings.ddosCustomPolicy.id"
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.publicIPAddress.linkedPublicIPAddress.servicePublicIPAddress.publicIPPrefix.id"
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/{ipConfigName}",
                "operationId": "VirtualHubIpConfiguration_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/{ipConfigName}",
                "operationId": "VirtualHubIpConfiguration_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations/{ipConfigName}",
                "operationId": "VirtualHubIpConfiguration_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/ipConfigurations",
                "operationId": "VirtualHubIpConfiguration_List"
            }
        },
        "omitProperties": [
            "properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.subnet.properties.networkSecurityGroup.etag",
            "properties.subnet.properties.routeTable.properties.subnets",
            "properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.subnet.properties.routeTable.etag",
            "properties.subnet.properties.natGateway.id",
            "properties.subnet.properties.privateEndpoints",
            "properties.subnet.properties.ipConfigurations",
            "properties.subnet.properties.ipConfigurationProfiles",
            "properties.subnet.properties.resourceNavigationLinks",
            "properties.subnet.properties.serviceAssociationLinks",
            "properties.subnet.properties.purpose",
            "properties.subnet.properties.provisioningState",
            "properties.subnet.etag",
            "properties.publicIPAddress.properties.ipConfiguration",
            "properties.publicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPAddress.properties.publicIPPrefix.id",
            "properties.publicIPAddress.properties.resourceGuid",
            "properties.publicIPAddress.properties.provisioningState",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.publicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.publicIPAddress.properties.natGateway.properties.subnets",
            "properties.publicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.publicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.publicIPAddress.properties.natGateway.etag",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.publicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.publicIPAddress.etag",
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.privateIPAddress",
            "properties.privateIPAllocationMethod",
            "",
            "properties,publicIPAddress,location",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.privateIPAddress",
            "properties.privateIPAllocationMethod",
            "",
            "properties,publicIPAddress,location",
            "name"
        ],
        "propertiesDefault": {
            "properties": {
                "subnet": {
                    "properties": {
                        "privateEndpointNetworkPolicies": "Enabled",
                        "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                },
                "publicIPAddress": {
                    "properties": {
                        "ipConfiguration": {
                            "properties": {
                                "privateIPAllocationMethod": "Dynamic",
                                "subnet": {
                                    "properties": {
                                        "privateEndpointNetworkPolicies": "Enabled",
                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                    }
                                }
                            }
                        },
                        "servicePublicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                },
                                "linkedPublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "linkedPublicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                },
                                "servicePublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "VirtualHubRouteTableV2",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "name": "virtualHubName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}",
                "operationId": "VirtualHubRouteTableV2s_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}",
                "operationId": "VirtualHubRouteTableV2s_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables/{routeTableName}",
                "operationId": "VirtualHubRouteTableV2s_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeTables",
                "operationId": "VirtualHubRouteTableV2s_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.routes[].destinationType",
            "properties.routes[].nextHopType",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.routes[].destinationType",
            "properties.routes[].nextHopType",
            "name"
        ]
    },
    {
        "type": "VirtualNetwork",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.subnets.items.natGateway.id"
            },
            "ddosProtectionPlan": {
                "type": "DdosProtectionPlan",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.ddosProtectionPlan.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
                "operationId": "VirtualNetworks_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
                "operationId": "VirtualNetworks_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
                "operationId": "VirtualNetworks_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}",
                "operationId": "VirtualNetworks_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworks",
                "operationId": "VirtualNetworks_ListAll"
            }
        },
        "omitProperties": [
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.ddosProtectionPlan.id",
            "properties.bgpCommunities.regionalCommunity",
            "etag"
        ],
        "pickProperties": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.flowTimeoutInMinutes",
            "properties.subnets[].properties.addressPrefix",
            "properties,subnets[],properties,networkSecurityGroup,location",
            "properties,subnets[],properties,routeTable,location",
            "properties.subnets[].properties.serviceEndpoints[].service",
            "properties.subnets[].properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description",
            "properties.subnets[].properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service",
            "properties.subnets[].properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name",
            "properties.subnets[].properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].type",
            "properties.subnets[].properties.serviceEndpointPolicies[].properties.serviceAlias",
            "properties.subnets[].properties.delegations[].properties.serviceName",
            "properties.subnets[].properties.delegations[].name",
            "properties.subnets[].properties.delegations[].type",
            "properties.subnets[].properties.privateEndpointNetworkPolicies",
            "properties.subnets[].properties.privateLinkServiceNetworkPolicies",
            "properties.subnets[].properties.applicationGatewayIpConfigurations[].name",
            "properties.subnets[].name",
            "properties.subnets[].type",
            "properties.virtualNetworkPeerings[].properties.allowVirtualNetworkAccess",
            "properties.virtualNetworkPeerings[].properties.allowForwardedTraffic",
            "properties.virtualNetworkPeerings[].properties.allowGatewayTransit",
            "properties.virtualNetworkPeerings[].properties.useRemoteGateways",
            "properties.virtualNetworkPeerings[].properties.remoteBgpCommunities.virtualNetworkCommunity",
            "properties.virtualNetworkPeerings[].properties.peeringSyncLevel",
            "properties.virtualNetworkPeerings[].properties.doNotVerifyRemoteGateways",
            "properties.virtualNetworkPeerings[].name",
            "properties.virtualNetworkPeerings[].type",
            "properties.enableDdosProtection",
            "properties.enableVmProtection",
            "properties.bgpCommunities.virtualNetworkCommunity",
            "properties.encryption.enabled",
            "properties.encryption.enforcement"
        ],
        "pickPropertiesCreate": [
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.flowTimeoutInMinutes",
            "properties.subnets[].properties.addressPrefix",
            "properties,subnets[],properties,networkSecurityGroup,location",
            "properties,subnets[],properties,routeTable,location",
            "properties.subnets[].properties.serviceEndpoints[].service",
            "properties.subnets[].properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description",
            "properties.subnets[].properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service",
            "properties.subnets[].properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name",
            "properties.subnets[].properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].type",
            "properties.subnets[].properties.serviceEndpointPolicies[].properties.serviceAlias",
            "properties.subnets[].properties.delegations[].properties.serviceName",
            "properties.subnets[].properties.delegations[].name",
            "properties.subnets[].properties.delegations[].type",
            "properties.subnets[].properties.privateEndpointNetworkPolicies",
            "properties.subnets[].properties.privateLinkServiceNetworkPolicies",
            "properties.subnets[].properties.applicationGatewayIpConfigurations[].name",
            "properties.subnets[].name",
            "properties.subnets[].type",
            "properties.virtualNetworkPeerings[].properties.allowVirtualNetworkAccess",
            "properties.virtualNetworkPeerings[].properties.allowForwardedTraffic",
            "properties.virtualNetworkPeerings[].properties.allowGatewayTransit",
            "properties.virtualNetworkPeerings[].properties.useRemoteGateways",
            "properties.virtualNetworkPeerings[].properties.remoteBgpCommunities.virtualNetworkCommunity",
            "properties.virtualNetworkPeerings[].properties.peeringSyncLevel",
            "properties.virtualNetworkPeerings[].properties.doNotVerifyRemoteGateways",
            "properties.virtualNetworkPeerings[].name",
            "properties.virtualNetworkPeerings[].type",
            "properties.enableDdosProtection",
            "properties.enableVmProtection",
            "properties.bgpCommunities.virtualNetworkCommunity",
            "properties.encryption.enabled",
            "properties.encryption.enforcement"
        ],
        "propertiesDefault": {
            "properties": {
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        }
    },
    {
        "type": "VirtualNetworkGateway",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.ipConfigurations.items.subnet.id"
            },
            "publicIpAddress": {
                "type": "PublicIPAddress",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.ipConfigurations.items.publicIPAddress.id"
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.natRules.items.ipConfigurationId"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
                "operationId": "VirtualNetworkGateways_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
                "operationId": "VirtualNetworkGateways_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
                "operationId": "VirtualNetworkGateways_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}",
                "operationId": "VirtualNetworkGateways_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways",
                "operationId": "VirtualNetworkGateways_List"
            }
        },
        "omitProperties": [
            "properties.gatewayDefaultSite.id",
            "properties.sku.capacity",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.inboundDnsForwardingEndpoint",
            "properties.vNetExtendedLocationResourceId",
            "etag"
        ],
        "pickProperties": [
            "properties.ipConfigurations[].properties.privateIPAllocationMethod",
            "properties.ipConfigurations[].name",
            "properties.gatewayType",
            "properties.vpnType",
            "properties.vpnGatewayGeneration",
            "properties.enableBgp",
            "properties.enablePrivateIpAddress",
            "properties.activeActive",
            "properties.disableIPSecReplayProtection",
            "properties.sku.name",
            "properties.sku.tier",
            "properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData",
            "properties.vpnClientConfiguration.vpnClientRootCertificates[].name",
            "properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint",
            "properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup",
            "properties.vpnClientConfiguration.radiusServerAddress",
            "properties.vpnClientConfiguration.radiusServerSecret",
            "properties.vpnClientConfiguration.radiusServers[].radiusServerAddress",
            "properties.vpnClientConfiguration.radiusServers[].radiusServerScore",
            "properties.vpnClientConfiguration.radiusServers[].radiusServerSecret",
            "properties.vpnClientConfiguration.aadTenant",
            "properties.vpnClientConfiguration.aadAudience",
            "properties.vpnClientConfiguration.aadIssuer",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight",
            "properties.enableDnsForwarding",
            "properties.natRules[].properties.type",
            "properties.natRules[].properties.mode",
            "properties.natRules[].properties.internalMappings[].addressSpace",
            "properties.natRules[].properties.internalMappings[].portRange",
            "properties.natRules[].properties.externalMappings[].addressSpace",
            "properties.natRules[].properties.externalMappings[].portRange",
            "properties.natRules[].name",
            "properties.enableBgpRouteTranslationForNat",
            "extendedLocation.name",
            "extendedLocation.type"
        ],
        "pickPropertiesCreate": [
            "properties.ipConfigurations[].properties.privateIPAllocationMethod",
            "properties.ipConfigurations[].name",
            "properties.gatewayType",
            "properties.vpnType",
            "properties.vpnGatewayGeneration",
            "properties.enableBgp",
            "properties.enablePrivateIpAddress",
            "properties.activeActive",
            "properties.disableIPSecReplayProtection",
            "properties.sku.name",
            "properties.sku.tier",
            "properties.vpnClientConfiguration.vpnClientRootCertificates[].properties.publicCertData",
            "properties.vpnClientConfiguration.vpnClientRootCertificates[].name",
            "properties.vpnClientConfiguration.vpnClientRevokedCertificates[].properties.thumbprint",
            "properties.vpnClientConfiguration.vpnClientRevokedCertificates[].name",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saLifeTimeSeconds",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].saDataSizeKilobytes",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecEncryption",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ipsecIntegrity",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeEncryption",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].ikeIntegrity",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].dhGroup",
            "properties.vpnClientConfiguration.vpnClientIpsecPolicies[].pfsGroup",
            "properties.vpnClientConfiguration.radiusServerAddress",
            "properties.vpnClientConfiguration.radiusServerSecret",
            "properties.vpnClientConfiguration.radiusServers[].radiusServerAddress",
            "properties.vpnClientConfiguration.radiusServers[].radiusServerScore",
            "properties.vpnClientConfiguration.radiusServers[].radiusServerSecret",
            "properties.vpnClientConfiguration.aadTenant",
            "properties.vpnClientConfiguration.aadAudience",
            "properties.vpnClientConfiguration.aadIssuer",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight",
            "properties.enableDnsForwarding",
            "properties.natRules[].properties.type",
            "properties.natRules[].properties.mode",
            "properties.natRules[].properties.internalMappings[].addressSpace",
            "properties.natRules[].properties.internalMappings[].portRange",
            "properties.natRules[].properties.externalMappings[].addressSpace",
            "properties.natRules[].properties.externalMappings[].portRange",
            "properties.natRules[].name",
            "properties.enableBgpRouteTranslationForNat",
            "extendedLocation.name",
            "extendedLocation.type"
        ]
    },
    {
        "type": "VirtualNetworkGatewayConnection",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualNetworkGateway2.ipConfigurations.items.subnet.id"
            },
            "publicIpAddress": {
                "type": "PublicIPAddress",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualNetworkGateway2.ipConfigurations.items.publicIPAddress.id"
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.gatewayCustomBgpIpAddresses.items.ipConfigurationId"
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
                "operationId": "VirtualNetworkGatewayConnections_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
                "operationId": "VirtualNetworkGatewayConnections_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
                "operationId": "VirtualNetworkGatewayConnections_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}",
                "operationId": "VirtualNetworkGatewayConnections_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections",
                "operationId": "VirtualNetworkGatewayConnections_List"
            }
        },
        "omitProperties": [
            "properties.virtualNetworkGateway1.properties.gatewayDefaultSite.id",
            "properties.virtualNetworkGateway1.properties.sku.capacity",
            "properties.virtualNetworkGateway1.properties.resourceGuid",
            "properties.virtualNetworkGateway1.properties.provisioningState",
            "properties.virtualNetworkGateway1.properties.inboundDnsForwardingEndpoint",
            "properties.virtualNetworkGateway1.properties.vNetExtendedLocationResourceId",
            "properties.virtualNetworkGateway1.etag",
            "properties.virtualNetworkGateway2.properties.gatewayDefaultSite.id",
            "properties.virtualNetworkGateway2.properties.sku.capacity",
            "properties.virtualNetworkGateway2.properties.resourceGuid",
            "properties.virtualNetworkGateway2.properties.provisioningState",
            "properties.virtualNetworkGateway2.properties.inboundDnsForwardingEndpoint",
            "properties.virtualNetworkGateway2.properties.vNetExtendedLocationResourceId",
            "properties.virtualNetworkGateway2.etag",
            "properties.localNetworkGateway2.properties.resourceGuid",
            "properties.localNetworkGateway2.properties.provisioningState",
            "properties.localNetworkGateway2.etag",
            "properties.connectionStatus",
            "properties.tunnelConnectionStatus",
            "properties.egressBytesTransferred",
            "properties.ingressBytesTransferred",
            "properties.peer.id",
            "properties.resourceGuid",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.authorizationKey",
            "properties,virtualNetworkGateway1,location",
            "properties,virtualNetworkGateway2,location",
            "properties,localNetworkGateway2,location",
            "properties.connectionType",
            "properties.connectionProtocol",
            "properties.routingWeight",
            "properties.dpdTimeoutSeconds",
            "properties.connectionMode",
            "properties.sharedKey",
            "properties.enableBgp",
            "properties.gatewayCustomBgpIpAddresses[].customBgpIpAddress",
            "properties.useLocalAzureIpAddress",
            "properties.usePolicyBasedTrafficSelectors",
            "properties.ipsecPolicies[].saLifeTimeSeconds",
            "properties.ipsecPolicies[].saDataSizeKilobytes",
            "properties.ipsecPolicies[].ipsecEncryption",
            "properties.ipsecPolicies[].ipsecIntegrity",
            "properties.ipsecPolicies[].ikeEncryption",
            "properties.ipsecPolicies[].ikeIntegrity",
            "properties.ipsecPolicies[].dhGroup",
            "properties.ipsecPolicies[].pfsGroup",
            "properties.expressRouteGatewayBypass"
        ],
        "pickPropertiesCreate": [
            "properties.authorizationKey",
            "properties,virtualNetworkGateway1,location",
            "properties,virtualNetworkGateway2,location",
            "properties,localNetworkGateway2,location",
            "properties.connectionType",
            "properties.connectionProtocol",
            "properties.routingWeight",
            "properties.dpdTimeoutSeconds",
            "properties.connectionMode",
            "properties.sharedKey",
            "properties.enableBgp",
            "properties.gatewayCustomBgpIpAddresses[].customBgpIpAddress",
            "properties.useLocalAzureIpAddress",
            "properties.usePolicyBasedTrafficSelectors",
            "properties.ipsecPolicies[].saLifeTimeSeconds",
            "properties.ipsecPolicies[].saDataSizeKilobytes",
            "properties.ipsecPolicies[].ipsecEncryption",
            "properties.ipsecPolicies[].ipsecIntegrity",
            "properties.ipsecPolicies[].ikeEncryption",
            "properties.ipsecPolicies[].ikeIntegrity",
            "properties.ipsecPolicies[].dhGroup",
            "properties.ipsecPolicies[].pfsGroup",
            "properties.expressRouteGatewayBypass"
        ]
    },
    {
        "type": "VirtualNetworkGatewayConnectionSharedKey",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualNetworkGatewayConnection": {
                "type": "VirtualNetworkGatewayConnection",
                "group": "Network",
                "name": "virtualNetworkGatewayConnectionName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey",
                "operationId": "VirtualNetworkGatewayConnections_SetSharedKey"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/sharedkey",
                "operationId": "VirtualNetworkGatewayConnections_GetSharedKey"
            }
        },
        "pickProperties": [
            "value"
        ],
        "pickPropertiesCreate": [
            "value"
        ]
    },
    {
        "type": "VirtualNetworkGatewayNatRule",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.ipConfigurationId"
            },
            "virtualNetworkGateway": {
                "type": "VirtualNetworkGateway",
                "group": "Network",
                "name": "virtualNetworkGatewayName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/{natRuleName}",
                "operationId": "VirtualNetworkGatewayNatRules_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/{natRuleName}",
                "operationId": "VirtualNetworkGatewayNatRules_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules/{natRuleName}",
                "operationId": "VirtualNetworkGatewayNatRules_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/natRules",
                "operationId": "VirtualNetworkGatewayNatRules_ListByVirtualNetworkGateway"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.ipConfigurationId",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.type",
            "properties.mode",
            "properties.internalMappings[].addressSpace",
            "properties.internalMappings[].portRange",
            "properties.externalMappings[].addressSpace",
            "properties.externalMappings[].portRange",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.type",
            "properties.mode",
            "properties.internalMappings[].addressSpace",
            "properties.internalMappings[].portRange",
            "properties.externalMappings[].addressSpace",
            "properties.externalMappings[].portRange",
            "name"
        ]
    },
    {
        "type": "VirtualNetworkPeering",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualNetwork": {
                "type": "VirtualNetwork",
                "group": "Network",
                "name": "virtualNetworkName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
                "operationId": "VirtualNetworkPeerings_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
                "operationId": "VirtualNetworkPeerings_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
                "operationId": "VirtualNetworkPeerings_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings",
                "operationId": "VirtualNetworkPeerings_List"
            }
        },
        "omitProperties": [
            "properties.remoteVirtualNetwork.id",
            "properties.remoteBgpCommunities.regionalCommunity",
            "properties.remoteVirtualNetworkEncryption",
            "properties.peeringState",
            "properties.provisioningState",
            "properties.resourceGuid",
            "etag"
        ],
        "pickProperties": [
            "properties.allowVirtualNetworkAccess",
            "properties.allowForwardedTraffic",
            "properties.allowGatewayTransit",
            "properties.useRemoteGateways",
            "properties.remoteBgpCommunities.virtualNetworkCommunity",
            "properties.peeringSyncLevel",
            "properties.doNotVerifyRemoteGateways",
            "name",
            "type"
        ],
        "pickPropertiesCreate": [
            "properties.allowVirtualNetworkAccess",
            "properties.allowForwardedTraffic",
            "properties.allowGatewayTransit",
            "properties.useRemoteGateways",
            "properties.remoteBgpCommunities.virtualNetworkCommunity",
            "properties.peeringSyncLevel",
            "properties.doNotVerifyRemoteGateways",
            "name",
            "type"
        ]
    },
    {
        "type": "VirtualNetworkTap",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "loadBalancer": {
                "type": "LoadBalancer",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.destinationLoadBalancerFrontEndIPConfiguration.gatewayLoadBalancer.id"
            },
            "natGateway": {
                "type": "NatGateway",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.destinationLoadBalancerFrontEndIPConfiguration.subnet.natGateway.id"
            },
            "ddosCustomPolicy": {
                "type": "DdosCustomPolicy",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.destinationLoadBalancerFrontEndIPConfiguration.publicIPAddress.linkedPublicIPAddress.servicePublicIPAddress.ddosSettings.ddosCustomPolicy.id"
            },
            "publicIpPrefix": {
                "type": "PublicIPPrefix",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.destinationLoadBalancerFrontEndIPConfiguration.publicIPPrefix.id"
            },
            "loadBalancerBackendAddressPool": {
                "type": "LoadBalancerBackendAddressPool",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.destinationNetworkInterfaceIPConfiguration.loadBalancerInboundNatRules.items.backendAddressPool.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",
                "operationId": "VirtualNetworkTaps_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",
                "operationId": "VirtualNetworkTaps_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",
                "operationId": "VirtualNetworkTaps_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}",
                "operationId": "VirtualNetworkTaps_UpdateTags"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualNetworkTaps",
                "operationId": "VirtualNetworkTaps_ListAll"
            }
        },
        "omitProperties": [
            "properties.networkInterfaceTapConfigurations",
            "properties.resourceGuid",
            "properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.networkSecurityGroup.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.routeTable.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.natGateway.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.privateEndpoints",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipConfigurations",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.ipConfigurationProfiles",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.resourceNavigationLinks",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.serviceAssociationLinks",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.purpose",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.subnet.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ipConfiguration",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.natGateway.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress.etag",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.provisioningState",
            "properties.destinationNetworkInterfaceIPConfiguration.properties.privateLinkConnectionProperties",
            "properties.destinationNetworkInterfaceIPConfiguration.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.inboundNatRules",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.inboundNatPools",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.outboundRules",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.loadBalancingRules",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.defaultSecurityRules",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.networkInterfaces",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.flowLogs",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.networkSecurityGroup.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.routeTable.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.natGateway.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.privateEndpoints",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipConfigurations",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.ipConfigurationProfiles",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.resourceNavigationLinks",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.serviceAssociationLinks",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.purpose",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ipConfiguration",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.natGateway.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ipConfiguration",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ipConfiguration",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.ddosSettings.ddosCustomPolicy.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.properties.natGateway.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.servicePublicIPAddress.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.subnets",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.resourceGuid",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.properties.natGateway.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.properties.linkedPublicIPAddress.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer.id",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.properties.provisioningState",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.etag",
            "properties.destinationLoadBalancerFrontEndIPConfiguration.type",
            "etag"
        ],
        "pickProperties": [
            "",
            "",
            "properties.destinationPort"
        ],
        "pickPropertiesCreate": [
            "",
            "",
            "properties.destinationPort"
        ],
        "propertiesDefault": {
            "properties": {
                "destinationNetworkInterfaceIPConfiguration": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        },
                        "publicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                },
                                "servicePublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "linkedPublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "linkedPublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "servicePublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "destinationLoadBalancerFrontEndIPConfiguration": {
                    "properties": {
                        "subnet": {
                            "properties": {
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        },
                        "publicIPAddress": {
                            "properties": {
                                "ipConfiguration": {
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "properties": {
                                                "privateEndpointNetworkPolicies": "Enabled",
                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                            }
                                        }
                                    }
                                },
                                "servicePublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "linkedPublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "linkedPublicIPAddress": {
                                    "properties": {
                                        "ipConfiguration": {
                                            "properties": {
                                                "privateIPAllocationMethod": "Dynamic",
                                                "subnet": {
                                                    "properties": {
                                                        "privateEndpointNetworkPolicies": "Enabled",
                                                        "privateLinkServiceNetworkPolicies": "Enabled"
                                                    }
                                                }
                                            }
                                        },
                                        "servicePublicIPAddress": {
                                            "properties": {
                                                "ipConfiguration": {
                                                    "properties": {
                                                        "privateIPAllocationMethod": "Dynamic",
                                                        "subnet": {
                                                            "properties": {
                                                                "privateEndpointNetworkPolicies": "Enabled",
                                                                "privateLinkServiceNetworkPolicies": "Enabled"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    {
        "type": "VirtualRouter",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.hostedSubnet.id"
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}",
                "operationId": "VirtualRouters_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}",
                "operationId": "VirtualRouters_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}",
                "operationId": "VirtualRouters_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualRouters",
                "operationId": "VirtualRouters_List"
            }
        },
        "omitProperties": [
            "properties.hostedSubnet.id",
            "properties.hostedGateway.id",
            "properties.peerings",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.virtualRouterAsn"
        ],
        "pickPropertiesCreate": [
            "properties.virtualRouterAsn"
        ]
    },
    {
        "type": "VirtualRouterPeering",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualRouter": {
                "type": "VirtualRouter",
                "group": "Network",
                "name": "virtualRouterName",
                "parent": true
            }
        },
        "methods": {
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}",
                "operationId": "VirtualRouterPeerings_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}",
                "operationId": "VirtualRouterPeerings_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings/{peeringName}",
                "operationId": "VirtualRouterPeerings_CreateOrUpdate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualRouters/{virtualRouterName}/peerings",
                "operationId": "VirtualRouterPeerings_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "etag",
            "type"
        ],
        "pickProperties": [
            "properties.peerAsn",
            "properties.peerIp",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.peerAsn",
            "properties.peerIp",
            "name"
        ]
    },
    {
        "type": "VirtualWan",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",
                "operationId": "VirtualWans_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",
                "operationId": "VirtualWans_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",
                "operationId": "VirtualWans_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualWans/{VirtualWANName}",
                "operationId": "VirtualWans_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/virtualWans",
                "operationId": "VirtualWans_List"
            }
        },
        "omitProperties": [
            "properties.virtualHubs",
            "properties.vpnSites",
            "properties.office365LocalBreakoutCategory",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.disableVpnEncryption",
            "properties.allowBranchToBranchTraffic",
            "properties.allowVnetToVnetTraffic",
            "properties.type"
        ],
        "pickPropertiesCreate": [
            "properties.disableVpnEncryption",
            "properties.allowBranchToBranchTraffic",
            "properties.allowVnetToVnetTraffic",
            "properties.type"
        ]
    },
    {
        "type": "VpnConnection",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "vpnSite": {
                "type": "VpnSite",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.vpnLinkConnections.items.vpnSiteLink.id"
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.routingConfiguration.associatedRouteTable.id"
            },
            "gateway": {
                "type": "VpnGateway",
                "group": "Network",
                "name": "gatewayName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}",
                "operationId": "VpnConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}",
                "operationId": "VpnConnections_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections/{connectionName}",
                "operationId": "VpnConnections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}/vpnConnections",
                "operationId": "VpnConnections_ListByVpnGateway"
            }
        },
        "omitProperties": [
            "properties.remoteVpnSite.id",
            "properties.connectionStatus",
            "properties.ingressBytesTransferred",
            "properties.egressBytesTransferred",
            "properties.provisioningState",
            "properties.routingConfiguration.associatedRouteTable.id",
            "properties.routingConfiguration.vnetRoutes.bgpConnections",
            "etag"
        ],
        "pickProperties": [
            "properties.routingWeight",
            "properties.dpdTimeoutSeconds",
            "properties.vpnConnectionProtocolType",
            "properties.connectionBandwidth",
            "properties.sharedKey",
            "properties.enableBgp",
            "properties.usePolicyBasedTrafficSelectors",
            "properties.ipsecPolicies[].saLifeTimeSeconds",
            "properties.ipsecPolicies[].saDataSizeKilobytes",
            "properties.ipsecPolicies[].ipsecEncryption",
            "properties.ipsecPolicies[].ipsecIntegrity",
            "properties.ipsecPolicies[].ikeEncryption",
            "properties.ipsecPolicies[].ikeIntegrity",
            "properties.ipsecPolicies[].dhGroup",
            "properties.ipsecPolicies[].pfsGroup",
            "properties.enableRateLimiting",
            "properties.enableInternetSecurity",
            "properties.useLocalAzureIpAddress",
            "properties.vpnLinkConnections[].properties.routingWeight",
            "properties.vpnLinkConnections[].properties.vpnLinkConnectionMode",
            "properties.vpnLinkConnections[].properties.vpnConnectionProtocolType",
            "properties.vpnLinkConnections[].properties.connectionBandwidth",
            "properties.vpnLinkConnections[].properties.sharedKey",
            "properties.vpnLinkConnections[].properties.enableBgp",
            "properties.vpnLinkConnections[].properties.vpnGatewayCustomBgpAddresses[].customBgpIpAddress",
            "properties.vpnLinkConnections[].properties.usePolicyBasedTrafficSelectors",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].saLifeTimeSeconds",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].saDataSizeKilobytes",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].ipsecEncryption",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].ipsecIntegrity",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].ikeEncryption",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].ikeIntegrity",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].dhGroup",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].pfsGroup",
            "properties.vpnLinkConnections[].properties.enableRateLimiting",
            "properties.vpnLinkConnections[].properties.useLocalAzureIpAddress",
            "properties.vpnLinkConnections[].name",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.routingWeight",
            "properties.dpdTimeoutSeconds",
            "properties.vpnConnectionProtocolType",
            "properties.connectionBandwidth",
            "properties.sharedKey",
            "properties.enableBgp",
            "properties.usePolicyBasedTrafficSelectors",
            "properties.ipsecPolicies[].saLifeTimeSeconds",
            "properties.ipsecPolicies[].saDataSizeKilobytes",
            "properties.ipsecPolicies[].ipsecEncryption",
            "properties.ipsecPolicies[].ipsecIntegrity",
            "properties.ipsecPolicies[].ikeEncryption",
            "properties.ipsecPolicies[].ikeIntegrity",
            "properties.ipsecPolicies[].dhGroup",
            "properties.ipsecPolicies[].pfsGroup",
            "properties.enableRateLimiting",
            "properties.enableInternetSecurity",
            "properties.useLocalAzureIpAddress",
            "properties.vpnLinkConnections[].properties.routingWeight",
            "properties.vpnLinkConnections[].properties.vpnLinkConnectionMode",
            "properties.vpnLinkConnections[].properties.vpnConnectionProtocolType",
            "properties.vpnLinkConnections[].properties.connectionBandwidth",
            "properties.vpnLinkConnections[].properties.sharedKey",
            "properties.vpnLinkConnections[].properties.enableBgp",
            "properties.vpnLinkConnections[].properties.vpnGatewayCustomBgpAddresses[].customBgpIpAddress",
            "properties.vpnLinkConnections[].properties.usePolicyBasedTrafficSelectors",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].saLifeTimeSeconds",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].saDataSizeKilobytes",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].ipsecEncryption",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].ipsecIntegrity",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].ikeEncryption",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].ikeIntegrity",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].dhGroup",
            "properties.vpnLinkConnections[].properties.ipsecPolicies[].pfsGroup",
            "properties.vpnLinkConnections[].properties.enableRateLimiting",
            "properties.vpnLinkConnections[].properties.useLocalAzureIpAddress",
            "properties.vpnLinkConnections[].name",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "name"
        ]
    },
    {
        "type": "VpnGateway",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualHub": {
                "type": "VirtualHub",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualHub.id"
            },
            "vpnSite": {
                "type": "VpnSite",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.connections.items.remoteVpnSite.id"
            },
            "routeTable": {
                "type": "RouteTable",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.connections.items.routingConfiguration.associatedRouteTable.id"
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.natRules.items.ipConfigurationId"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",
                "operationId": "VpnGateways_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",
                "operationId": "VpnGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",
                "operationId": "VpnGateways_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnGateways/{gatewayName}",
                "operationId": "VpnGateways_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnGateways",
                "operationId": "VpnGateways_List"
            }
        },
        "omitProperties": [
            "properties.virtualHub.id",
            "properties.provisioningState",
            "properties.ipConfigurations",
            "etag"
        ],
        "pickProperties": [
            "properties.connections[].properties.routingWeight",
            "properties.connections[].properties.dpdTimeoutSeconds",
            "properties.connections[].properties.vpnConnectionProtocolType",
            "properties.connections[].properties.connectionBandwidth",
            "properties.connections[].properties.sharedKey",
            "properties.connections[].properties.enableBgp",
            "properties.connections[].properties.usePolicyBasedTrafficSelectors",
            "properties.connections[].properties.ipsecPolicies[].saLifeTimeSeconds",
            "properties.connections[].properties.ipsecPolicies[].saDataSizeKilobytes",
            "properties.connections[].properties.ipsecPolicies[].ipsecEncryption",
            "properties.connections[].properties.ipsecPolicies[].ipsecIntegrity",
            "properties.connections[].properties.ipsecPolicies[].ikeEncryption",
            "properties.connections[].properties.ipsecPolicies[].ikeIntegrity",
            "properties.connections[].properties.ipsecPolicies[].dhGroup",
            "properties.connections[].properties.ipsecPolicies[].pfsGroup",
            "properties.connections[].properties.enableRateLimiting",
            "properties.connections[].properties.enableInternetSecurity",
            "properties.connections[].properties.useLocalAzureIpAddress",
            "properties.connections[].properties.vpnLinkConnections[].properties.routingWeight",
            "properties.connections[].properties.vpnLinkConnections[].properties.vpnLinkConnectionMode",
            "properties.connections[].properties.vpnLinkConnections[].properties.vpnConnectionProtocolType",
            "properties.connections[].properties.vpnLinkConnections[].properties.connectionBandwidth",
            "properties.connections[].properties.vpnLinkConnections[].properties.sharedKey",
            "properties.connections[].properties.vpnLinkConnections[].properties.enableBgp",
            "properties.connections[].properties.vpnLinkConnections[].properties.vpnGatewayCustomBgpAddresses[].customBgpIpAddress",
            "properties.connections[].properties.vpnLinkConnections[].properties.usePolicyBasedTrafficSelectors",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].saLifeTimeSeconds",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].saDataSizeKilobytes",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].ipsecEncryption",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].ipsecIntegrity",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].ikeEncryption",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].ikeIntegrity",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].dhGroup",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].pfsGroup",
            "properties.connections[].properties.vpnLinkConnections[].properties.enableRateLimiting",
            "properties.connections[].properties.vpnLinkConnections[].properties.useLocalAzureIpAddress",
            "properties.connections[].properties.vpnLinkConnections[].name",
            "properties.connections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.connections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "properties.connections[].name",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight",
            "properties.vpnGatewayScaleUnit",
            "properties.enableBgpRouteTranslationForNat",
            "properties.isRoutingPreferenceInternet",
            "properties.natRules[].properties.type",
            "properties.natRules[].properties.mode",
            "properties.natRules[].properties.internalMappings[].addressSpace",
            "properties.natRules[].properties.internalMappings[].portRange",
            "properties.natRules[].properties.externalMappings[].addressSpace",
            "properties.natRules[].properties.externalMappings[].portRange",
            "properties.natRules[].name"
        ],
        "pickPropertiesCreate": [
            "properties.connections[].properties.routingWeight",
            "properties.connections[].properties.dpdTimeoutSeconds",
            "properties.connections[].properties.vpnConnectionProtocolType",
            "properties.connections[].properties.connectionBandwidth",
            "properties.connections[].properties.sharedKey",
            "properties.connections[].properties.enableBgp",
            "properties.connections[].properties.usePolicyBasedTrafficSelectors",
            "properties.connections[].properties.ipsecPolicies[].saLifeTimeSeconds",
            "properties.connections[].properties.ipsecPolicies[].saDataSizeKilobytes",
            "properties.connections[].properties.ipsecPolicies[].ipsecEncryption",
            "properties.connections[].properties.ipsecPolicies[].ipsecIntegrity",
            "properties.connections[].properties.ipsecPolicies[].ikeEncryption",
            "properties.connections[].properties.ipsecPolicies[].ikeIntegrity",
            "properties.connections[].properties.ipsecPolicies[].dhGroup",
            "properties.connections[].properties.ipsecPolicies[].pfsGroup",
            "properties.connections[].properties.enableRateLimiting",
            "properties.connections[].properties.enableInternetSecurity",
            "properties.connections[].properties.useLocalAzureIpAddress",
            "properties.connections[].properties.vpnLinkConnections[].properties.routingWeight",
            "properties.connections[].properties.vpnLinkConnections[].properties.vpnLinkConnectionMode",
            "properties.connections[].properties.vpnLinkConnections[].properties.vpnConnectionProtocolType",
            "properties.connections[].properties.vpnLinkConnections[].properties.connectionBandwidth",
            "properties.connections[].properties.vpnLinkConnections[].properties.sharedKey",
            "properties.connections[].properties.vpnLinkConnections[].properties.enableBgp",
            "properties.connections[].properties.vpnLinkConnections[].properties.vpnGatewayCustomBgpAddresses[].customBgpIpAddress",
            "properties.connections[].properties.vpnLinkConnections[].properties.usePolicyBasedTrafficSelectors",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].saLifeTimeSeconds",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].saDataSizeKilobytes",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].ipsecEncryption",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].ipsecIntegrity",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].ikeEncryption",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].ikeIntegrity",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].dhGroup",
            "properties.connections[].properties.vpnLinkConnections[].properties.ipsecPolicies[].pfsGroup",
            "properties.connections[].properties.vpnLinkConnections[].properties.enableRateLimiting",
            "properties.connections[].properties.vpnLinkConnections[].properties.useLocalAzureIpAddress",
            "properties.connections[].properties.vpnLinkConnections[].name",
            "properties.connections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name",
            "properties.connections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress",
            "properties.connections[].name",
            "properties.bgpSettings.asn",
            "properties.bgpSettings.bgpPeeringAddress",
            "properties.bgpSettings.peerWeight",
            "properties.vpnGatewayScaleUnit",
            "properties.enableBgpRouteTranslationForNat",
            "properties.isRoutingPreferenceInternet",
            "properties.natRules[].properties.type",
            "properties.natRules[].properties.mode",
            "properties.natRules[].properties.internalMappings[].addressSpace",
            "properties.natRules[].properties.internalMappings[].portRange",
            "properties.natRules[].properties.externalMappings[].addressSpace",
            "properties.natRules[].properties.externalMappings[].portRange",
            "properties.natRules[].name"
        ]
    },
    {
        "type": "VpnServerConfiguration",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}",
                "operationId": "VpnServerConfigurations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}",
                "operationId": "VpnServerConfigurations_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}",
                "operationId": "VpnServerConfigurations_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnServerConfigurations/{vpnServerConfigurationName}",
                "operationId": "VpnServerConfigurations_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnServerConfigurations",
                "operationId": "VpnServerConfigurations_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.p2SVpnGateways",
            "properties.etag",
            "etag"
        ],
        "pickProperties": [
            "properties.name",
            "properties.vpnClientRootCertificates[].name",
            "properties.vpnClientRootCertificates[].publicCertData",
            "properties.vpnClientRevokedCertificates[].name",
            "properties.vpnClientRevokedCertificates[].thumbprint",
            "properties.radiusServerRootCertificates[].name",
            "properties.radiusServerRootCertificates[].publicCertData",
            "properties.radiusClientRootCertificates[].name",
            "properties.radiusClientRootCertificates[].thumbprint",
            "properties.vpnClientIpsecPolicies[].saLifeTimeSeconds",
            "properties.vpnClientIpsecPolicies[].saDataSizeKilobytes",
            "properties.vpnClientIpsecPolicies[].ipsecEncryption",
            "properties.vpnClientIpsecPolicies[].ipsecIntegrity",
            "properties.vpnClientIpsecPolicies[].ikeEncryption",
            "properties.vpnClientIpsecPolicies[].ikeIntegrity",
            "properties.vpnClientIpsecPolicies[].dhGroup",
            "properties.vpnClientIpsecPolicies[].pfsGroup",
            "properties.radiusServerAddress",
            "properties.radiusServerSecret",
            "properties.radiusServers[].radiusServerAddress",
            "properties.radiusServers[].radiusServerScore",
            "properties.radiusServers[].radiusServerSecret",
            "properties.aadAuthenticationParameters.aadTenant",
            "properties.aadAuthenticationParameters.aadAudience",
            "properties.aadAuthenticationParameters.aadIssuer",
            "properties.configurationPolicyGroups[].properties.isDefault",
            "properties.configurationPolicyGroups[].properties.priority",
            "properties.configurationPolicyGroups[].properties.policyMembers[].name",
            "properties.configurationPolicyGroups[].properties.policyMembers[].attributeType",
            "properties.configurationPolicyGroups[].properties.policyMembers[].attributeValue",
            "properties.configurationPolicyGroups[].name",
            "name"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.vpnClientRootCertificates[].name",
            "properties.vpnClientRootCertificates[].publicCertData",
            "properties.vpnClientRevokedCertificates[].name",
            "properties.vpnClientRevokedCertificates[].thumbprint",
            "properties.radiusServerRootCertificates[].name",
            "properties.radiusServerRootCertificates[].publicCertData",
            "properties.radiusClientRootCertificates[].name",
            "properties.radiusClientRootCertificates[].thumbprint",
            "properties.vpnClientIpsecPolicies[].saLifeTimeSeconds",
            "properties.vpnClientIpsecPolicies[].saDataSizeKilobytes",
            "properties.vpnClientIpsecPolicies[].ipsecEncryption",
            "properties.vpnClientIpsecPolicies[].ipsecIntegrity",
            "properties.vpnClientIpsecPolicies[].ikeEncryption",
            "properties.vpnClientIpsecPolicies[].ikeIntegrity",
            "properties.vpnClientIpsecPolicies[].dhGroup",
            "properties.vpnClientIpsecPolicies[].pfsGroup",
            "properties.radiusServerAddress",
            "properties.radiusServerSecret",
            "properties.radiusServers[].radiusServerAddress",
            "properties.radiusServers[].radiusServerScore",
            "properties.radiusServers[].radiusServerSecret",
            "properties.aadAuthenticationParameters.aadTenant",
            "properties.aadAuthenticationParameters.aadAudience",
            "properties.aadAuthenticationParameters.aadIssuer",
            "properties.configurationPolicyGroups[].properties.isDefault",
            "properties.configurationPolicyGroups[].properties.priority",
            "properties.configurationPolicyGroups[].properties.policyMembers[].name",
            "properties.configurationPolicyGroups[].properties.policyMembers[].attributeType",
            "properties.configurationPolicyGroups[].properties.policyMembers[].attributeValue",
            "properties.configurationPolicyGroups[].name",
            "name"
        ]
    },
    {
        "type": "VpnSite",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "virtualWan": {
                "type": "VirtualWan",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.virtualWan.id"
            },
            "virtualHubIpConfiguration": {
                "type": "VirtualHubIpConfiguration",
                "group": "Network",
                "createOnly": true,
                "pathId": "properties.bgpProperties.bgpPeeringAddresses.items.ipconfigurationId"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",
                "operationId": "VpnSites_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",
                "operationId": "VpnSites_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",
                "operationId": "VpnSites_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/vpnSites/{vpnSiteName}",
                "operationId": "VpnSites_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Network/vpnSites",
                "operationId": "VpnSites_List"
            }
        },
        "omitProperties": [
            "properties.virtualWan.id",
            "properties.provisioningState",
            "etag"
        ],
        "pickProperties": [
            "properties.deviceProperties.deviceVendor",
            "properties.deviceProperties.deviceModel",
            "properties.deviceProperties.linkSpeedInMbps",
            "properties.ipAddress",
            "properties.siteKey",
            "properties.bgpProperties.asn",
            "properties.bgpProperties.bgpPeeringAddress",
            "properties.bgpProperties.peerWeight",
            "properties.isSecuritySite",
            "properties.vpnSiteLinks[].properties.linkProperties.linkProviderName",
            "properties.vpnSiteLinks[].properties.linkProperties.linkSpeedInMbps",
            "properties.vpnSiteLinks[].properties.ipAddress",
            "properties.vpnSiteLinks[].properties.fqdn",
            "properties.vpnSiteLinks[].properties.bgpProperties.asn",
            "properties.vpnSiteLinks[].properties.bgpProperties.bgpPeeringAddress",
            "properties.vpnSiteLinks[].name",
            "properties.o365Policy.breakOutCategories.allow",
            "properties.o365Policy.breakOutCategories.optimize",
            "properties.o365Policy.breakOutCategories.default"
        ],
        "pickPropertiesCreate": [
            "properties.deviceProperties.deviceVendor",
            "properties.deviceProperties.deviceModel",
            "properties.deviceProperties.linkSpeedInMbps",
            "properties.ipAddress",
            "properties.siteKey",
            "properties.bgpProperties.asn",
            "properties.bgpProperties.bgpPeeringAddress",
            "properties.bgpProperties.peerWeight",
            "properties.isSecuritySite",
            "properties.vpnSiteLinks[].properties.linkProperties.linkProviderName",
            "properties.vpnSiteLinks[].properties.linkProperties.linkSpeedInMbps",
            "properties.vpnSiteLinks[].properties.ipAddress",
            "properties.vpnSiteLinks[].properties.fqdn",
            "properties.vpnSiteLinks[].properties.bgpProperties.asn",
            "properties.vpnSiteLinks[].properties.bgpProperties.bgpPeeringAddress",
            "properties.vpnSiteLinks[].name",
            "properties.o365Policy.breakOutCategories.allow",
            "properties.o365Policy.breakOutCategories.optimize",
            "properties.o365Policy.breakOutCategories.default"
        ]
    },
    {
        "type": "WebApplicationFirewallPolicy",
        "group": "Network",
        "apiVersion": "2021-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}",
                "operationId": "WebApplicationFirewallPolicies_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}",
                "operationId": "WebApplicationFirewallPolicies_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/{policyName}",
                "operationId": "WebApplicationFirewallPolicies_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
                "operationId": "WebApplicationFirewallPolicies_List"
            }
        },
        "omitProperties": [
            "properties.policySettings.state",
            "properties.applicationGateways",
            "properties.provisioningState",
            "properties.resourceState",
            "properties.httpListeners",
            "properties.pathBasedRules",
            "etag"
        ],
        "pickProperties": [
            "properties.policySettings.mode",
            "properties.policySettings.requestBodyCheck",
            "properties.policySettings.maxRequestBodySizeInKb",
            "properties.policySettings.fileUploadLimitInMb",
            "properties.customRules[].name",
            "properties.customRules[].priority",
            "properties.customRules[].ruleType",
            "properties.customRules[].matchConditions[].matchVariables[].variableName",
            "properties.customRules[].matchConditions[].matchVariables[].selector",
            "properties.customRules[].matchConditions[].operator",
            "properties.customRules[].matchConditions[].negationConditon",
            "properties.customRules[].action",
            "properties.managedRules.exclusions[].matchVariable",
            "properties.managedRules.exclusions[].selectorMatchOperator",
            "properties.managedRules.exclusions[].selector",
            "properties.managedRules.exclusions[].exclusionManagedRuleSets[].ruleSetType",
            "properties.managedRules.exclusions[].exclusionManagedRuleSets[].ruleSetVersion",
            "properties.managedRules.exclusions[].exclusionManagedRuleSets[].ruleGroups[].ruleGroupName",
            "properties.managedRules.managedRuleSets[].ruleSetType",
            "properties.managedRules.managedRuleSets[].ruleSetVersion",
            "properties.managedRules.managedRuleSets[].ruleGroupOverrides[].ruleGroupName"
        ],
        "pickPropertiesCreate": [
            "properties.policySettings.mode",
            "properties.policySettings.requestBodyCheck",
            "properties.policySettings.maxRequestBodySizeInKb",
            "properties.policySettings.fileUploadLimitInMb",
            "properties.customRules[].name",
            "properties.customRules[].priority",
            "properties.customRules[].ruleType",
            "properties.customRules[].matchConditions[].matchVariables[].variableName",
            "properties.customRules[].matchConditions[].matchVariables[].selector",
            "properties.customRules[].matchConditions[].operator",
            "properties.customRules[].matchConditions[].negationConditon",
            "properties.customRules[].action",
            "properties.managedRules.exclusions[].matchVariable",
            "properties.managedRules.exclusions[].selectorMatchOperator",
            "properties.managedRules.exclusions[].selector",
            "properties.managedRules.exclusions[].exclusionManagedRuleSets[].ruleSetType",
            "properties.managedRules.exclusions[].exclusionManagedRuleSets[].ruleSetVersion",
            "properties.managedRules.exclusions[].exclusionManagedRuleSets[].ruleGroups[].ruleGroupName",
            "properties.managedRules.managedRuleSets[].ruleSetType",
            "properties.managedRules.managedRuleSets[].ruleSetVersion",
            "properties.managedRules.managedRuleSets[].ruleGroupOverrides[].ruleGroupName"
        ]
    }
]