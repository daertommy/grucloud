[
    {
        "type": "AgentPool",
        "group": "ContainerService",
        "apiVersion": "2022-04-02-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "resource": {
                "type": "ManagedCluster",
                "group": "ContainerService",
                "name": "resourceName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}",
                "operationId": "AgentPools_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}",
                "operationId": "AgentPools_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}",
                "operationId": "AgentPools_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools",
                "operationId": "AgentPools_List"
            }
        },
        "omitProperties": [
            "properties.vnetSubnetID",
            "properties.podSubnetID",
            "properties.nodeImageVersion",
            "properties.provisioningState",
            "properties.powerState",
            "properties.nodePublicIPPrefixID",
            "properties.proximityPlacementGroupID",
            "properties.creationData.sourceResourceId",
            "properties.capacityReservationGroupID",
            "properties.hostGroupID"
        ],
        "pickProperties": [
            "properties.count",
            "properties.vmSize",
            "properties.osDiskSizeGB",
            "properties.osDiskType",
            "properties.kubeletDiskType",
            "properties.workloadRuntime",
            "properties.messageOfTheDay",
            "properties.maxPods",
            "properties.osType",
            "properties.osSKU",
            "properties.maxCount",
            "properties.minCount",
            "properties.enableAutoScaling",
            "properties.scaleDownMode",
            "properties.type",
            "properties.mode",
            "properties.orchestratorVersion",
            "properties.currentOrchestratorVersion",
            "properties.upgradeSettings.maxSurge",
            "properties.enableNodePublicIP",
            "properties.enableCustomCATrust",
            "properties.scaleSetPriority",
            "properties.scaleSetEvictionPolicy",
            "properties.kubeletConfig.cpuManagerPolicy",
            "properties.kubeletConfig.cpuCfsQuota",
            "properties.kubeletConfig.cpuCfsQuotaPeriod",
            "properties.kubeletConfig.imageGcHighThreshold",
            "properties.kubeletConfig.imageGcLowThreshold",
            "properties.kubeletConfig.topologyManagerPolicy",
            "properties.kubeletConfig.failSwapOn",
            "properties.kubeletConfig.containerLogMaxSizeMB",
            "properties.kubeletConfig.containerLogMaxFiles",
            "properties.kubeletConfig.podMaxPids",
            "properties.linuxOSConfig.sysctls.netCoreSomaxconn",
            "properties.linuxOSConfig.sysctls.netCoreNetdevMaxBacklog",
            "properties.linuxOSConfig.sysctls.netCoreRmemDefault",
            "properties.linuxOSConfig.sysctls.netCoreRmemMax",
            "properties.linuxOSConfig.sysctls.netCoreWmemDefault",
            "properties.linuxOSConfig.sysctls.netCoreWmemMax",
            "properties.linuxOSConfig.sysctls.netCoreOptmemMax",
            "properties.linuxOSConfig.sysctls.netIpv4TcpMaxSynBacklog",
            "properties.linuxOSConfig.sysctls.netIpv4TcpMaxTwBuckets",
            "properties.linuxOSConfig.sysctls.netIpv4TcpFinTimeout",
            "properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveTime",
            "properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveProbes",
            "properties.linuxOSConfig.sysctls.netIpv4TcpkeepaliveIntvl",
            "properties.linuxOSConfig.sysctls.netIpv4TcpTwReuse",
            "properties.linuxOSConfig.sysctls.netIpv4IpLocalPortRange",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh1",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh2",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh3",
            "properties.linuxOSConfig.sysctls.netNetfilterNfConntrackMax",
            "properties.linuxOSConfig.sysctls.netNetfilterNfConntrackBuckets",
            "properties.linuxOSConfig.sysctls.fsInotifyMaxUserWatches",
            "properties.linuxOSConfig.sysctls.fsFileMax",
            "properties.linuxOSConfig.sysctls.fsAioMaxNr",
            "properties.linuxOSConfig.sysctls.fsNrOpen",
            "properties.linuxOSConfig.sysctls.kernelThreadsMax",
            "properties.linuxOSConfig.sysctls.vmMaxMapCount",
            "properties.linuxOSConfig.sysctls.vmSwappiness",
            "properties.linuxOSConfig.sysctls.vmVfsCachePressure",
            "properties.linuxOSConfig.transparentHugePageEnabled",
            "properties.linuxOSConfig.transparentHugePageDefrag",
            "properties.linuxOSConfig.swapFileSizeMB",
            "properties.enableEncryptionAtHost",
            "properties.enableUltraSSD",
            "properties.enableFIPS",
            "properties.gpuInstanceProfile"
        ],
        "pickPropertiesCreate": [
            "properties.count",
            "properties.vmSize",
            "properties.osDiskSizeGB",
            "properties.osDiskType",
            "properties.kubeletDiskType",
            "properties.workloadRuntime",
            "properties.messageOfTheDay",
            "properties.maxPods",
            "properties.osType",
            "properties.osSKU",
            "properties.maxCount",
            "properties.minCount",
            "properties.enableAutoScaling",
            "properties.scaleDownMode",
            "properties.type",
            "properties.mode",
            "properties.orchestratorVersion",
            "properties.currentOrchestratorVersion",
            "properties.upgradeSettings.maxSurge",
            "properties.enableNodePublicIP",
            "properties.enableCustomCATrust",
            "properties.scaleSetPriority",
            "properties.scaleSetEvictionPolicy",
            "properties.kubeletConfig.cpuManagerPolicy",
            "properties.kubeletConfig.cpuCfsQuota",
            "properties.kubeletConfig.cpuCfsQuotaPeriod",
            "properties.kubeletConfig.imageGcHighThreshold",
            "properties.kubeletConfig.imageGcLowThreshold",
            "properties.kubeletConfig.topologyManagerPolicy",
            "properties.kubeletConfig.failSwapOn",
            "properties.kubeletConfig.containerLogMaxSizeMB",
            "properties.kubeletConfig.containerLogMaxFiles",
            "properties.kubeletConfig.podMaxPids",
            "properties.linuxOSConfig.sysctls.netCoreSomaxconn",
            "properties.linuxOSConfig.sysctls.netCoreNetdevMaxBacklog",
            "properties.linuxOSConfig.sysctls.netCoreRmemDefault",
            "properties.linuxOSConfig.sysctls.netCoreRmemMax",
            "properties.linuxOSConfig.sysctls.netCoreWmemDefault",
            "properties.linuxOSConfig.sysctls.netCoreWmemMax",
            "properties.linuxOSConfig.sysctls.netCoreOptmemMax",
            "properties.linuxOSConfig.sysctls.netIpv4TcpMaxSynBacklog",
            "properties.linuxOSConfig.sysctls.netIpv4TcpMaxTwBuckets",
            "properties.linuxOSConfig.sysctls.netIpv4TcpFinTimeout",
            "properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveTime",
            "properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveProbes",
            "properties.linuxOSConfig.sysctls.netIpv4TcpkeepaliveIntvl",
            "properties.linuxOSConfig.sysctls.netIpv4TcpTwReuse",
            "properties.linuxOSConfig.sysctls.netIpv4IpLocalPortRange",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh1",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh2",
            "properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh3",
            "properties.linuxOSConfig.sysctls.netNetfilterNfConntrackMax",
            "properties.linuxOSConfig.sysctls.netNetfilterNfConntrackBuckets",
            "properties.linuxOSConfig.sysctls.fsInotifyMaxUserWatches",
            "properties.linuxOSConfig.sysctls.fsFileMax",
            "properties.linuxOSConfig.sysctls.fsAioMaxNr",
            "properties.linuxOSConfig.sysctls.fsNrOpen",
            "properties.linuxOSConfig.sysctls.kernelThreadsMax",
            "properties.linuxOSConfig.sysctls.vmMaxMapCount",
            "properties.linuxOSConfig.sysctls.vmSwappiness",
            "properties.linuxOSConfig.sysctls.vmVfsCachePressure",
            "properties.linuxOSConfig.transparentHugePageEnabled",
            "properties.linuxOSConfig.transparentHugePageDefrag",
            "properties.linuxOSConfig.swapFileSizeMB",
            "properties.enableEncryptionAtHost",
            "properties.enableUltraSSD",
            "properties.enableFIPS",
            "properties.gpuInstanceProfile"
        ],
        "propertiesDefault": {
            "properties": {
                "osType": "Linux",
                "scaleSetPriority": "Regular",
                "scaleSetEvictionPolicy": "Delete",
                "spotMaxPrice": -1
            }
        }
    },
    {
        "type": "ContainerService",
        "group": "ContainerService",
        "apiVersion": "2017-07-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
                "operationId": "ContainerServices_CreateOrUpdate"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
                "operationId": "ContainerServices_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}",
                "operationId": "ContainerServices_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/containerServices",
                "operationId": "ContainerServices_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.servicePrincipalProfile.clientId",
            "properties.servicePrincipalProfile.keyVaultSecretRef.vaultID",
            "properties.masterProfile.vnetSubnetID",
            "properties.masterProfile.fqdn",
            "properties.windowsProfile.adminPassword",
            "properties.diagnosticsProfile.vmDiagnostics.storageUri"
        ],
        "pickProperties": [
            "properties.orchestratorProfile.orchestratorType",
            "properties.orchestratorProfile.orchestratorVersion",
            "properties.customProfile.orchestrator",
            "properties.servicePrincipalProfile.secret",
            "properties.servicePrincipalProfile.keyVaultSecretRef.secretName",
            "properties.servicePrincipalProfile.keyVaultSecretRef.version",
            "properties.masterProfile.count",
            "properties.masterProfile.dnsPrefix",
            "properties.masterProfile.vmSize",
            "properties.masterProfile.osDiskSizeGB",
            "properties.masterProfile.firstConsecutiveStaticIP",
            "properties.masterProfile.storageProfile",
            "properties.agentPoolProfiles[].name",
            "properties.agentPoolProfiles[].count",
            "properties.agentPoolProfiles[].vmSize",
            "properties.agentPoolProfiles[].osDiskSizeGB",
            "properties.agentPoolProfiles[].dnsPrefix",
            "properties.agentPoolProfiles[].storageProfile",
            "properties.agentPoolProfiles[].osType",
            "properties.windowsProfile.adminUsername",
            "properties.linuxProfile.adminUsername",
            "properties.linuxProfile.ssh.publicKeys[].keyData",
            "properties.diagnosticsProfile.vmDiagnostics.enabled"
        ],
        "pickPropertiesCreate": [
            "properties.orchestratorProfile.orchestratorType",
            "properties.orchestratorProfile.orchestratorVersion",
            "properties.customProfile.orchestrator",
            "properties.servicePrincipalProfile.secret",
            "properties.servicePrincipalProfile.keyVaultSecretRef.secretName",
            "properties.servicePrincipalProfile.keyVaultSecretRef.version",
            "properties.masterProfile.count",
            "properties.masterProfile.dnsPrefix",
            "properties.masterProfile.vmSize",
            "properties.masterProfile.osDiskSizeGB",
            "properties.masterProfile.firstConsecutiveStaticIP",
            "properties.masterProfile.storageProfile",
            "properties.agentPoolProfiles[].name",
            "properties.agentPoolProfiles[].count",
            "properties.agentPoolProfiles[].vmSize",
            "properties.agentPoolProfiles[].osDiskSizeGB",
            "properties.agentPoolProfiles[].dnsPrefix",
            "properties.agentPoolProfiles[].storageProfile",
            "properties.agentPoolProfiles[].osType",
            "properties.windowsProfile.adminUsername",
            "properties.linuxProfile.adminUsername",
            "properties.linuxProfile.ssh.publicKeys[].keyData",
            "properties.diagnosticsProfile.vmDiagnostics.enabled"
        ],
        "environmentVariables": [
            {
                "path": "properties.windowsProfile.adminPassword",
                "suffix": "ADMIN_PASSWORD"
            }
        ],
        "propertiesDefault": {
            "properties": {
                "masterProfile": {
                    "count": 1,
                    "firstConsecutiveStaticIP": "10.240.255.5"
                }
            }
        }
    },
    {
        "type": "MaintenanceConfiguration",
        "group": "ContainerService",
        "apiVersion": "2022-04-02-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "resource": {
                "type": "ManagedCluster",
                "group": "ContainerService",
                "name": "resourceName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/maintenanceConfigurations/{configName}",
                "operationId": "MaintenanceConfigurations_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/maintenanceConfigurations/{configName}",
                "operationId": "MaintenanceConfigurations_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/maintenanceConfigurations/{configName}",
                "operationId": "MaintenanceConfigurations_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/maintenanceConfigurations",
                "operationId": "MaintenanceConfigurations_ListByManagedCluster"
            }
        },
        "omitProperties": [
            "systemData"
        ],
        "pickProperties": [
            "properties.timeInWeek[].day",
            "properties.notAllowedTime[].start",
            "properties.notAllowedTime[].end"
        ],
        "pickPropertiesCreate": [
            "properties.timeInWeek[].day",
            "properties.notAllowedTime[].start",
            "properties.notAllowedTime[].end"
        ]
    },
    {
        "type": "ManagedCluster",
        "group": "ContainerService",
        "apiVersion": "2022-04-02-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "managedIdentities": {
                "type": "UserAssignedIdentity",
                "group": "ManagedIdentity",
                "createOnly": true,
                "list": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}",
                "operationId": "ManagedClusters_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}",
                "operationId": "ManagedClusters_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}",
                "operationId": "ManagedClusters_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}",
                "operationId": "ManagedClusters_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedClusters",
                "operationId": "ManagedClusters_List"
            }
        },
        "omitProperties": [
            "identity.principalId",
            "identity.tenantId",
            "properties.provisioningState",
            "properties.powerState",
            "properties.creationData.sourceResourceId",
            "properties.maxAgentPools",
            "properties.currentKubernetesVersion",
            "properties.fqdn",
            "properties.privateFQDN",
            "properties.azurePortalFQDN",
            "properties.windowsProfile.adminPassword",
            "properties.servicePrincipalProfile.clientId",
            "properties.oidcIssuerProfile.issuerURL",
            "properties.aadProfile.clientAppID",
            "properties.aadProfile.serverAppID",
            "properties.aadProfile.tenantID",
            "properties.apiServerAccessProfile.subnetId",
            "properties.diskEncryptionSetID",
            "properties.httpProxyConfig.effectiveNoProxy",
            "properties.securityProfile.azureDefender.logAnalyticsWorkspaceResourceId",
            "properties.securityProfile.azureKeyVaultKms.keyId",
            "properties.ingressProfile.webAppRouting.dnsZoneResourceId"
        ],
        "pickProperties": [
            "sku.name",
            "sku.tier",
            "extendedLocation.name",
            "extendedLocation.type",
            "identity.type",
            "properties.kubernetesVersion",
            "properties.dnsPrefix",
            "properties.fqdnSubdomain",
            "properties.agentPoolProfiles[].name",
            "properties.linuxProfile.adminUsername",
            "properties.linuxProfile.ssh.publicKeys[].keyData",
            "properties.windowsProfile.adminUsername",
            "properties.windowsProfile.licenseType",
            "properties.windowsProfile.enableCSIProxy",
            "properties.windowsProfile.gmsaProfile.enabled",
            "properties.windowsProfile.gmsaProfile.dnsServer",
            "properties.windowsProfile.gmsaProfile.rootDomainName",
            "properties.servicePrincipalProfile.secret",
            "properties.addonProfiles.enabled",
            "properties.podIdentityProfile.enabled",
            "properties.podIdentityProfile.allowNetworkPluginKubenet",
            "properties.podIdentityProfile.userAssignedIdentities[].name",
            "properties.podIdentityProfile.userAssignedIdentities[].namespace",
            "properties.podIdentityProfile.userAssignedIdentities[].bindingSelector",
            "properties.podIdentityProfile.userAssignedIdentityExceptions[].name",
            "properties.podIdentityProfile.userAssignedIdentityExceptions[].namespace",
            "properties.oidcIssuerProfile.enabled",
            "properties.nodeResourceGroup",
            "properties.enableRBAC",
            "properties.enablePodSecurityPolicy",
            "properties.enableNamespaceResources",
            "properties.networkProfile.networkPlugin",
            "properties.networkProfile.networkPluginMode",
            "properties.networkProfile.networkPolicy",
            "properties.networkProfile.networkMode",
            "properties.networkProfile.podCidr",
            "properties.networkProfile.serviceCidr",
            "properties.networkProfile.dnsServiceIP",
            "properties.networkProfile.dockerBridgeCidr",
            "properties.networkProfile.outboundType",
            "properties.networkProfile.loadBalancerSku",
            "properties.networkProfile.loadBalancerProfile.managedOutboundIPs.count",
            "properties.networkProfile.loadBalancerProfile.managedOutboundIPs.countIPv6",
            "properties.networkProfile.loadBalancerProfile.allocatedOutboundPorts",
            "properties.networkProfile.loadBalancerProfile.idleTimeoutInMinutes",
            "properties.networkProfile.loadBalancerProfile.enableMultipleStandardLoadBalancers",
            "properties.networkProfile.natGatewayProfile.managedOutboundIPProfile.count",
            "properties.networkProfile.natGatewayProfile.idleTimeoutInMinutes",
            "properties.aadProfile.managed",
            "properties.aadProfile.enableAzureRBAC",
            "properties.aadProfile.serverAppSecret",
            "properties.autoUpgradeProfile.upgradeChannel",
            "properties.autoScalerProfile.balance-similar-node-groups",
            "properties.autoScalerProfile.expander",
            "properties.autoScalerProfile.max-empty-bulk-delete",
            "properties.autoScalerProfile.max-graceful-termination-sec",
            "properties.autoScalerProfile.max-node-provision-time",
            "properties.autoScalerProfile.max-total-unready-percentage",
            "properties.autoScalerProfile.new-pod-scale-up-delay",
            "properties.autoScalerProfile.ok-total-unready-count",
            "properties.autoScalerProfile.scan-interval",
            "properties.autoScalerProfile.scale-down-delay-after-add",
            "properties.autoScalerProfile.scale-down-delay-after-delete",
            "properties.autoScalerProfile.scale-down-delay-after-failure",
            "properties.autoScalerProfile.scale-down-unneeded-time",
            "properties.autoScalerProfile.scale-down-unready-time",
            "properties.autoScalerProfile.scale-down-utilization-threshold",
            "properties.autoScalerProfile.skip-nodes-with-local-storage",
            "properties.autoScalerProfile.skip-nodes-with-system-pods",
            "properties.apiServerAccessProfile.enablePrivateCluster",
            "properties.apiServerAccessProfile.privateDNSZone",
            "properties.apiServerAccessProfile.enablePrivateClusterPublicFQDN",
            "properties.apiServerAccessProfile.disableRunCommand",
            "properties.apiServerAccessProfile.enableVnetIntegration",
            "properties.privateLinkResources[].name",
            "properties.privateLinkResources[].type",
            "properties.disableLocalAccounts",
            "properties.httpProxyConfig.httpProxy",
            "properties.httpProxyConfig.httpsProxy",
            "properties.httpProxyConfig.trustedCa",
            "properties.securityProfile.azureDefender.enabled",
            "properties.securityProfile.azureKeyVaultKms.enabled",
            "properties.securityProfile.workloadIdentity.enabled",
            "properties.storageProfile.diskCSIDriver.enabled",
            "properties.storageProfile.diskCSIDriver.version",
            "properties.storageProfile.fileCSIDriver.enabled",
            "properties.storageProfile.snapshotController.enabled",
            "properties.ingressProfile.webAppRouting.enabled",
            "properties.publicNetworkAccess"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "sku.tier",
            "extendedLocation.name",
            "extendedLocation.type",
            "identity.type",
            "properties.kubernetesVersion",
            "properties.dnsPrefix",
            "properties.fqdnSubdomain",
            "properties.agentPoolProfiles[].name",
            "properties.linuxProfile.adminUsername",
            "properties.linuxProfile.ssh.publicKeys[].keyData",
            "properties.windowsProfile.adminUsername",
            "properties.windowsProfile.licenseType",
            "properties.windowsProfile.enableCSIProxy",
            "properties.windowsProfile.gmsaProfile.enabled",
            "properties.windowsProfile.gmsaProfile.dnsServer",
            "properties.windowsProfile.gmsaProfile.rootDomainName",
            "properties.servicePrincipalProfile.secret",
            "properties.addonProfiles.enabled",
            "properties.podIdentityProfile.enabled",
            "properties.podIdentityProfile.allowNetworkPluginKubenet",
            "properties.podIdentityProfile.userAssignedIdentities[].name",
            "properties.podIdentityProfile.userAssignedIdentities[].namespace",
            "properties.podIdentityProfile.userAssignedIdentities[].bindingSelector",
            "properties.podIdentityProfile.userAssignedIdentityExceptions[].name",
            "properties.podIdentityProfile.userAssignedIdentityExceptions[].namespace",
            "properties.oidcIssuerProfile.enabled",
            "properties.nodeResourceGroup",
            "properties.enableRBAC",
            "properties.enablePodSecurityPolicy",
            "properties.enableNamespaceResources",
            "properties.networkProfile.networkPlugin",
            "properties.networkProfile.networkPluginMode",
            "properties.networkProfile.networkPolicy",
            "properties.networkProfile.networkMode",
            "properties.networkProfile.podCidr",
            "properties.networkProfile.serviceCidr",
            "properties.networkProfile.dnsServiceIP",
            "properties.networkProfile.dockerBridgeCidr",
            "properties.networkProfile.outboundType",
            "properties.networkProfile.loadBalancerSku",
            "properties.networkProfile.loadBalancerProfile.managedOutboundIPs.count",
            "properties.networkProfile.loadBalancerProfile.managedOutboundIPs.countIPv6",
            "properties.networkProfile.loadBalancerProfile.allocatedOutboundPorts",
            "properties.networkProfile.loadBalancerProfile.idleTimeoutInMinutes",
            "properties.networkProfile.loadBalancerProfile.enableMultipleStandardLoadBalancers",
            "properties.networkProfile.natGatewayProfile.managedOutboundIPProfile.count",
            "properties.networkProfile.natGatewayProfile.idleTimeoutInMinutes",
            "properties.aadProfile.managed",
            "properties.aadProfile.enableAzureRBAC",
            "properties.aadProfile.serverAppSecret",
            "properties.autoUpgradeProfile.upgradeChannel",
            "properties.autoScalerProfile.balance-similar-node-groups",
            "properties.autoScalerProfile.expander",
            "properties.autoScalerProfile.max-empty-bulk-delete",
            "properties.autoScalerProfile.max-graceful-termination-sec",
            "properties.autoScalerProfile.max-node-provision-time",
            "properties.autoScalerProfile.max-total-unready-percentage",
            "properties.autoScalerProfile.new-pod-scale-up-delay",
            "properties.autoScalerProfile.ok-total-unready-count",
            "properties.autoScalerProfile.scan-interval",
            "properties.autoScalerProfile.scale-down-delay-after-add",
            "properties.autoScalerProfile.scale-down-delay-after-delete",
            "properties.autoScalerProfile.scale-down-delay-after-failure",
            "properties.autoScalerProfile.scale-down-unneeded-time",
            "properties.autoScalerProfile.scale-down-unready-time",
            "properties.autoScalerProfile.scale-down-utilization-threshold",
            "properties.autoScalerProfile.skip-nodes-with-local-storage",
            "properties.autoScalerProfile.skip-nodes-with-system-pods",
            "properties.apiServerAccessProfile.enablePrivateCluster",
            "properties.apiServerAccessProfile.privateDNSZone",
            "properties.apiServerAccessProfile.enablePrivateClusterPublicFQDN",
            "properties.apiServerAccessProfile.disableRunCommand",
            "properties.apiServerAccessProfile.enableVnetIntegration",
            "properties.privateLinkResources[].name",
            "properties.privateLinkResources[].type",
            "properties.disableLocalAccounts",
            "properties.httpProxyConfig.httpProxy",
            "properties.httpProxyConfig.httpsProxy",
            "properties.httpProxyConfig.trustedCa",
            "properties.securityProfile.azureDefender.enabled",
            "properties.securityProfile.azureKeyVaultKms.enabled",
            "properties.securityProfile.workloadIdentity.enabled",
            "properties.storageProfile.diskCSIDriver.enabled",
            "properties.storageProfile.diskCSIDriver.version",
            "properties.storageProfile.fileCSIDriver.enabled",
            "properties.storageProfile.snapshotController.enabled",
            "properties.ingressProfile.webAppRouting.enabled",
            "properties.publicNetworkAccess"
        ],
        "environmentVariables": [
            {
                "path": "properties.windowsProfile.adminPassword",
                "suffix": "ADMIN_PASSWORD"
            }
        ],
        "propertiesDefault": {
            "properties": {
                "networkProfile": {
                    "networkPlugin": "kubenet",
                    "podCidr": "10.244.0.0/16",
                    "serviceCidr": "10.0.0.0/16",
                    "dnsServiceIP": "10.0.0.10",
                    "dockerBridgeCidr": "172.17.0.1/16",
                    "outboundType": "loadBalancer",
                    "loadBalancerProfile": {
                        "managedOutboundIPs": {
                            "count": 1,
                            "countIPv6": 0
                        },
                        "allocatedOutboundPorts": 0,
                        "idleTimeoutInMinutes": 30
                    },
                    "natGatewayProfile": {
                        "managedOutboundIPProfile": {
                            "count": 1
                        },
                        "idleTimeoutInMinutes": 4
                    }
                }
            }
        }
    },
    {
        "type": "ManagedClusterSnapshot",
        "group": "ContainerService",
        "apiVersion": "2022-04-02-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedclustersnapshots/{resourceName}",
                "operationId": "ManagedClusterSnapshots_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedclustersnapshots/{resourceName}",
                "operationId": "ManagedClusterSnapshots_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedclustersnapshots/{resourceName}",
                "operationId": "ManagedClusterSnapshots_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedclustersnapshots/{resourceName}",
                "operationId": "ManagedClusterSnapshots_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedclustersnapshots",
                "operationId": "ManagedClusterSnapshots_List"
            }
        },
        "omitProperties": [
            "properties.creationData.sourceResourceId",
            "properties.managedClusterPropertiesReadOnly"
        ],
        "pickProperties": [
            "properties.snapshotType"
        ],
        "pickPropertiesCreate": [
            "properties.snapshotType"
        ],
        "propertiesDefault": {
            "properties": {
                "snapshotType": "NodePool",
                "managedClusterPropertiesReadOnly": {
                    "networkProfile": {
                        "networkPlugin": "kubenet"
                    }
                }
            }
        }
    },
    {
        "type": "Snapshot",
        "group": "ContainerService",
        "apiVersion": "2022-04-02-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/snapshots/{resourceName}",
                "operationId": "Snapshots_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/snapshots/{resourceName}",
                "operationId": "Snapshots_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/snapshots/{resourceName}",
                "operationId": "Snapshots_UpdateTags"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/snapshots/{resourceName}",
                "operationId": "Snapshots_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/snapshots",
                "operationId": "Snapshots_List"
            }
        },
        "omitProperties": [
            "properties.creationData.sourceResourceId",
            "properties.kubernetesVersion",
            "properties.nodeImageVersion",
            "properties.osType",
            "properties.osSku",
            "properties.vmSize",
            "properties.enableFIPS"
        ],
        "pickProperties": [
            "properties.snapshotType"
        ],
        "pickPropertiesCreate": [
            "properties.snapshotType"
        ],
        "propertiesDefault": {
            "properties": {
                "snapshotType": "NodePool",
                "osType": "Linux"
            }
        }
    },
    {
        "type": "TrustedAccessRoleBinding",
        "group": "ContainerService",
        "apiVersion": "2022-04-02-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "resource": {
                "type": "ManagedCluster",
                "group": "ContainerService",
                "name": "resourceName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/trustedAccessRoleBindings/{trustedAccessRoleBindingName}",
                "operationId": "TrustedAccessRoleBindings_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/trustedAccessRoleBindings/{trustedAccessRoleBindingName}",
                "operationId": "TrustedAccessRoleBindings_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/trustedAccessRoleBindings/{trustedAccessRoleBindingName}",
                "operationId": "TrustedAccessRoleBindings_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/trustedAccessRoleBindings",
                "operationId": "TrustedAccessRoleBindings_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.sourceResourceId"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    }
]