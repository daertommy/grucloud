[
    {
        "type": "Key",
        "group": "KeyVault",
        "apiVersion": "2021-11-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "name": "vaultName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys/{keyName}",
                "operationId": "Keys_CreateIfNotExist"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys/{keyName}",
                "operationId": "Keys_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/keys",
                "operationId": "Keys_List"
            }
        },
        "omitProperties": [
            "properties.attributes.created",
            "properties.attributes.updated",
            "properties.attributes.recoveryLevel",
            "properties.keyUri",
            "properties.keyUriWithVersion",
            "properties.rotationPolicy.attributes.created",
            "properties.rotationPolicy.attributes.updated"
        ],
        "pickProperties": [
            "properties.attributes.enabled",
            "properties.attributes.nbf",
            "properties.attributes.exp",
            "properties.attributes.exportable",
            "properties.kty",
            "properties.keySize",
            "properties.curveName",
            "properties.rotationPolicy.attributes.expiryTime",
            "properties.rotationPolicy.lifetimeActions[].trigger.timeAfterCreate",
            "properties.rotationPolicy.lifetimeActions[].trigger.timeBeforeExpiry",
            "properties.rotationPolicy.lifetimeActions[].action.type",
            "properties.release_policy.contentType",
            "properties.release_policy.data"
        ],
        "pickPropertiesCreate": [
            "properties.attributes.enabled",
            "properties.attributes.nbf",
            "properties.attributes.exp",
            "properties.attributes.exportable",
            "properties.kty",
            "properties.keySize",
            "properties.curveName",
            "properties.rotationPolicy.attributes.expiryTime",
            "properties.rotationPolicy.lifetimeActions[].trigger.timeAfterCreate",
            "properties.rotationPolicy.lifetimeActions[].trigger.timeBeforeExpiry",
            "properties.rotationPolicy.lifetimeActions[].action.type",
            "properties.release_policy.contentType",
            "properties.release_policy.data"
        ],
        "propertiesDefault": {
            "properties": {
                "release_policy": {
                    "contentType": "application/json; charset=utf-8"
                }
            }
        }
    },
    {
        "type": "ManagedHsm",
        "group": "KeyVault",
        "apiVersion": "2021-11-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}",
                "operationId": "ManagedHsms_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}",
                "operationId": "ManagedHsms_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}",
                "operationId": "ManagedHsms_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}",
                "operationId": "ManagedHsms_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/managedHSMs",
                "operationId": "ManagedHsms_ListBySubscription"
            }
        },
        "omitProperties": [
            "properties.tenantId",
            "properties.hsmUri",
            "properties.statusMessage",
            "properties.provisioningState",
            "properties.privateEndpointConnections",
            "properties.scheduledPurgeDate"
        ],
        "pickProperties": [
            "properties.enableSoftDelete",
            "properties.softDeleteRetentionInDays",
            "properties.enablePurgeProtection",
            "properties.createMode",
            "properties.networkAcls.bypass",
            "properties.networkAcls.defaultAction",
            "properties.networkAcls.ipRules[].value",
            "properties.publicNetworkAccess"
        ],
        "pickPropertiesCreate": [
            "properties.enableSoftDelete",
            "properties.softDeleteRetentionInDays",
            "properties.enablePurgeProtection",
            "properties.createMode",
            "properties.networkAcls.bypass",
            "properties.networkAcls.defaultAction",
            "properties.networkAcls.ipRules[].value",
            "properties.publicNetworkAccess"
        ],
        "propertiesDefault": {
            "properties": {
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enablePurgeProtection": true
            }
        }
    },
    {
        "type": "MHSMPrivateEndpointConnection",
        "group": "KeyVault",
        "apiVersion": "2021-11-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "ManagedHsm",
                "group": "KeyVault",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "MHSMPrivateEndpointConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "MHSMPrivateEndpointConnections_Put"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "MHSMPrivateEndpointConnections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/managedHSMs/{name}/privateEndpointConnections",
                "operationId": "MHSMPrivateEndpointConnections_ListByResource"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "etag"
        ],
        "pickPropertiesCreate": [
            "etag"
        ]
    },
    {
        "type": "Secret",
        "group": "KeyVault",
        "apiVersion": "2021-11-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "vault": {
                "type": "Vault",
                "group": "KeyVault",
                "name": "vaultName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets/{secretName}",
                "operationId": "Secrets_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets/{secretName}",
                "operationId": "Secrets_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets/{secretName}",
                "operationId": "Secrets_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}/secrets",
                "operationId": "Secrets_List"
            }
        },
        "omitProperties": [
            "properties.secretUri",
            "properties.secretUriWithVersion"
        ],
        "pickProperties": [
            "properties.value",
            "properties.contentType",
            "properties,attributes,enabled.properties,attributes,nbf.properties,attributes,exp"
        ],
        "pickPropertiesCreate": [
            "properties.value",
            "properties.contentType",
            "properties,attributes,enabled.properties,attributes,nbf.properties,attributes,exp"
        ]
    },
    {
        "type": "Vault",
        "group": "KeyVault",
        "apiVersion": "2021-11-01-preview",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}",
                "operationId": "Vaults_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}",
                "operationId": "Vaults_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}",
                "operationId": "Vaults_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}",
                "operationId": "Vaults_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.KeyVault/vaults",
                "operationId": "Vaults_ListBySubscription"
            }
        },
        "omitProperties": [
            "id",
            "name",
            "type",
            "systemData",
            "properties.tenantId",
            "properties.hsmPoolResourceId",
            "properties.provisioningState",
            "properties.privateEndpointConnections"
        ],
        "pickProperties": [
            "location",
            "properties.sku.family",
            "properties.sku.name",
            "properties.vaultUri",
            "properties.enabledForDeployment",
            "properties.enabledForDiskEncryption",
            "properties.enabledForTemplateDeployment",
            "properties.enableSoftDelete",
            "properties.softDeleteRetentionInDays",
            "properties.enableRbacAuthorization",
            "properties.createMode",
            "properties.enablePurgeProtection",
            "properties.networkAcls.bypass",
            "properties.networkAcls.defaultAction",
            "properties.networkAcls.ipRules[].value",
            "properties.networkAcls.virtualNetworkRules[].ignoreMissingVnetServiceEndpoint",
            "properties.publicNetworkAccess"
        ],
        "pickPropertiesCreate": [
            "location",
            "properties.sku.family",
            "properties.sku.name",
            "properties.vaultUri",
            "properties.enabledForDeployment",
            "properties.enabledForDiskEncryption",
            "properties.enabledForTemplateDeployment",
            "properties.enableSoftDelete",
            "properties.softDeleteRetentionInDays",
            "properties.enableRbacAuthorization",
            "properties.createMode",
            "properties.enablePurgeProtection",
            "properties.networkAcls.bypass",
            "properties.networkAcls.defaultAction",
            "properties.networkAcls.ipRules[].value",
            "properties.networkAcls.virtualNetworkRules[].ignoreMissingVnetServiceEndpoint",
            "properties.publicNetworkAccess"
        ],
        "propertiesDefault": {
            "properties": {
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "publicNetworkAccess": "enabled"
            }
        }
    }
]