[
    {
        "type": "AppServiceCertificateOrder",
        "group": "CertificateRegistration",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}",
                "operationId": "AppServiceCertificateOrders_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}",
                "operationId": "AppServiceCertificateOrders_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}",
                "operationId": "AppServiceCertificateOrders_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}",
                "operationId": "AppServiceCertificateOrders_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/certificateOrders",
                "operationId": "AppServiceCertificateOrders_List"
            }
        },
        "omitProperties": [
            "properties.domainVerificationToken",
            "properties.provisioningState",
            "properties.status",
            "properties.signedCertificate",
            "properties.intermediate",
            "properties.root",
            "properties.serialNumber",
            "properties.lastCertificateIssuanceTime",
            "properties.expirationTime",
            "properties.isPrivateKeyExternal",
            "properties.appServiceCertificateNotRenewableReasons",
            "properties.nextAutoRenewalTimeStamp",
            "properties.contact"
        ],
        "pickProperties": [
            "properties.certificates.keyVaultSecretName",
            "properties.distinguishedName",
            "properties.validityInYears",
            "properties.keySize",
            "properties.productType",
            "properties.autoRenew",
            "properties.csr"
        ],
        "pickPropertiesCreate": [
            "properties.certificates.keyVaultSecretName",
            "properties.distinguishedName",
            "properties.validityInYears",
            "properties.keySize",
            "properties.productType",
            "properties.autoRenew",
            "properties.csr"
        ],
        "propertiesDefault": {
            "properties": {
                "validityInYears": 1,
                "keySize": 2048,
                "autoRenew": true
            }
        }
    },
    {
        "type": "AppServiceCertificateOrderCertificate",
        "group": "CertificateRegistration",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "certificateOrder": {
                "type": "AppServiceCertificateOrder",
                "group": "CertificateRegistration",
                "name": "certificateOrderName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "AppServiceCertificateOrders_GetCertificate"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "AppServiceCertificateOrders_CreateOrUpdateCertificate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "AppServiceCertificateOrders_DeleteCertificate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "AppServiceCertificateOrders_UpdateCertificate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates",
                "operationId": "AppServiceCertificateOrders_ListCertificates"
            }
        },
        "omitProperties": [
            "properties.keyVaultId",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.keyVaultSecretName"
        ],
        "pickPropertiesCreate": [
            "properties.keyVaultSecretName"
        ]
    },
    {
        "type": "Domain",
        "group": "DomainRegistration",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}",
                "operationId": "Domains_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}",
                "operationId": "Domains_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}",
                "operationId": "Domains_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}",
                "operationId": "Domains_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.DomainRegistration/domains",
                "operationId": "Domains_List"
            }
        },
        "omitProperties": [
            "properties.contactAdmin.addressMailing.state",
            "properties.contactBilling.addressMailing.state",
            "properties.contactRegistrant.addressMailing.state",
            "properties.contactTech.addressMailing.state",
            "properties.registrationStatus",
            "properties.provisioningState",
            "properties.nameServers",
            "properties.createdTime",
            "properties.expirationTime",
            "properties.lastRenewedTime",
            "properties.readyForDnsRecordManagement",
            "properties.managedHostNames",
            "properties.domainNotRenewableReasons",
            "properties.dnsZoneId"
        ],
        "pickProperties": [
            "properties.contactAdmin.addressMailing.address1",
            "properties.contactAdmin.addressMailing.address2",
            "properties.contactAdmin.addressMailing.city",
            "properties.contactAdmin.addressMailing.country",
            "properties.contactAdmin.addressMailing.postalCode",
            "properties.contactAdmin.email",
            "properties.contactAdmin.fax",
            "properties.contactAdmin.jobTitle",
            "properties.contactAdmin.nameFirst",
            "properties.contactAdmin.nameLast",
            "properties.contactAdmin.nameMiddle",
            "properties.contactAdmin.organization",
            "properties.contactAdmin.phone",
            "properties.contactBilling.addressMailing.address1",
            "properties.contactBilling.addressMailing.address2",
            "properties.contactBilling.addressMailing.city",
            "properties.contactBilling.addressMailing.country",
            "properties.contactBilling.addressMailing.postalCode",
            "properties.contactBilling.email",
            "properties.contactBilling.fax",
            "properties.contactBilling.jobTitle",
            "properties.contactBilling.nameFirst",
            "properties.contactBilling.nameLast",
            "properties.contactBilling.nameMiddle",
            "properties.contactBilling.organization",
            "properties.contactBilling.phone",
            "properties.contactRegistrant.addressMailing.address1",
            "properties.contactRegistrant.addressMailing.address2",
            "properties.contactRegistrant.addressMailing.city",
            "properties.contactRegistrant.addressMailing.country",
            "properties.contactRegistrant.addressMailing.postalCode",
            "properties.contactRegistrant.email",
            "properties.contactRegistrant.fax",
            "properties.contactRegistrant.jobTitle",
            "properties.contactRegistrant.nameFirst",
            "properties.contactRegistrant.nameLast",
            "properties.contactRegistrant.nameMiddle",
            "properties.contactRegistrant.organization",
            "properties.contactRegistrant.phone",
            "properties.contactTech.addressMailing.address1",
            "properties.contactTech.addressMailing.address2",
            "properties.contactTech.addressMailing.city",
            "properties.contactTech.addressMailing.country",
            "properties.contactTech.addressMailing.postalCode",
            "properties.contactTech.email",
            "properties.contactTech.fax",
            "properties.contactTech.jobTitle",
            "properties.contactTech.nameFirst",
            "properties.contactTech.nameLast",
            "properties.contactTech.nameMiddle",
            "properties.contactTech.organization",
            "properties.contactTech.phone",
            "properties.privacy",
            "properties.autoRenew",
            "properties.consent.agreedBy",
            "properties.consent.agreedAt",
            "properties.dnsType",
            "properties.targetDnsType",
            "properties.authCode"
        ],
        "pickPropertiesCreate": [
            "properties.contactAdmin.addressMailing.address1",
            "properties.contactAdmin.addressMailing.address2",
            "properties.contactAdmin.addressMailing.city",
            "properties.contactAdmin.addressMailing.country",
            "properties.contactAdmin.addressMailing.postalCode",
            "properties.contactAdmin.email",
            "properties.contactAdmin.fax",
            "properties.contactAdmin.jobTitle",
            "properties.contactAdmin.nameFirst",
            "properties.contactAdmin.nameLast",
            "properties.contactAdmin.nameMiddle",
            "properties.contactAdmin.organization",
            "properties.contactAdmin.phone",
            "properties.contactBilling.addressMailing.address1",
            "properties.contactBilling.addressMailing.address2",
            "properties.contactBilling.addressMailing.city",
            "properties.contactBilling.addressMailing.country",
            "properties.contactBilling.addressMailing.postalCode",
            "properties.contactBilling.email",
            "properties.contactBilling.fax",
            "properties.contactBilling.jobTitle",
            "properties.contactBilling.nameFirst",
            "properties.contactBilling.nameLast",
            "properties.contactBilling.nameMiddle",
            "properties.contactBilling.organization",
            "properties.contactBilling.phone",
            "properties.contactRegistrant.addressMailing.address1",
            "properties.contactRegistrant.addressMailing.address2",
            "properties.contactRegistrant.addressMailing.city",
            "properties.contactRegistrant.addressMailing.country",
            "properties.contactRegistrant.addressMailing.postalCode",
            "properties.contactRegistrant.email",
            "properties.contactRegistrant.fax",
            "properties.contactRegistrant.jobTitle",
            "properties.contactRegistrant.nameFirst",
            "properties.contactRegistrant.nameLast",
            "properties.contactRegistrant.nameMiddle",
            "properties.contactRegistrant.organization",
            "properties.contactRegistrant.phone",
            "properties.contactTech.addressMailing.address1",
            "properties.contactTech.addressMailing.address2",
            "properties.contactTech.addressMailing.city",
            "properties.contactTech.addressMailing.country",
            "properties.contactTech.addressMailing.postalCode",
            "properties.contactTech.email",
            "properties.contactTech.fax",
            "properties.contactTech.jobTitle",
            "properties.contactTech.nameFirst",
            "properties.contactTech.nameLast",
            "properties.contactTech.nameMiddle",
            "properties.contactTech.organization",
            "properties.contactTech.phone",
            "properties.privacy",
            "properties.autoRenew",
            "properties.consent.agreedBy",
            "properties.consent.agreedAt",
            "properties.dnsType",
            "properties.targetDnsType",
            "properties.authCode"
        ],
        "propertiesDefault": {
            "properties": {
                "autoRenew": true
            }
        }
    },
    {
        "type": "DomainOwnershipIdentifier",
        "group": "DomainRegistration",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "domain": {
                "type": "Domain",
                "group": "DomainRegistration",
                "name": "domainName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}",
                "operationId": "Domains_GetOwnershipIdentifier"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}",
                "operationId": "Domains_CreateOrUpdateOwnershipIdentifier"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}",
                "operationId": "Domains_DeleteOwnershipIdentifier"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers/{name}",
                "operationId": "Domains_UpdateOwnershipIdentifier"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DomainRegistration/domains/{domainName}/domainOwnershipIdentifiers",
                "operationId": "Domains_ListOwnershipIdentifiers"
            }
        },
        "omitProperties": [
            "properties.ownershipId"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "AppServiceEnvironment",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "AppServiceEnvironments_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "AppServiceEnvironments_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "AppServiceEnvironments_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "AppServiceEnvironments_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/hostingEnvironments",
                "operationId": "AppServiceEnvironments_List"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.status",
            "properties.virtualNetwork.id",
            "properties.virtualNetwork.name",
            "properties.virtualNetwork.type",
            "properties.multiRoleCount",
            "properties.maximumNumberOfMachines",
            "properties.suspended",
            "properties.hasLinuxWorkers"
        ],
        "pickProperties": [
            "properties.virtualNetwork.subnet",
            "properties.internalLoadBalancingMode",
            "properties.multiSize",
            "properties.ipsslAddressCount",
            "properties.dnsSuffix",
            "properties.frontEndScaleFactor",
            "properties.clusterSettings[].name",
            "properties.clusterSettings[].value",
            "properties.dedicatedHostCount",
            "properties.zoneRedundant"
        ],
        "pickPropertiesCreate": [
            "properties.virtualNetwork.subnet",
            "properties.internalLoadBalancingMode",
            "properties.multiSize",
            "properties.ipsslAddressCount",
            "properties.dnsSuffix",
            "properties.frontEndScaleFactor",
            "properties.clusterSettings[].name",
            "properties.clusterSettings[].value",
            "properties.dedicatedHostCount",
            "properties.zoneRedundant"
        ]
    },
    {
        "type": "AppServiceEnvironmentAseV3NetworkingConfiguration",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/configurations/networking",
                "operationId": "AppServiceEnvironments_GetAseV3NetworkingConfiguration"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/configurations/networking",
                "operationId": "AppServiceEnvironments_UpdateAseNetworkingConfiguration"
            }
        },
        "omitProperties": [
            "properties.windowsOutboundIpAddresses",
            "properties.linuxOutboundIpAddresses",
            "properties.externalInboundIpAddresses",
            "properties.internalInboundIpAddresses"
        ],
        "pickProperties": [
            "properties.allowNewPrivateEndpointConnections"
        ],
        "pickPropertiesCreate": [
            "properties.allowNewPrivateEndpointConnections"
        ]
    },
    {
        "type": "AppServiceEnvironmentMultiRolePool",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
                "operationId": "AppServiceEnvironments_GetMultiRolePool"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
                "operationId": "AppServiceEnvironments_CreateOrUpdateMultiRolePool"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
                "operationId": "AppServiceEnvironments_UpdateMultiRolePool"
            }
        },
        "omitProperties": [
            "properties.workerSizeId",
            "properties.instanceNames"
        ],
        "pickProperties": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.capabilities[].name",
            "sku.capabilities[].value",
            "sku.capabilities[].reason"
        ],
        "pickPropertiesCreate": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.capabilities[].name",
            "sku.capabilities[].value",
            "sku.capabilities[].reason"
        ]
    },
    {
        "type": "AppServiceEnvironmentPrivateEndpointConnection",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "AppServiceEnvironments_GetPrivateEndpointConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "AppServiceEnvironments_ApproveOrRejectPrivateEndpointConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "AppServiceEnvironments_DeletePrivateEndpointConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/privateEndpointConnections",
                "operationId": "AppServiceEnvironments_GetPrivateEndpointConnectionList"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "AppServiceEnvironmentWorkerPool",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
                "operationId": "AppServiceEnvironments_GetWorkerPool"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
                "operationId": "AppServiceEnvironments_CreateOrUpdateWorkerPool"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
                "operationId": "AppServiceEnvironments_UpdateWorkerPool"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools",
                "operationId": "AppServiceEnvironments_ListWorkerPools"
            }
        },
        "omitProperties": [
            "properties.workerSizeId",
            "properties.instanceNames"
        ],
        "pickProperties": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.capabilities[].name",
            "sku.capabilities[].value",
            "sku.capabilities[].reason"
        ],
        "pickPropertiesCreate": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.capabilities[].name",
            "sku.capabilities[].value",
            "sku.capabilities[].reason"
        ]
    },
    {
        "type": "AppServicePlan",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.hostingEnvironmentProfile.id"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "AppServicePlans_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "AppServicePlans_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "AppServicePlans_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "AppServicePlans_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/serverfarms",
                "operationId": "AppServicePlans_List"
            }
        },
        "omitProperties": [
            "properties.status",
            "properties.subscription",
            "properties.hostingEnvironmentProfile.id",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.maximumNumberOfWorkers",
            "properties.geoRegion",
            "properties.numberOfSites",
            "properties.resourceGroup",
            "properties.targetWorkerSizeId",
            "properties.provisioningState",
            "properties.kubeEnvironmentProfile.id",
            "properties.kubeEnvironmentProfile.name",
            "properties.kubeEnvironmentProfile.type",
            "extendedLocation.type"
        ],
        "pickProperties": [
            "properties.workerTierName",
            "properties.perSiteScaling",
            "properties.elasticScaleEnabled",
            "properties.maximumElasticWorkerCount",
            "properties.isSpot",
            "properties.spotExpirationTime",
            "properties.freeOfferExpirationTime",
            "properties.reserved",
            "properties.isXenon",
            "properties.hyperV",
            "properties.targetWorkerCount",
            "properties.zoneRedundant",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.capabilities[].name",
            "sku.capabilities[].value",
            "sku.capabilities[].reason",
            "extendedLocation.name"
        ],
        "pickPropertiesCreate": [
            "properties.workerTierName",
            "properties.perSiteScaling",
            "properties.elasticScaleEnabled",
            "properties.maximumElasticWorkerCount",
            "properties.isSpot",
            "properties.spotExpirationTime",
            "properties.freeOfferExpirationTime",
            "properties.reserved",
            "properties.isXenon",
            "properties.hyperV",
            "properties.targetWorkerCount",
            "properties.zoneRedundant",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.capabilities[].name",
            "sku.capabilities[].value",
            "sku.capabilities[].reason",
            "extendedLocation.name"
        ],
        "propertiesDefault": {
            "properties": {
                "perSiteScaling": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "zoneRedundant": false
            }
        }
    },
    {
        "type": "Certificate",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.hostingEnvironmentProfile.id"
            },
            "serverFarm": {
                "type": "ServerFarm",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.serverFarmId"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}",
                "operationId": "Certificates_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}",
                "operationId": "Certificates_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}",
                "operationId": "Certificates_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/certificates/{name}",
                "operationId": "Certificates_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/certificates",
                "operationId": "Certificates_List"
            }
        },
        "omitProperties": [
            "properties.password",
            "properties.friendlyName",
            "properties.subjectName",
            "properties.siteName",
            "properties.selfLink",
            "properties.issuer",
            "properties.issueDate",
            "properties.expirationDate",
            "properties.thumbprint",
            "properties.valid",
            "properties.cerBlob",
            "properties.publicKeyHash",
            "properties.hostingEnvironmentProfile",
            "properties.keyVaultId",
            "properties.keyVaultSecretStatus",
            "properties.serverFarmId"
        ],
        "pickProperties": [
            "properties.pfxBlob",
            "properties.keyVaultSecretName",
            "properties.canonicalName",
            "properties.domainValidationMethod"
        ],
        "pickPropertiesCreate": [
            "properties.pfxBlob",
            "properties.keyVaultSecretName",
            "properties.canonicalName",
            "properties.domainValidationMethod"
        ],
        "environmentVariables": [
            {
                "path": "properties.password",
                "suffix": "PASSWORD"
            }
        ]
    },
    {
        "type": "CertificateOrder",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}",
                "operationId": "CertificateOrders_GetCertificateOrder"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}",
                "operationId": "CertificateOrders_CreateOrUpdateCertificateOrder"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}",
                "operationId": "CertificateOrders_DeleteCertificateOrder"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{name}",
                "operationId": "CertificateOrders_UpdateCertificateOrder"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.CertificateRegistration/certificateOrders",
                "operationId": "GlobalCertificateOrder_GetAllCertificateOrders"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.status"
        ],
        "pickProperties": [
            "properties.certificates.properties.keyVaultSecretName",
            "properties.distinguishedName",
            "properties.domainVerificationToken",
            "properties.validityInYears",
            "properties.keySize",
            "properties.productType",
            "properties.autoRenew",
            "properties,signedCertificate,name.properties,signedCertificate,kind.properties,signedCertificate,location.properties,signedCertificate,type",
            "properties.csr",
            "properties,intermediate,name.properties,intermediate,kind.properties,intermediate,location.properties,intermediate,type",
            "properties,root,name.properties,root,kind.properties,root,location.properties,root,type",
            "properties.serialNumber",
            "properties.lastCertificateIssuanceTime",
            "properties.expirationTime"
        ],
        "pickPropertiesCreate": [
            "properties.certificates.properties.keyVaultSecretName",
            "properties.distinguishedName",
            "properties.domainVerificationToken",
            "properties.validityInYears",
            "properties.keySize",
            "properties.productType",
            "properties.autoRenew",
            "properties,signedCertificate,name.properties,signedCertificate,kind.properties,signedCertificate,location.properties,signedCertificate,type",
            "properties.csr",
            "properties,intermediate,name.properties,intermediate,kind.properties,intermediate,location.properties,intermediate,type",
            "properties,root,name.properties,root,kind.properties,root,location.properties,root,type",
            "properties.serialNumber",
            "properties.lastCertificateIssuanceTime",
            "properties.expirationTime"
        ]
    },
    {
        "type": "CertificateOrderCertificate",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "certificateOrder": {
                "type": "AppServiceCertificateOrder",
                "group": "CertificateRegistration",
                "name": "certificateOrderName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "CertificateOrders_GetCertificate"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "CertificateOrders_CreateOrUpdateCertificate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "CertificateOrders_DeleteCertificate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates/{name}",
                "operationId": "CertificateOrders_UpdateCertificate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CertificateRegistration/certificateOrders/{certificateOrderName}/certificates",
                "operationId": "CertificateOrders_GetCertificates"
            }
        },
        "omitProperties": [
            "properties.keyVaultId",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.keyVaultSecretName"
        ],
        "pickPropertiesCreate": [
            "properties.keyVaultSecretName"
        ]
    },
    {
        "type": "Connection",
        "group": "Web",
        "apiVersion": "2016-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}",
                "operationId": "Connections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}",
                "operationId": "Connections_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}",
                "operationId": "Connections_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}",
                "operationId": "Connections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections",
                "operationId": "Connections_List"
            }
        },
        "omitProperties": [
            "properties.statuses"
        ],
        "pickProperties": [
            "properties.displayName",
            "properties.createdTime",
            "properties.changedTime",
            "properties,api,type",
            "properties.testLinks[].requestUri",
            "properties.testLinks[].method"
        ],
        "pickPropertiesCreate": [
            "properties.displayName",
            "properties.createdTime",
            "properties.changedTime",
            "properties,api,type",
            "properties.testLinks[].requestUri",
            "properties.testLinks[].method"
        ]
    },
    {
        "type": "ConnectionGateway",
        "group": "Web",
        "apiVersion": "2016-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connectionGateways/{connectionGatewayName}",
                "operationId": "ConnectionGateways_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connectionGateways/{connectionGatewayName}",
                "operationId": "ConnectionGateways_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connectionGateways/{connectionGatewayName}",
                "operationId": "ConnectionGateways_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connectionGateways/{connectionGatewayName}",
                "operationId": "ConnectionGateways_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/connectionGateways",
                "operationId": "ConnectionGateways_List"
            }
        },
        "omitProperties": [
            "properties.status"
        ],
        "pickProperties": [
            "properties,connectionGatewayInstallation,type",
            "properties.displayName",
            "properties.description",
            "properties.machineName",
            "properties.backendUri"
        ],
        "pickPropertiesCreate": [
            "properties,connectionGatewayInstallation,type",
            "properties.displayName",
            "properties.description",
            "properties.machineName",
            "properties.backendUri"
        ]
    },
    {
        "type": "CustomApi",
        "group": "Web",
        "apiVersion": "2016-06-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}",
                "operationId": "CustomApis_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}",
                "operationId": "CustomApis_CreateOrUpdate"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}",
                "operationId": "CustomApis_Update"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}",
                "operationId": "CustomApis_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/customApis",
                "operationId": "CustomApis_List"
            }
        },
        "pickProperties": [
            "properties.connectionParameters.type",
            "properties.connectionParameters.oAuthSettings.identityProvider",
            "properties.connectionParameters.oAuthSettings.clientSecret",
            "properties.connectionParameters.oAuthSettings.redirectUrl",
            "properties.connectionParameters.oAuthSettings.customParameters.value",
            "properties.brandColor",
            "properties.description",
            "properties.displayName",
            "properties.iconUri",
            "properties.backendService.serviceUrl",
            "properties.apiDefinitions.originalSwaggerUrl",
            "properties.apiDefinitions.modifiedSwaggerUrl",
            "properties.apiType",
            "properties.wsdlDefinition.url",
            "properties.wsdlDefinition.content",
            "properties.wsdlDefinition.service.qualifiedName",
            "properties.wsdlDefinition.importMethod"
        ],
        "pickPropertiesCreate": [
            "properties.connectionParameters.type",
            "properties.connectionParameters.oAuthSettings.identityProvider",
            "properties.connectionParameters.oAuthSettings.clientSecret",
            "properties.connectionParameters.oAuthSettings.redirectUrl",
            "properties.connectionParameters.oAuthSettings.customParameters.value",
            "properties.brandColor",
            "properties.description",
            "properties.displayName",
            "properties.iconUri",
            "properties.backendService.serviceUrl",
            "properties.apiDefinitions.originalSwaggerUrl",
            "properties.apiDefinitions.modifiedSwaggerUrl",
            "properties.apiType",
            "properties.wsdlDefinition.url",
            "properties.wsdlDefinition.content",
            "properties.wsdlDefinition.service.qualifiedName",
            "properties.wsdlDefinition.importMethod"
        ]
    },
    {
        "type": "HostingEnvironment",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "HostingEnvironments_GetHostingEnvironment"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "HostingEnvironments_CreateOrUpdateHostingEnvironment"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}",
                "operationId": "HostingEnvironments_DeleteHostingEnvironment"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/hostingEnvironments",
                "operationId": "Global_GetAllHostingEnvironments"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.status",
            "properties.virtualNetwork.id",
            "properties.subscriptionId",
            "properties.environmentStatus",
            "properties.apiManagementAccountId"
        ],
        "pickProperties": [
            "properties.name",
            "properties.location",
            "properties.vnetName",
            "properties.vnetResourceGroupName",
            "properties.vnetSubnetName",
            "properties.virtualNetwork.name",
            "properties.virtualNetwork.type",
            "properties.virtualNetwork.subnet",
            "properties.internalLoadBalancingMode",
            "properties.multiSize",
            "properties.multiRoleCount",
            "properties.workerPools[].properties.computeMode",
            "properties.workerPools[].properties.workerSize",
            "properties.workerPools[].properties.workerCount",
            "properties.workerPools[].sku.name",
            "properties.workerPools[].sku.tier",
            "properties.workerPools[].sku.size",
            "properties.workerPools[].sku.family",
            "properties.workerPools[].sku.capacity",
            "properties.ipsslAddressCount",
            "properties.databaseEdition",
            "properties.databaseServiceObjective",
            "properties.upgradeDomains",
            "properties.dnsSuffix",
            "properties.lastAction",
            "properties.lastActionResult",
            "properties.allowedMultiSizes",
            "properties.allowedWorkerSizes",
            "properties.maximumNumberOfMachines",
            "properties.vipMappings[].virtualIP",
            "properties.vipMappings[].internalHttpPort",
            "properties.vipMappings[].internalHttpsPort",
            "properties.vipMappings[].inUse",
            "properties.environmentCapacities[].name",
            "properties.environmentCapacities[].availableCapacity",
            "properties.environmentCapacities[].totalCapacity",
            "properties.environmentCapacities[].unit",
            "properties.environmentCapacities[].computeMode",
            "properties.environmentCapacities[].workerSize",
            "properties.environmentCapacities[].excludeFromCapacityAllocation",
            "properties.environmentCapacities[].isApplicableForAllComputeModes",
            "properties.environmentCapacities[].siteMode",
            "properties.networkAccessControlList[].action",
            "properties.networkAccessControlList[].description",
            "properties.networkAccessControlList[].order",
            "properties.networkAccessControlList[].remoteSubnet",
            "properties.environmentIsHealthy",
            "properties.resourceGroup",
            "properties.suspended",
            "properties.clusterSettings[].name",
            "properties.clusterSettings[].value"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.location",
            "properties.vnetName",
            "properties.vnetResourceGroupName",
            "properties.vnetSubnetName",
            "properties.virtualNetwork.name",
            "properties.virtualNetwork.type",
            "properties.virtualNetwork.subnet",
            "properties.internalLoadBalancingMode",
            "properties.multiSize",
            "properties.multiRoleCount",
            "properties.workerPools[].properties.computeMode",
            "properties.workerPools[].properties.workerSize",
            "properties.workerPools[].properties.workerCount",
            "properties.workerPools[].sku.name",
            "properties.workerPools[].sku.tier",
            "properties.workerPools[].sku.size",
            "properties.workerPools[].sku.family",
            "properties.workerPools[].sku.capacity",
            "properties.ipsslAddressCount",
            "properties.databaseEdition",
            "properties.databaseServiceObjective",
            "properties.upgradeDomains",
            "properties.dnsSuffix",
            "properties.lastAction",
            "properties.lastActionResult",
            "properties.allowedMultiSizes",
            "properties.allowedWorkerSizes",
            "properties.maximumNumberOfMachines",
            "properties.vipMappings[].virtualIP",
            "properties.vipMappings[].internalHttpPort",
            "properties.vipMappings[].internalHttpsPort",
            "properties.vipMappings[].inUse",
            "properties.environmentCapacities[].name",
            "properties.environmentCapacities[].availableCapacity",
            "properties.environmentCapacities[].totalCapacity",
            "properties.environmentCapacities[].unit",
            "properties.environmentCapacities[].computeMode",
            "properties.environmentCapacities[].workerSize",
            "properties.environmentCapacities[].excludeFromCapacityAllocation",
            "properties.environmentCapacities[].isApplicableForAllComputeModes",
            "properties.environmentCapacities[].siteMode",
            "properties.networkAccessControlList[].action",
            "properties.networkAccessControlList[].description",
            "properties.networkAccessControlList[].order",
            "properties.networkAccessControlList[].remoteSubnet",
            "properties.environmentIsHealthy",
            "properties.resourceGroup",
            "properties.suspended",
            "properties.clusterSettings[].name",
            "properties.clusterSettings[].value"
        ]
    },
    {
        "type": "HostingEnvironmentMultiRolePool",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
                "operationId": "HostingEnvironments_GetMultiRolePool"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/multiRolePools/default",
                "operationId": "HostingEnvironments_CreateOrUpdateMultiRolePool"
            }
        },
        "omitProperties": [
            "properties.workerSizeId"
        ],
        "pickProperties": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ],
        "pickPropertiesCreate": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ]
    },
    {
        "type": "HostingEnvironmentWorkerPool",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "AppServiceEnvironment",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
                "operationId": "HostingEnvironments_GetWorkerPool"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools/{workerPoolName}",
                "operationId": "HostingEnvironments_CreateOrUpdateWorkerPool"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{name}/workerPools",
                "operationId": "HostingEnvironments_GetWorkerPools"
            }
        },
        "omitProperties": [
            "properties.workerSizeId"
        ],
        "pickProperties": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ],
        "pickPropertiesCreate": [
            "properties.computeMode",
            "properties.workerSize",
            "properties.workerCount",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ]
    },
    {
        "type": "ServerFarm",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.hostingEnvironmentProfile.id"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "ServerFarms_GetServerFarm"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "ServerFarms_CreateOrUpdateServerFarm"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
                "operationId": "ServerFarms_DeleteServerFarm"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/serverfarms",
                "operationId": "Global_GetAllServerFarms"
            }
        },
        "omitProperties": [
            "properties.status",
            "properties.subscription",
            "properties.hostingEnvironmentProfile.id",
            "properties.geoRegion",
            "properties.numberOfSites",
            "properties.resourceGroup"
        ],
        "pickProperties": [
            "properties.name",
            "properties.workerTierName",
            "properties.adminSiteName",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.maximumNumberOfWorkers",
            "properties.perSiteScaling",
            "properties.reserved",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.workerTierName",
            "properties.adminSiteName",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.maximumNumberOfWorkers",
            "properties.perSiteScaling",
            "properties.reserved",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ]
    },
    {
        "type": "Site",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "serverFarm": {
                "type": "ServerFarm",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.serverFarmId"
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.hostingEnvironmentProfile.id"
            },
            "webApp": {
                "type": "WebApp",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.cloningInfo.sourceWebAppId"
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "Sites_GetSite"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "Sites_CreateOrUpdateSite"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "Sites_DeleteSite"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/sites",
                "operationId": "Global_GetAllSites"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.hostNames",
            "properties.repositorySiteName",
            "properties.usageState",
            "properties.enabledHostNames",
            "properties.availabilityState",
            "properties.hostNameSslStates",
            "properties.serverFarmId",
            "properties.lastModifiedTimeUtc",
            "properties.siteConfig.properties.publishingPassword",
            "properties.siteConfig.properties.autoHealRules.triggers.statusCodes",
            "properties.trafficManagerHostNames",
            "properties.premiumAppDeployed",
            "properties.targetSwapSlot",
            "properties.hostingEnvironmentProfile.id",
            "properties.outboundIpAddresses",
            "properties.cloningInfo.correlationId",
            "properties.cloningInfo.sourceWebAppId",
            "properties.cloningInfo.trafficManagerProfileId",
            "properties.resourceGroup",
            "properties.isDefaultContainer",
            "properties.defaultHostName"
        ],
        "pickProperties": [
            "properties.name",
            "properties.enabled",
            "properties,siteConfig,name.properties,siteConfig,kind.properties,siteConfig,location.properties,siteConfig,type",
            "properties.scmSiteAlsoStopped",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.microService",
            "properties.gatewaySiteName",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.enabled",
            "properties,siteConfig,name.properties,siteConfig,kind.properties,siteConfig,location.properties,siteConfig,type",
            "properties.scmSiteAlsoStopped",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.microService",
            "properties.gatewaySiteName",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName"
        ],
        "environmentVariables": [
            {
                "path": "properties.siteConfig.properties.publishingPassword",
                "suffix": "PUBLISHING_PASSWORD"
            }
        ]
    },
    {
        "type": "SiteBackupStatus",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}",
                "operationId": "Sites_GetSiteBackupStatus"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}",
                "operationId": "Sites_DeleteBackup"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups",
                "operationId": "Sites_ListSiteBackups"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.status",
            "properties.correlationId"
        ],
        "pickProperties": [
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases[].databaseType",
            "properties.databases[].name",
            "properties.databases[].connectionStringName",
            "properties.databases[].connectionString",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.websiteSizeInBytes"
        ],
        "pickPropertiesCreate": [
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases[].databaseType",
            "properties.databases[].name",
            "properties.databases[].connectionStringName",
            "properties.databases[].connectionString",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.websiteSizeInBytes"
        ]
    },
    {
        "type": "SiteBackupStatusSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}",
                "operationId": "Sites_GetSiteBackupStatusSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}",
                "operationId": "Sites_DeleteBackupSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups",
                "operationId": "Sites_ListSiteBackupsSlot"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.status",
            "properties.correlationId"
        ],
        "pickProperties": [
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases[].databaseType",
            "properties.databases[].name",
            "properties.databases[].connectionStringName",
            "properties.databases[].connectionString",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.websiteSizeInBytes"
        ],
        "pickPropertiesCreate": [
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases[].databaseType",
            "properties.databases[].name",
            "properties.databases[].connectionStringName",
            "properties.databases[].connectionString",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.websiteSizeInBytes"
        ]
    },
    {
        "type": "SiteConfig",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "Sites_GetSiteConfig"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "Sites_CreateOrUpdateSiteConfig"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "Sites_UpdateSiteConfig"
            }
        },
        "omitProperties": [
            "properties.publishingPassword",
            "properties.autoHealRules.triggers.statusCodes"
        ],
        "pickProperties": [
            "properties.numberOfWorkers",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings[].name",
            "properties.appSettings[].value",
            "properties.metadata[].name",
            "properties.metadata[].value",
            "properties.connectionStrings[].name",
            "properties.connectionStrings[].connectionString",
            "properties.connectionStrings[].type",
            "properties.handlerMappings[].extension",
            "properties.handlerMappings[].scriptProcessor",
            "properties.handlerMappings[].arguments",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications[].virtualPath",
            "properties.virtualApplications[].physicalPath",
            "properties.virtualApplications[].preloadEnabled",
            "properties.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules[].actionHostName",
            "properties.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.experiments.rampUpRules[].name",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.ipSecurityRestrictions[].ipAddress",
            "properties.ipSecurityRestrictions[].subnetMask"
        ],
        "pickPropertiesCreate": [
            "properties.numberOfWorkers",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings[].name",
            "properties.appSettings[].value",
            "properties.metadata[].name",
            "properties.metadata[].value",
            "properties.connectionStrings[].name",
            "properties.connectionStrings[].connectionString",
            "properties.connectionStrings[].type",
            "properties.handlerMappings[].extension",
            "properties.handlerMappings[].scriptProcessor",
            "properties.handlerMappings[].arguments",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications[].virtualPath",
            "properties.virtualApplications[].physicalPath",
            "properties.virtualApplications[].preloadEnabled",
            "properties.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules[].actionHostName",
            "properties.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.experiments.rampUpRules[].name",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.ipSecurityRestrictions[].ipAddress",
            "properties.ipSecurityRestrictions[].subnetMask"
        ],
        "environmentVariables": [
            {
                "path": "properties.publishingPassword",
                "suffix": "PUBLISHING_PASSWORD"
            }
        ]
    },
    {
        "type": "SiteConfigSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "Sites_GetSiteConfigSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "Sites_CreateOrUpdateSiteConfigSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "Sites_UpdateSiteConfigSlot"
            }
        },
        "omitProperties": [
            "properties.publishingPassword",
            "properties.autoHealRules.triggers.statusCodes"
        ],
        "pickProperties": [
            "properties.numberOfWorkers",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings[].name",
            "properties.appSettings[].value",
            "properties.metadata[].name",
            "properties.metadata[].value",
            "properties.connectionStrings[].name",
            "properties.connectionStrings[].connectionString",
            "properties.connectionStrings[].type",
            "properties.handlerMappings[].extension",
            "properties.handlerMappings[].scriptProcessor",
            "properties.handlerMappings[].arguments",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications[].virtualPath",
            "properties.virtualApplications[].physicalPath",
            "properties.virtualApplications[].preloadEnabled",
            "properties.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules[].actionHostName",
            "properties.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.experiments.rampUpRules[].name",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.ipSecurityRestrictions[].ipAddress",
            "properties.ipSecurityRestrictions[].subnetMask"
        ],
        "pickPropertiesCreate": [
            "properties.numberOfWorkers",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings[].name",
            "properties.appSettings[].value",
            "properties.metadata[].name",
            "properties.metadata[].value",
            "properties.connectionStrings[].name",
            "properties.connectionStrings[].connectionString",
            "properties.connectionStrings[].type",
            "properties.handlerMappings[].extension",
            "properties.handlerMappings[].scriptProcessor",
            "properties.handlerMappings[].arguments",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications[].virtualPath",
            "properties.virtualApplications[].physicalPath",
            "properties.virtualApplications[].preloadEnabled",
            "properties.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules[].actionHostName",
            "properties.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.experiments.rampUpRules[].name",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.ipSecurityRestrictions[].ipAddress",
            "properties.ipSecurityRestrictions[].subnetMask"
        ],
        "environmentVariables": [
            {
                "path": "properties.publishingPassword",
                "suffix": "PUBLISHING_PASSWORD"
            }
        ]
    },
    {
        "type": "SiteDeployment",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "Sites_GetDeployment"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "Sites_CreateDeployment"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "Sites_DeleteDeployment"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments",
                "operationId": "Sites_GetDeployments"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.status"
        ],
        "pickProperties": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ],
        "pickPropertiesCreate": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ]
    },
    {
        "type": "SiteDeploymentSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "Sites_GetDeploymentSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "Sites_CreateDeploymentSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "Sites_DeleteDeploymentSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments",
                "operationId": "Sites_GetDeploymentsSlot"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.status"
        ],
        "pickProperties": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ],
        "pickPropertiesCreate": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ]
    },
    {
        "type": "SiteHostNameBinding",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "domain": {
                "type": "Domain",
                "group": "DomainRegistration",
                "createOnly": true,
                "pathId": "properties.domainId"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "Sites_GetSiteHostNameBinding"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "Sites_CreateOrUpdateSiteHostNameBinding"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "Sites_DeleteSiteHostNameBinding"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings",
                "operationId": "Sites_GetSiteHostNameBindings"
            }
        },
        "omitProperties": [
            "properties.domainId"
        ],
        "pickProperties": [
            "properties.name",
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType"
        ]
    },
    {
        "type": "SiteHostNameBindingSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "domain": {
                "type": "Domain",
                "group": "DomainRegistration",
                "createOnly": true,
                "pathId": "properties.domainId"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "Sites_GetSiteHostNameBindingSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "Sites_CreateOrUpdateSiteHostNameBindingSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "Sites_DeleteSiteHostNameBindingSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings",
                "operationId": "Sites_GetSiteHostNameBindingsSlot"
            }
        },
        "omitProperties": [
            "properties.domainId"
        ],
        "pickProperties": [
            "properties.name",
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType"
        ]
    },
    {
        "type": "SiteLogsConfig",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs",
                "operationId": "Sites_GetSiteLogsConfig"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs",
                "operationId": "Sites_UpdateSiteLogsConfig"
            }
        },
        "pickProperties": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "pickPropertiesCreate": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ]
    },
    {
        "type": "SiteLogsConfigSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs",
                "operationId": "Sites_GetSiteLogsConfigSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs",
                "operationId": "Sites_UpdateSiteLogsConfigSlot"
            }
        },
        "pickProperties": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "pickPropertiesCreate": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ]
    },
    {
        "type": "SitePremierAddOn",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_GetSitePremierAddOn"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_AddSitePremierAddOn"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_DeleteSitePremierAddOn"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons",
                "operationId": "Sites_ListSitePremierAddOns"
            }
        },
        "pickProperties": [],
        "pickPropertiesCreate": [
            "location",
            "plan.name",
            "plan.publisher",
            "plan.product",
            "plan.promotionCode",
            "plan.version",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ]
    },
    {
        "type": "SitePremierAddOnSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_GetSitePremierAddOnSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_AddSitePremierAddOnSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "Sites_DeleteSitePremierAddOnSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons",
                "operationId": "Sites_ListSitePremierAddOnsSlot"
            }
        },
        "pickProperties": [],
        "pickPropertiesCreate": [
            "location",
            "plan.name",
            "plan.publisher",
            "plan.product",
            "plan.promotionCode",
            "plan.version",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity"
        ]
    },
    {
        "type": "SiteRelayServiceConnection",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "Sites_GetSiteRelayServiceConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "Sites_CreateOrUpdateSiteRelayServiceConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "Sites_DeleteSiteRelayServiceConnection"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "Sites_UpdateSiteRelayServiceConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection",
                "operationId": "Sites_ListSiteRelayServiceConnections"
            }
        },
        "pickProperties": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ],
        "pickPropertiesCreate": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ]
    },
    {
        "type": "SiteRelayServiceConnectionSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "Sites_GetSiteRelayServiceConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "Sites_CreateOrUpdateSiteRelayServiceConnectionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "Sites_DeleteSiteRelayServiceConnectionSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "Sites_UpdateSiteRelayServiceConnectionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection",
                "operationId": "Sites_ListSiteRelayServiceConnectionsSlot"
            }
        },
        "pickProperties": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ],
        "pickPropertiesCreate": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ]
    },
    {
        "type": "SiteSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "serverFarm": {
                "type": "ServerFarm",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.serverFarmId"
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.hostingEnvironmentProfile.id"
            },
            "webApp": {
                "type": "WebApp",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.cloningInfo.sourceWebAppId"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "Sites_GetSiteSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "Sites_CreateOrUpdateSiteSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "Sites_DeleteSiteSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots",
                "operationId": "Sites_GetSiteSlots"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.hostNames",
            "properties.repositorySiteName",
            "properties.usageState",
            "properties.enabledHostNames",
            "properties.availabilityState",
            "properties.hostNameSslStates",
            "properties.serverFarmId",
            "properties.lastModifiedTimeUtc",
            "properties.siteConfig.properties.publishingPassword",
            "properties.siteConfig.properties.autoHealRules.triggers.statusCodes",
            "properties.trafficManagerHostNames",
            "properties.premiumAppDeployed",
            "properties.targetSwapSlot",
            "properties.hostingEnvironmentProfile.id",
            "properties.outboundIpAddresses",
            "properties.cloningInfo.correlationId",
            "properties.cloningInfo.sourceWebAppId",
            "properties.cloningInfo.trafficManagerProfileId",
            "properties.resourceGroup",
            "properties.isDefaultContainer",
            "properties.defaultHostName"
        ],
        "pickProperties": [
            "properties.name",
            "properties.enabled",
            "properties,siteConfig,name.properties,siteConfig,kind.properties,siteConfig,location.properties,siteConfig,type",
            "properties.scmSiteAlsoStopped",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.microService",
            "properties.gatewaySiteName",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName"
        ],
        "pickPropertiesCreate": [
            "properties.name",
            "properties.enabled",
            "properties,siteConfig,name.properties,siteConfig,kind.properties,siteConfig,location.properties,siteConfig,type",
            "properties.scmSiteAlsoStopped",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.microService",
            "properties.gatewaySiteName",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName"
        ],
        "environmentVariables": [
            {
                "path": "properties.siteConfig.properties.publishingPassword",
                "suffix": "PUBLISHING_PASSWORD"
            }
        ]
    },
    {
        "type": "SiteSlotConfigNames",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames",
                "operationId": "Sites_GetSlotConfigNames"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames",
                "operationId": "Sites_UpdateSlotConfigNames"
            }
        },
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "SiteSourceControl",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "Sites_GetSiteSourceControl"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "Sites_CreateOrUpdateSiteSourceControl"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "Sites_DeleteSiteSourceControl"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "Sites_UpdateSiteSourceControl"
            }
        },
        "pickProperties": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial"
        ],
        "pickPropertiesCreate": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial"
        ]
    },
    {
        "type": "SiteSourceControlSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "Sites_GetSiteSourceControlSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "Sites_CreateOrUpdateSiteSourceControlSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "Sites_DeleteSiteSourceControlSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "Sites_UpdateSiteSourceControlSlot"
            }
        },
        "pickProperties": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial"
        ],
        "pickPropertiesCreate": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial"
        ]
    },
    {
        "type": "SiteVNETConnection",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_GetSiteVNETConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_CreateOrUpdateSiteVNETConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_DeleteSiteVNETConnection"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_UpdateSiteVNETConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections",
                "operationId": "Sites_GetSiteVNETConnections"
            }
        },
        "omitProperties": [
            "properties.vnetResourceId"
        ],
        "pickProperties": [
            "properties.certThumbprint",
            "properties.certBlob",
            "properties.routes[].properties.name",
            "properties.routes[].properties.startAddress",
            "properties.routes[].properties.endAddress",
            "properties.routes[].properties.routeType",
            "properties.resyncRequired",
            "properties.dnsServers"
        ],
        "pickPropertiesCreate": [
            "properties.certThumbprint",
            "properties.certBlob",
            "properties.routes[].properties.name",
            "properties.routes[].properties.startAddress",
            "properties.routes[].properties.endAddress",
            "properties.routes[].properties.routeType",
            "properties.resyncRequired",
            "properties.dnsServers"
        ]
    },
    {
        "type": "SiteVNETConnectionSlot",
        "group": "Web",
        "apiVersion": "2015-08-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_GetSiteVNETConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_CreateOrUpdateSiteVNETConnectionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_DeleteSiteVNETConnectionSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "Sites_UpdateSiteVNETConnectionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections",
                "operationId": "Sites_GetSiteVNETConnectionsSlot"
            }
        },
        "omitProperties": [
            "properties.vnetResourceId"
        ],
        "pickProperties": [
            "properties.certThumbprint",
            "properties.certBlob",
            "properties.routes[].properties.name",
            "properties.routes[].properties.startAddress",
            "properties.routes[].properties.endAddress",
            "properties.routes[].properties.routeType",
            "properties.resyncRequired",
            "properties.dnsServers"
        ],
        "pickPropertiesCreate": [
            "properties.certThumbprint",
            "properties.certBlob",
            "properties.routes[].properties.name",
            "properties.routes[].properties.startAddress",
            "properties.routes[].properties.endAddress",
            "properties.routes[].properties.routeType",
            "properties.resyncRequired",
            "properties.dnsServers"
        ]
    },
    {
        "type": "StaticSite",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "managedIdentities": {
                "type": "UserAssignedIdentity",
                "group": "ManagedIdentity",
                "createOnly": true,
                "list": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
                "operationId": "StaticSites_GetStaticSite"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
                "operationId": "StaticSites_CreateOrUpdateStaticSite"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
                "operationId": "StaticSites_DeleteStaticSite"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}",
                "operationId": "StaticSites_UpdateStaticSite"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/staticSites",
                "operationId": "StaticSites_List"
            }
        },
        "omitProperties": [
            "properties.defaultHostname",
            "properties.customDomains",
            "properties.privateEndpointConnections",
            "properties.contentDistributionEndpoint",
            "properties.keyVaultReferenceIdentity",
            "properties.userProvidedFunctionApps",
            "properties.enterpriseGradeCdnStatus",
            "identity.tenantId",
            "identity.principalId"
        ],
        "pickProperties": [
            "properties.repositoryUrl",
            "properties.branch",
            "properties.repositoryToken",
            "properties.buildProperties.appLocation",
            "properties.buildProperties.apiLocation",
            "properties.buildProperties.appArtifactLocation",
            "properties.buildProperties.outputLocation",
            "properties.buildProperties.appBuildCommand",
            "properties.buildProperties.apiBuildCommand",
            "properties.buildProperties.skipGithubActionWorkflowGeneration",
            "properties.buildProperties.githubActionSecretNameOverride",
            "properties.stagingEnvironmentPolicy",
            "properties.allowConfigFileUpdates",
            "properties.templateProperties.templateRepositoryUrl",
            "properties.templateProperties.owner",
            "properties.templateProperties.repositoryName",
            "properties.templateProperties.description",
            "properties.templateProperties.isPrivate",
            "properties.provider",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.capabilities[].name",
            "sku.capabilities[].value",
            "sku.capabilities[].reason",
            "identity.type"
        ],
        "pickPropertiesCreate": [
            "properties.repositoryUrl",
            "properties.branch",
            "properties.repositoryToken",
            "properties.buildProperties.appLocation",
            "properties.buildProperties.apiLocation",
            "properties.buildProperties.appArtifactLocation",
            "properties.buildProperties.outputLocation",
            "properties.buildProperties.appBuildCommand",
            "properties.buildProperties.apiBuildCommand",
            "properties.buildProperties.skipGithubActionWorkflowGeneration",
            "properties.buildProperties.githubActionSecretNameOverride",
            "properties.stagingEnvironmentPolicy",
            "properties.allowConfigFileUpdates",
            "properties.templateProperties.templateRepositoryUrl",
            "properties.templateProperties.owner",
            "properties.templateProperties.repositoryName",
            "properties.templateProperties.description",
            "properties.templateProperties.isPrivate",
            "properties.provider",
            "sku.name",
            "sku.tier",
            "sku.size",
            "sku.family",
            "sku.capacity",
            "sku.skuCapacity.minimum",
            "sku.skuCapacity.maximum",
            "sku.skuCapacity.elasticMaximum",
            "sku.skuCapacity.default",
            "sku.skuCapacity.scaleType",
            "sku.capabilities[].name",
            "sku.capabilities[].value",
            "sku.capabilities[].reason",
            "identity.type"
        ]
    },
    {
        "type": "StaticSiteBuild",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "StaticSite",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}",
                "operationId": "StaticSites_GetStaticSiteBuild"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}",
                "operationId": "StaticSites_DeleteStaticSiteBuild"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds",
                "operationId": "StaticSites_GetStaticSiteBuilds"
            }
        },
        "omitProperties": [
            "properties.buildId",
            "properties.sourceBranch",
            "properties.pullRequestTitle",
            "properties.hostname",
            "properties.createdTimeUtc",
            "properties.lastUpdatedOn",
            "properties.status",
            "properties.userProvidedFunctionApps"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "StaticSiteCustomDomain",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "StaticSite",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}",
                "operationId": "StaticSites_GetStaticSiteCustomDomain"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}",
                "operationId": "StaticSites_CreateOrUpdateStaticSiteCustomDomain"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains/{domainName}",
                "operationId": "StaticSites_DeleteStaticSiteCustomDomain"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/customDomains",
                "operationId": "StaticSites_ListStaticSiteCustomDomains"
            }
        },
        "omitProperties": [
            "properties.domainName",
            "properties.createdOn",
            "properties.status",
            "properties.validationToken",
            "properties.errorMessage"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": [
            "properties.validationMethod"
        ]
    },
    {
        "type": "StaticSitePrivateEndpointConnection",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "StaticSite",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "StaticSites_GetPrivateEndpointConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "StaticSites_ApproveOrRejectPrivateEndpointConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "StaticSites_DeletePrivateEndpointConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/privateEndpointConnections",
                "operationId": "StaticSites_GetPrivateEndpointConnectionList"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "UserProvidedFunctionAppForStaticSite",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "userProvidedFunctionAppForStaticSiteBuild": {
                "type": "UserProvidedFunctionAppForStaticSiteBuild",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.functionAppResourceId"
            },
            "name": {
                "type": "StaticSite",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_GetUserProvidedFunctionAppForStaticSite"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_RegisterUserProvidedFunctionAppWithStaticSite"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_DetachUserProvidedFunctionAppFromStaticSite"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/userProvidedFunctionApps",
                "operationId": "StaticSites_GetUserProvidedFunctionAppsForStaticSite"
            }
        },
        "omitProperties": [
            "properties.functionAppResourceId",
            "properties.createdOn"
        ],
        "pickProperties": [
            "properties.functionAppRegion"
        ],
        "pickPropertiesCreate": [
            "properties.functionAppRegion"
        ]
    },
    {
        "type": "UserProvidedFunctionAppForStaticSiteBuild",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "userProvidedFunctionAppForStaticSite": {
                "type": "UserProvidedFunctionAppForStaticSite",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.functionAppResourceId"
            },
            "name": {
                "type": "StaticSite",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "environment": {
                "type": "StaticSiteBuild",
                "group": "Web",
                "name": "environmentName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_GetUserProvidedFunctionAppForStaticSiteBuild"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_RegisterUserProvidedFunctionAppWithStaticSiteBuild"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps/{functionAppName}",
                "operationId": "StaticSites_DetachUserProvidedFunctionAppFromStaticSiteBuild"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/staticSites/{name}/builds/{environmentName}/userProvidedFunctionApps",
                "operationId": "StaticSites_GetUserProvidedFunctionAppsForStaticSiteBuild"
            }
        },
        "omitProperties": [
            "properties.functionAppResourceId",
            "properties.createdOn"
        ],
        "pickProperties": [
            "properties.functionAppRegion"
        ],
        "pickPropertiesCreate": [
            "properties.functionAppRegion"
        ]
    },
    {
        "type": "WebApp",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "managedIdentities": {
                "type": "UserAssignedIdentity",
                "group": "ManagedIdentity",
                "createOnly": true,
                "list": true
            },
            "serverFarm": {
                "type": "ServerFarm",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.serverFarmId"
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.hostingEnvironmentProfile.id"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "WebApps_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "WebApps_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "WebApps_Delete"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}",
                "operationId": "WebApps_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Web/sites",
                "operationId": "WebApps_List"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.hostNames",
            "properties.repositorySiteName",
            "properties.usageState",
            "properties.enabledHostNames",
            "properties.availabilityState",
            "properties.hostNameSslStates",
            "properties.serverFarmId",
            "properties.lastModifiedTimeUtc",
            "properties.siteConfig.acrUserManagedIdentityID",
            "properties.siteConfig.machineKey",
            "properties.siteConfig.autoHealRules.triggers.statusCodes",
            "properties.siteConfig.autoHealRules.triggers.statusCodesRange",
            "properties.siteConfig.apiManagementConfig.id",
            "properties.siteConfig.managedServiceIdentityId",
            "properties.siteConfig.xManagedServiceIdentityId",
            "properties.siteConfig.ftpsState",
            "properties.trafficManagerHostNames",
            "properties.targetSwapSlot",
            "properties.hostingEnvironmentProfile.id",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.customDomainVerificationId",
            "properties.outboundIpAddresses",
            "properties.possibleOutboundIpAddresses",
            "properties.suspendedTill",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo.correlationId",
            "properties.cloningInfo.sourceWebAppId",
            "properties.cloningInfo.trafficManagerProfileId",
            "properties.resourceGroup",
            "properties.isDefaultContainer",
            "properties.defaultHostName",
            "properties.slotSwapStatus",
            "properties.inProgressOperationId",
            "properties.virtualNetworkSubnetId",
            "identity.tenantId",
            "identity.principalId",
            "extendedLocation.type"
        ],
        "pickProperties": [
            "properties.enabled",
            "properties.reserved",
            "properties.isXenon",
            "properties.hyperV",
            "properties.siteConfig.numberOfWorkers",
            "properties.siteConfig.netFrameworkVersion",
            "properties.siteConfig.phpVersion",
            "properties.siteConfig.pythonVersion",
            "properties.siteConfig.nodeVersion",
            "properties.siteConfig.powerShellVersion",
            "properties.siteConfig.linuxFxVersion",
            "properties.siteConfig.windowsFxVersion",
            "properties.siteConfig.requestTracingEnabled",
            "properties.siteConfig.requestTracingExpirationTime",
            "properties.siteConfig.remoteDebuggingEnabled",
            "properties.siteConfig.remoteDebuggingVersion",
            "properties.siteConfig.httpLoggingEnabled",
            "properties.siteConfig.acrUseManagedIdentityCreds",
            "properties.siteConfig.logsDirectorySizeLimit",
            "properties.siteConfig.detailedErrorLoggingEnabled",
            "properties.siteConfig.publishingUsername",
            "properties.siteConfig.appSettings[].name",
            "properties.siteConfig.appSettings[].value",
            "properties.siteConfig.connectionStrings[].name",
            "properties.siteConfig.connectionStrings[].connectionString",
            "properties.siteConfig.connectionStrings[].type",
            "properties.siteConfig.handlerMappings[].extension",
            "properties.siteConfig.handlerMappings[].scriptProcessor",
            "properties.siteConfig.handlerMappings[].arguments",
            "properties.siteConfig.documentRoot",
            "properties.siteConfig.scmType",
            "properties.siteConfig.use32BitWorkerProcess",
            "properties.siteConfig.webSocketsEnabled",
            "properties.siteConfig.alwaysOn",
            "properties.siteConfig.javaVersion",
            "properties.siteConfig.javaContainer",
            "properties.siteConfig.javaContainerVersion",
            "properties.siteConfig.appCommandLine",
            "properties.siteConfig.managedPipelineMode",
            "properties.siteConfig.virtualApplications[].virtualPath",
            "properties.siteConfig.virtualApplications[].physicalPath",
            "properties.siteConfig.virtualApplications[].preloadEnabled",
            "properties.siteConfig.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.siteConfig.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.siteConfig.loadBalancing",
            "properties.siteConfig.experiments.rampUpRules[].actionHostName",
            "properties.siteConfig.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.siteConfig.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.siteConfig.experiments.rampUpRules[].name",
            "properties.siteConfig.limits.maxMemoryInMb",
            "properties.siteConfig.limits.maxDiskSizeInMb",
            "properties.siteConfig.autoHealEnabled",
            "properties.siteConfig.autoHealRules.triggers.requests.count",
            "properties.siteConfig.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.path",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].path",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].count",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].timeInterval",
            "properties.siteConfig.autoHealRules.actions.actionType",
            "properties.siteConfig.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.tracingOptions",
            "properties.siteConfig.vnetName",
            "properties.siteConfig.vnetRouteAllEnabled",
            "properties.siteConfig.vnetPrivatePortsCount",
            "properties.siteConfig.cors.supportCredentials",
            "properties,siteConfig,push,kind",
            "properties.siteConfig.apiDefinition.url",
            "properties.siteConfig.autoSwapSlotName",
            "properties.siteConfig.localMySqlEnabled",
            "properties.siteConfig.keyVaultReferenceIdentity",
            "properties.siteConfig.ipSecurityRestrictions[].ipAddress",
            "properties.siteConfig.ipSecurityRestrictions[].subnetMask",
            "properties.siteConfig.ipSecurityRestrictions[].vnetTrafficTag",
            "properties.siteConfig.ipSecurityRestrictions[].subnetTrafficTag",
            "properties.siteConfig.ipSecurityRestrictions[].action",
            "properties.siteConfig.ipSecurityRestrictions[].tag",
            "properties.siteConfig.ipSecurityRestrictions[].priority",
            "properties.siteConfig.ipSecurityRestrictions[].name",
            "properties.siteConfig.ipSecurityRestrictions[].description",
            "properties.siteConfig.scmIpSecurityRestrictions[].ipAddress",
            "properties.siteConfig.scmIpSecurityRestrictions[].subnetMask",
            "properties.siteConfig.scmIpSecurityRestrictions[].vnetTrafficTag",
            "properties.siteConfig.scmIpSecurityRestrictions[].subnetTrafficTag",
            "properties.siteConfig.scmIpSecurityRestrictions[].action",
            "properties.siteConfig.scmIpSecurityRestrictions[].tag",
            "properties.siteConfig.scmIpSecurityRestrictions[].priority",
            "properties.siteConfig.scmIpSecurityRestrictions[].name",
            "properties.siteConfig.scmIpSecurityRestrictions[].description",
            "properties.siteConfig.scmIpSecurityRestrictionsUseMain",
            "properties.siteConfig.http20Enabled",
            "properties.siteConfig.minTlsVersion",
            "properties.siteConfig.scmMinTlsVersion",
            "properties.siteConfig.preWarmedInstanceCount",
            "properties.siteConfig.functionAppScaleLimit",
            "properties.siteConfig.healthCheckPath",
            "properties.siteConfig.functionsRuntimeScaleMonitoringEnabled",
            "properties.siteConfig.websiteTimeZone",
            "properties.siteConfig.minimumElasticInstanceCount",
            "properties.siteConfig.azureStorageAccounts.type",
            "properties.siteConfig.azureStorageAccounts.accountName",
            "properties.siteConfig.azureStorageAccounts.shareName",
            "properties.siteConfig.azureStorageAccounts.mountPath",
            "properties.siteConfig.publicNetworkAccess",
            "properties.scmSiteAlsoStopped",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.clientCertMode",
            "properties.clientCertExclusionPaths",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.dailyMemoryTimeQuota",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.sourceWebAppLocation",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName",
            "properties.httpsOnly",
            "properties.redundancyMode",
            "properties.storageAccountRequired",
            "properties.keyVaultReferenceIdentity",
            "identity.type",
            "extendedLocation.name"
        ],
        "pickPropertiesCreate": [
            "properties.enabled",
            "properties.reserved",
            "properties.isXenon",
            "properties.hyperV",
            "properties.siteConfig.numberOfWorkers",
            "properties.siteConfig.netFrameworkVersion",
            "properties.siteConfig.phpVersion",
            "properties.siteConfig.pythonVersion",
            "properties.siteConfig.nodeVersion",
            "properties.siteConfig.powerShellVersion",
            "properties.siteConfig.linuxFxVersion",
            "properties.siteConfig.windowsFxVersion",
            "properties.siteConfig.requestTracingEnabled",
            "properties.siteConfig.requestTracingExpirationTime",
            "properties.siteConfig.remoteDebuggingEnabled",
            "properties.siteConfig.remoteDebuggingVersion",
            "properties.siteConfig.httpLoggingEnabled",
            "properties.siteConfig.acrUseManagedIdentityCreds",
            "properties.siteConfig.logsDirectorySizeLimit",
            "properties.siteConfig.detailedErrorLoggingEnabled",
            "properties.siteConfig.publishingUsername",
            "properties.siteConfig.appSettings[].name",
            "properties.siteConfig.appSettings[].value",
            "properties.siteConfig.connectionStrings[].name",
            "properties.siteConfig.connectionStrings[].connectionString",
            "properties.siteConfig.connectionStrings[].type",
            "properties.siteConfig.handlerMappings[].extension",
            "properties.siteConfig.handlerMappings[].scriptProcessor",
            "properties.siteConfig.handlerMappings[].arguments",
            "properties.siteConfig.documentRoot",
            "properties.siteConfig.scmType",
            "properties.siteConfig.use32BitWorkerProcess",
            "properties.siteConfig.webSocketsEnabled",
            "properties.siteConfig.alwaysOn",
            "properties.siteConfig.javaVersion",
            "properties.siteConfig.javaContainer",
            "properties.siteConfig.javaContainerVersion",
            "properties.siteConfig.appCommandLine",
            "properties.siteConfig.managedPipelineMode",
            "properties.siteConfig.virtualApplications[].virtualPath",
            "properties.siteConfig.virtualApplications[].physicalPath",
            "properties.siteConfig.virtualApplications[].preloadEnabled",
            "properties.siteConfig.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.siteConfig.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.siteConfig.loadBalancing",
            "properties.siteConfig.experiments.rampUpRules[].actionHostName",
            "properties.siteConfig.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.siteConfig.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.siteConfig.experiments.rampUpRules[].name",
            "properties.siteConfig.limits.maxMemoryInMb",
            "properties.siteConfig.limits.maxDiskSizeInMb",
            "properties.siteConfig.autoHealEnabled",
            "properties.siteConfig.autoHealRules.triggers.requests.count",
            "properties.siteConfig.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.path",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].path",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].count",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].timeInterval",
            "properties.siteConfig.autoHealRules.actions.actionType",
            "properties.siteConfig.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.tracingOptions",
            "properties.siteConfig.vnetName",
            "properties.siteConfig.vnetRouteAllEnabled",
            "properties.siteConfig.vnetPrivatePortsCount",
            "properties.siteConfig.cors.supportCredentials",
            "properties,siteConfig,push,kind",
            "properties.siteConfig.apiDefinition.url",
            "properties.siteConfig.autoSwapSlotName",
            "properties.siteConfig.localMySqlEnabled",
            "properties.siteConfig.keyVaultReferenceIdentity",
            "properties.siteConfig.ipSecurityRestrictions[].ipAddress",
            "properties.siteConfig.ipSecurityRestrictions[].subnetMask",
            "properties.siteConfig.ipSecurityRestrictions[].vnetTrafficTag",
            "properties.siteConfig.ipSecurityRestrictions[].subnetTrafficTag",
            "properties.siteConfig.ipSecurityRestrictions[].action",
            "properties.siteConfig.ipSecurityRestrictions[].tag",
            "properties.siteConfig.ipSecurityRestrictions[].priority",
            "properties.siteConfig.ipSecurityRestrictions[].name",
            "properties.siteConfig.ipSecurityRestrictions[].description",
            "properties.siteConfig.scmIpSecurityRestrictions[].ipAddress",
            "properties.siteConfig.scmIpSecurityRestrictions[].subnetMask",
            "properties.siteConfig.scmIpSecurityRestrictions[].vnetTrafficTag",
            "properties.siteConfig.scmIpSecurityRestrictions[].subnetTrafficTag",
            "properties.siteConfig.scmIpSecurityRestrictions[].action",
            "properties.siteConfig.scmIpSecurityRestrictions[].tag",
            "properties.siteConfig.scmIpSecurityRestrictions[].priority",
            "properties.siteConfig.scmIpSecurityRestrictions[].name",
            "properties.siteConfig.scmIpSecurityRestrictions[].description",
            "properties.siteConfig.scmIpSecurityRestrictionsUseMain",
            "properties.siteConfig.http20Enabled",
            "properties.siteConfig.minTlsVersion",
            "properties.siteConfig.scmMinTlsVersion",
            "properties.siteConfig.preWarmedInstanceCount",
            "properties.siteConfig.functionAppScaleLimit",
            "properties.siteConfig.healthCheckPath",
            "properties.siteConfig.functionsRuntimeScaleMonitoringEnabled",
            "properties.siteConfig.websiteTimeZone",
            "properties.siteConfig.minimumElasticInstanceCount",
            "properties.siteConfig.azureStorageAccounts.type",
            "properties.siteConfig.azureStorageAccounts.accountName",
            "properties.siteConfig.azureStorageAccounts.shareName",
            "properties.siteConfig.azureStorageAccounts.mountPath",
            "properties.siteConfig.publicNetworkAccess",
            "properties.scmSiteAlsoStopped",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.clientCertMode",
            "properties.clientCertExclusionPaths",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.dailyMemoryTimeQuota",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.sourceWebAppLocation",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName",
            "properties.httpsOnly",
            "properties.redundancyMode",
            "properties.storageAccountRequired",
            "properties.keyVaultReferenceIdentity",
            "identity.type",
            "extendedLocation.name"
        ],
        "propertiesDefault": {
            "properties": {
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "netFrameworkVersion": "v4.6",
                    "localMySqlEnabled": false,
                    "http20Enabled": true
                },
                "scmSiteAlsoStopped": false
            }
        }
    },
    {
        "type": "WebAppAuthSettingsV2WithoutSecrets",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettingsV2",
                "operationId": "WebApps_GetAuthSettingsV2WithoutSecrets"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettingsV2",
                "operationId": "WebApps_UpdateAuthSettingsV2"
            }
        },
        "omitProperties": [
            "properties.identityProviders.azureActiveDirectory.registration.clientId",
            "properties.identityProviders.facebook.registration.appId",
            "properties.identityProviders.gitHub.registration.clientId",
            "properties.identityProviders.google.registration.clientId",
            "properties.identityProviders.legacyMicrosoftAccount.registration.clientId",
            "properties.identityProviders.apple.registration.clientId",
            "properties.identityProviders.azureStaticWebApps.registration.clientId"
        ],
        "pickProperties": [
            "properties.platform.enabled",
            "properties.platform.runtimeVersion",
            "properties.platform.configFilePath",
            "properties.globalValidation.requireAuthentication",
            "properties.globalValidation.unauthenticatedClientAction",
            "properties.globalValidation.redirectToProvider",
            "properties.identityProviders.azureActiveDirectory.enabled",
            "properties.identityProviders.azureActiveDirectory.registration.openIdIssuer",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretSettingName",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateThumbprint",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateSubjectAlternativeName",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateIssuer",
            "properties.identityProviders.azureActiveDirectory.login.disableWWWAuthenticate",
            "properties.identityProviders.azureActiveDirectory.isAutoProvisioned",
            "properties.identityProviders.facebook.enabled",
            "properties.identityProviders.facebook.registration.appSecretSettingName",
            "properties.identityProviders.facebook.graphApiVersion",
            "properties.identityProviders.gitHub.enabled",
            "properties.identityProviders.gitHub.registration.clientSecretSettingName",
            "properties.identityProviders.google.enabled",
            "properties.identityProviders.google.registration.clientSecretSettingName",
            "properties.identityProviders.legacyMicrosoftAccount.enabled",
            "properties.identityProviders.legacyMicrosoftAccount.registration.clientSecretSettingName",
            "properties.identityProviders.twitter.enabled",
            "properties.identityProviders.twitter.registration.consumerKey",
            "properties.identityProviders.twitter.registration.consumerSecretSettingName",
            "properties.identityProviders.apple.enabled",
            "properties.identityProviders.apple.registration.clientSecretSettingName",
            "properties.identityProviders.azureStaticWebApps.enabled",
            "properties.identityProviders.customOpenIdConnectProviders.enabled",
            "properties.identityProviders.customOpenIdConnectProviders.registration.clientCredential.method",
            "properties.identityProviders.customOpenIdConnectProviders.registration.clientCredential.clientSecretSettingName",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.authorizationEndpoint",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.tokenEndpoint",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.issuer",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.certificationUri",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.wellKnownOpenIdConfiguration",
            "properties.identityProviders.customOpenIdConnectProviders.login.nameClaimType",
            "properties.login.routes.logoutEndpoint",
            "properties.login.tokenStore.enabled",
            "properties.login.tokenStore.fileSystem.directory",
            "properties.login.tokenStore.azureBlobStorage.sasUrlSettingName",
            "properties.login.preserveUrlFragmentsForLogins",
            "properties.login.cookieExpiration.convention",
            "properties.login.cookieExpiration.timeToExpiration",
            "properties.login.nonce.validateNonce",
            "properties.login.nonce.nonceExpirationInterval",
            "properties.httpSettings.requireHttps",
            "properties.httpSettings.routes.apiPrefix",
            "properties.httpSettings.forwardProxy.convention",
            "properties.httpSettings.forwardProxy.customHostHeaderName",
            "properties.httpSettings.forwardProxy.customProtoHeaderName"
        ],
        "pickPropertiesCreate": [
            "properties.platform.enabled",
            "properties.platform.runtimeVersion",
            "properties.platform.configFilePath",
            "properties.globalValidation.requireAuthentication",
            "properties.globalValidation.unauthenticatedClientAction",
            "properties.globalValidation.redirectToProvider",
            "properties.identityProviders.azureActiveDirectory.enabled",
            "properties.identityProviders.azureActiveDirectory.registration.openIdIssuer",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretSettingName",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateThumbprint",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateSubjectAlternativeName",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateIssuer",
            "properties.identityProviders.azureActiveDirectory.login.disableWWWAuthenticate",
            "properties.identityProviders.azureActiveDirectory.isAutoProvisioned",
            "properties.identityProviders.facebook.enabled",
            "properties.identityProviders.facebook.registration.appSecretSettingName",
            "properties.identityProviders.facebook.graphApiVersion",
            "properties.identityProviders.gitHub.enabled",
            "properties.identityProviders.gitHub.registration.clientSecretSettingName",
            "properties.identityProviders.google.enabled",
            "properties.identityProviders.google.registration.clientSecretSettingName",
            "properties.identityProviders.legacyMicrosoftAccount.enabled",
            "properties.identityProviders.legacyMicrosoftAccount.registration.clientSecretSettingName",
            "properties.identityProviders.twitter.enabled",
            "properties.identityProviders.twitter.registration.consumerKey",
            "properties.identityProviders.twitter.registration.consumerSecretSettingName",
            "properties.identityProviders.apple.enabled",
            "properties.identityProviders.apple.registration.clientSecretSettingName",
            "properties.identityProviders.azureStaticWebApps.enabled",
            "properties.identityProviders.customOpenIdConnectProviders.enabled",
            "properties.identityProviders.customOpenIdConnectProviders.registration.clientCredential.method",
            "properties.identityProviders.customOpenIdConnectProviders.registration.clientCredential.clientSecretSettingName",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.authorizationEndpoint",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.tokenEndpoint",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.issuer",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.certificationUri",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.wellKnownOpenIdConfiguration",
            "properties.identityProviders.customOpenIdConnectProviders.login.nameClaimType",
            "properties.login.routes.logoutEndpoint",
            "properties.login.tokenStore.enabled",
            "properties.login.tokenStore.fileSystem.directory",
            "properties.login.tokenStore.azureBlobStorage.sasUrlSettingName",
            "properties.login.preserveUrlFragmentsForLogins",
            "properties.login.cookieExpiration.convention",
            "properties.login.cookieExpiration.timeToExpiration",
            "properties.login.nonce.validateNonce",
            "properties.login.nonce.nonceExpirationInterval",
            "properties.httpSettings.requireHttps",
            "properties.httpSettings.routes.apiPrefix",
            "properties.httpSettings.forwardProxy.convention",
            "properties.httpSettings.forwardProxy.customHostHeaderName",
            "properties.httpSettings.forwardProxy.customProtoHeaderName"
        ]
    },
    {
        "type": "WebAppAuthSettingsV2WithoutSecretsSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettingsV2",
                "operationId": "WebApps_GetAuthSettingsV2WithoutSecretsSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettingsV2",
                "operationId": "WebApps_UpdateAuthSettingsV2Slot"
            }
        },
        "omitProperties": [
            "properties.identityProviders.azureActiveDirectory.registration.clientId",
            "properties.identityProviders.facebook.registration.appId",
            "properties.identityProviders.gitHub.registration.clientId",
            "properties.identityProviders.google.registration.clientId",
            "properties.identityProviders.legacyMicrosoftAccount.registration.clientId",
            "properties.identityProviders.apple.registration.clientId",
            "properties.identityProviders.azureStaticWebApps.registration.clientId"
        ],
        "pickProperties": [
            "properties.platform.enabled",
            "properties.platform.runtimeVersion",
            "properties.platform.configFilePath",
            "properties.globalValidation.requireAuthentication",
            "properties.globalValidation.unauthenticatedClientAction",
            "properties.globalValidation.redirectToProvider",
            "properties.identityProviders.azureActiveDirectory.enabled",
            "properties.identityProviders.azureActiveDirectory.registration.openIdIssuer",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretSettingName",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateThumbprint",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateSubjectAlternativeName",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateIssuer",
            "properties.identityProviders.azureActiveDirectory.login.disableWWWAuthenticate",
            "properties.identityProviders.azureActiveDirectory.isAutoProvisioned",
            "properties.identityProviders.facebook.enabled",
            "properties.identityProviders.facebook.registration.appSecretSettingName",
            "properties.identityProviders.facebook.graphApiVersion",
            "properties.identityProviders.gitHub.enabled",
            "properties.identityProviders.gitHub.registration.clientSecretSettingName",
            "properties.identityProviders.google.enabled",
            "properties.identityProviders.google.registration.clientSecretSettingName",
            "properties.identityProviders.legacyMicrosoftAccount.enabled",
            "properties.identityProviders.legacyMicrosoftAccount.registration.clientSecretSettingName",
            "properties.identityProviders.twitter.enabled",
            "properties.identityProviders.twitter.registration.consumerKey",
            "properties.identityProviders.twitter.registration.consumerSecretSettingName",
            "properties.identityProviders.apple.enabled",
            "properties.identityProviders.apple.registration.clientSecretSettingName",
            "properties.identityProviders.azureStaticWebApps.enabled",
            "properties.identityProviders.customOpenIdConnectProviders.enabled",
            "properties.identityProviders.customOpenIdConnectProviders.registration.clientCredential.method",
            "properties.identityProviders.customOpenIdConnectProviders.registration.clientCredential.clientSecretSettingName",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.authorizationEndpoint",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.tokenEndpoint",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.issuer",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.certificationUri",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.wellKnownOpenIdConfiguration",
            "properties.identityProviders.customOpenIdConnectProviders.login.nameClaimType",
            "properties.login.routes.logoutEndpoint",
            "properties.login.tokenStore.enabled",
            "properties.login.tokenStore.fileSystem.directory",
            "properties.login.tokenStore.azureBlobStorage.sasUrlSettingName",
            "properties.login.preserveUrlFragmentsForLogins",
            "properties.login.cookieExpiration.convention",
            "properties.login.cookieExpiration.timeToExpiration",
            "properties.login.nonce.validateNonce",
            "properties.login.nonce.nonceExpirationInterval",
            "properties.httpSettings.requireHttps",
            "properties.httpSettings.routes.apiPrefix",
            "properties.httpSettings.forwardProxy.convention",
            "properties.httpSettings.forwardProxy.customHostHeaderName",
            "properties.httpSettings.forwardProxy.customProtoHeaderName"
        ],
        "pickPropertiesCreate": [
            "properties.platform.enabled",
            "properties.platform.runtimeVersion",
            "properties.platform.configFilePath",
            "properties.globalValidation.requireAuthentication",
            "properties.globalValidation.unauthenticatedClientAction",
            "properties.globalValidation.redirectToProvider",
            "properties.identityProviders.azureActiveDirectory.enabled",
            "properties.identityProviders.azureActiveDirectory.registration.openIdIssuer",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretSettingName",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateThumbprint",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateSubjectAlternativeName",
            "properties.identityProviders.azureActiveDirectory.registration.clientSecretCertificateIssuer",
            "properties.identityProviders.azureActiveDirectory.login.disableWWWAuthenticate",
            "properties.identityProviders.azureActiveDirectory.isAutoProvisioned",
            "properties.identityProviders.facebook.enabled",
            "properties.identityProviders.facebook.registration.appSecretSettingName",
            "properties.identityProviders.facebook.graphApiVersion",
            "properties.identityProviders.gitHub.enabled",
            "properties.identityProviders.gitHub.registration.clientSecretSettingName",
            "properties.identityProviders.google.enabled",
            "properties.identityProviders.google.registration.clientSecretSettingName",
            "properties.identityProviders.legacyMicrosoftAccount.enabled",
            "properties.identityProviders.legacyMicrosoftAccount.registration.clientSecretSettingName",
            "properties.identityProviders.twitter.enabled",
            "properties.identityProviders.twitter.registration.consumerKey",
            "properties.identityProviders.twitter.registration.consumerSecretSettingName",
            "properties.identityProviders.apple.enabled",
            "properties.identityProviders.apple.registration.clientSecretSettingName",
            "properties.identityProviders.azureStaticWebApps.enabled",
            "properties.identityProviders.customOpenIdConnectProviders.enabled",
            "properties.identityProviders.customOpenIdConnectProviders.registration.clientCredential.method",
            "properties.identityProviders.customOpenIdConnectProviders.registration.clientCredential.clientSecretSettingName",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.authorizationEndpoint",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.tokenEndpoint",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.issuer",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.certificationUri",
            "properties.identityProviders.customOpenIdConnectProviders.registration.openIdConnectConfiguration.wellKnownOpenIdConfiguration",
            "properties.identityProviders.customOpenIdConnectProviders.login.nameClaimType",
            "properties.login.routes.logoutEndpoint",
            "properties.login.tokenStore.enabled",
            "properties.login.tokenStore.fileSystem.directory",
            "properties.login.tokenStore.azureBlobStorage.sasUrlSettingName",
            "properties.login.preserveUrlFragmentsForLogins",
            "properties.login.cookieExpiration.convention",
            "properties.login.cookieExpiration.timeToExpiration",
            "properties.login.nonce.validateNonce",
            "properties.login.nonce.nonceExpirationInterval",
            "properties.httpSettings.requireHttps",
            "properties.httpSettings.routes.apiPrefix",
            "properties.httpSettings.forwardProxy.convention",
            "properties.httpSettings.forwardProxy.customHostHeaderName",
            "properties.httpSettings.forwardProxy.customProtoHeaderName"
        ]
    },
    {
        "type": "WebAppBackupStatus",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}",
                "operationId": "WebApps_GetBackupStatus"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}",
                "operationId": "WebApps_DeleteBackup"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups",
                "operationId": "WebApps_ListBackups"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.status",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.correlationId",
            "properties.websiteSizeInBytes"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppBackupStatusSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}",
                "operationId": "WebApps_GetBackupStatusSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}",
                "operationId": "WebApps_DeleteBackupSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups",
                "operationId": "WebApps_ListBackupsSlot"
            }
        },
        "omitProperties": [
            "properties.id",
            "properties.storageAccountUrl",
            "properties.blobName",
            "properties.name",
            "properties.status",
            "properties.sizeInBytes",
            "properties.created",
            "properties.log",
            "properties.databases",
            "properties.scheduled",
            "properties.lastRestoreTimeStamp",
            "properties.finishedTimeStamp",
            "properties.correlationId",
            "properties.websiteSizeInBytes"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppConfiguration",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "WebApps_GetConfiguration"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "WebApps_CreateOrUpdateConfiguration"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web",
                "operationId": "WebApps_UpdateConfiguration"
            }
        },
        "omitProperties": [
            "properties.acrUserManagedIdentityID",
            "properties.machineKey",
            "properties.autoHealRules.triggers.statusCodes",
            "properties.autoHealRules.triggers.statusCodesRange",
            "properties.apiManagementConfig.id",
            "properties.managedServiceIdentityId",
            "properties.xManagedServiceIdentityId",
            "properties.ftpsState"
        ],
        "pickProperties": [
            "properties.numberOfWorkers",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.powerShellVersion",
            "properties.linuxFxVersion",
            "properties.windowsFxVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.acrUseManagedIdentityCreds",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings[].name",
            "properties.appSettings[].value",
            "properties.connectionStrings[].name",
            "properties.connectionStrings[].connectionString",
            "properties.connectionStrings[].type",
            "properties.handlerMappings[].extension",
            "properties.handlerMappings[].scriptProcessor",
            "properties.handlerMappings[].arguments",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications[].virtualPath",
            "properties.virtualApplications[].physicalPath",
            "properties.virtualApplications[].preloadEnabled",
            "properties.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules[].actionHostName",
            "properties.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.experiments.rampUpRules[].name",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.path",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].timeTaken",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].path",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].count",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.vnetRouteAllEnabled",
            "properties.vnetPrivatePortsCount",
            "properties.cors.supportCredentials",
            "properties,push,kind",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.keyVaultReferenceIdentity",
            "properties.ipSecurityRestrictions[].ipAddress",
            "properties.ipSecurityRestrictions[].subnetMask",
            "properties.ipSecurityRestrictions[].vnetTrafficTag",
            "properties.ipSecurityRestrictions[].subnetTrafficTag",
            "properties.ipSecurityRestrictions[].action",
            "properties.ipSecurityRestrictions[].tag",
            "properties.ipSecurityRestrictions[].priority",
            "properties.ipSecurityRestrictions[].name",
            "properties.ipSecurityRestrictions[].description",
            "properties.scmIpSecurityRestrictions[].ipAddress",
            "properties.scmIpSecurityRestrictions[].subnetMask",
            "properties.scmIpSecurityRestrictions[].vnetTrafficTag",
            "properties.scmIpSecurityRestrictions[].subnetTrafficTag",
            "properties.scmIpSecurityRestrictions[].action",
            "properties.scmIpSecurityRestrictions[].tag",
            "properties.scmIpSecurityRestrictions[].priority",
            "properties.scmIpSecurityRestrictions[].name",
            "properties.scmIpSecurityRestrictions[].description",
            "properties.scmIpSecurityRestrictionsUseMain",
            "properties.http20Enabled",
            "properties.minTlsVersion",
            "properties.scmMinTlsVersion",
            "properties.preWarmedInstanceCount",
            "properties.functionAppScaleLimit",
            "properties.healthCheckPath",
            "properties.functionsRuntimeScaleMonitoringEnabled",
            "properties.websiteTimeZone",
            "properties.minimumElasticInstanceCount",
            "properties.azureStorageAccounts.type",
            "properties.azureStorageAccounts.accountName",
            "properties.azureStorageAccounts.shareName",
            "properties.azureStorageAccounts.mountPath",
            "properties.publicNetworkAccess"
        ],
        "pickPropertiesCreate": [
            "properties.numberOfWorkers",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.powerShellVersion",
            "properties.linuxFxVersion",
            "properties.windowsFxVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.acrUseManagedIdentityCreds",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings[].name",
            "properties.appSettings[].value",
            "properties.connectionStrings[].name",
            "properties.connectionStrings[].connectionString",
            "properties.connectionStrings[].type",
            "properties.handlerMappings[].extension",
            "properties.handlerMappings[].scriptProcessor",
            "properties.handlerMappings[].arguments",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications[].virtualPath",
            "properties.virtualApplications[].physicalPath",
            "properties.virtualApplications[].preloadEnabled",
            "properties.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules[].actionHostName",
            "properties.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.experiments.rampUpRules[].name",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.path",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].timeTaken",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].path",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].count",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.vnetRouteAllEnabled",
            "properties.vnetPrivatePortsCount",
            "properties.cors.supportCredentials",
            "properties,push,kind",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.keyVaultReferenceIdentity",
            "properties.ipSecurityRestrictions[].ipAddress",
            "properties.ipSecurityRestrictions[].subnetMask",
            "properties.ipSecurityRestrictions[].vnetTrafficTag",
            "properties.ipSecurityRestrictions[].subnetTrafficTag",
            "properties.ipSecurityRestrictions[].action",
            "properties.ipSecurityRestrictions[].tag",
            "properties.ipSecurityRestrictions[].priority",
            "properties.ipSecurityRestrictions[].name",
            "properties.ipSecurityRestrictions[].description",
            "properties.scmIpSecurityRestrictions[].ipAddress",
            "properties.scmIpSecurityRestrictions[].subnetMask",
            "properties.scmIpSecurityRestrictions[].vnetTrafficTag",
            "properties.scmIpSecurityRestrictions[].subnetTrafficTag",
            "properties.scmIpSecurityRestrictions[].action",
            "properties.scmIpSecurityRestrictions[].tag",
            "properties.scmIpSecurityRestrictions[].priority",
            "properties.scmIpSecurityRestrictions[].name",
            "properties.scmIpSecurityRestrictions[].description",
            "properties.scmIpSecurityRestrictionsUseMain",
            "properties.http20Enabled",
            "properties.minTlsVersion",
            "properties.scmMinTlsVersion",
            "properties.preWarmedInstanceCount",
            "properties.functionAppScaleLimit",
            "properties.healthCheckPath",
            "properties.functionsRuntimeScaleMonitoringEnabled",
            "properties.websiteTimeZone",
            "properties.minimumElasticInstanceCount",
            "properties.azureStorageAccounts.type",
            "properties.azureStorageAccounts.accountName",
            "properties.azureStorageAccounts.shareName",
            "properties.azureStorageAccounts.mountPath",
            "properties.publicNetworkAccess"
        ],
        "propertiesDefault": {
            "properties": {
                "netFrameworkVersion": "v4.6",
                "localMySqlEnabled": false,
                "http20Enabled": true
            }
        }
    },
    {
        "type": "WebAppConfigurationSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "WebApps_GetConfigurationSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "WebApps_CreateOrUpdateConfigurationSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web",
                "operationId": "WebApps_UpdateConfigurationSlot"
            }
        },
        "omitProperties": [
            "properties.acrUserManagedIdentityID",
            "properties.machineKey",
            "properties.autoHealRules.triggers.statusCodes",
            "properties.autoHealRules.triggers.statusCodesRange",
            "properties.apiManagementConfig.id",
            "properties.managedServiceIdentityId",
            "properties.xManagedServiceIdentityId",
            "properties.ftpsState"
        ],
        "pickProperties": [
            "properties.numberOfWorkers",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.powerShellVersion",
            "properties.linuxFxVersion",
            "properties.windowsFxVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.acrUseManagedIdentityCreds",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings[].name",
            "properties.appSettings[].value",
            "properties.connectionStrings[].name",
            "properties.connectionStrings[].connectionString",
            "properties.connectionStrings[].type",
            "properties.handlerMappings[].extension",
            "properties.handlerMappings[].scriptProcessor",
            "properties.handlerMappings[].arguments",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications[].virtualPath",
            "properties.virtualApplications[].physicalPath",
            "properties.virtualApplications[].preloadEnabled",
            "properties.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules[].actionHostName",
            "properties.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.experiments.rampUpRules[].name",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.path",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].timeTaken",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].path",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].count",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.vnetRouteAllEnabled",
            "properties.vnetPrivatePortsCount",
            "properties.cors.supportCredentials",
            "properties,push,kind",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.keyVaultReferenceIdentity",
            "properties.ipSecurityRestrictions[].ipAddress",
            "properties.ipSecurityRestrictions[].subnetMask",
            "properties.ipSecurityRestrictions[].vnetTrafficTag",
            "properties.ipSecurityRestrictions[].subnetTrafficTag",
            "properties.ipSecurityRestrictions[].action",
            "properties.ipSecurityRestrictions[].tag",
            "properties.ipSecurityRestrictions[].priority",
            "properties.ipSecurityRestrictions[].name",
            "properties.ipSecurityRestrictions[].description",
            "properties.scmIpSecurityRestrictions[].ipAddress",
            "properties.scmIpSecurityRestrictions[].subnetMask",
            "properties.scmIpSecurityRestrictions[].vnetTrafficTag",
            "properties.scmIpSecurityRestrictions[].subnetTrafficTag",
            "properties.scmIpSecurityRestrictions[].action",
            "properties.scmIpSecurityRestrictions[].tag",
            "properties.scmIpSecurityRestrictions[].priority",
            "properties.scmIpSecurityRestrictions[].name",
            "properties.scmIpSecurityRestrictions[].description",
            "properties.scmIpSecurityRestrictionsUseMain",
            "properties.http20Enabled",
            "properties.minTlsVersion",
            "properties.scmMinTlsVersion",
            "properties.preWarmedInstanceCount",
            "properties.functionAppScaleLimit",
            "properties.healthCheckPath",
            "properties.functionsRuntimeScaleMonitoringEnabled",
            "properties.websiteTimeZone",
            "properties.minimumElasticInstanceCount",
            "properties.azureStorageAccounts.type",
            "properties.azureStorageAccounts.accountName",
            "properties.azureStorageAccounts.shareName",
            "properties.azureStorageAccounts.mountPath",
            "properties.publicNetworkAccess"
        ],
        "pickPropertiesCreate": [
            "properties.numberOfWorkers",
            "properties.netFrameworkVersion",
            "properties.phpVersion",
            "properties.pythonVersion",
            "properties.nodeVersion",
            "properties.powerShellVersion",
            "properties.linuxFxVersion",
            "properties.windowsFxVersion",
            "properties.requestTracingEnabled",
            "properties.requestTracingExpirationTime",
            "properties.remoteDebuggingEnabled",
            "properties.remoteDebuggingVersion",
            "properties.httpLoggingEnabled",
            "properties.acrUseManagedIdentityCreds",
            "properties.logsDirectorySizeLimit",
            "properties.detailedErrorLoggingEnabled",
            "properties.publishingUsername",
            "properties.appSettings[].name",
            "properties.appSettings[].value",
            "properties.connectionStrings[].name",
            "properties.connectionStrings[].connectionString",
            "properties.connectionStrings[].type",
            "properties.handlerMappings[].extension",
            "properties.handlerMappings[].scriptProcessor",
            "properties.handlerMappings[].arguments",
            "properties.documentRoot",
            "properties.scmType",
            "properties.use32BitWorkerProcess",
            "properties.webSocketsEnabled",
            "properties.alwaysOn",
            "properties.javaVersion",
            "properties.javaContainer",
            "properties.javaContainerVersion",
            "properties.appCommandLine",
            "properties.managedPipelineMode",
            "properties.virtualApplications[].virtualPath",
            "properties.virtualApplications[].physicalPath",
            "properties.virtualApplications[].preloadEnabled",
            "properties.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.loadBalancing",
            "properties.experiments.rampUpRules[].actionHostName",
            "properties.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.experiments.rampUpRules[].name",
            "properties.limits.maxMemoryInMb",
            "properties.limits.maxDiskSizeInMb",
            "properties.autoHealEnabled",
            "properties.autoHealRules.triggers.requests.count",
            "properties.autoHealRules.triggers.requests.timeInterval",
            "properties.autoHealRules.triggers.privateBytesInKB",
            "properties.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.autoHealRules.triggers.slowRequests.path",
            "properties.autoHealRules.triggers.slowRequests.count",
            "properties.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].timeTaken",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].path",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].count",
            "properties.autoHealRules.triggers.slowRequestsWithPath[].timeInterval",
            "properties.autoHealRules.actions.actionType",
            "properties.autoHealRules.actions.customAction.exe",
            "properties.autoHealRules.actions.customAction.parameters",
            "properties.autoHealRules.actions.minProcessExecutionTime",
            "properties.tracingOptions",
            "properties.vnetName",
            "properties.vnetRouteAllEnabled",
            "properties.vnetPrivatePortsCount",
            "properties.cors.supportCredentials",
            "properties,push,kind",
            "properties.apiDefinition.url",
            "properties.autoSwapSlotName",
            "properties.localMySqlEnabled",
            "properties.keyVaultReferenceIdentity",
            "properties.ipSecurityRestrictions[].ipAddress",
            "properties.ipSecurityRestrictions[].subnetMask",
            "properties.ipSecurityRestrictions[].vnetTrafficTag",
            "properties.ipSecurityRestrictions[].subnetTrafficTag",
            "properties.ipSecurityRestrictions[].action",
            "properties.ipSecurityRestrictions[].tag",
            "properties.ipSecurityRestrictions[].priority",
            "properties.ipSecurityRestrictions[].name",
            "properties.ipSecurityRestrictions[].description",
            "properties.scmIpSecurityRestrictions[].ipAddress",
            "properties.scmIpSecurityRestrictions[].subnetMask",
            "properties.scmIpSecurityRestrictions[].vnetTrafficTag",
            "properties.scmIpSecurityRestrictions[].subnetTrafficTag",
            "properties.scmIpSecurityRestrictions[].action",
            "properties.scmIpSecurityRestrictions[].tag",
            "properties.scmIpSecurityRestrictions[].priority",
            "properties.scmIpSecurityRestrictions[].name",
            "properties.scmIpSecurityRestrictions[].description",
            "properties.scmIpSecurityRestrictionsUseMain",
            "properties.http20Enabled",
            "properties.minTlsVersion",
            "properties.scmMinTlsVersion",
            "properties.preWarmedInstanceCount",
            "properties.functionAppScaleLimit",
            "properties.healthCheckPath",
            "properties.functionsRuntimeScaleMonitoringEnabled",
            "properties.websiteTimeZone",
            "properties.minimumElasticInstanceCount",
            "properties.azureStorageAccounts.type",
            "properties.azureStorageAccounts.accountName",
            "properties.azureStorageAccounts.shareName",
            "properties.azureStorageAccounts.mountPath",
            "properties.publicNetworkAccess"
        ],
        "propertiesDefault": {
            "properties": {
                "netFrameworkVersion": "v4.6",
                "localMySqlEnabled": false,
                "http20Enabled": true
            }
        }
    },
    {
        "type": "WebAppContinuousWebJob",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}",
                "operationId": "WebApps_GetContinuousWebJob"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}",
                "operationId": "WebApps_DeleteContinuousWebJob"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs",
                "operationId": "WebApps_ListContinuousWebJobs"
            }
        },
        "omitProperties": [
            "properties.status",
            "properties.detailed_status"
        ],
        "pickProperties": [
            "properties.log_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk"
        ],
        "pickPropertiesCreate": [
            "properties.log_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk"
        ]
    },
    {
        "type": "WebAppContinuousWebJobSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}",
                "operationId": "WebApps_GetContinuousWebJobSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}",
                "operationId": "WebApps_DeleteContinuousWebJobSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs",
                "operationId": "WebApps_ListContinuousWebJobsSlot"
            }
        },
        "omitProperties": [
            "properties.status",
            "properties.detailed_status"
        ],
        "pickProperties": [
            "properties.log_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk"
        ],
        "pickPropertiesCreate": [
            "properties.log_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk"
        ]
    },
    {
        "type": "WebAppDeployment",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "WebApps_GetDeployment"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "WebApps_CreateDeployment"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}",
                "operationId": "WebApps_DeleteDeployment"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments",
                "operationId": "WebApps_ListDeployments"
            }
        },
        "omitProperties": [
            "properties.status"
        ],
        "pickProperties": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ],
        "pickPropertiesCreate": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ]
    },
    {
        "type": "WebAppDeploymentSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "WebApps_GetDeploymentSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "WebApps_CreateDeploymentSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}",
                "operationId": "WebApps_DeleteDeploymentSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments",
                "operationId": "WebApps_ListDeploymentsSlot"
            }
        },
        "omitProperties": [
            "properties.status"
        ],
        "pickProperties": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ],
        "pickPropertiesCreate": [
            "properties.message",
            "properties.author",
            "properties.deployer",
            "properties.author_email",
            "properties.start_time",
            "properties.end_time",
            "properties.active",
            "properties.details"
        ]
    },
    {
        "type": "WebAppDiagnosticLogsConfiguration",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs",
                "operationId": "WebApps_GetDiagnosticLogsConfiguration"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs",
                "operationId": "WebApps_UpdateDiagnosticLogsConfig"
            }
        },
        "pickProperties": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "pickPropertiesCreate": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "propertiesDefault": {
            "properties": {
                "applicationLogs": {
                    "fileSystem": {
                        "level": "Off"
                    }
                }
            }
        }
    },
    {
        "type": "WebAppDiagnosticLogsConfigurationSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs",
                "operationId": "WebApps_GetDiagnosticLogsConfigurationSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs",
                "operationId": "WebApps_UpdateDiagnosticLogsConfigSlot"
            }
        },
        "pickProperties": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "pickPropertiesCreate": [
            "properties.applicationLogs.fileSystem.level",
            "properties.applicationLogs.azureTableStorage.level",
            "properties.applicationLogs.azureTableStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.level",
            "properties.applicationLogs.azureBlobStorage.sasUrl",
            "properties.applicationLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.fileSystem.retentionInMb",
            "properties.httpLogs.fileSystem.retentionInDays",
            "properties.httpLogs.fileSystem.enabled",
            "properties.httpLogs.azureBlobStorage.sasUrl",
            "properties.httpLogs.azureBlobStorage.retentionInDays",
            "properties.httpLogs.azureBlobStorage.enabled",
            "properties.failedRequestsTracing.enabled",
            "properties.detailedErrorMessages.enabled"
        ],
        "propertiesDefault": {
            "properties": {
                "applicationLogs": {
                    "fileSystem": {
                        "level": "Off"
                    }
                }
            }
        }
    },
    {
        "type": "WebAppDomainOwnershipIdentifier",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_GetDomainOwnershipIdentifier"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_CreateOrUpdateDomainOwnershipIdentifier"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_DeleteDomainOwnershipIdentifier"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_UpdateDomainOwnershipIdentifier"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers",
                "operationId": "WebApps_ListDomainOwnershipIdentifiers"
            }
        },
        "omitProperties": [
            "properties.id"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppDomainOwnershipIdentifierSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_GetDomainOwnershipIdentifierSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_CreateOrUpdateDomainOwnershipIdentifierSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_DeleteDomainOwnershipIdentifierSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}",
                "operationId": "WebApps_UpdateDomainOwnershipIdentifierSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers",
                "operationId": "WebApps_ListDomainOwnershipIdentifiersSlot"
            }
        },
        "omitProperties": [
            "properties.id"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppFtpAllowed",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/ftp",
                "operationId": "WebApps_GetFtpAllowed"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/ftp",
                "operationId": "WebApps_UpdateFtpAllowed"
            }
        },
        "pickProperties": [
            "properties.allow"
        ],
        "pickPropertiesCreate": [
            "properties.allow"
        ]
    },
    {
        "type": "WebAppFtpAllowedSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/ftp",
                "operationId": "WebApps_GetFtpAllowedSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/ftp",
                "operationId": "WebApps_UpdateFtpAllowedSlot"
            }
        },
        "pickProperties": [
            "properties.allow"
        ],
        "pickPropertiesCreate": [
            "properties.allow"
        ]
    },
    {
        "type": "WebAppFunction",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}",
                "operationId": "WebApps_GetFunction"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}",
                "operationId": "WebApps_CreateFunction"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}",
                "operationId": "WebApps_DeleteFunction"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions",
                "operationId": "WebApps_ListFunctions"
            }
        },
        "omitProperties": [
            "properties.function_app_id"
        ],
        "pickProperties": [
            "properties.script_root_path_href",
            "properties.script_href",
            "properties.config_href",
            "properties.test_data_href",
            "properties.secrets_file_href",
            "properties.href",
            "properties.test_data",
            "properties.invoke_url_template",
            "properties.language",
            "properties.isDisabled"
        ],
        "pickPropertiesCreate": [
            "properties.script_root_path_href",
            "properties.script_href",
            "properties.config_href",
            "properties.test_data_href",
            "properties.secrets_file_href",
            "properties.href",
            "properties.test_data",
            "properties.invoke_url_template",
            "properties.language",
            "properties.isDisabled"
        ]
    },
    {
        "type": "WebAppHostNameBinding",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "domain": {
                "type": "Domain",
                "group": "DomainRegistration",
                "createOnly": true,
                "pathId": "properties.domainId"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "WebApps_GetHostNameBinding"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "WebApps_CreateOrUpdateHostNameBinding"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}",
                "operationId": "WebApps_DeleteHostNameBinding"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings",
                "operationId": "WebApps_ListHostNameBindings"
            }
        },
        "omitProperties": [
            "properties.domainId",
            "properties.sslState",
            "properties.virtualIP"
        ],
        "pickProperties": [
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType",
            "properties.thumbprint"
        ],
        "pickPropertiesCreate": [
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType",
            "properties.thumbprint"
        ]
    },
    {
        "type": "WebAppHostNameBindingSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "domain": {
                "type": "Domain",
                "group": "DomainRegistration",
                "createOnly": true,
                "pathId": "properties.domainId"
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "WebApps_GetHostNameBindingSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "WebApps_CreateOrUpdateHostNameBindingSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}",
                "operationId": "WebApps_DeleteHostNameBindingSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings",
                "operationId": "WebApps_ListHostNameBindingsSlot"
            }
        },
        "omitProperties": [
            "properties.domainId",
            "properties.sslState",
            "properties.virtualIP"
        ],
        "pickProperties": [
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType",
            "properties.thumbprint"
        ],
        "pickPropertiesCreate": [
            "properties.siteName",
            "properties.azureResourceName",
            "properties.azureResourceType",
            "properties.customHostNameDnsRecordType",
            "properties.hostNameType",
            "properties.thumbprint"
        ]
    },
    {
        "type": "WebAppInstanceFunctionSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}",
                "operationId": "WebApps_GetInstanceFunctionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}",
                "operationId": "WebApps_CreateInstanceFunctionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}",
                "operationId": "WebApps_DeleteInstanceFunctionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions",
                "operationId": "WebApps_ListInstanceFunctionsSlot"
            }
        },
        "omitProperties": [
            "properties.function_app_id"
        ],
        "pickProperties": [
            "properties.script_root_path_href",
            "properties.script_href",
            "properties.config_href",
            "properties.test_data_href",
            "properties.secrets_file_href",
            "properties.href",
            "properties.test_data",
            "properties.invoke_url_template",
            "properties.language",
            "properties.isDisabled"
        ],
        "pickPropertiesCreate": [
            "properties.script_root_path_href",
            "properties.script_href",
            "properties.config_href",
            "properties.test_data_href",
            "properties.secrets_file_href",
            "properties.href",
            "properties.test_data",
            "properties.invoke_url_template",
            "properties.language",
            "properties.isDisabled"
        ]
    },
    {
        "type": "WebAppListSlotConfigurationNames",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames",
                "operationId": "WebApps_ListSlotConfigurationNames"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames",
                "operationId": "WebApps_UpdateSlotConfigurationNames"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames",
                "operationId": "WebApps_ListSlotConfigurationNames"
            }
        },
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppMSDeployStatus",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/MSDeploy",
                "operationId": "WebApps_GetMSDeployStatus"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/MSDeploy",
                "operationId": "WebApps_CreateMSDeployOperation"
            }
        },
        "omitProperties": [
            "properties.deployer",
            "properties.provisioningState",
            "properties.startTime",
            "properties.endTime",
            "properties.complete"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": [
            "properties.addOnPackages[].packageUri",
            "properties.addOnPackages[].connectionString",
            "properties.addOnPackages[].dbType",
            "properties.addOnPackages[].setParametersXmlFileUri",
            "properties.addOnPackages[].skipAppData",
            "properties.addOnPackages[].appOffline"
        ]
    },
    {
        "type": "WebAppMSDeployStatusSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/extensions/MSDeploy",
                "operationId": "WebApps_GetMSDeployStatusSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/extensions/MSDeploy",
                "operationId": "WebApps_CreateMSDeployOperationSlot"
            }
        },
        "omitProperties": [
            "properties.deployer",
            "properties.provisioningState",
            "properties.startTime",
            "properties.endTime",
            "properties.complete"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": [
            "properties.addOnPackages[].packageUri",
            "properties.addOnPackages[].connectionString",
            "properties.addOnPackages[].dbType",
            "properties.addOnPackages[].setParametersXmlFileUri",
            "properties.addOnPackages[].skipAppData",
            "properties.addOnPackages[].appOffline"
        ]
    },
    {
        "type": "WebAppPremierAddOn",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_GetPremierAddOn"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_AddPremierAddOn"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_DeletePremierAddOn"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_UpdatePremierAddOn"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons",
                "operationId": "WebApps_ListPremierAddOns"
            }
        },
        "pickProperties": [
            "properties.sku",
            "properties.product",
            "properties.vendor",
            "properties.marketplacePublisher",
            "properties.marketplaceOffer"
        ],
        "pickPropertiesCreate": [
            "properties.sku",
            "properties.product",
            "properties.vendor",
            "properties.marketplacePublisher",
            "properties.marketplaceOffer"
        ]
    },
    {
        "type": "WebAppPremierAddOnSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_GetPremierAddOnSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_AddPremierAddOnSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_DeletePremierAddOnSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}",
                "operationId": "WebApps_UpdatePremierAddOnSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons",
                "operationId": "WebApps_ListPremierAddOnsSlot"
            }
        },
        "pickProperties": [
            "properties.sku",
            "properties.product",
            "properties.vendor",
            "properties.marketplacePublisher",
            "properties.marketplaceOffer"
        ],
        "pickPropertiesCreate": [
            "properties.sku",
            "properties.product",
            "properties.vendor",
            "properties.marketplacePublisher",
            "properties.marketplaceOffer"
        ]
    },
    {
        "type": "WebAppPrivateAccess",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateAccess/virtualNetworks",
                "operationId": "WebApps_GetPrivateAccess"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateAccess/virtualNetworks",
                "operationId": "WebApps_PutPrivateAccessVnet"
            }
        },
        "pickProperties": [
            "properties.enabled",
            "properties.virtualNetworks[].name",
            "properties.virtualNetworks[].key",
            "properties.virtualNetworks[].subnets[].name",
            "properties.virtualNetworks[].subnets[].key"
        ],
        "pickPropertiesCreate": [
            "properties.enabled",
            "properties.virtualNetworks[].name",
            "properties.virtualNetworks[].key",
            "properties.virtualNetworks[].subnets[].name",
            "properties.virtualNetworks[].subnets[].key"
        ]
    },
    {
        "type": "WebAppPrivateAccessSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateAccess/virtualNetworks",
                "operationId": "WebApps_GetPrivateAccessSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateAccess/virtualNetworks",
                "operationId": "WebApps_PutPrivateAccessVnetSlot"
            }
        },
        "pickProperties": [
            "properties.enabled",
            "properties.virtualNetworks[].name",
            "properties.virtualNetworks[].key",
            "properties.virtualNetworks[].subnets[].name",
            "properties.virtualNetworks[].subnets[].key"
        ],
        "pickPropertiesCreate": [
            "properties.enabled",
            "properties.virtualNetworks[].name",
            "properties.virtualNetworks[].key",
            "properties.virtualNetworks[].subnets[].name",
            "properties.virtualNetworks[].subnets[].key"
        ]
    },
    {
        "type": "WebAppPrivateEndpointConnection",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_GetPrivateEndpointConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_ApproveOrRejectPrivateEndpointConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_DeletePrivateEndpointConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/privateEndpointConnections",
                "operationId": "WebApps_GetPrivateEndpointConnectionList"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppPrivateEndpointConnectionSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_GetPrivateEndpointConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_ApproveOrRejectPrivateEndpointConnectionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "WebApps_DeletePrivateEndpointConnectionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/privateEndpointConnections",
                "operationId": "WebApps_GetPrivateEndpointConnectionListSlot"
            }
        },
        "omitProperties": [
            "properties.provisioningState",
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "WebAppProcess",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}",
                "operationId": "WebApps_GetProcess"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}",
                "operationId": "WebApps_DeleteProcess"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes",
                "operationId": "WebApps_ListProcesses"
            }
        },
        "omitProperties": [
            "properties.identifier"
        ],
        "pickProperties": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.parent",
            "properties.threads[].properties.href",
            "properties.threads[].properties.process",
            "properties.threads[].properties.start_address",
            "properties.threads[].properties.current_priority",
            "properties.threads[].properties.priority_level",
            "properties.threads[].properties.base_priority",
            "properties.threads[].properties.start_time",
            "properties.threads[].properties.total_processor_time",
            "properties.threads[].properties.user_processor_time",
            "properties.threads[].properties.wait_reason",
            "properties.modules[].properties.base_address",
            "properties.modules[].properties.file_name",
            "properties.modules[].properties.href",
            "properties.modules[].properties.file_path",
            "properties.modules[].properties.module_memory_size",
            "properties.modules[].properties.file_version",
            "properties.modules[].properties.file_description",
            "properties.modules[].properties.product",
            "properties.modules[].properties.product_version",
            "properties.modules[].properties.is_debug",
            "properties.modules[].properties.language",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ],
        "pickPropertiesCreate": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.parent",
            "properties.threads[].properties.href",
            "properties.threads[].properties.process",
            "properties.threads[].properties.start_address",
            "properties.threads[].properties.current_priority",
            "properties.threads[].properties.priority_level",
            "properties.threads[].properties.base_priority",
            "properties.threads[].properties.start_time",
            "properties.threads[].properties.total_processor_time",
            "properties.threads[].properties.user_processor_time",
            "properties.threads[].properties.wait_reason",
            "properties.modules[].properties.base_address",
            "properties.modules[].properties.file_name",
            "properties.modules[].properties.href",
            "properties.modules[].properties.file_path",
            "properties.modules[].properties.module_memory_size",
            "properties.modules[].properties.file_version",
            "properties.modules[].properties.file_description",
            "properties.modules[].properties.product",
            "properties.modules[].properties.product_version",
            "properties.modules[].properties.is_debug",
            "properties.modules[].properties.language",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ]
    },
    {
        "type": "WebAppProcessSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}",
                "operationId": "WebApps_GetProcessSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}",
                "operationId": "WebApps_DeleteProcessSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes",
                "operationId": "WebApps_ListProcessesSlot"
            }
        },
        "omitProperties": [
            "properties.identifier"
        ],
        "pickProperties": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.parent",
            "properties.threads[].properties.href",
            "properties.threads[].properties.process",
            "properties.threads[].properties.start_address",
            "properties.threads[].properties.current_priority",
            "properties.threads[].properties.priority_level",
            "properties.threads[].properties.base_priority",
            "properties.threads[].properties.start_time",
            "properties.threads[].properties.total_processor_time",
            "properties.threads[].properties.user_processor_time",
            "properties.threads[].properties.wait_reason",
            "properties.modules[].properties.base_address",
            "properties.modules[].properties.file_name",
            "properties.modules[].properties.href",
            "properties.modules[].properties.file_path",
            "properties.modules[].properties.module_memory_size",
            "properties.modules[].properties.file_version",
            "properties.modules[].properties.file_description",
            "properties.modules[].properties.product",
            "properties.modules[].properties.product_version",
            "properties.modules[].properties.is_debug",
            "properties.modules[].properties.language",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ],
        "pickPropertiesCreate": [
            "properties.deployment_name",
            "properties.href",
            "properties.minidump",
            "properties.is_profile_running",
            "properties.is_iis_profile_running",
            "properties.parent",
            "properties.threads[].properties.href",
            "properties.threads[].properties.process",
            "properties.threads[].properties.start_address",
            "properties.threads[].properties.current_priority",
            "properties.threads[].properties.priority_level",
            "properties.threads[].properties.base_priority",
            "properties.threads[].properties.start_time",
            "properties.threads[].properties.total_processor_time",
            "properties.threads[].properties.user_processor_time",
            "properties.threads[].properties.wait_reason",
            "properties.modules[].properties.base_address",
            "properties.modules[].properties.file_name",
            "properties.modules[].properties.href",
            "properties.modules[].properties.file_path",
            "properties.modules[].properties.module_memory_size",
            "properties.modules[].properties.file_version",
            "properties.modules[].properties.file_description",
            "properties.modules[].properties.product",
            "properties.modules[].properties.product_version",
            "properties.modules[].properties.is_debug",
            "properties.modules[].properties.language",
            "properties.file_name",
            "properties.command_line",
            "properties.user_name",
            "properties.handle_count",
            "properties.module_count",
            "properties.thread_count",
            "properties.start_time",
            "properties.total_cpu_time",
            "properties.user_cpu_time",
            "properties.privileged_cpu_time",
            "properties.working_set",
            "properties.peak_working_set",
            "properties.private_memory",
            "properties.virtual_memory",
            "properties.peak_virtual_memory",
            "properties.paged_system_memory",
            "properties.non_paged_system_memory",
            "properties.paged_memory",
            "properties.peak_paged_memory",
            "properties.time_stamp",
            "properties.is_scm_site",
            "properties.is_webjob",
            "properties.description"
        ]
    },
    {
        "type": "WebAppPublicCertificate",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_GetPublicCertificate"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_CreateOrUpdatePublicCertificate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_DeletePublicCertificate"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates",
                "operationId": "WebApps_ListPublicCertificates"
            }
        },
        "omitProperties": [
            "properties.thumbprint"
        ],
        "pickProperties": [
            "properties.blob",
            "properties.publicCertificateLocation"
        ],
        "pickPropertiesCreate": [
            "properties.blob",
            "properties.publicCertificateLocation"
        ]
    },
    {
        "type": "WebAppPublicCertificateSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_GetPublicCertificateSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_CreateOrUpdatePublicCertificateSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates/{publicCertificateName}",
                "operationId": "WebApps_DeletePublicCertificateSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates",
                "operationId": "WebApps_ListPublicCertificatesSlot"
            }
        },
        "omitProperties": [
            "properties.thumbprint"
        ],
        "pickProperties": [
            "properties.blob",
            "properties.publicCertificateLocation"
        ],
        "pickPropertiesCreate": [
            "properties.blob",
            "properties.publicCertificateLocation"
        ]
    },
    {
        "type": "WebAppRelayServiceConnection",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "WebApps_GetRelayServiceConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "WebApps_CreateOrUpdateRelayServiceConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "WebApps_DeleteRelayServiceConnection"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}",
                "operationId": "WebApps_UpdateRelayServiceConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection",
                "operationId": "WebApps_ListRelayServiceConnections"
            }
        },
        "pickProperties": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ],
        "pickPropertiesCreate": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ]
    },
    {
        "type": "WebAppRelayServiceConnectionSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "WebApps_GetRelayServiceConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "WebApps_CreateOrUpdateRelayServiceConnectionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "WebApps_DeleteRelayServiceConnectionSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}",
                "operationId": "WebApps_UpdateRelayServiceConnectionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection",
                "operationId": "WebApps_ListRelayServiceConnectionsSlot"
            }
        },
        "pickProperties": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ],
        "pickPropertiesCreate": [
            "properties.entityName",
            "properties.entityConnectionString",
            "properties.resourceType",
            "properties.resourceConnectionString",
            "properties.hostname",
            "properties.port",
            "properties.biztalkUri"
        ]
    },
    {
        "type": "WebAppScmAllowed",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/scm",
                "operationId": "WebApps_GetScmAllowed"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/basicPublishingCredentialsPolicies/scm",
                "operationId": "WebApps_UpdateScmAllowed"
            }
        },
        "pickProperties": [
            "properties.allow"
        ],
        "pickPropertiesCreate": [
            "properties.allow"
        ]
    },
    {
        "type": "WebAppScmAllowedSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/scm",
                "operationId": "WebApps_GetScmAllowedSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/basicPublishingCredentialsPolicies/scm",
                "operationId": "WebApps_UpdateScmAllowedSlot"
            }
        },
        "pickProperties": [
            "properties.allow"
        ],
        "pickPropertiesCreate": [
            "properties.allow"
        ]
    },
    {
        "type": "WebAppSiteExtension",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_GetSiteExtension"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_InstallSiteExtension"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_DeleteSiteExtension"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions",
                "operationId": "WebApps_ListSiteExtensions"
            }
        },
        "omitProperties": [
            "properties.extension_id",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.title",
            "properties.extension_type",
            "properties.summary",
            "properties.description",
            "properties.version",
            "properties.extension_url",
            "properties.project_url",
            "properties.icon_url",
            "properties.license_url",
            "properties.feed_url",
            "properties.installer_command_line_params",
            "properties.published_date_time",
            "properties.download_count",
            "properties.local_is_latest_version",
            "properties.local_path",
            "properties.installed_date_time",
            "properties.comment"
        ],
        "pickPropertiesCreate": [
            "properties.title",
            "properties.extension_type",
            "properties.summary",
            "properties.description",
            "properties.version",
            "properties.extension_url",
            "properties.project_url",
            "properties.icon_url",
            "properties.license_url",
            "properties.feed_url",
            "properties.installer_command_line_params",
            "properties.published_date_time",
            "properties.download_count",
            "properties.local_is_latest_version",
            "properties.local_path",
            "properties.installed_date_time",
            "properties.comment"
        ]
    },
    {
        "type": "WebAppSiteExtensionSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_GetSiteExtensionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_InstallSiteExtensionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions/{siteExtensionId}",
                "operationId": "WebApps_DeleteSiteExtensionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions",
                "operationId": "WebApps_ListSiteExtensionsSlot"
            }
        },
        "omitProperties": [
            "properties.extension_id",
            "properties.provisioningState"
        ],
        "pickProperties": [
            "properties.title",
            "properties.extension_type",
            "properties.summary",
            "properties.description",
            "properties.version",
            "properties.extension_url",
            "properties.project_url",
            "properties.icon_url",
            "properties.license_url",
            "properties.feed_url",
            "properties.installer_command_line_params",
            "properties.published_date_time",
            "properties.download_count",
            "properties.local_is_latest_version",
            "properties.local_path",
            "properties.installed_date_time",
            "properties.comment"
        ],
        "pickPropertiesCreate": [
            "properties.title",
            "properties.extension_type",
            "properties.summary",
            "properties.description",
            "properties.version",
            "properties.extension_url",
            "properties.project_url",
            "properties.icon_url",
            "properties.license_url",
            "properties.feed_url",
            "properties.installer_command_line_params",
            "properties.published_date_time",
            "properties.download_count",
            "properties.local_is_latest_version",
            "properties.local_path",
            "properties.installed_date_time",
            "properties.comment"
        ]
    },
    {
        "type": "WebAppSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "managedIdentities": {
                "type": "UserAssignedIdentity",
                "group": "ManagedIdentity",
                "createOnly": true,
                "list": true
            },
            "serverFarm": {
                "type": "ServerFarm",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.serverFarmId"
            },
            "hostingEnvironment": {
                "type": "HostingEnvironment",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.hostingEnvironmentProfile.id"
            },
            "webApp": {
                "type": "WebApp",
                "group": "Web",
                "createOnly": true,
                "pathId": "properties.cloningInfo.sourceWebAppId"
            },
            "subnet": {
                "type": "Subnet",
                "group": "Network",
                "createOnly": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "WebApps_GetSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "WebApps_CreateOrUpdateSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "WebApps_DeleteSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}",
                "operationId": "WebApps_UpdateSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots",
                "operationId": "WebApps_ListSlots"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.hostNames",
            "properties.repositorySiteName",
            "properties.usageState",
            "properties.enabledHostNames",
            "properties.availabilityState",
            "properties.hostNameSslStates",
            "properties.serverFarmId",
            "properties.lastModifiedTimeUtc",
            "properties.siteConfig.acrUserManagedIdentityID",
            "properties.siteConfig.machineKey",
            "properties.siteConfig.autoHealRules.triggers.statusCodes",
            "properties.siteConfig.autoHealRules.triggers.statusCodesRange",
            "properties.siteConfig.apiManagementConfig.id",
            "properties.siteConfig.managedServiceIdentityId",
            "properties.siteConfig.xManagedServiceIdentityId",
            "properties.siteConfig.ftpsState",
            "properties.trafficManagerHostNames",
            "properties.targetSwapSlot",
            "properties.hostingEnvironmentProfile.id",
            "properties.hostingEnvironmentProfile.name",
            "properties.hostingEnvironmentProfile.type",
            "properties.customDomainVerificationId",
            "properties.outboundIpAddresses",
            "properties.possibleOutboundIpAddresses",
            "properties.suspendedTill",
            "properties.maxNumberOfWorkers",
            "properties.cloningInfo.correlationId",
            "properties.cloningInfo.sourceWebAppId",
            "properties.cloningInfo.trafficManagerProfileId",
            "properties.resourceGroup",
            "properties.isDefaultContainer",
            "properties.defaultHostName",
            "properties.slotSwapStatus",
            "properties.inProgressOperationId",
            "properties.virtualNetworkSubnetId",
            "identity.tenantId",
            "identity.principalId",
            "extendedLocation.type"
        ],
        "pickProperties": [
            "properties.enabled",
            "properties.reserved",
            "properties.isXenon",
            "properties.hyperV",
            "properties.siteConfig.numberOfWorkers",
            "properties.siteConfig.netFrameworkVersion",
            "properties.siteConfig.phpVersion",
            "properties.siteConfig.pythonVersion",
            "properties.siteConfig.nodeVersion",
            "properties.siteConfig.powerShellVersion",
            "properties.siteConfig.linuxFxVersion",
            "properties.siteConfig.windowsFxVersion",
            "properties.siteConfig.requestTracingEnabled",
            "properties.siteConfig.requestTracingExpirationTime",
            "properties.siteConfig.remoteDebuggingEnabled",
            "properties.siteConfig.remoteDebuggingVersion",
            "properties.siteConfig.httpLoggingEnabled",
            "properties.siteConfig.acrUseManagedIdentityCreds",
            "properties.siteConfig.logsDirectorySizeLimit",
            "properties.siteConfig.detailedErrorLoggingEnabled",
            "properties.siteConfig.publishingUsername",
            "properties.siteConfig.appSettings[].name",
            "properties.siteConfig.appSettings[].value",
            "properties.siteConfig.connectionStrings[].name",
            "properties.siteConfig.connectionStrings[].connectionString",
            "properties.siteConfig.connectionStrings[].type",
            "properties.siteConfig.handlerMappings[].extension",
            "properties.siteConfig.handlerMappings[].scriptProcessor",
            "properties.siteConfig.handlerMappings[].arguments",
            "properties.siteConfig.documentRoot",
            "properties.siteConfig.scmType",
            "properties.siteConfig.use32BitWorkerProcess",
            "properties.siteConfig.webSocketsEnabled",
            "properties.siteConfig.alwaysOn",
            "properties.siteConfig.javaVersion",
            "properties.siteConfig.javaContainer",
            "properties.siteConfig.javaContainerVersion",
            "properties.siteConfig.appCommandLine",
            "properties.siteConfig.managedPipelineMode",
            "properties.siteConfig.virtualApplications[].virtualPath",
            "properties.siteConfig.virtualApplications[].physicalPath",
            "properties.siteConfig.virtualApplications[].preloadEnabled",
            "properties.siteConfig.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.siteConfig.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.siteConfig.loadBalancing",
            "properties.siteConfig.experiments.rampUpRules[].actionHostName",
            "properties.siteConfig.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.siteConfig.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.siteConfig.experiments.rampUpRules[].name",
            "properties.siteConfig.limits.maxMemoryInMb",
            "properties.siteConfig.limits.maxDiskSizeInMb",
            "properties.siteConfig.autoHealEnabled",
            "properties.siteConfig.autoHealRules.triggers.requests.count",
            "properties.siteConfig.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.path",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].path",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].count",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].timeInterval",
            "properties.siteConfig.autoHealRules.actions.actionType",
            "properties.siteConfig.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.tracingOptions",
            "properties.siteConfig.vnetName",
            "properties.siteConfig.vnetRouteAllEnabled",
            "properties.siteConfig.vnetPrivatePortsCount",
            "properties.siteConfig.cors.supportCredentials",
            "properties,siteConfig,push,kind",
            "properties.siteConfig.apiDefinition.url",
            "properties.siteConfig.autoSwapSlotName",
            "properties.siteConfig.localMySqlEnabled",
            "properties.siteConfig.keyVaultReferenceIdentity",
            "properties.siteConfig.ipSecurityRestrictions[].ipAddress",
            "properties.siteConfig.ipSecurityRestrictions[].subnetMask",
            "properties.siteConfig.ipSecurityRestrictions[].vnetTrafficTag",
            "properties.siteConfig.ipSecurityRestrictions[].subnetTrafficTag",
            "properties.siteConfig.ipSecurityRestrictions[].action",
            "properties.siteConfig.ipSecurityRestrictions[].tag",
            "properties.siteConfig.ipSecurityRestrictions[].priority",
            "properties.siteConfig.ipSecurityRestrictions[].name",
            "properties.siteConfig.ipSecurityRestrictions[].description",
            "properties.siteConfig.scmIpSecurityRestrictions[].ipAddress",
            "properties.siteConfig.scmIpSecurityRestrictions[].subnetMask",
            "properties.siteConfig.scmIpSecurityRestrictions[].vnetTrafficTag",
            "properties.siteConfig.scmIpSecurityRestrictions[].subnetTrafficTag",
            "properties.siteConfig.scmIpSecurityRestrictions[].action",
            "properties.siteConfig.scmIpSecurityRestrictions[].tag",
            "properties.siteConfig.scmIpSecurityRestrictions[].priority",
            "properties.siteConfig.scmIpSecurityRestrictions[].name",
            "properties.siteConfig.scmIpSecurityRestrictions[].description",
            "properties.siteConfig.scmIpSecurityRestrictionsUseMain",
            "properties.siteConfig.http20Enabled",
            "properties.siteConfig.minTlsVersion",
            "properties.siteConfig.scmMinTlsVersion",
            "properties.siteConfig.preWarmedInstanceCount",
            "properties.siteConfig.functionAppScaleLimit",
            "properties.siteConfig.healthCheckPath",
            "properties.siteConfig.functionsRuntimeScaleMonitoringEnabled",
            "properties.siteConfig.websiteTimeZone",
            "properties.siteConfig.minimumElasticInstanceCount",
            "properties.siteConfig.azureStorageAccounts.type",
            "properties.siteConfig.azureStorageAccounts.accountName",
            "properties.siteConfig.azureStorageAccounts.shareName",
            "properties.siteConfig.azureStorageAccounts.mountPath",
            "properties.siteConfig.publicNetworkAccess",
            "properties.scmSiteAlsoStopped",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.clientCertMode",
            "properties.clientCertExclusionPaths",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.dailyMemoryTimeQuota",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.sourceWebAppLocation",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName",
            "properties.httpsOnly",
            "properties.redundancyMode",
            "properties.storageAccountRequired",
            "properties.keyVaultReferenceIdentity",
            "identity.type",
            "extendedLocation.name"
        ],
        "pickPropertiesCreate": [
            "properties.enabled",
            "properties.reserved",
            "properties.isXenon",
            "properties.hyperV",
            "properties.siteConfig.numberOfWorkers",
            "properties.siteConfig.netFrameworkVersion",
            "properties.siteConfig.phpVersion",
            "properties.siteConfig.pythonVersion",
            "properties.siteConfig.nodeVersion",
            "properties.siteConfig.powerShellVersion",
            "properties.siteConfig.linuxFxVersion",
            "properties.siteConfig.windowsFxVersion",
            "properties.siteConfig.requestTracingEnabled",
            "properties.siteConfig.requestTracingExpirationTime",
            "properties.siteConfig.remoteDebuggingEnabled",
            "properties.siteConfig.remoteDebuggingVersion",
            "properties.siteConfig.httpLoggingEnabled",
            "properties.siteConfig.acrUseManagedIdentityCreds",
            "properties.siteConfig.logsDirectorySizeLimit",
            "properties.siteConfig.detailedErrorLoggingEnabled",
            "properties.siteConfig.publishingUsername",
            "properties.siteConfig.appSettings[].name",
            "properties.siteConfig.appSettings[].value",
            "properties.siteConfig.connectionStrings[].name",
            "properties.siteConfig.connectionStrings[].connectionString",
            "properties.siteConfig.connectionStrings[].type",
            "properties.siteConfig.handlerMappings[].extension",
            "properties.siteConfig.handlerMappings[].scriptProcessor",
            "properties.siteConfig.handlerMappings[].arguments",
            "properties.siteConfig.documentRoot",
            "properties.siteConfig.scmType",
            "properties.siteConfig.use32BitWorkerProcess",
            "properties.siteConfig.webSocketsEnabled",
            "properties.siteConfig.alwaysOn",
            "properties.siteConfig.javaVersion",
            "properties.siteConfig.javaContainer",
            "properties.siteConfig.javaContainerVersion",
            "properties.siteConfig.appCommandLine",
            "properties.siteConfig.managedPipelineMode",
            "properties.siteConfig.virtualApplications[].virtualPath",
            "properties.siteConfig.virtualApplications[].physicalPath",
            "properties.siteConfig.virtualApplications[].preloadEnabled",
            "properties.siteConfig.virtualApplications[].virtualDirectories[].virtualPath",
            "properties.siteConfig.virtualApplications[].virtualDirectories[].physicalPath",
            "properties.siteConfig.loadBalancing",
            "properties.siteConfig.experiments.rampUpRules[].actionHostName",
            "properties.siteConfig.experiments.rampUpRules[].changeIntervalInMinutes",
            "properties.siteConfig.experiments.rampUpRules[].changeDecisionCallbackUrl",
            "properties.siteConfig.experiments.rampUpRules[].name",
            "properties.siteConfig.limits.maxMemoryInMb",
            "properties.siteConfig.limits.maxDiskSizeInMb",
            "properties.siteConfig.autoHealEnabled",
            "properties.siteConfig.autoHealRules.triggers.requests.count",
            "properties.siteConfig.autoHealRules.triggers.requests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.privateBytesInKB",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.path",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.count",
            "properties.siteConfig.autoHealRules.triggers.slowRequests.timeInterval",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].timeTaken",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].path",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].count",
            "properties.siteConfig.autoHealRules.triggers.slowRequestsWithPath[].timeInterval",
            "properties.siteConfig.autoHealRules.actions.actionType",
            "properties.siteConfig.autoHealRules.actions.customAction.exe",
            "properties.siteConfig.autoHealRules.actions.customAction.parameters",
            "properties.siteConfig.autoHealRules.actions.minProcessExecutionTime",
            "properties.siteConfig.tracingOptions",
            "properties.siteConfig.vnetName",
            "properties.siteConfig.vnetRouteAllEnabled",
            "properties.siteConfig.vnetPrivatePortsCount",
            "properties.siteConfig.cors.supportCredentials",
            "properties,siteConfig,push,kind",
            "properties.siteConfig.apiDefinition.url",
            "properties.siteConfig.autoSwapSlotName",
            "properties.siteConfig.localMySqlEnabled",
            "properties.siteConfig.keyVaultReferenceIdentity",
            "properties.siteConfig.ipSecurityRestrictions[].ipAddress",
            "properties.siteConfig.ipSecurityRestrictions[].subnetMask",
            "properties.siteConfig.ipSecurityRestrictions[].vnetTrafficTag",
            "properties.siteConfig.ipSecurityRestrictions[].subnetTrafficTag",
            "properties.siteConfig.ipSecurityRestrictions[].action",
            "properties.siteConfig.ipSecurityRestrictions[].tag",
            "properties.siteConfig.ipSecurityRestrictions[].priority",
            "properties.siteConfig.ipSecurityRestrictions[].name",
            "properties.siteConfig.ipSecurityRestrictions[].description",
            "properties.siteConfig.scmIpSecurityRestrictions[].ipAddress",
            "properties.siteConfig.scmIpSecurityRestrictions[].subnetMask",
            "properties.siteConfig.scmIpSecurityRestrictions[].vnetTrafficTag",
            "properties.siteConfig.scmIpSecurityRestrictions[].subnetTrafficTag",
            "properties.siteConfig.scmIpSecurityRestrictions[].action",
            "properties.siteConfig.scmIpSecurityRestrictions[].tag",
            "properties.siteConfig.scmIpSecurityRestrictions[].priority",
            "properties.siteConfig.scmIpSecurityRestrictions[].name",
            "properties.siteConfig.scmIpSecurityRestrictions[].description",
            "properties.siteConfig.scmIpSecurityRestrictionsUseMain",
            "properties.siteConfig.http20Enabled",
            "properties.siteConfig.minTlsVersion",
            "properties.siteConfig.scmMinTlsVersion",
            "properties.siteConfig.preWarmedInstanceCount",
            "properties.siteConfig.functionAppScaleLimit",
            "properties.siteConfig.healthCheckPath",
            "properties.siteConfig.functionsRuntimeScaleMonitoringEnabled",
            "properties.siteConfig.websiteTimeZone",
            "properties.siteConfig.minimumElasticInstanceCount",
            "properties.siteConfig.azureStorageAccounts.type",
            "properties.siteConfig.azureStorageAccounts.accountName",
            "properties.siteConfig.azureStorageAccounts.shareName",
            "properties.siteConfig.azureStorageAccounts.mountPath",
            "properties.siteConfig.publicNetworkAccess",
            "properties.scmSiteAlsoStopped",
            "properties.clientAffinityEnabled",
            "properties.clientCertEnabled",
            "properties.clientCertMode",
            "properties.clientCertExclusionPaths",
            "properties.hostNamesDisabled",
            "properties.containerSize",
            "properties.dailyMemoryTimeQuota",
            "properties.cloningInfo.overwrite",
            "properties.cloningInfo.cloneCustomHostNames",
            "properties.cloningInfo.cloneSourceControl",
            "properties.cloningInfo.sourceWebAppLocation",
            "properties.cloningInfo.hostingEnvironment",
            "properties.cloningInfo.configureLoadBalancing",
            "properties.cloningInfo.trafficManagerProfileName",
            "properties.httpsOnly",
            "properties.redundancyMode",
            "properties.storageAccountRequired",
            "properties.keyVaultReferenceIdentity",
            "identity.type",
            "extendedLocation.name"
        ],
        "propertiesDefault": {
            "properties": {
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "netFrameworkVersion": "v4.6",
                    "localMySqlEnabled": false,
                    "http20Enabled": true
                },
                "scmSiteAlsoStopped": false
            }
        }
    },
    {
        "type": "WebAppSourceControl",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "WebApps_GetSourceControl"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "WebApps_CreateOrUpdateSourceControl"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "WebApps_DeleteSourceControl"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
                "operationId": "WebApps_UpdateSourceControl"
            }
        },
        "omitProperties": [
            "properties.gitHubActionConfiguration.containerConfiguration.password"
        ],
        "pickProperties": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.isGitHubAction",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeStack",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeVersion",
            "properties.gitHubActionConfiguration.containerConfiguration.serverUrl",
            "properties.gitHubActionConfiguration.containerConfiguration.imageName",
            "properties.gitHubActionConfiguration.containerConfiguration.username",
            "properties.gitHubActionConfiguration.isLinux",
            "properties.gitHubActionConfiguration.generateWorkflowFile"
        ],
        "pickPropertiesCreate": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.isGitHubAction",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeStack",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeVersion",
            "properties.gitHubActionConfiguration.containerConfiguration.serverUrl",
            "properties.gitHubActionConfiguration.containerConfiguration.imageName",
            "properties.gitHubActionConfiguration.containerConfiguration.username",
            "properties.gitHubActionConfiguration.isLinux",
            "properties.gitHubActionConfiguration.generateWorkflowFile"
        ],
        "environmentVariables": [
            {
                "path": "properties.gitHubActionConfiguration.containerConfiguration.password",
                "suffix": "PASSWORD"
            }
        ]
    },
    {
        "type": "WebAppSourceControlSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "WebApps_GetSourceControlSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "WebApps_CreateOrUpdateSourceControlSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "WebApps_DeleteSourceControlSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web",
                "operationId": "WebApps_UpdateSourceControlSlot"
            }
        },
        "omitProperties": [
            "properties.gitHubActionConfiguration.containerConfiguration.password"
        ],
        "pickProperties": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.isGitHubAction",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeStack",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeVersion",
            "properties.gitHubActionConfiguration.containerConfiguration.serverUrl",
            "properties.gitHubActionConfiguration.containerConfiguration.imageName",
            "properties.gitHubActionConfiguration.containerConfiguration.username",
            "properties.gitHubActionConfiguration.isLinux",
            "properties.gitHubActionConfiguration.generateWorkflowFile"
        ],
        "pickPropertiesCreate": [
            "properties.repoUrl",
            "properties.branch",
            "properties.isManualIntegration",
            "properties.isGitHubAction",
            "properties.deploymentRollbackEnabled",
            "properties.isMercurial",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeStack",
            "properties.gitHubActionConfiguration.codeConfiguration.runtimeVersion",
            "properties.gitHubActionConfiguration.containerConfiguration.serverUrl",
            "properties.gitHubActionConfiguration.containerConfiguration.imageName",
            "properties.gitHubActionConfiguration.containerConfiguration.username",
            "properties.gitHubActionConfiguration.isLinux",
            "properties.gitHubActionConfiguration.generateWorkflowFile"
        ],
        "environmentVariables": [
            {
                "path": "properties.gitHubActionConfiguration.containerConfiguration.password",
                "suffix": "PASSWORD"
            }
        ]
    },
    {
        "type": "WebAppSwiftVirtualNetworkConnection",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork",
                "operationId": "WebApps_GetSwiftVirtualNetworkConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork",
                "operationId": "WebApps_CreateOrUpdateSwiftVirtualNetworkConnectionWithCheck"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork",
                "operationId": "WebApps_DeleteSwiftVirtualNetwork"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkConfig/virtualNetwork",
                "operationId": "WebApps_UpdateSwiftVirtualNetworkConnectionWithCheck"
            }
        },
        "omitProperties": [
            "properties.subnetResourceId"
        ],
        "pickProperties": [
            "properties.swiftSupported"
        ],
        "pickPropertiesCreate": [
            "properties.swiftSupported"
        ]
    },
    {
        "type": "WebAppSwiftVirtualNetworkConnectionSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork",
                "operationId": "WebApps_GetSwiftVirtualNetworkConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork",
                "operationId": "WebApps_CreateOrUpdateSwiftVirtualNetworkConnectionWithCheckSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork",
                "operationId": "WebApps_DeleteSwiftVirtualNetworkSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkConfig/virtualNetwork",
                "operationId": "WebApps_UpdateSwiftVirtualNetworkConnectionWithCheckSlot"
            }
        },
        "omitProperties": [
            "properties.subnetResourceId"
        ],
        "pickProperties": [
            "properties.swiftSupported"
        ],
        "pickPropertiesCreate": [
            "properties.swiftSupported"
        ]
    },
    {
        "type": "WebAppTriggeredWebJob",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}",
                "operationId": "WebApps_GetTriggeredWebJob"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}",
                "operationId": "WebApps_DeleteTriggeredWebJob"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs",
                "operationId": "WebApps_ListTriggeredWebJobs"
            }
        },
        "omitProperties": [
            "properties.latest_run.web_job_id",
            "properties.latest_run.status"
        ],
        "pickProperties": [
            "properties.latest_run.web_job_name",
            "properties.latest_run.start_time",
            "properties.latest_run.end_time",
            "properties.latest_run.duration",
            "properties.latest_run.output_url",
            "properties.latest_run.error_url",
            "properties.latest_run.url",
            "properties.latest_run.job_name",
            "properties.latest_run.trigger",
            "properties.history_url",
            "properties.scheduler_logs_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk"
        ],
        "pickPropertiesCreate": [
            "properties.latest_run.web_job_name",
            "properties.latest_run.start_time",
            "properties.latest_run.end_time",
            "properties.latest_run.duration",
            "properties.latest_run.output_url",
            "properties.latest_run.error_url",
            "properties.latest_run.url",
            "properties.latest_run.job_name",
            "properties.latest_run.trigger",
            "properties.history_url",
            "properties.scheduler_logs_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk"
        ]
    },
    {
        "type": "WebAppTriggeredWebJobSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}",
                "operationId": "WebApps_GetTriggeredWebJobSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}",
                "operationId": "WebApps_DeleteTriggeredWebJobSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs",
                "operationId": "WebApps_ListTriggeredWebJobsSlot"
            }
        },
        "omitProperties": [
            "properties.latest_run.web_job_id",
            "properties.latest_run.status"
        ],
        "pickProperties": [
            "properties.latest_run.web_job_name",
            "properties.latest_run.start_time",
            "properties.latest_run.end_time",
            "properties.latest_run.duration",
            "properties.latest_run.output_url",
            "properties.latest_run.error_url",
            "properties.latest_run.url",
            "properties.latest_run.job_name",
            "properties.latest_run.trigger",
            "properties.history_url",
            "properties.scheduler_logs_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk"
        ],
        "pickPropertiesCreate": [
            "properties.latest_run.web_job_name",
            "properties.latest_run.start_time",
            "properties.latest_run.end_time",
            "properties.latest_run.duration",
            "properties.latest_run.output_url",
            "properties.latest_run.error_url",
            "properties.latest_run.url",
            "properties.latest_run.job_name",
            "properties.latest_run.trigger",
            "properties.history_url",
            "properties.scheduler_logs_url",
            "properties.run_command",
            "properties.url",
            "properties.extra_info_url",
            "properties.web_job_type",
            "properties.error",
            "properties.using_sdk"
        ]
    },
    {
        "type": "WebAppVnetConnection",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_GetVnetConnection"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_CreateOrUpdateVnetConnection"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_DeleteVnetConnection"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_UpdateVnetConnection"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections",
                "operationId": "WebApps_ListVnetConnections"
            }
        },
        "omitProperties": [
            "properties.vnetResourceId",
            "properties.certThumbprint",
            "properties.routes",
            "properties.resyncRequired"
        ],
        "pickProperties": [
            "properties.certBlob",
            "properties.dnsServers",
            "properties.isSwift"
        ],
        "pickPropertiesCreate": [
            "properties.certBlob",
            "properties.dnsServers",
            "properties.isSwift"
        ]
    },
    {
        "type": "WebAppVnetConnectionSlot",
        "group": "Web",
        "apiVersion": "2021-03-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "name": {
                "type": "Site",
                "group": "Web",
                "name": "name",
                "parent": true
            },
            "slot": {
                "type": "SiteSlot",
                "group": "Web",
                "name": "slot",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_GetVnetConnectionSlot"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_CreateOrUpdateVnetConnectionSlot"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_DeleteVnetConnectionSlot"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}",
                "operationId": "WebApps_UpdateVnetConnectionSlot"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections",
                "operationId": "WebApps_ListVnetConnectionsSlot"
            }
        },
        "omitProperties": [
            "properties.vnetResourceId",
            "properties.certThumbprint",
            "properties.routes",
            "properties.resyncRequired"
        ],
        "pickProperties": [
            "properties.certBlob",
            "properties.dnsServers",
            "properties.isSwift"
        ],
        "pickPropertiesCreate": [
            "properties.certBlob",
            "properties.dnsServers",
            "properties.isSwift"
        ]
    }
]