[
    {
        "type": "BlobContainer",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
                "operationId": "BlobContainers_Create"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
                "operationId": "BlobContainers_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
                "operationId": "BlobContainers_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}",
                "operationId": "BlobContainers_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers",
                "operationId": "BlobContainers_List"
            }
        },
        "omitProperties": [
            "properties.version",
            "properties.deleted",
            "properties.deletedTime",
            "properties.remainingRetentionDays",
            "properties.lastModifiedTime",
            "properties.leaseStatus",
            "properties.leaseState",
            "properties.leaseDuration",
            "properties.immutabilityPolicy",
            "properties.legalHold",
            "properties.hasLegalHold",
            "properties.hasImmutabilityPolicy",
            "properties.immutableStorageWithVersioning.timeStamp",
            "properties.immutableStorageWithVersioning.migrationState"
        ],
        "pickProperties": [
            "properties.defaultEncryptionScope",
            "properties.denyEncryptionScopeOverride",
            "properties.publicAccess",
            "properties.immutableStorageWithVersioning.enabled",
            "properties.enableNfsV3RootSquash",
            "properties.enableNfsV3AllSquash"
        ],
        "pickPropertiesCreate": [
            "properties.defaultEncryptionScope",
            "properties.denyEncryptionScopeOverride",
            "properties.publicAccess",
            "properties.immutableStorageWithVersioning.enabled",
            "properties.enableNfsV3RootSquash",
            "properties.enableNfsV3AllSquash"
        ]
    },
    {
        "type": "BlobService",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}",
                "operationId": "BlobServices_SetServiceProperties"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}",
                "operationId": "BlobServices_GetServiceProperties"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices",
                "operationId": "BlobServices_List"
            }
        },
        "omitProperties": [
            "properties.restorePolicy.lastEnabledTime",
            "properties.restorePolicy.minRestoreTime",
            "sku"
        ],
        "pickProperties": [
            "properties.cors.corsRules[].maxAgeInSeconds",
            "properties.defaultServiceVersion",
            "properties.deleteRetentionPolicy.enabled",
            "properties.deleteRetentionPolicy.days",
            "properties.deleteRetentionPolicy.allowPermanentDelete",
            "properties.isVersioningEnabled",
            "properties.automaticSnapshotPolicyEnabled",
            "properties.changeFeed.enabled",
            "properties.changeFeed.retentionInDays",
            "properties.restorePolicy.enabled",
            "properties.restorePolicy.days",
            "properties.containerDeleteRetentionPolicy.enabled",
            "properties.containerDeleteRetentionPolicy.days",
            "properties.containerDeleteRetentionPolicy.allowPermanentDelete",
            "properties.lastAccessTimeTrackingPolicy.enable",
            "properties.lastAccessTimeTrackingPolicy.name",
            "properties.lastAccessTimeTrackingPolicy.trackingGranularityInDays"
        ],
        "pickPropertiesCreate": [
            "properties.cors.corsRules[].maxAgeInSeconds",
            "properties.defaultServiceVersion",
            "properties.deleteRetentionPolicy.enabled",
            "properties.deleteRetentionPolicy.days",
            "properties.deleteRetentionPolicy.allowPermanentDelete",
            "properties.isVersioningEnabled",
            "properties.automaticSnapshotPolicyEnabled",
            "properties.changeFeed.enabled",
            "properties.changeFeed.retentionInDays",
            "properties.restorePolicy.enabled",
            "properties.restorePolicy.days",
            "properties.containerDeleteRetentionPolicy.enabled",
            "properties.containerDeleteRetentionPolicy.days",
            "properties.containerDeleteRetentionPolicy.allowPermanentDelete",
            "properties.lastAccessTimeTrackingPolicy.enable",
            "properties.lastAccessTimeTrackingPolicy.name",
            "properties.lastAccessTimeTrackingPolicy.trackingGranularityInDays"
        ]
    },
    {
        "type": "EncryptionScope",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
                "operationId": "EncryptionScopes_Put"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
                "operationId": "EncryptionScopes_Patch"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}",
                "operationId": "EncryptionScopes_Get"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes",
                "operationId": "EncryptionScopes_List"
            }
        },
        "omitProperties": [
            "properties.state",
            "properties.creationTime",
            "properties.lastModifiedTime",
            "properties.keyVaultProperties.currentVersionedKeyIdentifier",
            "properties.keyVaultProperties.lastKeyRotationTimestamp"
        ],
        "pickProperties": [
            "properties.source",
            "properties.keyVaultProperties.keyUri",
            "properties.requireInfrastructureEncryption"
        ],
        "pickPropertiesCreate": [
            "properties.source",
            "properties.keyVaultProperties.keyUri",
            "properties.requireInfrastructureEncryption"
        ]
    },
    {
        "type": "FileService",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}",
                "operationId": "FileServices_SetServiceProperties"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}",
                "operationId": "FileServices_GetServiceProperties"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices",
                "operationId": "FileServices_List"
            }
        },
        "omitProperties": [
            "sku"
        ],
        "pickProperties": [
            "properties.cors.corsRules[].maxAgeInSeconds",
            "properties.shareDeleteRetentionPolicy.enabled",
            "properties.shareDeleteRetentionPolicy.days",
            "properties.shareDeleteRetentionPolicy.allowPermanentDelete",
            "properties.protocolSettings.smb.multichannel.enabled",
            "properties.protocolSettings.smb.versions",
            "properties.protocolSettings.smb.authenticationMethods",
            "properties.protocolSettings.smb.kerberosTicketEncryption",
            "properties.protocolSettings.smb.channelEncryption"
        ],
        "pickPropertiesCreate": [
            "properties.cors.corsRules[].maxAgeInSeconds",
            "properties.shareDeleteRetentionPolicy.enabled",
            "properties.shareDeleteRetentionPolicy.days",
            "properties.shareDeleteRetentionPolicy.allowPermanentDelete",
            "properties.protocolSettings.smb.multichannel.enabled",
            "properties.protocolSettings.smb.versions",
            "properties.protocolSettings.smb.authenticationMethods",
            "properties.protocolSettings.smb.kerberosTicketEncryption",
            "properties.protocolSettings.smb.channelEncryption"
        ]
    },
    {
        "type": "FileShare",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
                "operationId": "FileShares_Create"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
                "operationId": "FileShares_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
                "operationId": "FileShares_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}",
                "operationId": "FileShares_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares",
                "operationId": "FileShares_List"
            }
        },
        "omitProperties": [
            "properties.lastModifiedTime",
            "properties.version",
            "properties.deleted",
            "properties.deletedTime",
            "properties.remainingRetentionDays",
            "properties.accessTierChangeTime",
            "properties.accessTierStatus",
            "properties.shareUsageBytes",
            "properties.leaseStatus",
            "properties.leaseState",
            "properties.leaseDuration",
            "properties.snapshotTime"
        ],
        "pickProperties": [
            "properties.shareQuota",
            "properties.enabledProtocols",
            "properties.rootSquash",
            "properties.accessTier",
            "properties.signedIdentifiers[].accessPolicy.startTime",
            "properties.signedIdentifiers[].accessPolicy.expiryTime",
            "properties.signedIdentifiers[].accessPolicy.permission"
        ],
        "pickPropertiesCreate": [
            "properties.shareQuota",
            "properties.enabledProtocols",
            "properties.rootSquash",
            "properties.accessTier",
            "properties.signedIdentifiers[].accessPolicy.startTime",
            "properties.signedIdentifiers[].accessPolicy.expiryTime",
            "properties.signedIdentifiers[].accessPolicy.permission"
        ]
    },
    {
        "type": "LocalUser",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}",
                "operationId": "LocalUsers_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}",
                "operationId": "LocalUsers_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}",
                "operationId": "LocalUsers_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers",
                "operationId": "LocalUsers_List"
            }
        },
        "omitProperties": [
            "properties.sid",
            "properties.hasSshPassword",
            "systemData"
        ],
        "pickProperties": [
            "properties.permissionScopes[].permissions",
            "properties.permissionScopes[].service",
            "properties.permissionScopes[].resourceName",
            "properties.homeDirectory",
            "properties.sshAuthorizedKeys[].description",
            "properties.sshAuthorizedKeys[].key",
            "properties.hasSharedKey",
            "properties.hasSshKey"
        ],
        "pickPropertiesCreate": [
            "properties.permissionScopes[].permissions",
            "properties.permissionScopes[].service",
            "properties.permissionScopes[].resourceName",
            "properties.homeDirectory",
            "properties.sshAuthorizedKeys[].description",
            "properties.sshAuthorizedKeys[].key",
            "properties.hasSharedKey",
            "properties.hasSshKey"
        ],
        "environmentVariables": [
            {
                "path": "properties.hasSshPassword",
                "suffix": "HAS_SSH_PASSWORD"
            }
        ]
    },
    {
        "type": "ObjectReplicationPolicy",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}",
                "operationId": "ObjectReplicationPolicies_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}",
                "operationId": "ObjectReplicationPolicies_CreateOrUpdate"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}",
                "operationId": "ObjectReplicationPolicies_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies",
                "operationId": "ObjectReplicationPolicies_List"
            }
        },
        "omitProperties": [
            "properties.policyId",
            "properties.enabledTime"
        ],
        "pickProperties": [
            "properties.sourceAccount",
            "properties.destinationAccount",
            "properties.rules[].sourceContainer",
            "properties.rules[].destinationContainer",
            "properties.rules[].filters.minCreationTime"
        ],
        "pickPropertiesCreate": [
            "properties.sourceAccount",
            "properties.destinationAccount",
            "properties.rules[].sourceContainer",
            "properties.rules[].destinationContainer",
            "properties.rules[].filters.minCreationTime"
        ]
    },
    {
        "type": "PrivateEndpointConnection",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Get"
            },
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Put"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}",
                "operationId": "PrivateEndpointConnections_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections",
                "operationId": "PrivateEndpointConnections_List"
            }
        },
        "omitProperties": [
            "properties.privateEndpoint.id",
            "properties.privateLinkServiceConnectionState",
            "properties.provisioningState"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "Queue",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}",
                "operationId": "Queue_Create"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}",
                "operationId": "Queue_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}",
                "operationId": "Queue_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}",
                "operationId": "Queue_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues",
                "operationId": "Queue_List"
            }
        },
        "omitProperties": [
            "properties.approximateMessageCount"
        ],
        "pickProperties": [],
        "pickPropertiesCreate": []
    },
    {
        "type": "QueueService",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}",
                "operationId": "QueueServices_SetServiceProperties"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}",
                "operationId": "QueueServices_GetServiceProperties"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices",
                "operationId": "QueueServices_List"
            }
        },
        "pickProperties": [
            "properties.cors.corsRules[].maxAgeInSeconds"
        ],
        "pickPropertiesCreate": [
            "properties.cors.corsRules[].maxAgeInSeconds"
        ]
    },
    {
        "type": "StorageAccount",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "managedIdentities": {
                "type": "UserAssignedIdentity",
                "group": "ManagedIdentity",
                "createOnly": true,
                "list": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
                "operationId": "StorageAccounts_Create"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
                "operationId": "StorageAccounts_Delete"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
                "operationId": "StorageAccounts_GetProperties"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}",
                "operationId": "StorageAccounts_Update"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts",
                "operationId": "StorageAccounts_List"
            }
        },
        "omitProperties": [
            "sku",
            "kind",
            "identity.principalId",
            "identity.tenantId",
            "properties.provisioningState",
            "properties.primaryEndpoints",
            "properties.primaryLocation",
            "properties.statusOfPrimary",
            "properties.lastGeoFailoverTime",
            "properties.secondaryLocation",
            "properties.statusOfSecondary",
            "properties.creationTime",
            "properties.customDomain",
            "properties.sasPolicy",
            "properties.keyPolicy",
            "properties.keyCreationTime",
            "properties.secondaryEndpoints",
            "properties.encryption",
            "properties.accessTier",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.domainGuid",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.domainSid",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.azureStorageSid",
            "properties.networkAcls",
            "properties.geoReplicationStats",
            "properties.failoverInProgress",
            "properties.largeFileSharesState",
            "properties.privateEndpointConnections",
            "properties.blobRestoreStatus",
            "properties.immutableStorageWithVersioning.immutabilityPolicy.state",
            "properties.storageAccountSkuConversionStatus"
        ],
        "pickProperties": [
            "identity.type",
            "extendedLocation.name",
            "extendedLocation.type",
            "properties.azureFilesIdentityBasedAuthentication.directoryServiceOptions",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.domainName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.netBiosDomainName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.forestName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.samAccountName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.accountType",
            "properties.azureFilesIdentityBasedAuthentication.defaultSharePermission",
            "properties.supportsHttpsTrafficOnly",
            "properties.isSftpEnabled",
            "properties.isLocalUserEnabled",
            "properties.isHnsEnabled",
            "properties.routingPreference.routingChoice",
            "properties.routingPreference.publishMicrosoftEndpoints",
            "properties.routingPreference.publishInternetEndpoints",
            "properties.allowBlobPublicAccess",
            "properties.minimumTlsVersion",
            "properties.allowSharedKeyAccess",
            "properties.isNfsV3Enabled",
            "properties.allowCrossTenantReplication",
            "properties.defaultToOAuthAuthentication",
            "properties.publicNetworkAccess",
            "properties.immutableStorageWithVersioning.enabled",
            "properties.immutableStorageWithVersioning.immutabilityPolicy.immutabilityPeriodSinceCreationInDays",
            "properties.immutableStorageWithVersioning.immutabilityPolicy.allowProtectedAppendWrites",
            "properties.allowedCopyScope",
            "properties.dnsEndpointType"
        ],
        "pickPropertiesCreate": [
            "sku.name",
            "kind",
            "location",
            "extendedLocation.name",
            "extendedLocation.type",
            "identity.type",
            "properties.allowedCopyScope",
            "properties.publicNetworkAccess",
            "properties.sasPolicy.sasExpirationPeriod",
            "properties.sasPolicy.expirationAction",
            "properties.keyPolicy.keyExpirationPeriodInDays",
            "properties.customDomain.name",
            "properties.customDomain.useSubDomainName",
            "properties.encryption.services.blob.enabled",
            "properties.encryption.services.blob.keyType",
            "properties.encryption.services.file.enabled",
            "properties.encryption.services.file.keyType",
            "properties.encryption.services.table.enabled",
            "properties.encryption.services.table.keyType",
            "properties.encryption.services.queue.enabled",
            "properties.encryption.services.queue.keyType",
            "properties.encryption.keySource",
            "properties.encryption.requireInfrastructureEncryption",
            "properties.encryption.keyvaultproperties.keyname",
            "properties.encryption.keyvaultproperties.keyversion",
            "properties.encryption.keyvaultproperties.keyvaulturi",
            "properties.encryption.identity.userAssignedIdentity",
            "properties.networkAcls.bypass",
            "properties.networkAcls.virtualNetworkRules[].action",
            "properties.networkAcls.ipRules[].value",
            "properties.networkAcls.ipRules[].action",
            "properties.networkAcls.defaultAction",
            "properties.accessTier",
            "properties.azureFilesIdentityBasedAuthentication.directoryServiceOptions",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.domainName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.netBiosDomainName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.forestName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.samAccountName",
            "properties.azureFilesIdentityBasedAuthentication.activeDirectoryProperties.accountType",
            "properties.azureFilesIdentityBasedAuthentication.defaultSharePermission",
            "properties.supportsHttpsTrafficOnly",
            "properties.isSftpEnabled",
            "properties.isLocalUserEnabled",
            "properties.isHnsEnabled",
            "properties.routingPreference.routingChoice",
            "properties.routingPreference.publishMicrosoftEndpoints",
            "properties.routingPreference.publishInternetEndpoints",
            "properties.allowBlobPublicAccess",
            "properties.minimumTlsVersion",
            "properties.allowSharedKeyAccess",
            "properties.isNfsV3Enabled",
            "properties.allowCrossTenantReplication",
            "properties.defaultToOAuthAuthentication",
            "properties.immutableStorageWithVersioning.enabled",
            "properties.immutableStorageWithVersioning.immutabilityPolicy.immutabilityPeriodSinceCreationInDays",
            "properties.immutableStorageWithVersioning.immutabilityPolicy.allowProtectedAppendWrites",
            "properties.dnsEndpointType"
        ],
        "propertiesDefault": {
            "properties": {
                "sasPolicy": {
                    "expirationAction": "Log"
                },
                "encryption": {
                    "keySource": "Microsoft.Storage"
                },
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow"
                }
            }
        }
    },
    {
        "type": "Table",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}",
                "operationId": "Table_Create"
            },
            "patch": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}",
                "operationId": "Table_Update"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}",
                "operationId": "Table_Get"
            },
            "delete": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}",
                "operationId": "Table_Delete"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables",
                "operationId": "Table_List"
            }
        },
        "omitProperties": [
            "properties.tableName"
        ],
        "pickProperties": [
            "properties.signedIdentifiers[].accessPolicy.startTime",
            "properties.signedIdentifiers[].accessPolicy.expiryTime",
            "properties.signedIdentifiers[].accessPolicy.permission"
        ],
        "pickPropertiesCreate": [
            "properties.signedIdentifiers[].accessPolicy.startTime",
            "properties.signedIdentifiers[].accessPolicy.expiryTime",
            "properties.signedIdentifiers[].accessPolicy.permission"
        ]
    },
    {
        "type": "TableService",
        "group": "Storage",
        "apiVersion": "2021-09-01",
        "dependencies": {
            "resourceGroup": {
                "type": "ResourceGroup",
                "group": "Resources",
                "name": "resourceGroupName",
                "parent": true
            },
            "account": {
                "type": "StorageAccount",
                "group": "Storage",
                "name": "accountName",
                "parent": true
            }
        },
        "methods": {
            "put": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}",
                "operationId": "TableServices_SetServiceProperties"
            },
            "get": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}",
                "operationId": "TableServices_GetServiceProperties"
            },
            "getAll": {
                "path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices",
                "operationId": "TableServices_List"
            }
        },
        "pickProperties": [
            "properties.cors.corsRules[].maxAgeInSeconds"
        ],
        "pickPropertiesCreate": [
            "properties.cors.corsRules[].maxAgeInSeconds"
        ]
    }
]