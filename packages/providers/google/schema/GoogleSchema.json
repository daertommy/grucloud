[
    {
        "typeFull": "organizations",
        "methods": {
            "get": {
                "id": "cloudresourcemanager.organizations.get",
                "path": "v3/organizations/{organizationsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "cloudresourcemanager.organizations.getIamPolicy",
                "path": "v3/organizations/{organizationsId}:getIamPolicy",
                "parameterOrder": [
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "search": {
                "id": "cloudresourcemanager.organizations.search",
                "path": "v3/organizations:search",
                "parameterOrder": [],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "id": "cloudresourcemanager.organizations.setIamPolicy",
                "path": "v3/organizations/{organizationsId}:setIamPolicy",
                "parameterOrder": [
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "cloudresourcemanager.organizations.testIamPermissions",
                "path": "v3/organizations/{organizationsId}:testIamPermissions",
                "parameterOrder": [
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "Organization",
        "groupType": "cloudresourcemanager::organizations",
        "group": "cloudresourcemanager",
        "baseUrl": "https://cloudresourcemanager.googleapis.com/",
        "dependencies": {}
    },
    {
        "typeFull": "addresses",
        "methods": {
            "aggregatedList": {
                "id": "compute.addresses.aggregatedList",
                "path": "projects/{project}/aggregated/addresses",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.addresses.delete",
                "path": "projects/{project}/regions/{region}/addresses/{address}",
                "parameterOrder": [
                    "project",
                    "region",
                    "address"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.addresses.get",
                "path": "projects/{project}/regions/{region}/addresses/{address}",
                "parameterOrder": [
                    "project",
                    "region",
                    "address"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.addresses.insert",
                "path": "projects/{project}/regions/{region}/addresses",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.addresses.list",
                "path": "projects/{project}/regions/{region}/addresses",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            }
        ],
        "type": "Address",
        "groupType": "compute::addresses",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            }
        }
    },
    {
        "typeFull": "autoscalers",
        "methods": {
            "aggregatedList": {
                "id": "compute.autoscalers.aggregatedList",
                "path": "projects/{project}/aggregated/autoscalers",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.autoscalers.delete",
                "path": "projects/{project}/zones/{zone}/autoscalers/{autoscaler}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "autoscaler"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.autoscalers.get",
                "path": "projects/{project}/zones/{zone}/autoscalers/{autoscaler}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "autoscaler"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.autoscalers.insert",
                "path": "projects/{project}/zones/{zone}/autoscalers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.autoscalers.list",
                "path": "projects/{project}/zones/{zone}/autoscalers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.autoscalers.patch",
                "path": "projects/{project}/zones/{zone}/autoscalers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "compute.autoscalers.update",
                "path": "projects/{project}/zones/{zone}/autoscalers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "target",
                "depId": "target"
            }
        ],
        "type": "Autoscaler",
        "groupType": "compute::autoscalers",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "backendBuckets",
        "methods": {
            "addSignedUrlKey": {
                "id": "compute.backendBuckets.addSignedUrlKey",
                "path": "projects/{project}/global/backendBuckets/{backendBucket}/addSignedUrlKey",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "compute.backendBuckets.delete",
                "path": "projects/{project}/global/backendBuckets/{backendBucket}",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "DELETE"
            },
            "deleteSignedUrlKey": {
                "id": "compute.backendBuckets.deleteSignedUrlKey",
                "path": "projects/{project}/global/backendBuckets/{backendBucket}/deleteSignedUrlKey",
                "parameterOrder": [
                    "project",
                    "backendBucket",
                    "keyName"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "compute.backendBuckets.get",
                "path": "projects/{project}/global/backendBuckets/{backendBucket}",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.backendBuckets.insert",
                "path": "projects/{project}/global/backendBuckets",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.backendBuckets.list",
                "path": "projects/{project}/global/backendBuckets",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.backendBuckets.patch",
                "path": "projects/{project}/global/backendBuckets/{backendBucket}",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "PATCH"
            },
            "setEdgeSecurityPolicy": {
                "id": "compute.backendBuckets.setEdgeSecurityPolicy",
                "path": "projects/{project}/global/backendBuckets/{backendBucket}/setEdgeSecurityPolicy",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "POST"
            },
            "update": {
                "id": "compute.backendBuckets.update",
                "path": "projects/{project}/global/backendBuckets/{backendBucket}",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "cdnPolicy.signedUrlCacheMaxAgeSec",
                "depId": "signedUrlCacheMaxAgeSec"
            }
        ],
        "type": "BackendBucket",
        "groupType": "compute::backendBuckets",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "backendServices",
        "methods": {
            "addSignedUrlKey": {
                "id": "compute.backendServices.addSignedUrlKey",
                "path": "projects/{project}/global/backendServices/{backendService}/addSignedUrlKey",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "id": "compute.backendServices.aggregatedList",
                "path": "projects/{project}/aggregated/backendServices",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.backendServices.delete",
                "path": "projects/{project}/global/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "DELETE"
            },
            "deleteSignedUrlKey": {
                "id": "compute.backendServices.deleteSignedUrlKey",
                "path": "projects/{project}/global/backendServices/{backendService}/deleteSignedUrlKey",
                "parameterOrder": [
                    "project",
                    "backendService",
                    "keyName"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "compute.backendServices.get",
                "path": "projects/{project}/global/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "GET"
            },
            "getHealth": {
                "id": "compute.backendServices.getHealth",
                "path": "projects/{project}/global/backendServices/{backendService}/getHealth",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "id": "compute.backendServices.insert",
                "path": "projects/{project}/global/backendServices",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.backendServices.list",
                "path": "projects/{project}/global/backendServices",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.backendServices.patch",
                "path": "projects/{project}/global/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "PATCH"
            },
            "setEdgeSecurityPolicy": {
                "id": "compute.backendServices.setEdgeSecurityPolicy",
                "path": "projects/{project}/global/backendServices/{backendService}/setEdgeSecurityPolicy",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "POST"
            },
            "setSecurityPolicy": {
                "id": "compute.backendServices.setSecurityPolicy",
                "path": "projects/{project}/global/backendServices/{backendService}/setSecurityPolicy",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "POST"
            },
            "update": {
                "id": "compute.backendServices.update",
                "path": "projects/{project}/global/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "cdnPolicy.signedUrlCacheMaxAgeSec",
                "depId": "signedUrlCacheMaxAgeSec"
            },
            {
                "pathId": "group",
                "depId": "group"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "securitySettings.clientTlsPolicy",
                "depId": "clientTlsPolicy"
            }
        ],
        "type": "BackendService",
        "groupType": "compute::backendServices",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "typeFull": "disks",
        "methods": {
            "addResourcePolicies": {
                "id": "compute.disks.addResourcePolicies",
                "path": "projects/{project}/zones/{zone}/disks/{disk}/addResourcePolicies",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "id": "compute.disks.aggregatedList",
                "path": "projects/{project}/aggregated/disks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "createSnapshot": {
                "id": "compute.disks.createSnapshot",
                "path": "projects/{project}/zones/{zone}/disks/{disk}/createSnapshot",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "compute.disks.delete",
                "path": "projects/{project}/zones/{zone}/disks/{disk}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.disks.get",
                "path": "projects/{project}/zones/{zone}/disks/{disk}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.disks.getIamPolicy",
                "path": "projects/{project}/zones/{zone}/disks/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.disks.insert",
                "path": "projects/{project}/zones/{zone}/disks",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.disks.list",
                "path": "projects/{project}/zones/{zone}/disks",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "removeResourcePolicies": {
                "id": "compute.disks.removeResourcePolicies",
                "path": "projects/{project}/zones/{zone}/disks/{disk}/removeResourcePolicies",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "resize": {
                "id": "compute.disks.resize",
                "path": "projects/{project}/zones/{zone}/disks/{disk}/resize",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "setIamPolicy": {
                "id": "compute.disks.setIamPolicy",
                "path": "projects/{project}/zones/{zone}/disks/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "setLabels": {
                "id": "compute.disks.setLabels",
                "path": "projects/{project}/zones/{zone}/disks/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.disks.testIamPermissions",
                "path": "projects/{project}/zones/{zone}/disks/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "sourceDisk",
                "depId": "sourceDisk"
            },
            {
                "pathId": "sourceSnapshot",
                "depId": "sourceSnapshot"
            },
            {
                "pathId": "type",
                "depId": "type"
            }
        ],
        "type": "Disk",
        "groupType": "compute::disks",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "externalVpnGateways",
        "methods": {
            "delete": {
                "id": "compute.externalVpnGateways.delete",
                "path": "projects/{project}/global/externalVpnGateways/{externalVpnGateway}",
                "parameterOrder": [
                    "project",
                    "externalVpnGateway"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.externalVpnGateways.get",
                "path": "projects/{project}/global/externalVpnGateways/{externalVpnGateway}",
                "parameterOrder": [
                    "project",
                    "externalVpnGateway"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.externalVpnGateways.insert",
                "path": "projects/{project}/global/externalVpnGateways",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.externalVpnGateways.list",
                "path": "projects/{project}/global/externalVpnGateways",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setLabels": {
                "id": "compute.externalVpnGateways.setLabels",
                "path": "projects/{project}/global/externalVpnGateways/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.externalVpnGateways.testIamPermissions",
                "path": "projects/{project}/global/externalVpnGateways/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "ExternalVpnGateway",
        "groupType": "compute::externalVpnGateways",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "firewalls",
        "methods": {
            "delete": {
                "id": "compute.firewalls.delete",
                "path": "projects/{project}/global/firewalls/{firewall}",
                "parameterOrder": [
                    "project",
                    "firewall"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.firewalls.get",
                "path": "projects/{project}/global/firewalls/{firewall}",
                "parameterOrder": [
                    "project",
                    "firewall"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.firewalls.insert",
                "path": "projects/{project}/global/firewalls",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.firewalls.list",
                "path": "projects/{project}/global/firewalls",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.firewalls.patch",
                "path": "projects/{project}/global/firewalls/{firewall}",
                "parameterOrder": [
                    "project",
                    "firewall"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "compute.firewalls.update",
                "path": "projects/{project}/global/firewalls/{firewall}",
                "parameterOrder": [
                    "project",
                    "firewall"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            }
        ],
        "type": "Firewall",
        "groupType": "compute::firewalls",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "typeFull": "forwardingRules",
        "methods": {
            "aggregatedList": {
                "id": "compute.forwardingRules.aggregatedList",
                "path": "projects/{project}/aggregated/forwardingRules",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.forwardingRules.delete",
                "path": "projects/{project}/regions/{region}/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "region",
                    "forwardingRule"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.forwardingRules.get",
                "path": "projects/{project}/regions/{region}/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "region",
                    "forwardingRule"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.forwardingRules.insert",
                "path": "projects/{project}/regions/{region}/forwardingRules",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.forwardingRules.list",
                "path": "projects/{project}/regions/{region}/forwardingRules",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.forwardingRules.patch",
                "path": "projects/{project}/regions/{region}/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "region",
                    "forwardingRule"
                ],
                "httpMethod": "PATCH"
            },
            "setLabels": {
                "id": "compute.forwardingRules.setLabels",
                "path": "projects/{project}/regions/{region}/forwardingRules/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "setTarget": {
                "id": "compute.forwardingRules.setTarget",
                "path": "projects/{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget",
                "parameterOrder": [
                    "project",
                    "region",
                    "forwardingRule"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "IPAddress",
                "depId": "IPAddress"
            }
        ],
        "type": "ForwardingRule",
        "groupType": "compute::forwardingRules",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "globalAddresses",
        "methods": {
            "delete": {
                "id": "compute.globalAddresses.delete",
                "path": "projects/{project}/global/addresses/{address}",
                "parameterOrder": [
                    "project",
                    "address"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.globalAddresses.get",
                "path": "projects/{project}/global/addresses/{address}",
                "parameterOrder": [
                    "project",
                    "address"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.globalAddresses.insert",
                "path": "projects/{project}/global/addresses",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.globalAddresses.list",
                "path": "projects/{project}/global/addresses",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            }
        ],
        "type": "GlobalAddress",
        "groupType": "compute::globalAddresses",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            }
        }
    },
    {
        "typeFull": "globalForwardingRules",
        "methods": {
            "delete": {
                "id": "compute.globalForwardingRules.delete",
                "path": "projects/{project}/global/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "forwardingRule"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.globalForwardingRules.get",
                "path": "projects/{project}/global/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "forwardingRule"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.globalForwardingRules.insert",
                "path": "projects/{project}/global/forwardingRules",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.globalForwardingRules.list",
                "path": "projects/{project}/global/forwardingRules",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.globalForwardingRules.patch",
                "path": "projects/{project}/global/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "forwardingRule"
                ],
                "httpMethod": "PATCH"
            },
            "setLabels": {
                "id": "compute.globalForwardingRules.setLabels",
                "path": "projects/{project}/global/forwardingRules/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "setTarget": {
                "id": "compute.globalForwardingRules.setTarget",
                "path": "projects/{project}/global/forwardingRules/{forwardingRule}/setTarget",
                "parameterOrder": [
                    "project",
                    "forwardingRule"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "IPAddress",
                "depId": "IPAddress"
            }
        ],
        "type": "GlobalForwardingRule",
        "groupType": "compute::globalForwardingRules",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "globalNetworkEndpointGroups",
        "methods": {
            "attachNetworkEndpoints": {
                "id": "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
                "path": "projects/{project}/global/networkEndpointGroups/{networkEndpointGroup}/attachNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "compute.globalNetworkEndpointGroups.delete",
                "path": "projects/{project}/global/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "networkEndpointGroup"
                ],
                "httpMethod": "DELETE"
            },
            "detachNetworkEndpoints": {
                "id": "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
                "path": "projects/{project}/global/networkEndpointGroups/{networkEndpointGroup}/detachNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "compute.globalNetworkEndpointGroups.get",
                "path": "projects/{project}/global/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "networkEndpointGroup"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.globalNetworkEndpointGroups.insert",
                "path": "projects/{project}/global/networkEndpointGroups",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.globalNetworkEndpointGroups.list",
                "path": "projects/{project}/global/networkEndpointGroups",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "listNetworkEndpoints": {
                "id": "compute.globalNetworkEndpointGroups.listNetworkEndpoints",
                "path": "projects/{project}/global/networkEndpointGroups/{networkEndpointGroup}/listNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "appEngine.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "cloudFunction.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "cloudRun.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            }
        ],
        "type": "GlobalNetworkEndpointGroup",
        "groupType": "compute::globalNetworkEndpointGroups",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            }
        }
    },
    {
        "typeFull": "globalPublicDelegatedPrefixes",
        "methods": {
            "delete": {
                "id": "compute.globalPublicDelegatedPrefixes.delete",
                "path": "projects/{project}/global/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.globalPublicDelegatedPrefixes.get",
                "path": "projects/{project}/global/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.globalPublicDelegatedPrefixes.insert",
                "path": "projects/{project}/global/publicDelegatedPrefixes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.globalPublicDelegatedPrefixes.list",
                "path": "projects/{project}/global/publicDelegatedPrefixes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.globalPublicDelegatedPrefixes.patch",
                "path": "projects/{project}/global/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "parentPrefix",
                "depId": "parentPrefix"
            }
        ],
        "type": "GlobalPublicDelegatedPrefix",
        "groupType": "compute::globalPublicDelegatedPrefixes",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "healthChecks",
        "methods": {
            "aggregatedList": {
                "id": "compute.healthChecks.aggregatedList",
                "path": "projects/{project}/aggregated/healthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.healthChecks.delete",
                "path": "projects/{project}/global/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "healthCheck"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.healthChecks.get",
                "path": "projects/{project}/global/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "healthCheck"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.healthChecks.insert",
                "path": "projects/{project}/global/healthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.healthChecks.list",
                "path": "projects/{project}/global/healthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.healthChecks.patch",
                "path": "projects/{project}/global/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "healthCheck"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "compute.healthChecks.update",
                "path": "projects/{project}/global/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "healthCheck"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [],
        "type": "HealthCheck",
        "groupType": "compute::healthChecks",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "httpHealthChecks",
        "methods": {
            "delete": {
                "id": "compute.httpHealthChecks.delete",
                "path": "projects/{project}/global/httpHealthChecks/{httpHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpHealthCheck"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.httpHealthChecks.get",
                "path": "projects/{project}/global/httpHealthChecks/{httpHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpHealthCheck"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.httpHealthChecks.insert",
                "path": "projects/{project}/global/httpHealthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.httpHealthChecks.list",
                "path": "projects/{project}/global/httpHealthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.httpHealthChecks.patch",
                "path": "projects/{project}/global/httpHealthChecks/{httpHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpHealthCheck"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "compute.httpHealthChecks.update",
                "path": "projects/{project}/global/httpHealthChecks/{httpHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpHealthCheck"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [],
        "type": "HttpHealthCheck",
        "groupType": "compute::httpHealthChecks",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "httpsHealthChecks",
        "methods": {
            "delete": {
                "id": "compute.httpsHealthChecks.delete",
                "path": "projects/{project}/global/httpsHealthChecks/{httpsHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpsHealthCheck"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.httpsHealthChecks.get",
                "path": "projects/{project}/global/httpsHealthChecks/{httpsHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpsHealthCheck"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.httpsHealthChecks.insert",
                "path": "projects/{project}/global/httpsHealthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.httpsHealthChecks.list",
                "path": "projects/{project}/global/httpsHealthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.httpsHealthChecks.patch",
                "path": "projects/{project}/global/httpsHealthChecks/{httpsHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpsHealthCheck"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "compute.httpsHealthChecks.update",
                "path": "projects/{project}/global/httpsHealthChecks/{httpsHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpsHealthCheck"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [],
        "type": "HttpsHealthCheck",
        "groupType": "compute::httpsHealthChecks",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "images",
        "methods": {
            "delete": {
                "id": "compute.images.delete",
                "path": "projects/{project}/global/images/{image}",
                "parameterOrder": [
                    "project",
                    "image"
                ],
                "httpMethod": "DELETE"
            },
            "deprecate": {
                "id": "compute.images.deprecate",
                "path": "projects/{project}/global/images/{image}/deprecate",
                "parameterOrder": [
                    "project",
                    "image"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "compute.images.get",
                "path": "projects/{project}/global/images/{image}",
                "parameterOrder": [
                    "project",
                    "image"
                ],
                "httpMethod": "GET"
            },
            "getFromFamily": {
                "id": "compute.images.getFromFamily",
                "path": "projects/{project}/global/images/family/{family}",
                "parameterOrder": [
                    "project",
                    "family"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.images.getIamPolicy",
                "path": "projects/{project}/global/images/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.images.insert",
                "path": "projects/{project}/global/images",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.images.list",
                "path": "projects/{project}/global/images",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.images.patch",
                "path": "projects/{project}/global/images/{image}",
                "parameterOrder": [
                    "project",
                    "image"
                ],
                "httpMethod": "PATCH"
            },
            "setIamPolicy": {
                "id": "compute.images.setIamPolicy",
                "path": "projects/{project}/global/images/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "setLabels": {
                "id": "compute.images.setLabels",
                "path": "projects/{project}/global/images/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.images.testIamPermissions",
                "path": "projects/{project}/global/images/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "deprecated.replacement",
                "depId": "replacement"
            },
            {
                "pathId": "rawDisk.source",
                "depId": "source"
            },
            {
                "pathId": "sourceDisk",
                "depId": "sourceDisk"
            },
            {
                "pathId": "sourceImage",
                "depId": "sourceImage"
            },
            {
                "pathId": "sourceSnapshot",
                "depId": "sourceSnapshot"
            }
        ],
        "type": "Image",
        "groupType": "compute::images",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "instanceGroupManagers",
        "methods": {
            "abandonInstances": {
                "id": "compute.instanceGroupManagers.abandonInstances",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/abandonInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "id": "compute.instanceGroupManagers.aggregatedList",
                "path": "projects/{project}/aggregated/instanceGroupManagers",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "applyUpdatesToInstances": {
                "id": "compute.instanceGroupManagers.applyUpdatesToInstances",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/applyUpdatesToInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "createInstances": {
                "id": "compute.instanceGroupManagers.createInstances",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/createInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "compute.instanceGroupManagers.delete",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "DELETE"
            },
            "deleteInstances": {
                "id": "compute.instanceGroupManagers.deleteInstances",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deleteInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "deletePerInstanceConfigs": {
                "id": "compute.instanceGroupManagers.deletePerInstanceConfigs",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deletePerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "compute.instanceGroupManagers.get",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.instanceGroupManagers.insert",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.instanceGroupManagers.list",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "listErrors": {
                "id": "compute.instanceGroupManagers.listErrors",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listErrors",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "GET"
            },
            "listManagedInstances": {
                "id": "compute.instanceGroupManagers.listManagedInstances",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "listPerInstanceConfigs": {
                "id": "compute.instanceGroupManagers.listPerInstanceConfigs",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listPerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "id": "compute.instanceGroupManagers.patch",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "PATCH"
            },
            "patchPerInstanceConfigs": {
                "id": "compute.instanceGroupManagers.patchPerInstanceConfigs",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/patchPerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "recreateInstances": {
                "id": "compute.instanceGroupManagers.recreateInstances",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/recreateInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "resize": {
                "id": "compute.instanceGroupManagers.resize",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resize",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager",
                    "size"
                ],
                "httpMethod": "POST"
            },
            "setInstanceTemplate": {
                "id": "compute.instanceGroupManagers.setInstanceTemplate",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "setTargetPools": {
                "id": "compute.instanceGroupManagers.setTargetPools",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setTargetPools",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "updatePerInstanceConfigs": {
                "id": "compute.instanceGroupManagers.updatePerInstanceConfigs",
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/updatePerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "distributionPolicy.zone",
                "depId": "zone"
            },
            {
                "pathId": "healthCheck",
                "depId": "healthCheck"
            },
            {
                "pathId": "instanceTemplate",
                "depId": "instanceTemplate"
            },
            {
                "pathId": "instanceTemplate",
                "depId": "instanceTemplate"
            }
        ],
        "type": "InstanceGroupManager",
        "groupType": "compute::instanceGroupManagers",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "healthCheck": {
                "type": "healthCheck",
                "group": "compute",
                "pathId": "healthCheck"
            },
            "instanceTemplate": {
                "type": "instanceTemplate",
                "group": "compute",
                "pathId": "instanceTemplate"
            }
        }
    },
    {
        "typeFull": "instanceGroups",
        "methods": {
            "addInstances": {
                "id": "compute.instanceGroups.addInstances",
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/addInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "id": "compute.instanceGroups.aggregatedList",
                "path": "projects/{project}/aggregated/instanceGroups",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.instanceGroups.delete",
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.instanceGroups.get",
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.instanceGroups.insert",
                "path": "projects/{project}/zones/{zone}/instanceGroups",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.instanceGroups.list",
                "path": "projects/{project}/zones/{zone}/instanceGroups",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "listInstances": {
                "id": "compute.instanceGroups.listInstances",
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/listInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "POST"
            },
            "removeInstances": {
                "id": "compute.instanceGroups.removeInstances",
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/removeInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "POST"
            },
            "setNamedPorts": {
                "id": "compute.instanceGroups.setNamedPorts",
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/setNamedPorts",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "InstanceGroup",
        "groupType": "compute::instanceGroups",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "instances",
        "methods": {
            "addAccessConfig": {
                "id": "compute.instances.addAccessConfig",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/addAccessConfig",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "networkInterface"
                ],
                "httpMethod": "POST"
            },
            "addResourcePolicies": {
                "id": "compute.instances.addResourcePolicies",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/addResourcePolicies",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "id": "compute.instances.aggregatedList",
                "path": "projects/{project}/aggregated/instances",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "attachDisk": {
                "id": "compute.instances.attachDisk",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/attachDisk",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "bulkInsert": {
                "id": "compute.instances.bulkInsert",
                "path": "projects/{project}/zones/{zone}/instances/bulkInsert",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "compute.instances.delete",
                "path": "projects/{project}/zones/{zone}/instances/{instance}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "DELETE"
            },
            "deleteAccessConfig": {
                "id": "compute.instances.deleteAccessConfig",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/deleteAccessConfig",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "accessConfig",
                    "networkInterface"
                ],
                "httpMethod": "POST"
            },
            "detachDisk": {
                "id": "compute.instances.detachDisk",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/detachDisk",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "deviceName"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "compute.instances.get",
                "path": "projects/{project}/zones/{zone}/instances/{instance}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "getEffectiveFirewalls": {
                "id": "compute.instances.getEffectiveFirewalls",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/getEffectiveFirewalls",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "networkInterface"
                ],
                "httpMethod": "GET"
            },
            "getGuestAttributes": {
                "id": "compute.instances.getGuestAttributes",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/getGuestAttributes",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.instances.getIamPolicy",
                "path": "projects/{project}/zones/{zone}/instances/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "getScreenshot": {
                "id": "compute.instances.getScreenshot",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/screenshot",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "getSerialPortOutput": {
                "id": "compute.instances.getSerialPortOutput",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/serialPort",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "getShieldedInstanceIdentity": {
                "id": "compute.instances.getShieldedInstanceIdentity",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/getShieldedInstanceIdentity",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.instances.insert",
                "path": "projects/{project}/zones/{zone}/instances",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.instances.list",
                "path": "projects/{project}/zones/{zone}/instances",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "listReferrers": {
                "id": "compute.instances.listReferrers",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/referrers",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "removeResourcePolicies": {
                "id": "compute.instances.removeResourcePolicies",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/removeResourcePolicies",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "reset": {
                "id": "compute.instances.reset",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/reset",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "resume": {
                "id": "compute.instances.resume",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/resume",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "sendDiagnosticInterrupt": {
                "id": "compute.instances.sendDiagnosticInterrupt",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/sendDiagnosticInterrupt",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setDeletionProtection": {
                "id": "compute.instances.setDeletionProtection",
                "path": "projects/{project}/zones/{zone}/instances/{resource}/setDeletionProtection",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "setDiskAutoDelete": {
                "id": "compute.instances.setDiskAutoDelete",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "autoDelete",
                    "deviceName"
                ],
                "httpMethod": "POST"
            },
            "setIamPolicy": {
                "id": "compute.instances.setIamPolicy",
                "path": "projects/{project}/zones/{zone}/instances/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "setLabels": {
                "id": "compute.instances.setLabels",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setLabels",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setMachineResources": {
                "id": "compute.instances.setMachineResources",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setMachineResources",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setMachineType": {
                "id": "compute.instances.setMachineType",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setMachineType",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setMetadata": {
                "id": "compute.instances.setMetadata",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setMetadata",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setMinCpuPlatform": {
                "id": "compute.instances.setMinCpuPlatform",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setMinCpuPlatform",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setScheduling": {
                "id": "compute.instances.setScheduling",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setScheduling",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setServiceAccount": {
                "id": "compute.instances.setServiceAccount",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setServiceAccount",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setShieldedInstanceIntegrityPolicy": {
                "id": "compute.instances.setShieldedInstanceIntegrityPolicy",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setShieldedInstanceIntegrityPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "PATCH"
            },
            "setTags": {
                "id": "compute.instances.setTags",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setTags",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "simulateMaintenanceEvent": {
                "id": "compute.instances.simulateMaintenanceEvent",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/simulateMaintenanceEvent",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "start": {
                "id": "compute.instances.start",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/start",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "startWithEncryptionKey": {
                "id": "compute.instances.startWithEncryptionKey",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/startWithEncryptionKey",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "stop": {
                "id": "compute.instances.stop",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/stop",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "suspend": {
                "id": "compute.instances.suspend",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/suspend",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.instances.testIamPermissions",
                "path": "projects/{project}/zones/{zone}/instances/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "update": {
                "id": "compute.instances.update",
                "path": "projects/{project}/zones/{zone}/instances/{instance}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "PUT"
            },
            "updateAccessConfig": {
                "id": "compute.instances.updateAccessConfig",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/updateAccessConfig",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "networkInterface"
                ],
                "httpMethod": "POST"
            },
            "updateDisplayDevice": {
                "id": "compute.instances.updateDisplayDevice",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/updateDisplayDevice",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "PATCH"
            },
            "updateNetworkInterface": {
                "id": "compute.instances.updateNetworkInterface",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/updateNetworkInterface",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "networkInterface"
                ],
                "httpMethod": "PATCH"
            },
            "updateShieldedInstanceConfig": {
                "id": "compute.instances.updateShieldedInstanceConfig",
                "path": "projects/{project}/zones/{zone}/instances/{instance}/updateShieldedInstanceConfig",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "acceleratorType",
                "depId": "acceleratorType"
            },
            {
                "pathId": "initializeParams.diskType",
                "depId": "diskType"
            },
            {
                "pathId": "machineType",
                "depId": "machineType"
            },
            {
                "pathId": "metadata.key",
                "depId": "key"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "source",
                "depId": "source"
            },
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            }
        ],
        "type": "Instance",
        "groupType": "compute::instances",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "key": {
                "type": "key",
                "group": "iam",
                "pathId": "metadata.key"
            },
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            }
        }
    },
    {
        "typeFull": "instanceTemplates",
        "methods": {
            "delete": {
                "id": "compute.instanceTemplates.delete",
                "path": "projects/{project}/global/instanceTemplates/{instanceTemplate}",
                "parameterOrder": [
                    "project",
                    "instanceTemplate"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.instanceTemplates.get",
                "path": "projects/{project}/global/instanceTemplates/{instanceTemplate}",
                "parameterOrder": [
                    "project",
                    "instanceTemplate"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.instanceTemplates.getIamPolicy",
                "path": "projects/{project}/global/instanceTemplates/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.instanceTemplates.insert",
                "path": "projects/{project}/global/instanceTemplates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.instanceTemplates.list",
                "path": "projects/{project}/global/instanceTemplates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "id": "compute.instanceTemplates.setIamPolicy",
                "path": "projects/{project}/global/instanceTemplates/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.instanceTemplates.testIamPermissions",
                "path": "projects/{project}/global/instanceTemplates/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "properties.acceleratorType",
                "depId": "acceleratorType"
            },
            {
                "pathId": "properties.initializeParams.diskType",
                "depId": "diskType"
            },
            {
                "pathId": "properties.metadata.key",
                "depId": "key"
            },
            {
                "pathId": "properties.network",
                "depId": "network"
            },
            {
                "pathId": "properties.source",
                "depId": "source"
            },
            {
                "pathId": "properties.subnetwork",
                "depId": "subnetwork"
            },
            {
                "pathId": "sourceInstance",
                "depId": "sourceInstance"
            }
        ],
        "type": "InstanceTemplate",
        "groupType": "compute::instanceTemplates",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "key": {
                "type": "key",
                "group": "iam",
                "pathId": "properties.metadata.key"
            },
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "properties.network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "properties.subnetwork"
            }
        }
    },
    {
        "typeFull": "interconnectAttachments",
        "methods": {
            "aggregatedList": {
                "id": "compute.interconnectAttachments.aggregatedList",
                "path": "projects/{project}/aggregated/interconnectAttachments",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.interconnectAttachments.delete",
                "path": "projects/{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "interconnectAttachment"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.interconnectAttachments.get",
                "path": "projects/{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "interconnectAttachment"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.interconnectAttachments.insert",
                "path": "projects/{project}/regions/{region}/interconnectAttachments",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.interconnectAttachments.list",
                "path": "projects/{project}/regions/{region}/interconnectAttachments",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.interconnectAttachments.patch",
                "path": "projects/{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "interconnectAttachment"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "interconnect",
                "depId": "interconnect"
            },
            {
                "pathId": "partnerMetadata.portalUrl",
                "depId": "portalUrl"
            },
            {
                "pathId": "router",
                "depId": "router"
            }
        ],
        "type": "InterconnectAttachment",
        "groupType": "compute::interconnectAttachments",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "interconnect": {
                "type": "interconnect",
                "group": "compute",
                "pathId": "interconnect"
            },
            "router": {
                "type": "router",
                "group": "compute",
                "pathId": "router"
            }
        }
    },
    {
        "typeFull": "interconnects",
        "methods": {
            "delete": {
                "id": "compute.interconnects.delete",
                "path": "projects/{project}/global/interconnects/{interconnect}",
                "parameterOrder": [
                    "project",
                    "interconnect"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.interconnects.get",
                "path": "projects/{project}/global/interconnects/{interconnect}",
                "parameterOrder": [
                    "project",
                    "interconnect"
                ],
                "httpMethod": "GET"
            },
            "getDiagnostics": {
                "id": "compute.interconnects.getDiagnostics",
                "path": "projects/{project}/global/interconnects/{interconnect}/getDiagnostics",
                "parameterOrder": [
                    "project",
                    "interconnect"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.interconnects.insert",
                "path": "projects/{project}/global/interconnects",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.interconnects.list",
                "path": "projects/{project}/global/interconnects",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.interconnects.patch",
                "path": "projects/{project}/global/interconnects/{interconnect}",
                "parameterOrder": [
                    "project",
                    "interconnect"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "location",
                "depId": "location"
            }
        ],
        "type": "Interconnect",
        "groupType": "compute::interconnects",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "licenses",
        "methods": {
            "delete": {
                "id": "compute.licenses.delete",
                "path": "projects/{project}/global/licenses/{license}",
                "parameterOrder": [
                    "project",
                    "license"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.licenses.get",
                "path": "projects/{project}/global/licenses/{license}",
                "parameterOrder": [
                    "project",
                    "license"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.licenses.getIamPolicy",
                "path": "projects/{project}/global/licenses/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.licenses.insert",
                "path": "projects/{project}/global/licenses",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.licenses.list",
                "path": "projects/{project}/global/licenses",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "id": "compute.licenses.setIamPolicy",
                "path": "projects/{project}/global/licenses/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.licenses.testIamPermissions",
                "path": "projects/{project}/global/licenses/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "License",
        "groupType": "compute::licenses",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "machineImages",
        "methods": {
            "delete": {
                "id": "compute.machineImages.delete",
                "path": "projects/{project}/global/machineImages/{machineImage}",
                "parameterOrder": [
                    "project",
                    "machineImage"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.machineImages.get",
                "path": "projects/{project}/global/machineImages/{machineImage}",
                "parameterOrder": [
                    "project",
                    "machineImage"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.machineImages.getIamPolicy",
                "path": "projects/{project}/global/machineImages/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.machineImages.insert",
                "path": "projects/{project}/global/machineImages",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.machineImages.list",
                "path": "projects/{project}/global/machineImages",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "id": "compute.machineImages.setIamPolicy",
                "path": "projects/{project}/global/machineImages/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.machineImages.testIamPermissions",
                "path": "projects/{project}/global/machineImages/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "instanceProperties.acceleratorType",
                "depId": "acceleratorType"
            },
            {
                "pathId": "instanceProperties.initializeParams.diskType",
                "depId": "diskType"
            },
            {
                "pathId": "instanceProperties.metadata.key",
                "depId": "key"
            },
            {
                "pathId": "instanceProperties.network",
                "depId": "network"
            },
            {
                "pathId": "instanceProperties.source",
                "depId": "source"
            },
            {
                "pathId": "instanceProperties.subnetwork",
                "depId": "subnetwork"
            },
            {
                "pathId": "sourceDisk",
                "depId": "sourceDisk"
            },
            {
                "pathId": "sourceDisk",
                "depId": "sourceDisk"
            },
            {
                "pathId": "sourceInstance",
                "depId": "sourceInstance"
            },
            {
                "pathId": "sourceInstanceProperties.acceleratorType",
                "depId": "acceleratorType"
            },
            {
                "pathId": "sourceInstanceProperties.metadata.key",
                "depId": "key"
            },
            {
                "pathId": "sourceInstanceProperties.network",
                "depId": "network"
            },
            {
                "pathId": "sourceInstanceProperties.source",
                "depId": "source"
            },
            {
                "pathId": "sourceInstanceProperties.subnetwork",
                "depId": "subnetwork"
            }
        ],
        "type": "MachineImage",
        "groupType": "compute::machineImages",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "key": {
                "type": "key",
                "group": "iam",
                "pathId": "sourceInstanceProperties.metadata.key"
            },
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "sourceInstanceProperties.network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "sourceInstanceProperties.subnetwork"
            }
        }
    },
    {
        "typeFull": "networkEndpointGroups",
        "methods": {
            "aggregatedList": {
                "id": "compute.networkEndpointGroups.aggregatedList",
                "path": "projects/{project}/aggregated/networkEndpointGroups",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "attachNetworkEndpoints": {
                "id": "compute.networkEndpointGroups.attachNetworkEndpoints",
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}/attachNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "zone",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "compute.networkEndpointGroups.delete",
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "networkEndpointGroup"
                ],
                "httpMethod": "DELETE"
            },
            "detachNetworkEndpoints": {
                "id": "compute.networkEndpointGroups.detachNetworkEndpoints",
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}/detachNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "zone",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "compute.networkEndpointGroups.get",
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "networkEndpointGroup"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.networkEndpointGroups.insert",
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.networkEndpointGroups.list",
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "listNetworkEndpoints": {
                "id": "compute.networkEndpointGroups.listNetworkEndpoints",
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}/listNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "zone",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.networkEndpointGroups.testIamPermissions",
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "appEngine.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "cloudFunction.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "cloudRun.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            }
        ],
        "type": "NetworkEndpointGroup",
        "groupType": "compute::networkEndpointGroups",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            }
        }
    },
    {
        "typeFull": "networkFirewallPolicies",
        "methods": {
            "addAssociation": {
                "id": "compute.networkFirewallPolicies.addAssociation",
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/addAssociation",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "addRule": {
                "id": "compute.networkFirewallPolicies.addRule",
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/addRule",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "cloneRules": {
                "id": "compute.networkFirewallPolicies.cloneRules",
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/cloneRules",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "compute.networkFirewallPolicies.delete",
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.networkFirewallPolicies.get",
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "getAssociation": {
                "id": "compute.networkFirewallPolicies.getAssociation",
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/getAssociation",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.networkFirewallPolicies.getIamPolicy",
                "path": "projects/{project}/global/firewallPolicies/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "getRule": {
                "id": "compute.networkFirewallPolicies.getRule",
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/getRule",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.networkFirewallPolicies.insert",
                "path": "projects/{project}/global/firewallPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.networkFirewallPolicies.list",
                "path": "projects/{project}/global/firewallPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.networkFirewallPolicies.patch",
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "PATCH"
            },
            "patchRule": {
                "id": "compute.networkFirewallPolicies.patchRule",
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/patchRule",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "removeAssociation": {
                "id": "compute.networkFirewallPolicies.removeAssociation",
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/removeAssociation",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "removeRule": {
                "id": "compute.networkFirewallPolicies.removeRule",
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/removeRule",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "setIamPolicy": {
                "id": "compute.networkFirewallPolicies.setIamPolicy",
                "path": "projects/{project}/global/firewallPolicies/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.networkFirewallPolicies.testIamPermissions",
                "path": "projects/{project}/global/firewallPolicies/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "NetworkFirewallPolicy",
        "groupType": "compute::networkFirewallPolicies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "networks",
        "methods": {
            "addPeering": {
                "id": "compute.networks.addPeering",
                "path": "projects/{project}/global/networks/{network}/addPeering",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "compute.networks.delete",
                "path": "projects/{project}/global/networks/{network}",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.networks.get",
                "path": "projects/{project}/global/networks/{network}",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "GET"
            },
            "getEffectiveFirewalls": {
                "id": "compute.networks.getEffectiveFirewalls",
                "path": "projects/{project}/global/networks/{network}/getEffectiveFirewalls",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.networks.insert",
                "path": "projects/{project}/global/networks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.networks.list",
                "path": "projects/{project}/global/networks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "listPeeringRoutes": {
                "id": "compute.networks.listPeeringRoutes",
                "path": "projects/{project}/global/networks/{network}/listPeeringRoutes",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.networks.patch",
                "path": "projects/{project}/global/networks/{network}",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "PATCH"
            },
            "removePeering": {
                "id": "compute.networks.removePeering",
                "path": "projects/{project}/global/networks/{network}/removePeering",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "POST"
            },
            "switchToCustomMode": {
                "id": "compute.networks.switchToCustomMode",
                "path": "projects/{project}/global/networks/{network}/switchToCustomMode",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "POST"
            },
            "updatePeering": {
                "id": "compute.networks.updatePeering",
                "path": "projects/{project}/global/networks/{network}/updatePeering",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            }
        ],
        "type": "Network",
        "groupType": "compute::networks",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "typeFull": "nodeGroups",
        "methods": {
            "addNodes": {
                "id": "compute.nodeGroups.addNodes",
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}/addNodes",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "id": "compute.nodeGroups.aggregatedList",
                "path": "projects/{project}/aggregated/nodeGroups",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.nodeGroups.delete",
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "DELETE"
            },
            "deleteNodes": {
                "id": "compute.nodeGroups.deleteNodes",
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}/deleteNodes",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "compute.nodeGroups.get",
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.nodeGroups.getIamPolicy",
                "path": "projects/{project}/zones/{zone}/nodeGroups/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.nodeGroups.insert",
                "path": "projects/{project}/zones/{zone}/nodeGroups",
                "parameterOrder": [
                    "project",
                    "zone",
                    "initialNodeCount"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.nodeGroups.list",
                "path": "projects/{project}/zones/{zone}/nodeGroups",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "listNodes": {
                "id": "compute.nodeGroups.listNodes",
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}/listNodes",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "id": "compute.nodeGroups.patch",
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "PATCH"
            },
            "setIamPolicy": {
                "id": "compute.nodeGroups.setIamPolicy",
                "path": "projects/{project}/zones/{zone}/nodeGroups/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "setNodeTemplate": {
                "id": "compute.nodeGroups.setNodeTemplate",
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}/setNodeTemplate",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.nodeGroups.testIamPermissions",
                "path": "projects/{project}/zones/{zone}/nodeGroups/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "nodeTemplate",
                "depId": "nodeTemplate"
            }
        ],
        "type": "NodeGroup",
        "groupType": "compute::nodeGroups",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "nodeTemplate": {
                "type": "nodeTemplate",
                "group": "compute",
                "pathId": "nodeTemplate"
            }
        }
    },
    {
        "typeFull": "nodeTemplates",
        "methods": {
            "aggregatedList": {
                "id": "compute.nodeTemplates.aggregatedList",
                "path": "projects/{project}/aggregated/nodeTemplates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.nodeTemplates.delete",
                "path": "projects/{project}/regions/{region}/nodeTemplates/{nodeTemplate}",
                "parameterOrder": [
                    "project",
                    "region",
                    "nodeTemplate"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.nodeTemplates.get",
                "path": "projects/{project}/regions/{region}/nodeTemplates/{nodeTemplate}",
                "parameterOrder": [
                    "project",
                    "region",
                    "nodeTemplate"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.nodeTemplates.getIamPolicy",
                "path": "projects/{project}/regions/{region}/nodeTemplates/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.nodeTemplates.insert",
                "path": "projects/{project}/regions/{region}/nodeTemplates",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.nodeTemplates.list",
                "path": "projects/{project}/regions/{region}/nodeTemplates",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "id": "compute.nodeTemplates.setIamPolicy",
                "path": "projects/{project}/regions/{region}/nodeTemplates/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.nodeTemplates.testIamPermissions",
                "path": "projects/{project}/regions/{region}/nodeTemplates/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "acceleratorType",
                "depId": "acceleratorType"
            },
            {
                "pathId": "diskType",
                "depId": "diskType"
            }
        ],
        "type": "NodeTemplate",
        "groupType": "compute::nodeTemplates",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "packetMirrorings",
        "methods": {
            "aggregatedList": {
                "id": "compute.packetMirrorings.aggregatedList",
                "path": "projects/{project}/aggregated/packetMirrorings",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.packetMirrorings.delete",
                "path": "projects/{project}/regions/{region}/packetMirrorings/{packetMirroring}",
                "parameterOrder": [
                    "project",
                    "region",
                    "packetMirroring"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.packetMirrorings.get",
                "path": "projects/{project}/regions/{region}/packetMirrorings/{packetMirroring}",
                "parameterOrder": [
                    "project",
                    "region",
                    "packetMirroring"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.packetMirrorings.insert",
                "path": "projects/{project}/regions/{region}/packetMirrorings",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.packetMirrorings.list",
                "path": "projects/{project}/regions/{region}/packetMirrorings",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.packetMirrorings.patch",
                "path": "projects/{project}/regions/{region}/packetMirrorings/{packetMirroring}",
                "parameterOrder": [
                    "project",
                    "region",
                    "packetMirroring"
                ],
                "httpMethod": "PATCH"
            },
            "testIamPermissions": {
                "id": "compute.packetMirrorings.testIamPermissions",
                "path": "projects/{project}/regions/{region}/packetMirrorings/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "collectorIlb.url",
                "depId": "url"
            },
            {
                "pathId": "mirroredResources.url",
                "depId": "url"
            },
            {
                "pathId": "mirroredResources.url",
                "depId": "url"
            },
            {
                "pathId": "network.url",
                "depId": "url"
            }
        ],
        "type": "PacketMirroring",
        "groupType": "compute::packetMirrorings",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "projects",
        "methods": {
            "disableXpnHost": {
                "id": "compute.projects.disableXpnHost",
                "path": "projects/{project}/disableXpnHost",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "disableXpnResource": {
                "id": "compute.projects.disableXpnResource",
                "path": "projects/{project}/disableXpnResource",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "enableXpnHost": {
                "id": "compute.projects.enableXpnHost",
                "path": "projects/{project}/enableXpnHost",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "enableXpnResource": {
                "id": "compute.projects.enableXpnResource",
                "path": "projects/{project}/enableXpnResource",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "compute.projects.get",
                "path": "projects/{project}",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "getXpnHost": {
                "id": "compute.projects.getXpnHost",
                "path": "projects/{project}/getXpnHost",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "getXpnResources": {
                "id": "compute.projects.getXpnResources",
                "path": "projects/{project}/getXpnResources",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "listXpnHosts": {
                "id": "compute.projects.listXpnHosts",
                "path": "projects/{project}/listXpnHosts",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "moveDisk": {
                "id": "compute.projects.moveDisk",
                "path": "projects/{project}/moveDisk",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "moveInstance": {
                "id": "compute.projects.moveInstance",
                "path": "projects/{project}/moveInstance",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "setCommonInstanceMetadata": {
                "id": "compute.projects.setCommonInstanceMetadata",
                "path": "projects/{project}/setCommonInstanceMetadata",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "setDefaultNetworkTier": {
                "id": "compute.projects.setDefaultNetworkTier",
                "path": "projects/{project}/setDefaultNetworkTier",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "setUsageExportBucket": {
                "id": "compute.projects.setUsageExportBucket",
                "path": "projects/{project}/setUsageExportBucket",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "commonInstanceMetadata.key",
                "depId": "key"
            }
        ],
        "type": "Project",
        "groupType": "compute::projects",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "key": {
                "type": "key",
                "group": "iam",
                "pathId": "commonInstanceMetadata.key"
            }
        }
    },
    {
        "typeFull": "publicAdvertisedPrefixes",
        "methods": {
            "delete": {
                "id": "compute.publicAdvertisedPrefixes.delete",
                "path": "projects/{project}/global/publicAdvertisedPrefixes/{publicAdvertisedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicAdvertisedPrefix"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.publicAdvertisedPrefixes.get",
                "path": "projects/{project}/global/publicAdvertisedPrefixes/{publicAdvertisedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicAdvertisedPrefix"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.publicAdvertisedPrefixes.insert",
                "path": "projects/{project}/global/publicAdvertisedPrefixes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.publicAdvertisedPrefixes.list",
                "path": "projects/{project}/global/publicAdvertisedPrefixes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.publicAdvertisedPrefixes.patch",
                "path": "projects/{project}/global/publicAdvertisedPrefixes/{publicAdvertisedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicAdvertisedPrefix"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [],
        "type": "PublicAdvertisedPrefix",
        "groupType": "compute::publicAdvertisedPrefixes",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "publicDelegatedPrefixes",
        "methods": {
            "aggregatedList": {
                "id": "compute.publicDelegatedPrefixes.aggregatedList",
                "path": "projects/{project}/aggregated/publicDelegatedPrefixes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.publicDelegatedPrefixes.delete",
                "path": "projects/{project}/regions/{region}/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "region",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.publicDelegatedPrefixes.get",
                "path": "projects/{project}/regions/{region}/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "region",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.publicDelegatedPrefixes.insert",
                "path": "projects/{project}/regions/{region}/publicDelegatedPrefixes",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.publicDelegatedPrefixes.list",
                "path": "projects/{project}/regions/{region}/publicDelegatedPrefixes",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.publicDelegatedPrefixes.patch",
                "path": "projects/{project}/regions/{region}/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "region",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "parentPrefix",
                "depId": "parentPrefix"
            }
        ],
        "type": "PublicDelegatedPrefix",
        "groupType": "compute::publicDelegatedPrefixes",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "regionAutoscalers",
        "methods": {
            "delete": {
                "id": "compute.regionAutoscalers.delete",
                "path": "projects/{project}/regions/{region}/autoscalers/{autoscaler}",
                "parameterOrder": [
                    "project",
                    "region",
                    "autoscaler"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionAutoscalers.get",
                "path": "projects/{project}/regions/{region}/autoscalers/{autoscaler}",
                "parameterOrder": [
                    "project",
                    "region",
                    "autoscaler"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionAutoscalers.insert",
                "path": "projects/{project}/regions/{region}/autoscalers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionAutoscalers.list",
                "path": "projects/{project}/regions/{region}/autoscalers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.regionAutoscalers.patch",
                "path": "projects/{project}/regions/{region}/autoscalers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "compute.regionAutoscalers.update",
                "path": "projects/{project}/regions/{region}/autoscalers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "target",
                "depId": "target"
            }
        ],
        "type": "RegionAutoscaler",
        "groupType": "compute::regionAutoscalers",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "regionBackendServices",
        "methods": {
            "delete": {
                "id": "compute.regionBackendServices.delete",
                "path": "projects/{project}/regions/{region}/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "backendService"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionBackendServices.get",
                "path": "projects/{project}/regions/{region}/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "backendService"
                ],
                "httpMethod": "GET"
            },
            "getHealth": {
                "id": "compute.regionBackendServices.getHealth",
                "path": "projects/{project}/regions/{region}/backendServices/{backendService}/getHealth",
                "parameterOrder": [
                    "project",
                    "region",
                    "backendService"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "id": "compute.regionBackendServices.insert",
                "path": "projects/{project}/regions/{region}/backendServices",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionBackendServices.list",
                "path": "projects/{project}/regions/{region}/backendServices",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.regionBackendServices.patch",
                "path": "projects/{project}/regions/{region}/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "backendService"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "compute.regionBackendServices.update",
                "path": "projects/{project}/regions/{region}/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "backendService"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "cdnPolicy.signedUrlCacheMaxAgeSec",
                "depId": "signedUrlCacheMaxAgeSec"
            },
            {
                "pathId": "group",
                "depId": "group"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "securitySettings.clientTlsPolicy",
                "depId": "clientTlsPolicy"
            }
        ],
        "type": "RegionBackendService",
        "groupType": "compute::regionBackendServices",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "typeFull": "regionCommitments",
        "methods": {
            "aggregatedList": {
                "id": "compute.regionCommitments.aggregatedList",
                "path": "projects/{project}/aggregated/commitments",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "id": "compute.regionCommitments.get",
                "path": "projects/{project}/regions/{region}/commitments/{commitment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "commitment"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionCommitments.insert",
                "path": "projects/{project}/regions/{region}/commitments",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionCommitments.list",
                "path": "projects/{project}/regions/{region}/commitments",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "id": "compute.regionCommitments.update",
                "path": "projects/{project}/regions/{region}/commitments/{commitment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "commitment"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "specificReservation.instanceProperties.acceleratorType",
                "depId": "acceleratorType"
            }
        ],
        "type": "RegionCommitment",
        "groupType": "compute::regionCommitments",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "regionDisks",
        "methods": {
            "addResourcePolicies": {
                "id": "compute.regionDisks.addResourcePolicies",
                "path": "projects/{project}/regions/{region}/disks/{disk}/addResourcePolicies",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "createSnapshot": {
                "id": "compute.regionDisks.createSnapshot",
                "path": "projects/{project}/regions/{region}/disks/{disk}/createSnapshot",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "compute.regionDisks.delete",
                "path": "projects/{project}/regions/{region}/disks/{disk}",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionDisks.get",
                "path": "projects/{project}/regions/{region}/disks/{disk}",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.regionDisks.getIamPolicy",
                "path": "projects/{project}/regions/{region}/disks/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionDisks.insert",
                "path": "projects/{project}/regions/{region}/disks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionDisks.list",
                "path": "projects/{project}/regions/{region}/disks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "removeResourcePolicies": {
                "id": "compute.regionDisks.removeResourcePolicies",
                "path": "projects/{project}/regions/{region}/disks/{disk}/removeResourcePolicies",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "resize": {
                "id": "compute.regionDisks.resize",
                "path": "projects/{project}/regions/{region}/disks/{disk}/resize",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "setIamPolicy": {
                "id": "compute.regionDisks.setIamPolicy",
                "path": "projects/{project}/regions/{region}/disks/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "setLabels": {
                "id": "compute.regionDisks.setLabels",
                "path": "projects/{project}/regions/{region}/disks/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.regionDisks.testIamPermissions",
                "path": "projects/{project}/regions/{region}/disks/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "sourceDisk",
                "depId": "sourceDisk"
            },
            {
                "pathId": "sourceSnapshot",
                "depId": "sourceSnapshot"
            },
            {
                "pathId": "type",
                "depId": "type"
            }
        ],
        "type": "RegionDisk",
        "groupType": "compute::regionDisks",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "regionHealthChecks",
        "methods": {
            "delete": {
                "id": "compute.regionHealthChecks.delete",
                "path": "projects/{project}/regions/{region}/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheck"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionHealthChecks.get",
                "path": "projects/{project}/regions/{region}/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheck"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionHealthChecks.insert",
                "path": "projects/{project}/regions/{region}/healthChecks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionHealthChecks.list",
                "path": "projects/{project}/regions/{region}/healthChecks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.regionHealthChecks.patch",
                "path": "projects/{project}/regions/{region}/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheck"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "compute.regionHealthChecks.update",
                "path": "projects/{project}/regions/{region}/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheck"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [],
        "type": "RegionHealthCheck",
        "groupType": "compute::regionHealthChecks",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "regionHealthCheckServices",
        "methods": {
            "delete": {
                "id": "compute.regionHealthCheckServices.delete",
                "path": "projects/{project}/regions/{region}/healthCheckServices/{healthCheckService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheckService"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionHealthCheckServices.get",
                "path": "projects/{project}/regions/{region}/healthCheckServices/{healthCheckService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheckService"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionHealthCheckServices.insert",
                "path": "projects/{project}/regions/{region}/healthCheckServices",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionHealthCheckServices.list",
                "path": "projects/{project}/regions/{region}/healthCheckServices",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.regionHealthCheckServices.patch",
                "path": "projects/{project}/regions/{region}/healthCheckServices/{healthCheckService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheckService"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [],
        "type": "RegionHealthCheckService",
        "groupType": "compute::regionHealthCheckServices",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "regionInstanceGroupManagers",
        "methods": {
            "abandonInstances": {
                "id": "compute.regionInstanceGroupManagers.abandonInstances",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/abandonInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "applyUpdatesToInstances": {
                "id": "compute.regionInstanceGroupManagers.applyUpdatesToInstances",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/applyUpdatesToInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "createInstances": {
                "id": "compute.regionInstanceGroupManagers.createInstances",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/createInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "compute.regionInstanceGroupManagers.delete",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "DELETE"
            },
            "deleteInstances": {
                "id": "compute.regionInstanceGroupManagers.deleteInstances",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/deleteInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "deletePerInstanceConfigs": {
                "id": "compute.regionInstanceGroupManagers.deletePerInstanceConfigs",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/deletePerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "compute.regionInstanceGroupManagers.get",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionInstanceGroupManagers.insert",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionInstanceGroupManagers.list",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "listErrors": {
                "id": "compute.regionInstanceGroupManagers.listErrors",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listErrors",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "GET"
            },
            "listManagedInstances": {
                "id": "compute.regionInstanceGroupManagers.listManagedInstances",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "listPerInstanceConfigs": {
                "id": "compute.regionInstanceGroupManagers.listPerInstanceConfigs",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listPerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "id": "compute.regionInstanceGroupManagers.patch",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "PATCH"
            },
            "patchPerInstanceConfigs": {
                "id": "compute.regionInstanceGroupManagers.patchPerInstanceConfigs",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/patchPerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "recreateInstances": {
                "id": "compute.regionInstanceGroupManagers.recreateInstances",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/recreateInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "resize": {
                "id": "compute.regionInstanceGroupManagers.resize",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/resize",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager",
                    "size"
                ],
                "httpMethod": "POST"
            },
            "setInstanceTemplate": {
                "id": "compute.regionInstanceGroupManagers.setInstanceTemplate",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "setTargetPools": {
                "id": "compute.regionInstanceGroupManagers.setTargetPools",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setTargetPools",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "updatePerInstanceConfigs": {
                "id": "compute.regionInstanceGroupManagers.updatePerInstanceConfigs",
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/updatePerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "distributionPolicy.zone",
                "depId": "zone"
            },
            {
                "pathId": "healthCheck",
                "depId": "healthCheck"
            },
            {
                "pathId": "instanceTemplate",
                "depId": "instanceTemplate"
            },
            {
                "pathId": "instanceTemplate",
                "depId": "instanceTemplate"
            }
        ],
        "type": "RegionInstanceGroupManager",
        "groupType": "compute::regionInstanceGroupManagers",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "healthCheck": {
                "type": "healthCheck",
                "group": "compute",
                "pathId": "healthCheck"
            },
            "instanceTemplate": {
                "type": "instanceTemplate",
                "group": "compute",
                "pathId": "instanceTemplate"
            }
        }
    },
    {
        "typeFull": "regionInstanceGroups",
        "methods": {
            "get": {
                "id": "compute.regionInstanceGroups.get",
                "path": "projects/{project}/regions/{region}/instanceGroups/{instanceGroup}",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroup"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "id": "compute.regionInstanceGroups.list",
                "path": "projects/{project}/regions/{region}/instanceGroups",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "listInstances": {
                "id": "compute.regionInstanceGroups.listInstances",
                "path": "projects/{project}/regions/{region}/instanceGroups/{instanceGroup}/listInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroup"
                ],
                "httpMethod": "POST"
            },
            "setNamedPorts": {
                "id": "compute.regionInstanceGroups.setNamedPorts",
                "path": "projects/{project}/regions/{region}/instanceGroups/{instanceGroup}/setNamedPorts",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroup"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "RegionInstanceGroup",
        "groupType": "compute::regionInstanceGroups",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "regionNetworkEndpointGroups",
        "methods": {
            "delete": {
                "id": "compute.regionNetworkEndpointGroups.delete",
                "path": "projects/{project}/regions/{region}/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "region",
                    "networkEndpointGroup"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionNetworkEndpointGroups.get",
                "path": "projects/{project}/regions/{region}/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "region",
                    "networkEndpointGroup"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionNetworkEndpointGroups.insert",
                "path": "projects/{project}/regions/{region}/networkEndpointGroups",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionNetworkEndpointGroups.list",
                "path": "projects/{project}/regions/{region}/networkEndpointGroups",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "appEngine.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "cloudFunction.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "cloudRun.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            }
        ],
        "type": "RegionNetworkEndpointGroup",
        "groupType": "compute::regionNetworkEndpointGroups",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            }
        }
    },
    {
        "typeFull": "regionNetworkFirewallPolicies",
        "methods": {
            "addAssociation": {
                "id": "compute.regionNetworkFirewallPolicies.addAssociation",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/addAssociation",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "addRule": {
                "id": "compute.regionNetworkFirewallPolicies.addRule",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/addRule",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "cloneRules": {
                "id": "compute.regionNetworkFirewallPolicies.cloneRules",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/cloneRules",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "compute.regionNetworkFirewallPolicies.delete",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionNetworkFirewallPolicies.get",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "getAssociation": {
                "id": "compute.regionNetworkFirewallPolicies.getAssociation",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/getAssociation",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "getEffectiveFirewalls": {
                "id": "compute.regionNetworkFirewallPolicies.getEffectiveFirewalls",
                "path": "projects/{project}/regions/{region}/firewallPolicies/getEffectiveFirewalls",
                "parameterOrder": [
                    "project",
                    "region",
                    "network"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.regionNetworkFirewallPolicies.getIamPolicy",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "getRule": {
                "id": "compute.regionNetworkFirewallPolicies.getRule",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/getRule",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionNetworkFirewallPolicies.insert",
                "path": "projects/{project}/regions/{region}/firewallPolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionNetworkFirewallPolicies.list",
                "path": "projects/{project}/regions/{region}/firewallPolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.regionNetworkFirewallPolicies.patch",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "PATCH"
            },
            "patchRule": {
                "id": "compute.regionNetworkFirewallPolicies.patchRule",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/patchRule",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "removeAssociation": {
                "id": "compute.regionNetworkFirewallPolicies.removeAssociation",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/removeAssociation",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "removeRule": {
                "id": "compute.regionNetworkFirewallPolicies.removeRule",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/removeRule",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "setIamPolicy": {
                "id": "compute.regionNetworkFirewallPolicies.setIamPolicy",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.regionNetworkFirewallPolicies.testIamPermissions",
                "path": "projects/{project}/regions/{region}/firewallPolicies/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "RegionNetworkFirewallPolicy",
        "groupType": "compute::regionNetworkFirewallPolicies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "regionNotificationEndpoints",
        "methods": {
            "delete": {
                "id": "compute.regionNotificationEndpoints.delete",
                "path": "projects/{project}/regions/{region}/notificationEndpoints/{notificationEndpoint}",
                "parameterOrder": [
                    "project",
                    "region",
                    "notificationEndpoint"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionNotificationEndpoints.get",
                "path": "projects/{project}/regions/{region}/notificationEndpoints/{notificationEndpoint}",
                "parameterOrder": [
                    "project",
                    "region",
                    "notificationEndpoint"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionNotificationEndpoints.insert",
                "path": "projects/{project}/regions/{region}/notificationEndpoints",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionNotificationEndpoints.list",
                "path": "projects/{project}/regions/{region}/notificationEndpoints",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [],
        "type": "RegionNotificationEndpoint",
        "groupType": "compute::regionNotificationEndpoints",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "regionSslCertificates",
        "methods": {
            "delete": {
                "id": "compute.regionSslCertificates.delete",
                "path": "projects/{project}/regions/{region}/sslCertificates/{sslCertificate}",
                "parameterOrder": [
                    "project",
                    "region",
                    "sslCertificate"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionSslCertificates.get",
                "path": "projects/{project}/regions/{region}/sslCertificates/{sslCertificate}",
                "parameterOrder": [
                    "project",
                    "region",
                    "sslCertificate"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionSslCertificates.insert",
                "path": "projects/{project}/regions/{region}/sslCertificates",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionSslCertificates.list",
                "path": "projects/{project}/regions/{region}/sslCertificates",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "selfLink",
                "depId": "selfLink"
            }
        ],
        "type": "RegionSslCertificate",
        "groupType": "compute::regionSslCertificates",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "regionSslPolicies",
        "methods": {
            "delete": {
                "id": "compute.regionSslPolicies.delete",
                "path": "projects/{project}/regions/{region}/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "sslPolicy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionSslPolicies.get",
                "path": "projects/{project}/regions/{region}/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "sslPolicy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionSslPolicies.insert",
                "path": "projects/{project}/regions/{region}/sslPolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionSslPolicies.list",
                "path": "projects/{project}/regions/{region}/sslPolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "listAvailableFeatures": {
                "id": "compute.regionSslPolicies.listAvailableFeatures",
                "path": "projects/{project}/regions/{region}/sslPolicies/listAvailableFeatures",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.regionSslPolicies.patch",
                "path": "projects/{project}/regions/{region}/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "sslPolicy"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [],
        "type": "RegionSslPolicy",
        "groupType": "compute::regionSslPolicies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "regionTargetHttpProxies",
        "methods": {
            "delete": {
                "id": "compute.regionTargetHttpProxies.delete",
                "path": "projects/{project}/regions/{region}/targetHttpProxies/{targetHttpProxy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpProxy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionTargetHttpProxies.get",
                "path": "projects/{project}/regions/{region}/targetHttpProxies/{targetHttpProxy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpProxy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionTargetHttpProxies.insert",
                "path": "projects/{project}/regions/{region}/targetHttpProxies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionTargetHttpProxies.list",
                "path": "projects/{project}/regions/{region}/targetHttpProxies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "setUrlMap": {
                "id": "compute.regionTargetHttpProxies.setUrlMap",
                "path": "projects/{project}/regions/{region}/targetHttpProxies/{targetHttpProxy}/setUrlMap",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpProxy"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "urlMap",
                "depId": "urlMap"
            }
        ],
        "type": "RegionTargetHttpProxy",
        "groupType": "compute::regionTargetHttpProxies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "urlMap": {
                "type": "urlMap",
                "group": "compute",
                "pathId": "urlMap"
            }
        }
    },
    {
        "typeFull": "regionTargetHttpsProxies",
        "methods": {
            "delete": {
                "id": "compute.regionTargetHttpsProxies.delete",
                "path": "projects/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpsProxy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionTargetHttpsProxies.get",
                "path": "projects/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpsProxy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionTargetHttpsProxies.insert",
                "path": "projects/{project}/regions/{region}/targetHttpsProxies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionTargetHttpsProxies.list",
                "path": "projects/{project}/regions/{region}/targetHttpsProxies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.regionTargetHttpsProxies.patch",
                "path": "projects/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpsProxy"
                ],
                "httpMethod": "PATCH"
            },
            "setSslCertificates": {
                "id": "compute.regionTargetHttpsProxies.setSslCertificates",
                "path": "projects/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "setUrlMap": {
                "id": "compute.regionTargetHttpsProxies.setUrlMap",
                "path": "projects/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "authorizationPolicy",
                "depId": "authorizationPolicy"
            },
            {
                "pathId": "certificateMap",
                "depId": "certificateMap"
            },
            {
                "pathId": "serverTlsPolicy",
                "depId": "serverTlsPolicy"
            },
            {
                "pathId": "sslPolicy",
                "depId": "sslPolicy"
            },
            {
                "pathId": "urlMap",
                "depId": "urlMap"
            }
        ],
        "type": "RegionTargetHttpsProxy",
        "groupType": "compute::regionTargetHttpsProxies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "sslPolicy": {
                "type": "sslPolicy",
                "group": "compute",
                "pathId": "sslPolicy"
            },
            "urlMap": {
                "type": "urlMap",
                "group": "compute",
                "pathId": "urlMap"
            }
        }
    },
    {
        "typeFull": "regionUrlMaps",
        "methods": {
            "delete": {
                "id": "compute.regionUrlMaps.delete",
                "path": "projects/{project}/regions/{region}/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "region",
                    "urlMap"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.regionUrlMaps.get",
                "path": "projects/{project}/regions/{region}/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "region",
                    "urlMap"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.regionUrlMaps.insert",
                "path": "projects/{project}/regions/{region}/urlMaps",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.regionUrlMaps.list",
                "path": "projects/{project}/regions/{region}/urlMaps",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.regionUrlMaps.patch",
                "path": "projects/{project}/regions/{region}/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "region",
                    "urlMap"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "compute.regionUrlMaps.update",
                "path": "projects/{project}/regions/{region}/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "region",
                    "urlMap"
                ],
                "httpMethod": "PUT"
            },
            "validate": {
                "id": "compute.regionUrlMaps.validate",
                "path": "projects/{project}/regions/{region}/urlMaps/{urlMap}/validate",
                "parameterOrder": [
                    "project",
                    "region",
                    "urlMap"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "defaultRouteAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultRouteAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultRouteAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultRouteAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultService",
                "depId": "defaultService"
            },
            {
                "pathId": "defaultService",
                "depId": "defaultService"
            },
            {
                "pathId": "defaultUrlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "defaultUrlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "expectedOutputUrl",
                "depId": "expectedOutputUrl"
            },
            {
                "pathId": "fullPathMatch",
                "depId": "fullPathMatch"
            },
            {
                "pathId": "headerName",
                "depId": "headerName"
            },
            {
                "pathId": "host",
                "depId": "host"
            },
            {
                "pathId": "path",
                "depId": "path"
            },
            {
                "pathId": "pathMatcher",
                "depId": "pathMatcher"
            },
            {
                "pathId": "regexMatch",
                "depId": "regexMatch"
            },
            {
                "pathId": "routeAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "service",
                "depId": "service"
            },
            {
                "pathId": "service",
                "depId": "service"
            },
            {
                "pathId": "service",
                "depId": "service"
            },
            {
                "pathId": "urlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "urlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            }
        ],
        "type": "RegionUrlMap",
        "groupType": "compute::regionUrlMaps",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "backendService": {
                "type": "backendService",
                "group": "compute",
                "pathId": "routeAction.requestMirrorPolicy.backendService"
            },
            "service": {
                "type": "service",
                "group": "run",
                "pathId": "service"
            }
        }
    },
    {
        "typeFull": "reservations",
        "methods": {
            "aggregatedList": {
                "id": "compute.reservations.aggregatedList",
                "path": "projects/{project}/aggregated/reservations",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.reservations.delete",
                "path": "projects/{project}/zones/{zone}/reservations/{reservation}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "reservation"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.reservations.get",
                "path": "projects/{project}/zones/{zone}/reservations/{reservation}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "reservation"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.reservations.getIamPolicy",
                "path": "projects/{project}/zones/{zone}/reservations/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.reservations.insert",
                "path": "projects/{project}/zones/{zone}/reservations",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.reservations.list",
                "path": "projects/{project}/zones/{zone}/reservations",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "resize": {
                "id": "compute.reservations.resize",
                "path": "projects/{project}/zones/{zone}/reservations/{reservation}/resize",
                "parameterOrder": [
                    "project",
                    "zone",
                    "reservation"
                ],
                "httpMethod": "POST"
            },
            "setIamPolicy": {
                "id": "compute.reservations.setIamPolicy",
                "path": "projects/{project}/zones/{zone}/reservations/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.reservations.testIamPermissions",
                "path": "projects/{project}/zones/{zone}/reservations/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "update": {
                "id": "compute.reservations.update",
                "path": "projects/{project}/zones/{zone}/reservations/{reservation}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "reservation"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "specificReservation.instanceProperties.acceleratorType",
                "depId": "acceleratorType"
            }
        ],
        "type": "Reservation",
        "groupType": "compute::reservations",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "resourcePolicies",
        "methods": {
            "aggregatedList": {
                "id": "compute.resourcePolicies.aggregatedList",
                "path": "projects/{project}/aggregated/resourcePolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.resourcePolicies.delete",
                "path": "projects/{project}/regions/{region}/resourcePolicies/{resourcePolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "resourcePolicy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.resourcePolicies.get",
                "path": "projects/{project}/regions/{region}/resourcePolicies/{resourcePolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "resourcePolicy"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.resourcePolicies.getIamPolicy",
                "path": "projects/{project}/regions/{region}/resourcePolicies/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.resourcePolicies.insert",
                "path": "projects/{project}/regions/{region}/resourcePolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.resourcePolicies.list",
                "path": "projects/{project}/regions/{region}/resourcePolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "id": "compute.resourcePolicies.setIamPolicy",
                "path": "projects/{project}/regions/{region}/resourcePolicies/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.resourcePolicies.testIamPermissions",
                "path": "projects/{project}/regions/{region}/resourcePolicies/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "ResourcePolicy",
        "groupType": "compute::resourcePolicies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "routers",
        "methods": {
            "aggregatedList": {
                "id": "compute.routers.aggregatedList",
                "path": "projects/{project}/aggregated/routers",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.routers.delete",
                "path": "projects/{project}/regions/{region}/routers/{router}",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.routers.get",
                "path": "projects/{project}/regions/{region}/routers/{router}",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "GET"
            },
            "getNatMappingInfo": {
                "id": "compute.routers.getNatMappingInfo",
                "path": "projects/{project}/regions/{region}/routers/{router}/getNatMappingInfo",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "GET"
            },
            "getRouterStatus": {
                "id": "compute.routers.getRouterStatus",
                "path": "projects/{project}/regions/{region}/routers/{router}/getRouterStatus",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.routers.insert",
                "path": "projects/{project}/regions/{region}/routers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.routers.list",
                "path": "projects/{project}/regions/{region}/routers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.routers.patch",
                "path": "projects/{project}/regions/{region}/routers/{router}",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "PATCH"
            },
            "preview": {
                "id": "compute.routers.preview",
                "path": "projects/{project}/regions/{region}/routers/{router}/preview",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "POST"
            },
            "update": {
                "id": "compute.routers.update",
                "path": "projects/{project}/regions/{region}/routers/{router}",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "name",
                "depId": "name"
            }
        ],
        "type": "Router",
        "groupType": "compute::routers",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "routes",
        "methods": {
            "delete": {
                "id": "compute.routes.delete",
                "path": "projects/{project}/global/routes/{route}",
                "parameterOrder": [
                    "project",
                    "route"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.routes.get",
                "path": "projects/{project}/global/routes/{route}",
                "parameterOrder": [
                    "project",
                    "route"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.routes.insert",
                "path": "projects/{project}/global/routes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.routes.list",
                "path": "projects/{project}/global/routes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "nextHopGateway",
                "depId": "nextHopGateway"
            },
            {
                "pathId": "nextHopIlb",
                "depId": "nextHopIlb"
            },
            {
                "pathId": "nextHopInstance",
                "depId": "nextHopInstance"
            },
            {
                "pathId": "nextHopNetwork",
                "depId": "nextHopNetwork"
            },
            {
                "pathId": "nextHopVpnTunnel",
                "depId": "nextHopVpnTunnel"
            }
        ],
        "type": "Route",
        "groupType": "compute::routes",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "typeFull": "securityPolicies",
        "methods": {
            "addRule": {
                "id": "compute.securityPolicies.addRule",
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}/addRule",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "id": "compute.securityPolicies.aggregatedList",
                "path": "projects/{project}/aggregated/securityPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.securityPolicies.delete",
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.securityPolicies.get",
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "GET"
            },
            "getRule": {
                "id": "compute.securityPolicies.getRule",
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}/getRule",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.securityPolicies.insert",
                "path": "projects/{project}/global/securityPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.securityPolicies.list",
                "path": "projects/{project}/global/securityPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "listPreconfiguredExpressionSets": {
                "id": "compute.securityPolicies.listPreconfiguredExpressionSets",
                "path": "projects/{project}/global/securityPolicies/listPreconfiguredExpressionSets",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.securityPolicies.patch",
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "PATCH"
            },
            "patchRule": {
                "id": "compute.securityPolicies.patchRule",
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}/patchRule",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "POST"
            },
            "removeRule": {
                "id": "compute.securityPolicies.removeRule",
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}/removeRule",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "action",
                "depId": "action"
            }
        ],
        "type": "SecurityPolicy",
        "groupType": "compute::securityPolicies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "serviceAttachments",
        "methods": {
            "aggregatedList": {
                "id": "compute.serviceAttachments.aggregatedList",
                "path": "projects/{project}/aggregated/serviceAttachments",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.serviceAttachments.delete",
                "path": "projects/{project}/regions/{region}/serviceAttachments/{serviceAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "serviceAttachment"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.serviceAttachments.get",
                "path": "projects/{project}/regions/{region}/serviceAttachments/{serviceAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "serviceAttachment"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.serviceAttachments.getIamPolicy",
                "path": "projects/{project}/regions/{region}/serviceAttachments/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.serviceAttachments.insert",
                "path": "projects/{project}/regions/{region}/serviceAttachments",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.serviceAttachments.list",
                "path": "projects/{project}/regions/{region}/serviceAttachments",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.serviceAttachments.patch",
                "path": "projects/{project}/regions/{region}/serviceAttachments/{serviceAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "serviceAttachment"
                ],
                "httpMethod": "PATCH"
            },
            "setIamPolicy": {
                "id": "compute.serviceAttachments.setIamPolicy",
                "path": "projects/{project}/regions/{region}/serviceAttachments/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.serviceAttachments.testIamPermissions",
                "path": "projects/{project}/regions/{region}/serviceAttachments/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "producerForwardingRule",
                "depId": "producerForwardingRule"
            },
            {
                "pathId": "targetService",
                "depId": "targetService"
            }
        ],
        "type": "ServiceAttachment",
        "groupType": "compute::serviceAttachments",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "snapshots",
        "methods": {
            "delete": {
                "id": "compute.snapshots.delete",
                "path": "projects/{project}/global/snapshots/{snapshot}",
                "parameterOrder": [
                    "project",
                    "snapshot"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.snapshots.get",
                "path": "projects/{project}/global/snapshots/{snapshot}",
                "parameterOrder": [
                    "project",
                    "snapshot"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.snapshots.getIamPolicy",
                "path": "projects/{project}/global/snapshots/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.snapshots.insert",
                "path": "projects/{project}/global/snapshots",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.snapshots.list",
                "path": "projects/{project}/global/snapshots",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "id": "compute.snapshots.setIamPolicy",
                "path": "projects/{project}/global/snapshots/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "setLabels": {
                "id": "compute.snapshots.setLabels",
                "path": "projects/{project}/global/snapshots/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.snapshots.testIamPermissions",
                "path": "projects/{project}/global/snapshots/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "Snapshot",
        "groupType": "compute::snapshots",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "sslCertificates",
        "methods": {
            "aggregatedList": {
                "id": "compute.sslCertificates.aggregatedList",
                "path": "projects/{project}/aggregated/sslCertificates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.sslCertificates.delete",
                "path": "projects/{project}/global/sslCertificates/{sslCertificate}",
                "parameterOrder": [
                    "project",
                    "sslCertificate"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.sslCertificates.get",
                "path": "projects/{project}/global/sslCertificates/{sslCertificate}",
                "parameterOrder": [
                    "project",
                    "sslCertificate"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.sslCertificates.insert",
                "path": "projects/{project}/global/sslCertificates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.sslCertificates.list",
                "path": "projects/{project}/global/sslCertificates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "selfLink",
                "depId": "selfLink"
            }
        ],
        "type": "SslCertificate",
        "groupType": "compute::sslCertificates",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "sslPolicies",
        "methods": {
            "delete": {
                "id": "compute.sslPolicies.delete",
                "path": "projects/{project}/global/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "sslPolicy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.sslPolicies.get",
                "path": "projects/{project}/global/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "sslPolicy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.sslPolicies.insert",
                "path": "projects/{project}/global/sslPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.sslPolicies.list",
                "path": "projects/{project}/global/sslPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "listAvailableFeatures": {
                "id": "compute.sslPolicies.listAvailableFeatures",
                "path": "projects/{project}/global/sslPolicies/listAvailableFeatures",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.sslPolicies.patch",
                "path": "projects/{project}/global/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "sslPolicy"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [],
        "type": "SslPolicy",
        "groupType": "compute::sslPolicies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "subnetworks",
        "methods": {
            "aggregatedList": {
                "id": "compute.subnetworks.aggregatedList",
                "path": "projects/{project}/aggregated/subnetworks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.subnetworks.delete",
                "path": "projects/{project}/regions/{region}/subnetworks/{subnetwork}",
                "parameterOrder": [
                    "project",
                    "region",
                    "subnetwork"
                ],
                "httpMethod": "DELETE"
            },
            "expandIpCidrRange": {
                "id": "compute.subnetworks.expandIpCidrRange",
                "path": "projects/{project}/regions/{region}/subnetworks/{subnetwork}/expandIpCidrRange",
                "parameterOrder": [
                    "project",
                    "region",
                    "subnetwork"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "compute.subnetworks.get",
                "path": "projects/{project}/regions/{region}/subnetworks/{subnetwork}",
                "parameterOrder": [
                    "project",
                    "region",
                    "subnetwork"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "compute.subnetworks.getIamPolicy",
                "path": "projects/{project}/regions/{region}/subnetworks/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.subnetworks.insert",
                "path": "projects/{project}/regions/{region}/subnetworks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.subnetworks.list",
                "path": "projects/{project}/regions/{region}/subnetworks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "listUsable": {
                "id": "compute.subnetworks.listUsable",
                "path": "projects/{project}/aggregated/subnetworks/listUsable",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.subnetworks.patch",
                "path": "projects/{project}/regions/{region}/subnetworks/{subnetwork}",
                "parameterOrder": [
                    "project",
                    "region",
                    "subnetwork"
                ],
                "httpMethod": "PATCH"
            },
            "setIamPolicy": {
                "id": "compute.subnetworks.setIamPolicy",
                "path": "projects/{project}/regions/{region}/subnetworks/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "setPrivateIpGoogleAccess": {
                "id": "compute.subnetworks.setPrivateIpGoogleAccess",
                "path": "projects/{project}/regions/{region}/subnetworks/{subnetwork}/setPrivateIpGoogleAccess",
                "parameterOrder": [
                    "project",
                    "region",
                    "subnetwork"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.subnetworks.testIamPermissions",
                "path": "projects/{project}/regions/{region}/subnetworks/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "region",
                "depId": "region"
            }
        ],
        "type": "Subnetwork",
        "groupType": "compute::subnetworks",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "typeFull": "targetGrpcProxies",
        "methods": {
            "delete": {
                "id": "compute.targetGrpcProxies.delete",
                "path": "projects/{project}/global/targetGrpcProxies/{targetGrpcProxy}",
                "parameterOrder": [
                    "project",
                    "targetGrpcProxy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.targetGrpcProxies.get",
                "path": "projects/{project}/global/targetGrpcProxies/{targetGrpcProxy}",
                "parameterOrder": [
                    "project",
                    "targetGrpcProxy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.targetGrpcProxies.insert",
                "path": "projects/{project}/global/targetGrpcProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.targetGrpcProxies.list",
                "path": "projects/{project}/global/targetGrpcProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.targetGrpcProxies.patch",
                "path": "projects/{project}/global/targetGrpcProxies/{targetGrpcProxy}",
                "parameterOrder": [
                    "project",
                    "targetGrpcProxy"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "urlMap",
                "depId": "urlMap"
            }
        ],
        "type": "TargetGrpcProxy",
        "groupType": "compute::targetGrpcProxies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "urlMap": {
                "type": "urlMap",
                "group": "compute",
                "pathId": "urlMap"
            }
        }
    },
    {
        "typeFull": "targetHttpProxies",
        "methods": {
            "aggregatedList": {
                "id": "compute.targetHttpProxies.aggregatedList",
                "path": "projects/{project}/aggregated/targetHttpProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.targetHttpProxies.delete",
                "path": "projects/{project}/global/targetHttpProxies/{targetHttpProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpProxy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.targetHttpProxies.get",
                "path": "projects/{project}/global/targetHttpProxies/{targetHttpProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpProxy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.targetHttpProxies.insert",
                "path": "projects/{project}/global/targetHttpProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.targetHttpProxies.list",
                "path": "projects/{project}/global/targetHttpProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.targetHttpProxies.patch",
                "path": "projects/{project}/global/targetHttpProxies/{targetHttpProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpProxy"
                ],
                "httpMethod": "PATCH"
            },
            "setUrlMap": {
                "id": "compute.targetHttpProxies.setUrlMap",
                "path": "projects/{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap",
                "parameterOrder": [
                    "project",
                    "targetHttpProxy"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "urlMap",
                "depId": "urlMap"
            }
        ],
        "type": "TargetHttpProxy",
        "groupType": "compute::targetHttpProxies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "urlMap": {
                "type": "urlMap",
                "group": "compute",
                "pathId": "urlMap"
            }
        }
    },
    {
        "typeFull": "targetHttpsProxies",
        "methods": {
            "aggregatedList": {
                "id": "compute.targetHttpsProxies.aggregatedList",
                "path": "projects/{project}/aggregated/targetHttpsProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.targetHttpsProxies.delete",
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.targetHttpsProxies.get",
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.targetHttpsProxies.insert",
                "path": "projects/{project}/global/targetHttpsProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.targetHttpsProxies.list",
                "path": "projects/{project}/global/targetHttpsProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.targetHttpsProxies.patch",
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "PATCH"
            },
            "setCertificateMap": {
                "id": "compute.targetHttpsProxies.setCertificateMap",
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}/setCertificateMap",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "setQuicOverride": {
                "id": "compute.targetHttpsProxies.setQuicOverride",
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}/setQuicOverride",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "setSslCertificates": {
                "id": "compute.targetHttpsProxies.setSslCertificates",
                "path": "projects/{project}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "setSslPolicy": {
                "id": "compute.targetHttpsProxies.setSslPolicy",
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}/setSslPolicy",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "setUrlMap": {
                "id": "compute.targetHttpsProxies.setUrlMap",
                "path": "projects/{project}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "authorizationPolicy",
                "depId": "authorizationPolicy"
            },
            {
                "pathId": "certificateMap",
                "depId": "certificateMap"
            },
            {
                "pathId": "serverTlsPolicy",
                "depId": "serverTlsPolicy"
            },
            {
                "pathId": "sslPolicy",
                "depId": "sslPolicy"
            },
            {
                "pathId": "urlMap",
                "depId": "urlMap"
            }
        ],
        "type": "TargetHttpsProxy",
        "groupType": "compute::targetHttpsProxies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "sslPolicy": {
                "type": "sslPolicy",
                "group": "compute",
                "pathId": "sslPolicy"
            },
            "urlMap": {
                "type": "urlMap",
                "group": "compute",
                "pathId": "urlMap"
            }
        }
    },
    {
        "typeFull": "targetInstances",
        "methods": {
            "aggregatedList": {
                "id": "compute.targetInstances.aggregatedList",
                "path": "projects/{project}/aggregated/targetInstances",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.targetInstances.delete",
                "path": "projects/{project}/zones/{zone}/targetInstances/{targetInstance}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "targetInstance"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.targetInstances.get",
                "path": "projects/{project}/zones/{zone}/targetInstances/{targetInstance}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "targetInstance"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.targetInstances.insert",
                "path": "projects/{project}/zones/{zone}/targetInstances",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.targetInstances.list",
                "path": "projects/{project}/zones/{zone}/targetInstances",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "instance",
                "depId": "instance"
            },
            {
                "pathId": "network",
                "depId": "network"
            }
        ],
        "type": "TargetInstance",
        "groupType": "compute::targetInstances",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "instance": {
                "type": "instance",
                "group": "compute",
                "pathId": "instance"
            },
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "typeFull": "targetPools",
        "methods": {
            "addHealthCheck": {
                "id": "compute.targetPools.addHealthCheck",
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            },
            "addInstance": {
                "id": "compute.targetPools.addInstance",
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/addInstance",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "id": "compute.targetPools.aggregatedList",
                "path": "projects/{project}/aggregated/targetPools",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.targetPools.delete",
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.targetPools.get",
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "GET"
            },
            "getHealth": {
                "id": "compute.targetPools.getHealth",
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/getHealth",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "id": "compute.targetPools.insert",
                "path": "projects/{project}/regions/{region}/targetPools",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.targetPools.list",
                "path": "projects/{project}/regions/{region}/targetPools",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "removeHealthCheck": {
                "id": "compute.targetPools.removeHealthCheck",
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            },
            "removeInstance": {
                "id": "compute.targetPools.removeInstance",
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/removeInstance",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            },
            "setBackup": {
                "id": "compute.targetPools.setBackup",
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/setBackup",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "backupPool",
                "depId": "backupPool"
            }
        ],
        "type": "TargetPool",
        "groupType": "compute::targetPools",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "targetSslProxies",
        "methods": {
            "delete": {
                "id": "compute.targetSslProxies.delete",
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.targetSslProxies.get",
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.targetSslProxies.insert",
                "path": "projects/{project}/global/targetSslProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.targetSslProxies.list",
                "path": "projects/{project}/global/targetSslProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setBackendService": {
                "id": "compute.targetSslProxies.setBackendService",
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}/setBackendService",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "POST"
            },
            "setCertificateMap": {
                "id": "compute.targetSslProxies.setCertificateMap",
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}/setCertificateMap",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "POST"
            },
            "setProxyHeader": {
                "id": "compute.targetSslProxies.setProxyHeader",
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}/setProxyHeader",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "POST"
            },
            "setSslCertificates": {
                "id": "compute.targetSslProxies.setSslCertificates",
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}/setSslCertificates",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "POST"
            },
            "setSslPolicy": {
                "id": "compute.targetSslProxies.setSslPolicy",
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}/setSslPolicy",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "certificateMap",
                "depId": "certificateMap"
            },
            {
                "pathId": "service",
                "depId": "service"
            },
            {
                "pathId": "sslPolicy",
                "depId": "sslPolicy"
            }
        ],
        "type": "TargetSslProxy",
        "groupType": "compute::targetSslProxies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "service": {
                "type": "service",
                "group": "run",
                "pathId": "service"
            },
            "sslPolicy": {
                "type": "sslPolicy",
                "group": "compute",
                "pathId": "sslPolicy"
            }
        }
    },
    {
        "typeFull": "targetTcpProxies",
        "methods": {
            "delete": {
                "id": "compute.targetTcpProxies.delete",
                "path": "projects/{project}/global/targetTcpProxies/{targetTcpProxy}",
                "parameterOrder": [
                    "project",
                    "targetTcpProxy"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.targetTcpProxies.get",
                "path": "projects/{project}/global/targetTcpProxies/{targetTcpProxy}",
                "parameterOrder": [
                    "project",
                    "targetTcpProxy"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.targetTcpProxies.insert",
                "path": "projects/{project}/global/targetTcpProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.targetTcpProxies.list",
                "path": "projects/{project}/global/targetTcpProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setBackendService": {
                "id": "compute.targetTcpProxies.setBackendService",
                "path": "projects/{project}/global/targetTcpProxies/{targetTcpProxy}/setBackendService",
                "parameterOrder": [
                    "project",
                    "targetTcpProxy"
                ],
                "httpMethod": "POST"
            },
            "setProxyHeader": {
                "id": "compute.targetTcpProxies.setProxyHeader",
                "path": "projects/{project}/global/targetTcpProxies/{targetTcpProxy}/setProxyHeader",
                "parameterOrder": [
                    "project",
                    "targetTcpProxy"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "service",
                "depId": "service"
            }
        ],
        "type": "TargetTcpProxy",
        "groupType": "compute::targetTcpProxies",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "service": {
                "type": "service",
                "group": "run",
                "pathId": "service"
            }
        }
    },
    {
        "typeFull": "targetVpnGateways",
        "methods": {
            "aggregatedList": {
                "id": "compute.targetVpnGateways.aggregatedList",
                "path": "projects/{project}/aggregated/targetVpnGateways",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.targetVpnGateways.delete",
                "path": "projects/{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetVpnGateway"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.targetVpnGateways.get",
                "path": "projects/{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetVpnGateway"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.targetVpnGateways.insert",
                "path": "projects/{project}/regions/{region}/targetVpnGateways",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.targetVpnGateways.list",
                "path": "projects/{project}/regions/{region}/targetVpnGateways",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            }
        ],
        "type": "TargetVpnGateway",
        "groupType": "compute::targetVpnGateways",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "typeFull": "urlMaps",
        "methods": {
            "aggregatedList": {
                "id": "compute.urlMaps.aggregatedList",
                "path": "projects/{project}/aggregated/urlMaps",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.urlMaps.delete",
                "path": "projects/{project}/global/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.urlMaps.get",
                "path": "projects/{project}/global/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.urlMaps.insert",
                "path": "projects/{project}/global/urlMaps",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "invalidateCache": {
                "id": "compute.urlMaps.invalidateCache",
                "path": "projects/{project}/global/urlMaps/{urlMap}/invalidateCache",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.urlMaps.list",
                "path": "projects/{project}/global/urlMaps",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "compute.urlMaps.patch",
                "path": "projects/{project}/global/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "compute.urlMaps.update",
                "path": "projects/{project}/global/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "PUT"
            },
            "validate": {
                "id": "compute.urlMaps.validate",
                "path": "projects/{project}/global/urlMaps/{urlMap}/validate",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "defaultRouteAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultRouteAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultRouteAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultRouteAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultService",
                "depId": "defaultService"
            },
            {
                "pathId": "defaultService",
                "depId": "defaultService"
            },
            {
                "pathId": "defaultUrlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "defaultUrlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "expectedOutputUrl",
                "depId": "expectedOutputUrl"
            },
            {
                "pathId": "fullPathMatch",
                "depId": "fullPathMatch"
            },
            {
                "pathId": "headerName",
                "depId": "headerName"
            },
            {
                "pathId": "host",
                "depId": "host"
            },
            {
                "pathId": "path",
                "depId": "path"
            },
            {
                "pathId": "pathMatcher",
                "depId": "pathMatcher"
            },
            {
                "pathId": "regexMatch",
                "depId": "regexMatch"
            },
            {
                "pathId": "routeAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "service",
                "depId": "service"
            },
            {
                "pathId": "service",
                "depId": "service"
            },
            {
                "pathId": "service",
                "depId": "service"
            },
            {
                "pathId": "urlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "urlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            }
        ],
        "type": "UrlMap",
        "groupType": "compute::urlMaps",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "backendService": {
                "type": "backendService",
                "group": "compute",
                "pathId": "routeAction.requestMirrorPolicy.backendService"
            },
            "service": {
                "type": "service",
                "group": "run",
                "pathId": "service"
            }
        }
    },
    {
        "typeFull": "vpnGateways",
        "methods": {
            "aggregatedList": {
                "id": "compute.vpnGateways.aggregatedList",
                "path": "projects/{project}/aggregated/vpnGateways",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.vpnGateways.delete",
                "path": "projects/{project}/regions/{region}/vpnGateways/{vpnGateway}",
                "parameterOrder": [
                    "project",
                    "region",
                    "vpnGateway"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.vpnGateways.get",
                "path": "projects/{project}/regions/{region}/vpnGateways/{vpnGateway}",
                "parameterOrder": [
                    "project",
                    "region",
                    "vpnGateway"
                ],
                "httpMethod": "GET"
            },
            "getStatus": {
                "id": "compute.vpnGateways.getStatus",
                "path": "projects/{project}/regions/{region}/vpnGateways/{vpnGateway}/getStatus",
                "parameterOrder": [
                    "project",
                    "region",
                    "vpnGateway"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.vpnGateways.insert",
                "path": "projects/{project}/regions/{region}/vpnGateways",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.vpnGateways.list",
                "path": "projects/{project}/regions/{region}/vpnGateways",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "setLabels": {
                "id": "compute.vpnGateways.setLabels",
                "path": "projects/{project}/regions/{region}/vpnGateways/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "compute.vpnGateways.testIamPermissions",
                "path": "projects/{project}/regions/{region}/vpnGateways/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "interconnectAttachment",
                "depId": "interconnectAttachment"
            },
            {
                "pathId": "network",
                "depId": "network"
            }
        ],
        "type": "VpnGateway",
        "groupType": "compute::vpnGateways",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "interconnectAttachment": {
                "type": "interconnectAttachment",
                "group": "compute",
                "pathId": "interconnectAttachment"
            },
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "typeFull": "vpnTunnels",
        "methods": {
            "aggregatedList": {
                "id": "compute.vpnTunnels.aggregatedList",
                "path": "projects/{project}/aggregated/vpnTunnels",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "id": "compute.vpnTunnels.delete",
                "path": "projects/{project}/regions/{region}/vpnTunnels/{vpnTunnel}",
                "parameterOrder": [
                    "project",
                    "region",
                    "vpnTunnel"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "compute.vpnTunnels.get",
                "path": "projects/{project}/regions/{region}/vpnTunnels/{vpnTunnel}",
                "parameterOrder": [
                    "project",
                    "region",
                    "vpnTunnel"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "compute.vpnTunnels.insert",
                "path": "projects/{project}/regions/{region}/vpnTunnels",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "compute.vpnTunnels.list",
                "path": "projects/{project}/regions/{region}/vpnTunnels",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "peerExternalGateway",
                "depId": "peerExternalGateway"
            },
            {
                "pathId": "peerGcpGateway",
                "depId": "peerGcpGateway"
            },
            {
                "pathId": "router",
                "depId": "router"
            },
            {
                "pathId": "targetVpnGateway",
                "depId": "targetVpnGateway"
            },
            {
                "pathId": "vpnGateway",
                "depId": "vpnGateway"
            }
        ],
        "type": "VpnTunnel",
        "groupType": "compute::vpnTunnels",
        "group": "compute",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "dependencies": {
            "router": {
                "type": "router",
                "group": "compute",
                "pathId": "router"
            },
            "targetVpnGateway": {
                "type": "targetVpnGateway",
                "group": "compute",
                "pathId": "targetVpnGateway"
            },
            "vpnGateway": {
                "type": "vpnGateway",
                "group": "compute",
                "pathId": "vpnGateway"
            }
        }
    },
    {
        "typeFull": "organizations.roles",
        "methods": {
            "create": {
                "id": "iam.organizations.roles.create",
                "path": "v1/organizations/{organizationsId}/roles",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "iam.organizations.roles.delete",
                "path": "v1/organizations/{organizationsId}/roles/{rolesId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "iam.organizations.roles.get",
                "path": "v1/organizations/{organizationsId}/roles/{rolesId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "id": "iam.organizations.roles.list",
                "path": "v1/organizations/{organizationsId}/roles",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "iam.organizations.roles.patch",
                "path": "v1/organizations/{organizationsId}/roles/{rolesId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "PATCH"
            },
            "undelete": {
                "id": "iam.organizations.roles.undelete",
                "path": "v1/organizations/{organizationsId}/roles/{rolesId}:undelete",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "Role",
        "groupType": "iam::organizations.roles",
        "group": "iam",
        "baseUrl": "https://iam.googleapis.com/",
        "dependencies": {
            "organization": {
                "type": "Organization",
                "group": "cloudresourcemanager",
                "parent": true,
                "resourceName": "organization"
            }
        }
    },
    {
        "typeFull": "projects.roles",
        "methods": {
            "create": {
                "id": "iam.projects.roles.create",
                "path": "v1/projects/{projectsId}/roles",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "iam.projects.roles.delete",
                "path": "v1/projects/{projectsId}/roles/{rolesId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "iam.projects.roles.get",
                "path": "v1/projects/{projectsId}/roles/{rolesId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "id": "iam.projects.roles.list",
                "path": "v1/projects/{projectsId}/roles",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "iam.projects.roles.patch",
                "path": "v1/projects/{projectsId}/roles/{rolesId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "PATCH"
            },
            "undelete": {
                "id": "iam.projects.roles.undelete",
                "path": "v1/projects/{projectsId}/roles/{rolesId}:undelete",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "Role",
        "groupType": "iam::projects.roles",
        "group": "iam",
        "baseUrl": "https://iam.googleapis.com/",
        "dependencies": {}
    },
    {
        "typeFull": "projects.serviceAccounts",
        "methods": {
            "create": {
                "id": "iam.projects.serviceAccounts.create",
                "path": "v1/projects/{projectsId}/serviceAccounts",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "iam.projects.serviceAccounts.delete",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "DELETE"
            },
            "disable": {
                "id": "iam.projects.serviceAccounts.disable",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:disable",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            },
            "enable": {
                "id": "iam.projects.serviceAccounts.enable",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:enable",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "iam.projects.serviceAccounts.get",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "iam.projects.serviceAccounts.getIamPolicy",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:getIamPolicy",
                "parameterOrder": [
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "iam.projects.serviceAccounts.list",
                "path": "v1/projects/{projectsId}/serviceAccounts",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "iam.projects.serviceAccounts.patch",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "PATCH"
            },
            "setIamPolicy": {
                "id": "iam.projects.serviceAccounts.setIamPolicy",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:setIamPolicy",
                "parameterOrder": [
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "signBlob": {
                "id": "iam.projects.serviceAccounts.signBlob",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signBlob",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            },
            "signJwt": {
                "id": "iam.projects.serviceAccounts.signJwt",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:signJwt",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "iam.projects.serviceAccounts.testIamPermissions",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:testIamPermissions",
                "parameterOrder": [
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "undelete": {
                "id": "iam.projects.serviceAccounts.undelete",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}:undelete",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            },
            "update": {
                "id": "iam.projects.serviceAccounts.update",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [],
        "type": "ServiceAccount",
        "groupType": "iam::projects.serviceAccounts",
        "group": "iam",
        "baseUrl": "https://iam.googleapis.com/",
        "dependencies": {}
    },
    {
        "typeFull": "projects.serviceAccounts.keys",
        "methods": {
            "create": {
                "id": "iam.projects.serviceAccounts.keys.create",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "iam.projects.serviceAccounts.keys.delete",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "DELETE"
            },
            "disable": {
                "id": "iam.projects.serviceAccounts.keys.disable",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}:disable",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            },
            "enable": {
                "id": "iam.projects.serviceAccounts.keys.enable",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}:enable",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "id": "iam.projects.serviceAccounts.keys.get",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys/{keysId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "id": "iam.projects.serviceAccounts.keys.list",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "upload": {
                "id": "iam.projects.serviceAccounts.keys.upload",
                "path": "v1/projects/{projectsId}/serviceAccounts/{serviceAccountsId}/keys:upload",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "Key",
        "groupType": "iam::projects.serviceAccounts.keys",
        "group": "iam",
        "baseUrl": "https://iam.googleapis.com/",
        "dependencies": {
            "serviceAccount": {
                "type": "ServiceAccount",
                "group": "iam",
                "parent": true,
                "resourceName": "serviceAccount"
            }
        }
    },
    {
        "typeFull": "roles",
        "methods": {
            "get": {
                "id": "iam.roles.get",
                "path": "v1/roles/{rolesId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "id": "iam.roles.list",
                "path": "v1/roles",
                "parameterOrder": [],
                "httpMethod": "GET"
            },
            "queryGrantableRoles": {
                "id": "iam.roles.queryGrantableRoles",
                "path": "v1/roles:queryGrantableRoles",
                "parameterOrder": [],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "Role",
        "groupType": "iam::roles",
        "group": "iam",
        "baseUrl": "https://iam.googleapis.com/",
        "dependencies": {}
    },
    {
        "typeFull": "namespaces.domainmappings",
        "methods": {
            "create": {
                "id": "run.namespaces.domainmappings.create",
                "path": "apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/domainmappings",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "run.namespaces.domainmappings.delete",
                "path": "apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "run.namespaces.domainmappings.get",
                "path": "apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "id": "run.namespaces.domainmappings.list",
                "path": "apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/domainmappings",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "metadata.selfLink",
                "depId": "selfLink"
            }
        ],
        "type": "Domainmapping",
        "groupType": "run::namespaces.domainmappings",
        "group": "run",
        "baseUrl": "https://run.googleapis.com/",
        "dependencies": {}
    },
    {
        "typeFull": "namespaces.executions",
        "methods": {
            "cancel": {
                "id": "run.namespaces.executions.cancel",
                "path": "apis/run.googleapis.com/v1/namespaces/{namespacesId}/executions/{executionsId}:cancel",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "run.namespaces.executions.delete",
                "path": "apis/run.googleapis.com/v1/namespaces/{namespacesId}/executions/{executionsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "run.namespaces.executions.get",
                "path": "apis/run.googleapis.com/v1/namespaces/{namespacesId}/executions/{executionsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "id": "run.namespaces.executions.list",
                "path": "apis/run.googleapis.com/v1/namespaces/{namespacesId}/executions",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "metadata.selfLink",
                "depId": "selfLink"
            },
            {
                "pathId": "spec.template.spec.image",
                "depId": "image"
            }
        ],
        "type": "Execution",
        "groupType": "run::namespaces.executions",
        "group": "run",
        "baseUrl": "https://run.googleapis.com/",
        "dependencies": {
            "image": {
                "type": "image",
                "group": "compute",
                "pathId": "spec.template.spec.image"
            }
        }
    },
    {
        "typeFull": "namespaces.jobs",
        "methods": {
            "create": {
                "id": "run.namespaces.jobs.create",
                "path": "apis/run.googleapis.com/v1/namespaces/{namespacesId}/jobs",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "run.namespaces.jobs.delete",
                "path": "apis/run.googleapis.com/v1/namespaces/{namespacesId}/jobs/{jobsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "run.namespaces.jobs.get",
                "path": "apis/run.googleapis.com/v1/namespaces/{namespacesId}/jobs/{jobsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "id": "run.namespaces.jobs.list",
                "path": "apis/run.googleapis.com/v1/namespaces/{namespacesId}/jobs",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "GET"
            },
            "replaceJob": {
                "id": "run.namespaces.jobs.replaceJob",
                "path": "apis/run.googleapis.com/v1/namespaces/{namespacesId}/jobs/{jobsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "PUT"
            },
            "run": {
                "id": "run.namespaces.jobs.run",
                "path": "apis/run.googleapis.com/v1/namespaces/{namespacesId}/jobs/{jobsId}:run",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "metadata.selfLink",
                "depId": "selfLink"
            },
            {
                "pathId": "spec.template.metadata.selfLink",
                "depId": "selfLink"
            },
            {
                "pathId": "spec.template.spec.template.spec.image",
                "depId": "image"
            }
        ],
        "type": "Job",
        "groupType": "run::namespaces.jobs",
        "group": "run",
        "baseUrl": "https://run.googleapis.com/",
        "dependencies": {
            "image": {
                "type": "image",
                "group": "compute",
                "pathId": "spec.template.spec.template.spec.image"
            }
        }
    },
    {
        "typeFull": "namespaces.services",
        "methods": {
            "create": {
                "id": "run.namespaces.services.create",
                "path": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/services",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "run.namespaces.services.delete",
                "path": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/services/{servicesId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "run.namespaces.services.get",
                "path": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/services/{servicesId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "id": "run.namespaces.services.list",
                "path": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/services",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "GET"
            },
            "replaceService": {
                "id": "run.namespaces.services.replaceService",
                "path": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/services/{servicesId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "metadata.selfLink",
                "depId": "selfLink"
            },
            {
                "pathId": "spec.template.metadata.selfLink",
                "depId": "selfLink"
            },
            {
                "pathId": "spec.template.spec.image",
                "depId": "image"
            },
            {
                "pathId": "spec.url",
                "depId": "url"
            },
            {
                "pathId": "status.url",
                "depId": "url"
            },
            {
                "pathId": "status.url",
                "depId": "url"
            }
        ],
        "type": "Service",
        "groupType": "run::namespaces.services",
        "group": "run",
        "baseUrl": "https://run.googleapis.com/",
        "dependencies": {
            "image": {
                "type": "image",
                "group": "compute",
                "pathId": "spec.template.spec.image"
            }
        }
    },
    {
        "typeFull": "projects.locations.domainmappings",
        "methods": {
            "create": {
                "id": "run.projects.locations.domainmappings.create",
                "path": "v1/projects/{projectsId}/locations/{locationsId}/domainmappings",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "run.projects.locations.domainmappings.delete",
                "path": "v1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "run.projects.locations.domainmappings.get",
                "path": "v1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}",
                "parameterOrder": [
                    "name"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "id": "run.projects.locations.domainmappings.list",
                "path": "v1/projects/{projectsId}/locations/{locationsId}/domainmappings",
                "parameterOrder": [
                    "parent"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "metadata.selfLink",
                "depId": "selfLink"
            }
        ],
        "type": "Domainmapping",
        "groupType": "run::projects.locations.domainmappings",
        "group": "run",
        "baseUrl": "https://run.googleapis.com/",
        "dependencies": {}
    },
    {
        "typeFull": "projects.locations.jobs",
        "methods": {
            "getIamPolicy": {
                "id": "run.projects.locations.jobs.getIamPolicy",
                "path": "v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:getIamPolicy",
                "parameterOrder": [
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "id": "run.projects.locations.jobs.setIamPolicy",
                "path": "v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:setIamPolicy",
                "parameterOrder": [
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "id": "run.projects.locations.jobs.testIamPermissions",
                "path": "v1/projects/{projectsId}/locations/{locationsId}/jobs/{jobsId}:testIamPermissions",
                "parameterOrder": [
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "type": "Job",
        "groupType": "run::projects.locations.jobs",
        "group": "run",
        "baseUrl": "https://run.googleapis.com/",
        "dependencies": {}
    },
    {
        "typeFull": "bucketAccessControls",
        "methods": {
            "delete": {
                "id": "storage.bucketAccessControls.delete",
                "path": "b/{bucket}/acl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "entity"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "storage.bucketAccessControls.get",
                "path": "b/{bucket}/acl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "entity"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "storage.bucketAccessControls.insert",
                "path": "b/{bucket}/acl",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "storage.bucketAccessControls.list",
                "path": "b/{bucket}/acl",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "storage.bucketAccessControls.patch",
                "path": "b/{bucket}/acl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "entity"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "storage.bucketAccessControls.update",
                "path": "b/{bucket}/acl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "entity"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [],
        "type": "BucketAccessControl",
        "groupType": "storage::bucketAccessControls",
        "group": "storage",
        "baseUrl": "https://storage.googleapis.com/storage/v1/",
        "dependencies": {
            "bucket": {
                "type": "Bucket",
                "group": "storage",
                "parent": true,
                "resourceName": "bucket"
            }
        }
    },
    {
        "typeFull": "buckets",
        "methods": {
            "delete": {
                "id": "storage.buckets.delete",
                "path": "b/{bucket}",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "storage.buckets.get",
                "path": "b/{bucket}",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "storage.buckets.getIamPolicy",
                "path": "b/{bucket}/iam",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "storage.buckets.insert",
                "path": "b",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "storage.buckets.list",
                "path": "b",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "lockRetentionPolicy": {
                "id": "storage.buckets.lockRetentionPolicy",
                "path": "b/{bucket}/lockRetentionPolicy",
                "parameterOrder": [
                    "bucket",
                    "ifMetagenerationMatch"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "id": "storage.buckets.patch",
                "path": "b/{bucket}",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "PATCH"
            },
            "setIamPolicy": {
                "id": "storage.buckets.setIamPolicy",
                "path": "b/{bucket}/iam",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "PUT"
            },
            "testIamPermissions": {
                "id": "storage.buckets.testIamPermissions",
                "path": "b/{bucket}/iam/testPermissions",
                "parameterOrder": [
                    "bucket",
                    "permissions"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "id": "storage.buckets.update",
                "path": "b/{bucket}",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [],
        "type": "Bucket",
        "groupType": "storage::buckets",
        "group": "storage",
        "baseUrl": "https://storage.googleapis.com/storage/v1/",
        "dependencies": {}
    },
    {
        "typeFull": "defaultObjectAccessControls",
        "methods": {
            "delete": {
                "id": "storage.defaultObjectAccessControls.delete",
                "path": "b/{bucket}/defaultObjectAcl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "entity"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "storage.defaultObjectAccessControls.get",
                "path": "b/{bucket}/defaultObjectAcl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "entity"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "storage.defaultObjectAccessControls.insert",
                "path": "b/{bucket}/defaultObjectAcl",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "storage.defaultObjectAccessControls.list",
                "path": "b/{bucket}/defaultObjectAcl",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "storage.defaultObjectAccessControls.patch",
                "path": "b/{bucket}/defaultObjectAcl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "entity"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "storage.defaultObjectAccessControls.update",
                "path": "b/{bucket}/defaultObjectAcl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "entity"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [],
        "type": "DefaultObjectAccessControl",
        "groupType": "storage::defaultObjectAccessControls",
        "group": "storage",
        "baseUrl": "https://storage.googleapis.com/storage/v1/",
        "dependencies": {
            "bucket": {
                "type": "Bucket",
                "group": "storage",
                "parent": true,
                "resourceName": "bucket"
            }
        }
    },
    {
        "typeFull": "notifications",
        "methods": {
            "delete": {
                "id": "storage.notifications.delete",
                "path": "b/{bucket}/notificationConfigs/{notification}",
                "parameterOrder": [
                    "bucket",
                    "notification"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "storage.notifications.get",
                "path": "b/{bucket}/notificationConfigs/{notification}",
                "parameterOrder": [
                    "bucket",
                    "notification"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "storage.notifications.insert",
                "path": "b/{bucket}/notificationConfigs",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "storage.notifications.list",
                "path": "b/{bucket}/notificationConfigs",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "selfLink",
                "depId": "selfLink"
            }
        ],
        "type": "Notification",
        "groupType": "storage::notifications",
        "group": "storage",
        "baseUrl": "https://storage.googleapis.com/storage/v1/",
        "dependencies": {
            "bucket": {
                "type": "Bucket",
                "group": "storage",
                "parent": true,
                "resourceName": "bucket"
            }
        }
    },
    {
        "typeFull": "objectAccessControls",
        "methods": {
            "delete": {
                "id": "storage.objectAccessControls.delete",
                "path": "b/{bucket}/o/{object}/acl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "object",
                    "entity"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "storage.objectAccessControls.get",
                "path": "b/{bucket}/o/{object}/acl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "object",
                    "entity"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "storage.objectAccessControls.insert",
                "path": "b/{bucket}/o/{object}/acl",
                "parameterOrder": [
                    "bucket",
                    "object"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "storage.objectAccessControls.list",
                "path": "b/{bucket}/o/{object}/acl",
                "parameterOrder": [
                    "bucket",
                    "object"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "storage.objectAccessControls.patch",
                "path": "b/{bucket}/o/{object}/acl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "object",
                    "entity"
                ],
                "httpMethod": "PATCH"
            },
            "update": {
                "id": "storage.objectAccessControls.update",
                "path": "b/{bucket}/o/{object}/acl/{entity}",
                "parameterOrder": [
                    "bucket",
                    "object",
                    "entity"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [],
        "type": "ObjectAccessControl",
        "groupType": "storage::objectAccessControls",
        "group": "storage",
        "baseUrl": "https://storage.googleapis.com/storage/v1/",
        "dependencies": {
            "bucket": {
                "type": "Bucket",
                "group": "storage",
                "parent": true,
                "resourceName": "bucket"
            },
            "object": {
                "type": "Object",
                "group": "storage",
                "parent": true,
                "resourceName": "object"
            }
        }
    },
    {
        "typeFull": "objects",
        "methods": {
            "compose": {
                "id": "storage.objects.compose",
                "path": "b/{destinationBucket}/o/{destinationObject}/compose",
                "parameterOrder": [
                    "destinationBucket",
                    "destinationObject"
                ],
                "httpMethod": "POST"
            },
            "copy": {
                "id": "storage.objects.copy",
                "path": "b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}",
                "parameterOrder": [
                    "sourceBucket",
                    "sourceObject",
                    "destinationBucket",
                    "destinationObject"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "storage.objects.delete",
                "path": "b/{bucket}/o/{object}",
                "parameterOrder": [
                    "bucket",
                    "object"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "storage.objects.get",
                "path": "b/{bucket}/o/{object}",
                "parameterOrder": [
                    "bucket",
                    "object"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "id": "storage.objects.getIamPolicy",
                "path": "b/{bucket}/o/{object}/iam",
                "parameterOrder": [
                    "bucket",
                    "object"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "id": "storage.objects.insert",
                "path": "b/{bucket}/o",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "id": "storage.objects.list",
                "path": "b/{bucket}/o",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "id": "storage.objects.patch",
                "path": "b/{bucket}/o/{object}",
                "parameterOrder": [
                    "bucket",
                    "object"
                ],
                "httpMethod": "PATCH"
            },
            "rewrite": {
                "id": "storage.objects.rewrite",
                "path": "b/{sourceBucket}/o/{sourceObject}/rewriteTo/b/{destinationBucket}/o/{destinationObject}",
                "parameterOrder": [
                    "sourceBucket",
                    "sourceObject",
                    "destinationBucket",
                    "destinationObject"
                ],
                "httpMethod": "POST"
            },
            "setIamPolicy": {
                "id": "storage.objects.setIamPolicy",
                "path": "b/{bucket}/o/{object}/iam",
                "parameterOrder": [
                    "bucket",
                    "object"
                ],
                "httpMethod": "PUT"
            },
            "testIamPermissions": {
                "id": "storage.objects.testIamPermissions",
                "path": "b/{bucket}/o/{object}/iam/testPermissions",
                "parameterOrder": [
                    "bucket",
                    "object",
                    "permissions"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "id": "storage.objects.update",
                "path": "b/{bucket}/o/{object}",
                "parameterOrder": [
                    "bucket",
                    "object"
                ],
                "httpMethod": "PUT"
            },
            "watchAll": {
                "id": "storage.objects.watchAll",
                "path": "b/{bucket}/o/watch",
                "parameterOrder": [
                    "bucket"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "name",
                "depId": "name"
            }
        ],
        "type": "Object",
        "groupType": "storage::objects",
        "group": "storage",
        "baseUrl": "https://storage.googleapis.com/storage/v1/",
        "dependencies": {
            "bucket": {
                "type": "Bucket",
                "group": "storage",
                "parent": true,
                "resourceName": "bucket"
            }
        }
    },
    {
        "typeFull": "projects.hmacKeys",
        "methods": {
            "create": {
                "id": "storage.projects.hmacKeys.create",
                "path": "projects/{projectId}/hmacKeys",
                "parameterOrder": [
                    "projectId",
                    "serviceAccountEmail"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "id": "storage.projects.hmacKeys.delete",
                "path": "projects/{projectId}/hmacKeys/{accessId}",
                "parameterOrder": [
                    "projectId",
                    "accessId"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "id": "storage.projects.hmacKeys.get",
                "path": "projects/{projectId}/hmacKeys/{accessId}",
                "parameterOrder": [
                    "projectId",
                    "accessId"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "id": "storage.projects.hmacKeys.list",
                "path": "projects/{projectId}/hmacKeys",
                "parameterOrder": [
                    "projectId"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "id": "storage.projects.hmacKeys.update",
                "path": "projects/{projectId}/hmacKeys/{accessId}",
                "parameterOrder": [
                    "projectId",
                    "accessId"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [],
        "type": "HmacKey",
        "groupType": "storage::projects.hmacKeys",
        "group": "storage",
        "baseUrl": "https://storage.googleapis.com/storage/v1/",
        "dependencies": {}
    }
]