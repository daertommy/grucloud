[
    {
        "groupType": "compute::Address",
        "group": "compute",
        "type": "Address",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "get": {
                "path": "projects/{project}/regions/{region}/addresses/{address}",
                "parameterOrder": [
                    "project",
                    "region",
                    "address"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/addresses/{address}",
                "parameterOrder": [
                    "project",
                    "region",
                    "address"
                ],
                "httpMethod": "DELETE"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/addresses",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/addresses",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/addresses",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            }
        }
    },
    {
        "groupType": "compute::Autoscaler",
        "group": "compute",
        "type": "Autoscaler",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "update": {
                "path": "projects/{project}/zones/{zone}/autoscalers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "PUT"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/autoscalers",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/zones/{zone}/autoscalers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/zones/{zone}/autoscalers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "PATCH"
            },
            "get": {
                "path": "projects/{project}/zones/{zone}/autoscalers/{autoscaler}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "autoscaler"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/zones/{zone}/autoscalers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/zones/{zone}/autoscalers/{autoscaler}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "autoscaler"
                ],
                "httpMethod": "DELETE"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "target",
                "depId": "target"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::BackendBucket",
        "group": "compute",
        "type": "BackendBucket",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "patch": {
                "path": "projects/{project}/global/backendBuckets/{backendBucket}",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "PATCH"
            },
            "list": {
                "path": "projects/{project}/global/backendBuckets",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/global/backendBuckets/{backendBucket}",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "DELETE"
            },
            "deleteSignedUrlKey": {
                "path": "projects/{project}/global/backendBuckets/{backendBucket}/deleteSignedUrlKey",
                "parameterOrder": [
                    "project",
                    "backendBucket",
                    "keyName"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/global/backendBuckets",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "setEdgeSecurityPolicy": {
                "path": "projects/{project}/global/backendBuckets/{backendBucket}/setEdgeSecurityPolicy",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/global/backendBuckets/{backendBucket}",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "GET"
            },
            "addSignedUrlKey": {
                "path": "projects/{project}/global/backendBuckets/{backendBucket}/addSignedUrlKey",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "POST"
            },
            "update": {
                "path": "projects/{project}/global/backendBuckets/{backendBucket}",
                "parameterOrder": [
                    "project",
                    "backendBucket"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "cdnPolicy.signedUrlCacheMaxAgeSec",
                "depId": "signedUrlCacheMaxAgeSec"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::BackendService",
        "group": "compute",
        "type": "BackendService",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "setSecurityPolicy": {
                "path": "projects/{project}/global/backendServices/{backendService}/setSecurityPolicy",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/backendServices",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "path": "projects/{project}/global/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "PUT"
            },
            "list": {
                "path": "projects/{project}/global/backendServices",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/global/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "DELETE"
            },
            "insert": {
                "path": "projects/{project}/global/backendServices",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "path": "projects/{project}/global/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "PATCH"
            },
            "get": {
                "path": "projects/{project}/global/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "GET"
            },
            "deleteSignedUrlKey": {
                "path": "projects/{project}/global/backendServices/{backendService}/deleteSignedUrlKey",
                "parameterOrder": [
                    "project",
                    "backendService",
                    "keyName"
                ],
                "httpMethod": "POST"
            },
            "getHealth": {
                "path": "projects/{project}/global/backendServices/{backendService}/getHealth",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "POST"
            },
            "addSignedUrlKey": {
                "path": "projects/{project}/global/backendServices/{backendService}/addSignedUrlKey",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "POST"
            },
            "setEdgeSecurityPolicy": {
                "path": "projects/{project}/global/backendServices/{backendService}/setEdgeSecurityPolicy",
                "parameterOrder": [
                    "project",
                    "backendService"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "securitySettings.clientTlsPolicy",
                "depId": "clientTlsPolicy"
            },
            {
                "pathId": "cdnPolicy.signedUrlCacheMaxAgeSec",
                "depId": "signedUrlCacheMaxAgeSec"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "group",
                "depId": "group"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "groupType": "compute::Disk",
        "group": "compute",
        "type": "Disk",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "createSnapshot": {
                "path": "projects/{project}/zones/{zone}/disks/{disk}/createSnapshot",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/zones/{zone}/disks/{disk}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "DELETE"
            },
            "resize": {
                "path": "projects/{project}/zones/{zone}/disks/{disk}/resize",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/zones/{zone}/disks/{disk}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "GET"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/disks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "path": "projects/{project}/zones/{zone}/disks/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "path": "projects/{project}/zones/{zone}/disks/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/zones/{zone}/disks",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "setLabels": {
                "path": "projects/{project}/zones/{zone}/disks/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/zones/{zone}/disks",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "getIamPolicy": {
                "path": "projects/{project}/zones/{zone}/disks/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "removeResourcePolicies": {
                "path": "projects/{project}/zones/{zone}/disks/{disk}/removeResourcePolicies",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "addResourcePolicies": {
                "path": "projects/{project}/zones/{zone}/disks/{disk}/addResourcePolicies",
                "parameterOrder": [
                    "project",
                    "zone",
                    "disk"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "type",
                "depId": "type"
            },
            {
                "pathId": "sourceDisk",
                "depId": "sourceDisk"
            },
            {
                "pathId": "sourceSnapshot",
                "depId": "sourceSnapshot"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::ExternalVpnGateway",
        "group": "compute",
        "type": "ExternalVpnGateway",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "list": {
                "path": "projects/{project}/global/externalVpnGateways",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "testIamPermissions": {
                "path": "projects/{project}/global/externalVpnGateways/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/global/externalVpnGateways",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "setLabels": {
                "path": "projects/{project}/global/externalVpnGateways/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/global/externalVpnGateways/{externalVpnGateway}",
                "parameterOrder": [
                    "project",
                    "externalVpnGateway"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "path": "projects/{project}/global/externalVpnGateways/{externalVpnGateway}",
                "parameterOrder": [
                    "project",
                    "externalVpnGateway"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::Firewall",
        "group": "compute",
        "type": "Firewall",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "insert": {
                "path": "projects/{project}/global/firewalls",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/firewalls",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/firewalls/{firewall}",
                "parameterOrder": [
                    "project",
                    "firewall"
                ],
                "httpMethod": "PATCH"
            },
            "get": {
                "path": "projects/{project}/global/firewalls/{firewall}",
                "parameterOrder": [
                    "project",
                    "firewall"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/global/firewalls/{firewall}",
                "parameterOrder": [
                    "project",
                    "firewall"
                ],
                "httpMethod": "DELETE"
            },
            "update": {
                "path": "projects/{project}/global/firewalls/{firewall}",
                "parameterOrder": [
                    "project",
                    "firewall"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "groupType": "compute::ForwardingRule",
        "group": "compute",
        "type": "ForwardingRule",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "setLabels": {
                "path": "projects/{project}/regions/{region}/forwardingRules/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/forwardingRules",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "region",
                    "forwardingRule"
                ],
                "httpMethod": "PATCH"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "region",
                    "forwardingRule"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "region",
                    "forwardingRule"
                ],
                "httpMethod": "DELETE"
            },
            "setTarget": {
                "path": "projects/{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget",
                "parameterOrder": [
                    "project",
                    "region",
                    "forwardingRule"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/forwardingRules",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/forwardingRules",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "IPAddress",
                "depId": "IPAddress"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::GlobalAddress",
        "group": "compute",
        "type": "GlobalAddress",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "insert": {
                "path": "projects/{project}/global/addresses",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/addresses",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/global/addresses/{address}",
                "parameterOrder": [
                    "project",
                    "address"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "path": "projects/{project}/global/addresses/{address}",
                "parameterOrder": [
                    "project",
                    "address"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            }
        }
    },
    {
        "groupType": "compute::GlobalForwardingRule",
        "group": "compute",
        "type": "GlobalForwardingRule",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "setTarget": {
                "path": "projects/{project}/global/forwardingRules/{forwardingRule}/setTarget",
                "parameterOrder": [
                    "project",
                    "forwardingRule"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/global/forwardingRules",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/forwardingRules",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/global/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "forwardingRule"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "path": "projects/{project}/global/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "forwardingRule"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/forwardingRules/{forwardingRule}",
                "parameterOrder": [
                    "project",
                    "forwardingRule"
                ],
                "httpMethod": "PATCH"
            },
            "setLabels": {
                "path": "projects/{project}/global/forwardingRules/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "IPAddress",
                "depId": "IPAddress"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::GlobalNetworkEndpointGroup",
        "group": "compute",
        "type": "GlobalNetworkEndpointGroup",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "delete": {
                "path": "projects/{project}/global/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "networkEndpointGroup"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "path": "projects/{project}/global/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "networkEndpointGroup"
                ],
                "httpMethod": "GET"
            },
            "attachNetworkEndpoints": {
                "path": "projects/{project}/global/networkEndpointGroups/{networkEndpointGroup}/attachNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            },
            "listNetworkEndpoints": {
                "path": "projects/{project}/global/networkEndpointGroups/{networkEndpointGroup}/listNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/networkEndpointGroups",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/global/networkEndpointGroups",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "detachNetworkEndpoints": {
                "path": "projects/{project}/global/networkEndpointGroups/{networkEndpointGroup}/detachNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            },
            {
                "pathId": "cloudRun.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "appEngine.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "cloudFunction.urlMask",
                "depId": "urlMask"
            }
        ],
        "dependencies": {
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            },
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "groupType": "compute::GlobalPublicDelegatedPrefix",
        "group": "compute",
        "type": "GlobalPublicDelegatedPrefix",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "get": {
                "path": "projects/{project}/global/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "PATCH"
            },
            "insert": {
                "path": "projects/{project}/global/publicDelegatedPrefixes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/global/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "DELETE"
            },
            "list": {
                "path": "projects/{project}/global/publicDelegatedPrefixes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "parentPrefix",
                "depId": "parentPrefix"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::HealthCheck",
        "group": "compute",
        "type": "HealthCheck",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "insert": {
                "path": "projects/{project}/global/healthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/global/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "healthCheck"
                ],
                "httpMethod": "DELETE"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/healthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/global/healthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "path": "projects/{project}/global/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "healthCheck"
                ],
                "httpMethod": "PUT"
            },
            "patch": {
                "path": "projects/{project}/global/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "healthCheck"
                ],
                "httpMethod": "PATCH"
            },
            "get": {
                "path": "projects/{project}/global/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "healthCheck"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::HttpHealthCheck",
        "group": "compute",
        "type": "HttpHealthCheck",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "delete": {
                "path": "projects/{project}/global/httpHealthChecks/{httpHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpHealthCheck"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "path": "projects/{project}/global/httpHealthChecks/{httpHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpHealthCheck"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/httpHealthChecks/{httpHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpHealthCheck"
                ],
                "httpMethod": "PATCH"
            },
            "insert": {
                "path": "projects/{project}/global/httpHealthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/httpHealthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "path": "projects/{project}/global/httpHealthChecks/{httpHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpHealthCheck"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::HttpsHealthCheck",
        "group": "compute",
        "type": "HttpsHealthCheck",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "insert": {
                "path": "projects/{project}/global/httpsHealthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/httpsHealthChecks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "path": "projects/{project}/global/httpsHealthChecks/{httpsHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpsHealthCheck"
                ],
                "httpMethod": "PUT"
            },
            "get": {
                "path": "projects/{project}/global/httpsHealthChecks/{httpsHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpsHealthCheck"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/httpsHealthChecks/{httpsHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpsHealthCheck"
                ],
                "httpMethod": "PATCH"
            },
            "delete": {
                "path": "projects/{project}/global/httpsHealthChecks/{httpsHealthCheck}",
                "parameterOrder": [
                    "project",
                    "httpsHealthCheck"
                ],
                "httpMethod": "DELETE"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::Image",
        "group": "compute",
        "type": "Image",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "get": {
                "path": "projects/{project}/global/images/{image}",
                "parameterOrder": [
                    "project",
                    "image"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/global/images",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "path": "projects/{project}/global/images/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/global/images/{image}",
                "parameterOrder": [
                    "project",
                    "image"
                ],
                "httpMethod": "DELETE"
            },
            "setLabels": {
                "path": "projects/{project}/global/images/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "getFromFamily": {
                "path": "projects/{project}/global/images/family/{family}",
                "parameterOrder": [
                    "project",
                    "family"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/images/{image}",
                "parameterOrder": [
                    "project",
                    "image"
                ],
                "httpMethod": "PATCH"
            },
            "testIamPermissions": {
                "path": "projects/{project}/global/images/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "getIamPolicy": {
                "path": "projects/{project}/global/images/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/global/images",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "deprecate": {
                "path": "projects/{project}/global/images/{image}/deprecate",
                "parameterOrder": [
                    "project",
                    "image"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "rawDisk.source",
                "depId": "source"
            },
            {
                "pathId": "sourceDisk",
                "depId": "sourceDisk"
            },
            {
                "pathId": "deprecated.replacement",
                "depId": "replacement"
            },
            {
                "pathId": "sourceImage",
                "depId": "sourceImage"
            },
            {
                "pathId": "sourceSnapshot",
                "depId": "sourceSnapshot"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::Instance",
        "group": "compute",
        "type": "Instance",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "addResourcePolicies": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/addResourcePolicies",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "DELETE"
            },
            "stop": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/stop",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "updateDisplayDevice": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/updateDisplayDevice",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "PATCH"
            },
            "getShieldedInstanceIdentity": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/getShieldedInstanceIdentity",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "updateShieldedInstanceConfig": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/updateShieldedInstanceConfig",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "PATCH"
            },
            "getGuestAttributes": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/getGuestAttributes",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "setMetadata": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setMetadata",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setDiskAutoDelete": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "autoDelete",
                    "deviceName"
                ],
                "httpMethod": "POST"
            },
            "setMachineType": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setMachineType",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "update": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "PUT"
            },
            "getScreenshot": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/screenshot",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "getSerialPortOutput": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/serialPort",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/zones/{zone}/instances",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "setMinCpuPlatform": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setMinCpuPlatform",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setDeletionProtection": {
                "path": "projects/{project}/zones/{zone}/instances/{resource}/setDeletionProtection",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/zones/{zone}/instances",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "setLabels": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setLabels",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "getIamPolicy": {
                "path": "projects/{project}/zones/{zone}/instances/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "updateAccessConfig": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/updateAccessConfig",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "networkInterface"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "path": "projects/{project}/zones/{zone}/instances/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "simulateMaintenanceEvent": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/simulateMaintenanceEvent",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "sendDiagnosticInterrupt": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/sendDiagnosticInterrupt",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setServiceAccount": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setServiceAccount",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "getEffectiveFirewalls": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/getEffectiveFirewalls",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "networkInterface"
                ],
                "httpMethod": "GET"
            },
            "listReferrers": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/referrers",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "setMachineResources": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setMachineResources",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "start": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/start",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "suspend": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/suspend",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "resume": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/resume",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setScheduling": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setScheduling",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "addAccessConfig": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/addAccessConfig",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "networkInterface"
                ],
                "httpMethod": "POST"
            },
            "bulkInsert": {
                "path": "projects/{project}/zones/{zone}/instances/bulkInsert",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "setIamPolicy": {
                "path": "projects/{project}/zones/{zone}/instances/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "GET"
            },
            "updateNetworkInterface": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/updateNetworkInterface",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "networkInterface"
                ],
                "httpMethod": "PATCH"
            },
            "deleteAccessConfig": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/deleteAccessConfig",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "accessConfig",
                    "networkInterface"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/instances",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setTags": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setTags",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "attachDisk": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/attachDisk",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "reset": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/reset",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "setShieldedInstanceIntegrityPolicy": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/setShieldedInstanceIntegrityPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "PATCH"
            },
            "detachDisk": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/detachDisk",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance",
                    "deviceName"
                ],
                "httpMethod": "POST"
            },
            "startWithEncryptionKey": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/startWithEncryptionKey",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            },
            "removeResourcePolicies": {
                "path": "projects/{project}/zones/{zone}/instances/{instance}/removeResourcePolicies",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instance"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "acceleratorType",
                "depId": "acceleratorType"
            },
            {
                "pathId": "machineType",
                "depId": "machineType"
            },
            {
                "pathId": "source",
                "depId": "source"
            },
            {
                "pathId": "initializeParams.diskType",
                "depId": "diskType"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            },
            {
                "pathId": "metadata.key",
                "depId": "key"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            }
        }
    },
    {
        "groupType": "compute::InstanceGroup",
        "group": "compute",
        "type": "InstanceGroup",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "listInstances": {
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/listInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "DELETE"
            },
            "removeInstances": {
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/removeInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/instanceGroups",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/zones/{zone}/instanceGroups",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "addInstances": {
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/addInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "POST"
            },
            "setNamedPorts": {
                "path": "projects/{project}/zones/{zone}/instanceGroups/{instanceGroup}/setNamedPorts",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroup"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/zones/{zone}/instanceGroups",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::InstanceGroupManager",
        "group": "compute",
        "type": "InstanceGroupManager",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "setInstanceTemplate": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "DELETE"
            },
            "listErrors": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listErrors",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "PATCH"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/instanceGroupManagers",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "deletePerInstanceConfigs": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deletePerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "createInstances": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/createInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "abandonInstances": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/abandonInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "applyUpdatesToInstances": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/applyUpdatesToInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "resize": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resize",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager",
                    "size"
                ],
                "httpMethod": "POST"
            },
            "listPerInstanceConfigs": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listPerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "recreateInstances": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/recreateInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "updatePerInstanceConfigs": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/updatePerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "deleteInstances": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deleteInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "listManagedInstances": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "setTargetPools": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setTargetPools",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "patchPerInstanceConfigs": {
                "path": "projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/patchPerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "zone",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "healthCheck",
                "depId": "healthCheck"
            },
            {
                "pathId": "instanceTemplate",
                "depId": "instanceTemplate"
            },
            {
                "pathId": "instanceTemplate",
                "depId": "instanceTemplate"
            },
            {
                "pathId": "distributionPolicy.zone",
                "depId": "zone"
            }
        ],
        "dependencies": {
            "healthCheck": {
                "type": "healthCheck",
                "group": "compute",
                "pathId": "healthCheck"
            },
            "instanceTemplate": {
                "type": "instanceTemplate",
                "group": "compute",
                "pathId": "instanceTemplate"
            }
        }
    },
    {
        "groupType": "compute::InstanceTemplate",
        "group": "compute",
        "type": "InstanceTemplate",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "get": {
                "path": "projects/{project}/global/instanceTemplates/{instanceTemplate}",
                "parameterOrder": [
                    "project",
                    "instanceTemplate"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "path": "projects/{project}/global/instanceTemplates/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/instanceTemplates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "testIamPermissions": {
                "path": "projects/{project}/global/instanceTemplates/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/global/instanceTemplates/{instanceTemplate}",
                "parameterOrder": [
                    "project",
                    "instanceTemplate"
                ],
                "httpMethod": "DELETE"
            },
            "insert": {
                "path": "projects/{project}/global/instanceTemplates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "getIamPolicy": {
                "path": "projects/{project}/global/instanceTemplates/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "sourceInstance",
                "depId": "sourceInstance"
            },
            {
                "pathId": "properties.network",
                "depId": "network"
            },
            {
                "pathId": "properties.subnetwork",
                "depId": "subnetwork"
            },
            {
                "pathId": "properties.source",
                "depId": "source"
            },
            {
                "pathId": "properties.initializeParams.diskType",
                "depId": "diskType"
            },
            {
                "pathId": "properties.acceleratorType",
                "depId": "acceleratorType"
            },
            {
                "pathId": "properties.metadata.key",
                "depId": "key"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "properties.network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "properties.subnetwork"
            }
        }
    },
    {
        "groupType": "compute::Interconnect",
        "group": "compute",
        "type": "Interconnect",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "getDiagnostics": {
                "path": "projects/{project}/global/interconnects/{interconnect}/getDiagnostics",
                "parameterOrder": [
                    "project",
                    "interconnect"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/global/interconnects/{interconnect}",
                "parameterOrder": [
                    "project",
                    "interconnect"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/global/interconnects",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/global/interconnects",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "path": "projects/{project}/global/interconnects/{interconnect}",
                "parameterOrder": [
                    "project",
                    "interconnect"
                ],
                "httpMethod": "PATCH"
            },
            "delete": {
                "path": "projects/{project}/global/interconnects/{interconnect}",
                "parameterOrder": [
                    "project",
                    "interconnect"
                ],
                "httpMethod": "DELETE"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "location",
                "depId": "location"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::InterconnectAttachment",
        "group": "compute",
        "type": "InterconnectAttachment",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "patch": {
                "path": "projects/{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "interconnectAttachment"
                ],
                "httpMethod": "PATCH"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/interconnectAttachments",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/interconnectAttachments",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "interconnectAttachment"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/interconnectAttachments/{interconnectAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "interconnectAttachment"
                ],
                "httpMethod": "DELETE"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/interconnectAttachments",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "interconnect",
                "depId": "interconnect"
            },
            {
                "pathId": "partnerMetadata.portalUrl",
                "depId": "portalUrl"
            },
            {
                "pathId": "router",
                "depId": "router"
            }
        ],
        "dependencies": {
            "interconnect": {
                "type": "interconnect",
                "group": "compute",
                "pathId": "interconnect"
            },
            "router": {
                "type": "router",
                "group": "compute",
                "pathId": "router"
            }
        }
    },
    {
        "groupType": "compute::License",
        "group": "compute",
        "type": "License",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "delete": {
                "path": "projects/{project}/global/licenses/{license}",
                "parameterOrder": [
                    "project",
                    "license"
                ],
                "httpMethod": "DELETE"
            },
            "testIamPermissions": {
                "path": "projects/{project}/global/licenses/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/licenses",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/global/licenses/{license}",
                "parameterOrder": [
                    "project",
                    "license"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "path": "projects/{project}/global/licenses/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/global/licenses",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "getIamPolicy": {
                "path": "projects/{project}/global/licenses/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::MachineImage",
        "group": "compute",
        "type": "MachineImage",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "list": {
                "path": "projects/{project}/global/machineImages",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/global/machineImages",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "setIamPolicy": {
                "path": "projects/{project}/global/machineImages/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/global/machineImages/{machineImage}",
                "parameterOrder": [
                    "project",
                    "machineImage"
                ],
                "httpMethod": "DELETE"
            },
            "testIamPermissions": {
                "path": "projects/{project}/global/machineImages/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "getIamPolicy": {
                "path": "projects/{project}/global/machineImages/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/global/machineImages/{machineImage}",
                "parameterOrder": [
                    "project",
                    "machineImage"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "sourceInstanceProperties.network",
                "depId": "network"
            },
            {
                "pathId": "sourceInstanceProperties.subnetwork",
                "depId": "subnetwork"
            },
            {
                "pathId": "sourceInstanceProperties.source",
                "depId": "source"
            },
            {
                "pathId": "sourceInstanceProperties.metadata.key",
                "depId": "key"
            },
            {
                "pathId": "sourceInstanceProperties.acceleratorType",
                "depId": "acceleratorType"
            },
            {
                "pathId": "instanceProperties.network",
                "depId": "network"
            },
            {
                "pathId": "instanceProperties.subnetwork",
                "depId": "subnetwork"
            },
            {
                "pathId": "instanceProperties.source",
                "depId": "source"
            },
            {
                "pathId": "instanceProperties.initializeParams.diskType",
                "depId": "diskType"
            },
            {
                "pathId": "instanceProperties.acceleratorType",
                "depId": "acceleratorType"
            },
            {
                "pathId": "instanceProperties.metadata.key",
                "depId": "key"
            },
            {
                "pathId": "sourceDisk",
                "depId": "sourceDisk"
            },
            {
                "pathId": "sourceInstance",
                "depId": "sourceInstance"
            },
            {
                "pathId": "sourceDisk",
                "depId": "sourceDisk"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "instanceProperties.network"
            },
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "instanceProperties.subnetwork"
            }
        }
    },
    {
        "groupType": "compute::Network",
        "group": "compute",
        "type": "Network",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "removePeering": {
                "path": "projects/{project}/global/networks/{network}/removePeering",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "POST"
            },
            "listPeeringRoutes": {
                "path": "projects/{project}/global/networks/{network}/listPeeringRoutes",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/global/networks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "path": "projects/{project}/global/networks/{network}",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "PATCH"
            },
            "getEffectiveFirewalls": {
                "path": "projects/{project}/global/networks/{network}/getEffectiveFirewalls",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/global/networks/{network}",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "GET"
            },
            "updatePeering": {
                "path": "projects/{project}/global/networks/{network}/updatePeering",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "PATCH"
            },
            "delete": {
                "path": "projects/{project}/global/networks/{network}",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "DELETE"
            },
            "switchToCustomMode": {
                "path": "projects/{project}/global/networks/{network}/switchToCustomMode",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "POST"
            },
            "addPeering": {
                "path": "projects/{project}/global/networks/{network}/addPeering",
                "parameterOrder": [
                    "project",
                    "network"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/networks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "groupType": "compute::NetworkEndpointGroup",
        "group": "compute",
        "type": "NetworkEndpointGroup",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "delete": {
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "networkEndpointGroup"
                ],
                "httpMethod": "DELETE"
            },
            "attachNetworkEndpoints": {
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}/attachNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "zone",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            },
            "listNetworkEndpoints": {
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}/listNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "zone",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "detachNetworkEndpoints": {
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}/detachNetworkEndpoints",
                "parameterOrder": [
                    "project",
                    "zone",
                    "networkEndpointGroup"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/networkEndpointGroups",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/zones/{zone}/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "networkEndpointGroup"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            },
            {
                "pathId": "cloudRun.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "appEngine.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "cloudFunction.urlMask",
                "depId": "urlMask"
            }
        ],
        "dependencies": {
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            },
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "groupType": "compute::NetworkFirewallPolicy",
        "group": "compute",
        "type": "NetworkFirewallPolicy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "setIamPolicy": {
                "path": "projects/{project}/global/firewallPolicies/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "DELETE"
            },
            "getRule": {
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/getRule",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "addRule": {
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/addRule",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "PATCH"
            },
            "testIamPermissions": {
                "path": "projects/{project}/global/firewallPolicies/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "getAssociation": {
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/getAssociation",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "addAssociation": {
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/addAssociation",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "removeAssociation": {
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/removeAssociation",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "cloneRules": {
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/cloneRules",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/global/firewallPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "removeRule": {
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/removeRule",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "getIamPolicy": {
                "path": "projects/{project}/global/firewallPolicies/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/global/firewallPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patchRule": {
                "path": "projects/{project}/global/firewallPolicies/{firewallPolicy}/patchRule",
                "parameterOrder": [
                    "project",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::NodeGroup",
        "group": "compute",
        "type": "NodeGroup",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "setNodeTemplate": {
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}/setNodeTemplate",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "POST"
            },
            "setIamPolicy": {
                "path": "projects/{project}/zones/{zone}/nodeGroups/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "path": "projects/{project}/zones/{zone}/nodeGroups/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "DELETE"
            },
            "deleteNodes": {
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}/deleteNodes",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "PATCH"
            },
            "listNodes": {
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}/listNodes",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/zones/{zone}/nodeGroups",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/zones/{zone}/nodeGroups",
                "parameterOrder": [
                    "project",
                    "zone",
                    "initialNodeCount"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "path": "projects/{project}/zones/{zone}/nodeGroups/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "addNodes": {
                "path": "projects/{project}/zones/{zone}/nodeGroups/{nodeGroup}/addNodes",
                "parameterOrder": [
                    "project",
                    "zone",
                    "nodeGroup"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/nodeGroups",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "nodeTemplate",
                "depId": "nodeTemplate"
            }
        ],
        "dependencies": {
            "nodeTemplate": {
                "type": "nodeTemplate",
                "group": "compute",
                "pathId": "nodeTemplate"
            }
        }
    },
    {
        "groupType": "compute::NodeTemplate",
        "group": "compute",
        "type": "NodeTemplate",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "aggregatedList": {
                "path": "projects/{project}/aggregated/nodeTemplates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "path": "projects/{project}/regions/{region}/nodeTemplates/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/nodeTemplates/{nodeTemplate}",
                "parameterOrder": [
                    "project",
                    "region",
                    "nodeTemplate"
                ],
                "httpMethod": "DELETE"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/nodeTemplates",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/nodeTemplates",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "testIamPermissions": {
                "path": "projects/{project}/regions/{region}/nodeTemplates/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "getIamPolicy": {
                "path": "projects/{project}/regions/{region}/nodeTemplates/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/nodeTemplates/{nodeTemplate}",
                "parameterOrder": [
                    "project",
                    "region",
                    "nodeTemplate"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "diskType",
                "depId": "diskType"
            },
            {
                "pathId": "acceleratorType",
                "depId": "acceleratorType"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::PacketMirroring",
        "group": "compute",
        "type": "PacketMirroring",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "insert": {
                "path": "projects/{project}/regions/{region}/packetMirrorings",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/packetMirrorings",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/packetMirrorings/{packetMirroring}",
                "parameterOrder": [
                    "project",
                    "region",
                    "packetMirroring"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/packetMirrorings/{packetMirroring}",
                "parameterOrder": [
                    "project",
                    "region",
                    "packetMirroring"
                ],
                "httpMethod": "GET"
            },
            "testIamPermissions": {
                "path": "projects/{project}/regions/{region}/packetMirrorings/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/packetMirrorings",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/packetMirrorings/{packetMirroring}",
                "parameterOrder": [
                    "project",
                    "region",
                    "packetMirroring"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "collectorIlb.url",
                "depId": "url"
            },
            {
                "pathId": "mirroredResources.url",
                "depId": "url"
            },
            {
                "pathId": "mirroredResources.url",
                "depId": "url"
            },
            {
                "pathId": "network.url",
                "depId": "url"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::PublicAdvertisedPrefix",
        "group": "compute",
        "type": "PublicAdvertisedPrefix",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "insert": {
                "path": "projects/{project}/global/publicAdvertisedPrefixes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/global/publicAdvertisedPrefixes/{publicAdvertisedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicAdvertisedPrefix"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "path": "projects/{project}/global/publicAdvertisedPrefixes/{publicAdvertisedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicAdvertisedPrefix"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/global/publicAdvertisedPrefixes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/publicAdvertisedPrefixes/{publicAdvertisedPrefix}",
                "parameterOrder": [
                    "project",
                    "publicAdvertisedPrefix"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::PublicDelegatedPrefix",
        "group": "compute",
        "type": "PublicDelegatedPrefix",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "insert": {
                "path": "projects/{project}/regions/{region}/publicDelegatedPrefixes",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "region",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "region",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "DELETE"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/publicDelegatedPrefixes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/publicDelegatedPrefixes",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/publicDelegatedPrefixes/{publicDelegatedPrefix}",
                "parameterOrder": [
                    "project",
                    "region",
                    "publicDelegatedPrefix"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "parentPrefix",
                "depId": "parentPrefix"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::RegionAutoscaler",
        "group": "compute",
        "type": "RegionAutoscaler",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "list": {
                "path": "projects/{project}/regions/{region}/autoscalers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/autoscalers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/autoscalers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "PATCH"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/autoscalers/{autoscaler}",
                "parameterOrder": [
                    "project",
                    "region",
                    "autoscaler"
                ],
                "httpMethod": "DELETE"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/autoscalers/{autoscaler}",
                "parameterOrder": [
                    "project",
                    "region",
                    "autoscaler"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "path": "projects/{project}/regions/{region}/autoscalers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "PUT"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "target",
                "depId": "target"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::RegionBackendService",
        "group": "compute",
        "type": "RegionBackendService",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "update": {
                "path": "projects/{project}/regions/{region}/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "backendService"
                ],
                "httpMethod": "PUT"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "backendService"
                ],
                "httpMethod": "DELETE"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "backendService"
                ],
                "httpMethod": "PATCH"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/backendServices",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "getHealth": {
                "path": "projects/{project}/regions/{region}/backendServices/{backendService}/getHealth",
                "parameterOrder": [
                    "project",
                    "region",
                    "backendService"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/backendServices",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/backendServices/{backendService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "backendService"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "securitySettings.clientTlsPolicy",
                "depId": "clientTlsPolicy"
            },
            {
                "pathId": "cdnPolicy.signedUrlCacheMaxAgeSec",
                "depId": "signedUrlCacheMaxAgeSec"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "group",
                "depId": "group"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "groupType": "compute::RegionDisk",
        "group": "compute",
        "type": "RegionDisk",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "removeResourcePolicies": {
                "path": "projects/{project}/regions/{region}/disks/{disk}/removeResourcePolicies",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "createSnapshot": {
                "path": "projects/{project}/regions/{region}/disks/{disk}/createSnapshot",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "setLabels": {
                "path": "projects/{project}/regions/{region}/disks/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "path": "projects/{project}/regions/{region}/disks/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "getIamPolicy": {
                "path": "projects/{project}/regions/{region}/disks/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/disks/{disk}",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "DELETE"
            },
            "setIamPolicy": {
                "path": "projects/{project}/regions/{region}/disks/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "resize": {
                "path": "projects/{project}/regions/{region}/disks/{disk}/resize",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/disks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/disks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/disks/{disk}",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "GET"
            },
            "addResourcePolicies": {
                "path": "projects/{project}/regions/{region}/disks/{disk}/addResourcePolicies",
                "parameterOrder": [
                    "project",
                    "region",
                    "disk"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "type",
                "depId": "type"
            },
            {
                "pathId": "sourceDisk",
                "depId": "sourceDisk"
            },
            {
                "pathId": "sourceSnapshot",
                "depId": "sourceSnapshot"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::RegionHealthCheck",
        "group": "compute",
        "type": "RegionHealthCheck",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "delete": {
                "path": "projects/{project}/regions/{region}/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheck"
                ],
                "httpMethod": "DELETE"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/healthChecks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "path": "projects/{project}/regions/{region}/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheck"
                ],
                "httpMethod": "PUT"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheck"
                ],
                "httpMethod": "PATCH"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/healthChecks/{healthCheck}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheck"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/healthChecks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::RegionHealthCheckService",
        "group": "compute",
        "type": "RegionHealthCheckService",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "delete": {
                "path": "projects/{project}/regions/{region}/healthCheckServices/{healthCheckService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheckService"
                ],
                "httpMethod": "DELETE"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/healthCheckServices",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/healthCheckServices/{healthCheckService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheckService"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/healthCheckServices/{healthCheckService}",
                "parameterOrder": [
                    "project",
                    "region",
                    "healthCheckService"
                ],
                "httpMethod": "PATCH"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/healthCheckServices",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::RegionInstanceGroupManager",
        "group": "compute",
        "type": "RegionInstanceGroupManager",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "deleteInstances": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/deleteInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "updatePerInstanceConfigs": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/updatePerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "applyUpdatesToInstances": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/applyUpdatesToInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "abandonInstances": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/abandonInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "setTargetPools": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setTargetPools",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "setInstanceTemplate": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "listPerInstanceConfigs": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listPerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "recreateInstances": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/recreateInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "PATCH"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "GET"
            },
            "patchPerInstanceConfigs": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/patchPerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "deletePerInstanceConfigs": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/deletePerInstanceConfigs",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "listErrors": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listErrors",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "GET"
            },
            "createInstances": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/createInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "DELETE"
            },
            "resize": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/resize",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager",
                    "size"
                ],
                "httpMethod": "POST"
            },
            "listManagedInstances": {
                "path": "projects/{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances",
                "parameterOrder": [
                    "project",
                    "region",
                    "instanceGroupManager"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "healthCheck",
                "depId": "healthCheck"
            },
            {
                "pathId": "instanceTemplate",
                "depId": "instanceTemplate"
            },
            {
                "pathId": "instanceTemplate",
                "depId": "instanceTemplate"
            },
            {
                "pathId": "distributionPolicy.zone",
                "depId": "zone"
            }
        ],
        "dependencies": {
            "healthCheck": {
                "type": "healthCheck",
                "group": "compute",
                "pathId": "healthCheck"
            },
            "instanceTemplate": {
                "type": "instanceTemplate",
                "group": "compute",
                "pathId": "instanceTemplate"
            }
        }
    },
    {
        "groupType": "compute::RegionNetworkEndpointGroup",
        "group": "compute",
        "type": "RegionNetworkEndpointGroup",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "delete": {
                "path": "projects/{project}/regions/{region}/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "region",
                    "networkEndpointGroup"
                ],
                "httpMethod": "DELETE"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/networkEndpointGroups",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/networkEndpointGroups",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/networkEndpointGroups/{networkEndpointGroup}",
                "parameterOrder": [
                    "project",
                    "region",
                    "networkEndpointGroup"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "subnetwork",
                "depId": "subnetwork"
            },
            {
                "pathId": "cloudRun.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "appEngine.urlMask",
                "depId": "urlMask"
            },
            {
                "pathId": "cloudFunction.urlMask",
                "depId": "urlMask"
            }
        ],
        "dependencies": {
            "subnetwork": {
                "type": "subnetwork",
                "group": "compute",
                "pathId": "subnetwork"
            },
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "groupType": "compute::RegionNetworkFirewallPolicy",
        "group": "compute",
        "type": "RegionNetworkFirewallPolicy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "removeRule": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/removeRule",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "PATCH"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "DELETE"
            },
            "cloneRules": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/cloneRules",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "patchRule": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/patchRule",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "setIamPolicy": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "addRule": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/addRule",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "getAssociation": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/getAssociation",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "addAssociation": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/addAssociation",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/firewallPolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "getRule": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/getRule",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/firewallPolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "removeAssociation": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{firewallPolicy}/removeAssociation",
                "parameterOrder": [
                    "project",
                    "region",
                    "firewallPolicy"
                ],
                "httpMethod": "POST"
            },
            "getEffectiveFirewalls": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/getEffectiveFirewalls",
                "parameterOrder": [
                    "project",
                    "region",
                    "network"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "path": "projects/{project}/regions/{region}/firewallPolicies/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::RegionNotificationEndpoint",
        "group": "compute",
        "type": "RegionNotificationEndpoint",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "get": {
                "path": "projects/{project}/regions/{region}/notificationEndpoints/{notificationEndpoint}",
                "parameterOrder": [
                    "project",
                    "region",
                    "notificationEndpoint"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/notificationEndpoints/{notificationEndpoint}",
                "parameterOrder": [
                    "project",
                    "region",
                    "notificationEndpoint"
                ],
                "httpMethod": "DELETE"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/notificationEndpoints",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/notificationEndpoints",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::RegionSslCertificate",
        "group": "compute",
        "type": "RegionSslCertificate",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "insert": {
                "path": "projects/{project}/regions/{region}/sslCertificates",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/sslCertificates",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/sslCertificates/{sslCertificate}",
                "parameterOrder": [
                    "project",
                    "region",
                    "sslCertificate"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/sslCertificates/{sslCertificate}",
                "parameterOrder": [
                    "project",
                    "region",
                    "sslCertificate"
                ],
                "httpMethod": "DELETE"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "selfLink",
                "depId": "selfLink"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::RegionSslPolicy",
        "group": "compute",
        "type": "RegionSslPolicy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "get": {
                "path": "projects/{project}/regions/{region}/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "sslPolicy"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "sslPolicy"
                ],
                "httpMethod": "PATCH"
            },
            "listAvailableFeatures": {
                "path": "projects/{project}/regions/{region}/sslPolicies/listAvailableFeatures",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "sslPolicy"
                ],
                "httpMethod": "DELETE"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/sslPolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/sslPolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::RegionTargetHttpProxy",
        "group": "compute",
        "type": "RegionTargetHttpProxy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "get": {
                "path": "projects/{project}/regions/{region}/targetHttpProxies/{targetHttpProxy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpProxy"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/targetHttpProxies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/targetHttpProxies/{targetHttpProxy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpProxy"
                ],
                "httpMethod": "DELETE"
            },
            "setUrlMap": {
                "path": "projects/{project}/regions/{region}/targetHttpProxies/{targetHttpProxy}/setUrlMap",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpProxy"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/targetHttpProxies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "urlMap",
                "depId": "urlMap"
            }
        ],
        "dependencies": {
            "urlMap": {
                "type": "urlMap",
                "group": "compute",
                "pathId": "urlMap"
            }
        }
    },
    {
        "groupType": "compute::RegionTargetHttpsProxy",
        "group": "compute",
        "type": "RegionTargetHttpsProxy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "setUrlMap": {
                "path": "projects/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpsProxy"
                ],
                "httpMethod": "DELETE"
            },
            "setSslCertificates": {
                "path": "projects/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/targetHttpsProxies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpsProxy"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetHttpsProxy"
                ],
                "httpMethod": "PATCH"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/targetHttpsProxies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "certificateMap",
                "depId": "certificateMap"
            },
            {
                "pathId": "urlMap",
                "depId": "urlMap"
            },
            {
                "pathId": "serverTlsPolicy",
                "depId": "serverTlsPolicy"
            },
            {
                "pathId": "sslPolicy",
                "depId": "sslPolicy"
            },
            {
                "pathId": "authorizationPolicy",
                "depId": "authorizationPolicy"
            }
        ],
        "dependencies": {
            "urlMap": {
                "type": "urlMap",
                "group": "compute",
                "pathId": "urlMap"
            },
            "sslPolicy": {
                "type": "sslPolicy",
                "group": "compute",
                "pathId": "sslPolicy"
            }
        }
    },
    {
        "groupType": "compute::RegionUrlMap",
        "group": "compute",
        "type": "RegionUrlMap",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "validate": {
                "path": "projects/{project}/regions/{region}/urlMaps/{urlMap}/validate",
                "parameterOrder": [
                    "project",
                    "region",
                    "urlMap"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/urlMaps",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "region",
                    "urlMap"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "path": "projects/{project}/regions/{region}/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "region",
                    "urlMap"
                ],
                "httpMethod": "PUT"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "region",
                    "urlMap"
                ],
                "httpMethod": "PATCH"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/urlMaps",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "region",
                    "urlMap"
                ],
                "httpMethod": "DELETE"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "defaultService",
                "depId": "defaultService"
            },
            {
                "pathId": "pathMatcher",
                "depId": "pathMatcher"
            },
            {
                "pathId": "defaultRouteAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultRouteAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "path",
                "depId": "path"
            },
            {
                "pathId": "host",
                "depId": "host"
            },
            {
                "pathId": "service",
                "depId": "service"
            },
            {
                "pathId": "expectedOutputUrl",
                "depId": "expectedOutputUrl"
            },
            {
                "pathId": "defaultUrlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "defaultUrlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "defaultService",
                "depId": "defaultService"
            },
            {
                "pathId": "defaultRouteAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultRouteAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "urlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "headerName",
                "depId": "headerName"
            },
            {
                "pathId": "fullPathMatch",
                "depId": "fullPathMatch"
            },
            {
                "pathId": "regexMatch",
                "depId": "regexMatch"
            },
            {
                "pathId": "service",
                "depId": "service"
            },
            {
                "pathId": "urlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "routeAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "service",
                "depId": "service"
            }
        ],
        "dependencies": {
            "backendService": {
                "type": "backendService",
                "group": "compute",
                "pathId": "routeAction.requestMirrorPolicy.backendService"
            }
        }
    },
    {
        "groupType": "compute::Reservation",
        "group": "compute",
        "type": "Reservation",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "testIamPermissions": {
                "path": "projects/{project}/zones/{zone}/reservations/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/zones/{zone}/reservations",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/zones/{zone}/reservations",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "resize": {
                "path": "projects/{project}/zones/{zone}/reservations/{reservation}/resize",
                "parameterOrder": [
                    "project",
                    "zone",
                    "reservation"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/zones/{zone}/reservations/{reservation}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "reservation"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "path": "projects/{project}/zones/{zone}/reservations/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "update": {
                "path": "projects/{project}/zones/{zone}/reservations/{reservation}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "reservation"
                ],
                "httpMethod": "PATCH"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/reservations",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/zones/{zone}/reservations/{reservation}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "reservation"
                ],
                "httpMethod": "DELETE"
            },
            "getIamPolicy": {
                "path": "projects/{project}/zones/{zone}/reservations/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "zone",
                    "resource"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "specificReservation.instanceProperties.acceleratorType",
                "depId": "acceleratorType"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::ResourcePolicy",
        "group": "compute",
        "type": "ResourcePolicy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "insert": {
                "path": "projects/{project}/regions/{region}/resourcePolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/resourcePolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/resourcePolicies",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "path": "projects/{project}/regions/{region}/resourcePolicies/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/resourcePolicies/{resourcePolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "resourcePolicy"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "path": "projects/{project}/regions/{region}/resourcePolicies/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/resourcePolicies/{resourcePolicy}",
                "parameterOrder": [
                    "project",
                    "region",
                    "resourcePolicy"
                ],
                "httpMethod": "DELETE"
            },
            "testIamPermissions": {
                "path": "projects/{project}/regions/{region}/resourcePolicies/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::Route",
        "group": "compute",
        "type": "Route",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "get": {
                "path": "projects/{project}/global/routes/{route}",
                "parameterOrder": [
                    "project",
                    "route"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/global/routes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/routes",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/global/routes/{route}",
                "parameterOrder": [
                    "project",
                    "route"
                ],
                "httpMethod": "DELETE"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "nextHopInstance",
                "depId": "nextHopInstance"
            },
            {
                "pathId": "nextHopGateway",
                "depId": "nextHopGateway"
            },
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "nextHopNetwork",
                "depId": "nextHopNetwork"
            },
            {
                "pathId": "nextHopIlb",
                "depId": "nextHopIlb"
            },
            {
                "pathId": "nextHopVpnTunnel",
                "depId": "nextHopVpnTunnel"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "groupType": "compute::Router",
        "group": "compute",
        "type": "Router",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "aggregatedList": {
                "path": "projects/{project}/aggregated/routers",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "path": "projects/{project}/regions/{region}/routers/{router}",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "PUT"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/routers/{router}",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "PATCH"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/routers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/routers/{router}",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "DELETE"
            },
            "preview": {
                "path": "projects/{project}/regions/{region}/routers/{router}/preview",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "POST"
            },
            "getRouterStatus": {
                "path": "projects/{project}/regions/{region}/routers/{router}/getRouterStatus",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/routers/{router}",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/routers",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "getNatMappingInfo": {
                "path": "projects/{project}/regions/{region}/routers/{router}/getNatMappingInfo",
                "parameterOrder": [
                    "project",
                    "region",
                    "router"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "name",
                "depId": "name"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::SecurityPolicy",
        "group": "compute",
        "type": "SecurityPolicy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "patchRule": {
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}/patchRule",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "DELETE"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/securityPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/global/securityPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "PATCH"
            },
            "listPreconfiguredExpressionSets": {
                "path": "projects/{project}/global/securityPolicies/listPreconfiguredExpressionSets",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/global/securityPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "removeRule": {
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}/removeRule",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "POST"
            },
            "getRule": {
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}/getRule",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "GET"
            },
            "addRule": {
                "path": "projects/{project}/global/securityPolicies/{securityPolicy}/addRule",
                "parameterOrder": [
                    "project",
                    "securityPolicy"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "action",
                "depId": "action"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::ServiceAttachment",
        "group": "compute",
        "type": "ServiceAttachment",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "get": {
                "path": "projects/{project}/regions/{region}/serviceAttachments/{serviceAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "serviceAttachment"
                ],
                "httpMethod": "GET"
            },
            "getIamPolicy": {
                "path": "projects/{project}/regions/{region}/serviceAttachments/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "path": "projects/{project}/regions/{region}/serviceAttachments/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "path": "projects/{project}/regions/{region}/serviceAttachments/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/serviceAttachments/{serviceAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "serviceAttachment"
                ],
                "httpMethod": "PATCH"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/serviceAttachments",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/serviceAttachments",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/serviceAttachments",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/serviceAttachments/{serviceAttachment}",
                "parameterOrder": [
                    "project",
                    "region",
                    "serviceAttachment"
                ],
                "httpMethod": "DELETE"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "targetService",
                "depId": "targetService"
            },
            {
                "pathId": "producerForwardingRule",
                "depId": "producerForwardingRule"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::Snapshot",
        "group": "compute",
        "type": "Snapshot",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "list": {
                "path": "projects/{project}/global/snapshots",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/global/snapshots/{snapshot}",
                "parameterOrder": [
                    "project",
                    "snapshot"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/global/snapshots/{snapshot}",
                "parameterOrder": [
                    "project",
                    "snapshot"
                ],
                "httpMethod": "DELETE"
            },
            "setIamPolicy": {
                "path": "projects/{project}/global/snapshots/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "setLabels": {
                "path": "projects/{project}/global/snapshots/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/global/snapshots",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "getIamPolicy": {
                "path": "projects/{project}/global/snapshots/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "testIamPermissions": {
                "path": "projects/{project}/global/snapshots/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "resource"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::SslCertificate",
        "group": "compute",
        "type": "SslCertificate",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "delete": {
                "path": "projects/{project}/global/sslCertificates/{sslCertificate}",
                "parameterOrder": [
                    "project",
                    "sslCertificate"
                ],
                "httpMethod": "DELETE"
            },
            "list": {
                "path": "projects/{project}/global/sslCertificates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/sslCertificates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/global/sslCertificates",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/global/sslCertificates/{sslCertificate}",
                "parameterOrder": [
                    "project",
                    "sslCertificate"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "selfLink",
                "depId": "selfLink"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::SslPolicy",
        "group": "compute",
        "type": "SslPolicy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "insert": {
                "path": "projects/{project}/global/sslPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "listAvailableFeatures": {
                "path": "projects/{project}/global/sslPolicies/listAvailableFeatures",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "sslPolicy"
                ],
                "httpMethod": "PATCH"
            },
            "list": {
                "path": "projects/{project}/global/sslPolicies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/global/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "sslPolicy"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/global/sslPolicies/{sslPolicy}",
                "parameterOrder": [
                    "project",
                    "sslPolicy"
                ],
                "httpMethod": "DELETE"
            }
        },
        "dependenciesPaths": [],
        "dependencies": {}
    },
    {
        "groupType": "compute::Subnetwork",
        "group": "compute",
        "type": "Subnetwork",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "listUsable": {
                "path": "projects/{project}/aggregated/subnetworks/listUsable",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "expandIpCidrRange": {
                "path": "projects/{project}/regions/{region}/subnetworks/{subnetwork}/expandIpCidrRange",
                "parameterOrder": [
                    "project",
                    "region",
                    "subnetwork"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/subnetworks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "setIamPolicy": {
                "path": "projects/{project}/regions/{region}/subnetworks/{resource}/setIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "getIamPolicy": {
                "path": "projects/{project}/regions/{region}/subnetworks/{resource}/getIamPolicy",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "GET"
            },
            "setPrivateIpGoogleAccess": {
                "path": "projects/{project}/regions/{region}/subnetworks/{subnetwork}/setPrivateIpGoogleAccess",
                "parameterOrder": [
                    "project",
                    "region",
                    "subnetwork"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/subnetworks/{subnetwork}",
                "parameterOrder": [
                    "project",
                    "region",
                    "subnetwork"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/subnetworks",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "path": "projects/{project}/regions/{region}/subnetworks/{subnetwork}",
                "parameterOrder": [
                    "project",
                    "region",
                    "subnetwork"
                ],
                "httpMethod": "PATCH"
            },
            "testIamPermissions": {
                "path": "projects/{project}/regions/{region}/subnetworks/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/subnetworks",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/subnetworks/{subnetwork}",
                "parameterOrder": [
                    "project",
                    "region",
                    "subnetwork"
                ],
                "httpMethod": "DELETE"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "region",
                "depId": "region"
            },
            {
                "pathId": "network",
                "depId": "network"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "groupType": "compute::TargetGrpcProxy",
        "group": "compute",
        "type": "TargetGrpcProxy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "delete": {
                "path": "projects/{project}/global/targetGrpcProxies/{targetGrpcProxy}",
                "parameterOrder": [
                    "project",
                    "targetGrpcProxy"
                ],
                "httpMethod": "DELETE"
            },
            "insert": {
                "path": "projects/{project}/global/targetGrpcProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/targetGrpcProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/global/targetGrpcProxies/{targetGrpcProxy}",
                "parameterOrder": [
                    "project",
                    "targetGrpcProxy"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/targetGrpcProxies/{targetGrpcProxy}",
                "parameterOrder": [
                    "project",
                    "targetGrpcProxy"
                ],
                "httpMethod": "PATCH"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "urlMap",
                "depId": "urlMap"
            }
        ],
        "dependencies": {
            "urlMap": {
                "type": "urlMap",
                "group": "compute",
                "pathId": "urlMap"
            }
        }
    },
    {
        "groupType": "compute::TargetHttpProxy",
        "group": "compute",
        "type": "TargetHttpProxy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "aggregatedList": {
                "path": "projects/{project}/aggregated/targetHttpProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "setUrlMap": {
                "path": "projects/{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap",
                "parameterOrder": [
                    "project",
                    "targetHttpProxy"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/global/targetHttpProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/global/targetHttpProxies/{targetHttpProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpProxy"
                ],
                "httpMethod": "DELETE"
            },
            "list": {
                "path": "projects/{project}/global/targetHttpProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/targetHttpProxies/{targetHttpProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpProxy"
                ],
                "httpMethod": "PATCH"
            },
            "get": {
                "path": "projects/{project}/global/targetHttpProxies/{targetHttpProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpProxy"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "urlMap",
                "depId": "urlMap"
            }
        ],
        "dependencies": {
            "urlMap": {
                "type": "urlMap",
                "group": "compute",
                "pathId": "urlMap"
            }
        }
    },
    {
        "groupType": "compute::TargetHttpsProxy",
        "group": "compute",
        "type": "TargetHttpsProxy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "setCertificateMap": {
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}/setCertificateMap",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/global/targetHttpsProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "setSslCertificates": {
                "path": "projects/{project}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "setSslPolicy": {
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}/setSslPolicy",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "setQuicOverride": {
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}/setQuicOverride",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "patch": {
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "PATCH"
            },
            "get": {
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "GET"
            },
            "setUrlMap": {
                "path": "projects/{project}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/global/targetHttpsProxies/{targetHttpsProxy}",
                "parameterOrder": [
                    "project",
                    "targetHttpsProxy"
                ],
                "httpMethod": "DELETE"
            },
            "list": {
                "path": "projects/{project}/global/targetHttpsProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/targetHttpsProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "certificateMap",
                "depId": "certificateMap"
            },
            {
                "pathId": "urlMap",
                "depId": "urlMap"
            },
            {
                "pathId": "serverTlsPolicy",
                "depId": "serverTlsPolicy"
            },
            {
                "pathId": "sslPolicy",
                "depId": "sslPolicy"
            },
            {
                "pathId": "authorizationPolicy",
                "depId": "authorizationPolicy"
            }
        ],
        "dependencies": {
            "urlMap": {
                "type": "urlMap",
                "group": "compute",
                "pathId": "urlMap"
            },
            "sslPolicy": {
                "type": "sslPolicy",
                "group": "compute",
                "pathId": "sslPolicy"
            }
        }
    },
    {
        "groupType": "compute::TargetInstance",
        "group": "compute",
        "type": "TargetInstance",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "delete": {
                "path": "projects/{project}/zones/{zone}/targetInstances/{targetInstance}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "targetInstance"
                ],
                "httpMethod": "DELETE"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/targetInstances",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/zones/{zone}/targetInstances",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/zones/{zone}/targetInstances",
                "parameterOrder": [
                    "project",
                    "zone"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/zones/{zone}/targetInstances/{targetInstance}",
                "parameterOrder": [
                    "project",
                    "zone",
                    "targetInstance"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "instance",
                "depId": "instance"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            },
            "instance": {
                "type": "instance",
                "group": "compute",
                "pathId": "instance"
            }
        }
    },
    {
        "groupType": "compute::TargetPool",
        "group": "compute",
        "type": "TargetPool",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "addHealthCheck": {
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            },
            "removeHealthCheck": {
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            },
            "setBackup": {
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/setBackup",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/targetPools",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "addInstance": {
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/addInstance",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/targetPools",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "DELETE"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/targetPools",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "getHealth": {
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/getHealth",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            },
            "removeInstance": {
                "path": "projects/{project}/regions/{region}/targetPools/{targetPool}/removeInstance",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetPool"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "backupPool",
                "depId": "backupPool"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::TargetSslProxy",
        "group": "compute",
        "type": "TargetSslProxy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "setSslPolicy": {
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}/setSslPolicy",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "POST"
            },
            "setProxyHeader": {
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}/setProxyHeader",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "DELETE"
            },
            "setBackendService": {
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}/setBackendService",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "GET"
            },
            "setCertificateMap": {
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}/setCertificateMap",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "POST"
            },
            "setSslCertificates": {
                "path": "projects/{project}/global/targetSslProxies/{targetSslProxy}/setSslCertificates",
                "parameterOrder": [
                    "project",
                    "targetSslProxy"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/global/targetSslProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/targetSslProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "sslPolicy",
                "depId": "sslPolicy"
            },
            {
                "pathId": "certificateMap",
                "depId": "certificateMap"
            },
            {
                "pathId": "service",
                "depId": "service"
            }
        ],
        "dependencies": {
            "sslPolicy": {
                "type": "sslPolicy",
                "group": "compute",
                "pathId": "sslPolicy"
            }
        }
    },
    {
        "groupType": "compute::TargetTcpProxy",
        "group": "compute",
        "type": "TargetTcpProxy",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "delete": {
                "path": "projects/{project}/global/targetTcpProxies/{targetTcpProxy}",
                "parameterOrder": [
                    "project",
                    "targetTcpProxy"
                ],
                "httpMethod": "DELETE"
            },
            "insert": {
                "path": "projects/{project}/global/targetTcpProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            },
            "setProxyHeader": {
                "path": "projects/{project}/global/targetTcpProxies/{targetTcpProxy}/setProxyHeader",
                "parameterOrder": [
                    "project",
                    "targetTcpProxy"
                ],
                "httpMethod": "POST"
            },
            "setBackendService": {
                "path": "projects/{project}/global/targetTcpProxies/{targetTcpProxy}/setBackendService",
                "parameterOrder": [
                    "project",
                    "targetTcpProxy"
                ],
                "httpMethod": "POST"
            },
            "get": {
                "path": "projects/{project}/global/targetTcpProxies/{targetTcpProxy}",
                "parameterOrder": [
                    "project",
                    "targetTcpProxy"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/global/targetTcpProxies",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "service",
                "depId": "service"
            }
        ],
        "dependencies": {}
    },
    {
        "groupType": "compute::TargetVpnGateway",
        "group": "compute",
        "type": "TargetVpnGateway",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "list": {
                "path": "projects/{project}/regions/{region}/targetVpnGateways",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetVpnGateway"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/targetVpnGateways",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}",
                "parameterOrder": [
                    "project",
                    "region",
                    "targetVpnGateway"
                ],
                "httpMethod": "DELETE"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/targetVpnGateways",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            }
        }
    },
    {
        "groupType": "compute::UrlMap",
        "group": "compute",
        "type": "UrlMap",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "get": {
                "path": "projects/{project}/global/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "GET"
            },
            "patch": {
                "path": "projects/{project}/global/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "PATCH"
            },
            "validate": {
                "path": "projects/{project}/global/urlMaps/{urlMap}/validate",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "POST"
            },
            "invalidateCache": {
                "path": "projects/{project}/global/urlMaps/{urlMap}/invalidateCache",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/global/urlMaps",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/global/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "DELETE"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/urlMaps",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "update": {
                "path": "projects/{project}/global/urlMaps/{urlMap}",
                "parameterOrder": [
                    "project",
                    "urlMap"
                ],
                "httpMethod": "PUT"
            },
            "insert": {
                "path": "projects/{project}/global/urlMaps",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "POST"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "defaultService",
                "depId": "defaultService"
            },
            {
                "pathId": "pathMatcher",
                "depId": "pathMatcher"
            },
            {
                "pathId": "defaultRouteAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultRouteAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "path",
                "depId": "path"
            },
            {
                "pathId": "host",
                "depId": "host"
            },
            {
                "pathId": "service",
                "depId": "service"
            },
            {
                "pathId": "expectedOutputUrl",
                "depId": "expectedOutputUrl"
            },
            {
                "pathId": "defaultUrlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "defaultUrlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "defaultService",
                "depId": "defaultService"
            },
            {
                "pathId": "defaultRouteAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "defaultRouteAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "urlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "headerName",
                "depId": "headerName"
            },
            {
                "pathId": "fullPathMatch",
                "depId": "fullPathMatch"
            },
            {
                "pathId": "regexMatch",
                "depId": "regexMatch"
            },
            {
                "pathId": "service",
                "depId": "service"
            },
            {
                "pathId": "urlRedirect.prefixRedirect",
                "depId": "prefixRedirect"
            },
            {
                "pathId": "routeAction.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "routeAction.requestMirrorPolicy.backendService",
                "depId": "backendService"
            },
            {
                "pathId": "service",
                "depId": "service"
            }
        ],
        "dependencies": {
            "backendService": {
                "type": "backendService",
                "group": "compute",
                "pathId": "routeAction.requestMirrorPolicy.backendService"
            }
        }
    },
    {
        "groupType": "compute::VpnGateway",
        "group": "compute",
        "type": "VpnGateway",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "aggregatedList": {
                "path": "projects/{project}/aggregated/vpnGateways",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "get": {
                "path": "projects/{project}/regions/{region}/vpnGateways/{vpnGateway}",
                "parameterOrder": [
                    "project",
                    "region",
                    "vpnGateway"
                ],
                "httpMethod": "GET"
            },
            "setLabels": {
                "path": "projects/{project}/regions/{region}/vpnGateways/{resource}/setLabels",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/vpnGateways",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "testIamPermissions": {
                "path": "projects/{project}/regions/{region}/vpnGateways/{resource}/testIamPermissions",
                "parameterOrder": [
                    "project",
                    "region",
                    "resource"
                ],
                "httpMethod": "POST"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/vpnGateways",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "getStatus": {
                "path": "projects/{project}/regions/{region}/vpnGateways/{vpnGateway}/getStatus",
                "parameterOrder": [
                    "project",
                    "region",
                    "vpnGateway"
                ],
                "httpMethod": "GET"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/vpnGateways/{vpnGateway}",
                "parameterOrder": [
                    "project",
                    "region",
                    "vpnGateway"
                ],
                "httpMethod": "DELETE"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "network",
                "depId": "network"
            },
            {
                "pathId": "interconnectAttachment",
                "depId": "interconnectAttachment"
            }
        ],
        "dependencies": {
            "network": {
                "type": "network",
                "group": "compute",
                "pathId": "network"
            },
            "interconnectAttachment": {
                "type": "interconnectAttachment",
                "group": "compute",
                "pathId": "interconnectAttachment"
            }
        }
    },
    {
        "groupType": "compute::VpnTunnel",
        "group": "compute",
        "type": "VpnTunnel",
        "baseUrl": "https://compute.googleapis.com/compute/v1/",
        "methods": {
            "get": {
                "path": "projects/{project}/regions/{region}/vpnTunnels/{vpnTunnel}",
                "parameterOrder": [
                    "project",
                    "region",
                    "vpnTunnel"
                ],
                "httpMethod": "GET"
            },
            "list": {
                "path": "projects/{project}/regions/{region}/vpnTunnels",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "GET"
            },
            "aggregatedList": {
                "path": "projects/{project}/aggregated/vpnTunnels",
                "parameterOrder": [
                    "project"
                ],
                "httpMethod": "GET"
            },
            "insert": {
                "path": "projects/{project}/regions/{region}/vpnTunnels",
                "parameterOrder": [
                    "project",
                    "region"
                ],
                "httpMethod": "POST"
            },
            "delete": {
                "path": "projects/{project}/regions/{region}/vpnTunnels/{vpnTunnel}",
                "parameterOrder": [
                    "project",
                    "region",
                    "vpnTunnel"
                ],
                "httpMethod": "DELETE"
            }
        },
        "dependenciesPaths": [
            {
                "pathId": "targetVpnGateway",
                "depId": "targetVpnGateway"
            },
            {
                "pathId": "vpnGateway",
                "depId": "vpnGateway"
            },
            {
                "pathId": "peerExternalGateway",
                "depId": "peerExternalGateway"
            },
            {
                "pathId": "peerGcpGateway",
                "depId": "peerGcpGateway"
            },
            {
                "pathId": "router",
                "depId": "router"
            }
        ],
        "dependencies": {
            "targetVpnGateway": {
                "type": "targetVpnGateway",
                "group": "compute",
                "pathId": "targetVpnGateway"
            },
            "vpnGateway": {
                "type": "vpnGateway",
                "group": "compute",
                "pathId": "vpnGateway"
            },
            "router": {
                "type": "router",
                "group": "compute",
                "pathId": "router"
            }
        }
    }
]