{
    "command": "list",
    "commandOptions": {
        "graph": true,
        "title": "example",
        "dotFile": "/Users/fredericheem/grucloud/packages/modules/k8s/cert-manager/example/artifacts/diagram-live.dot"
    },
    "programOptions": {
        "json": "artifacts/inventory.json",
        "noOpen": true,
        "workingDirectory": "/Users/fredericheem/grucloud/packages/modules/k8s/cert-manager/example"
    },
    "result": {
        "error": false,
        "results": [
            {
                "providerName": "k8s",
                "kind": "livesPerType",
                "error": false,
                "results": [
                    {
                        "resources": [
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "admin",
                                        "uid": "7dddd977-2919-489b-93ac-3566e0cbf891",
                                        "resourceVersion": "1173",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates",
                                                "certificaterequests",
                                                "issuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "challenges",
                                                "orders"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates",
                                                "certificaterequests",
                                                "issuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "challenges",
                                                "orders"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods/attach",
                                                "pods/exec",
                                                "pods/portforward",
                                                "pods/proxy",
                                                "secrets",
                                                "services/proxy"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "impersonate"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "serviceaccounts"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods",
                                                "pods/attach",
                                                "pods/exec",
                                                "pods/portforward",
                                                "pods/proxy"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps",
                                                "endpoints",
                                                "persistentvolumeclaims",
                                                "replicationcontrollers",
                                                "replicationcontrollers/scale",
                                                "secrets",
                                                "serviceaccounts",
                                                "services",
                                                "services/proxy"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "daemonsets",
                                                "deployments",
                                                "deployments/rollback",
                                                "deployments/scale",
                                                "replicasets",
                                                "replicasets/scale",
                                                "statefulsets",
                                                "statefulsets/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "autoscaling"
                                            ],
                                            "resources": [
                                                "horizontalpodautoscalers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "cronjobs",
                                                "jobs"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "extensions"
                                            ],
                                            "resources": [
                                                "daemonsets",
                                                "deployments",
                                                "deployments/rollback",
                                                "deployments/scale",
                                                "ingresses",
                                                "networkpolicies",
                                                "replicasets",
                                                "replicasets/scale",
                                                "replicationcontrollers/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "policy"
                                            ],
                                            "resources": [
                                                "poddisruptionbudgets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses",
                                                "networkpolicies"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps",
                                                "endpoints",
                                                "persistentvolumeclaims",
                                                "persistentvolumeclaims/status",
                                                "pods",
                                                "replicationcontrollers",
                                                "replicationcontrollers/scale",
                                                "serviceaccounts",
                                                "services",
                                                "services/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "bindings",
                                                "events",
                                                "limitranges",
                                                "namespaces/status",
                                                "pods/log",
                                                "pods/status",
                                                "replicationcontrollers/status",
                                                "resourcequotas",
                                                "resourcequotas/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "namespaces"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "controllerrevisions",
                                                "daemonsets",
                                                "daemonsets/status",
                                                "deployments",
                                                "deployments/scale",
                                                "deployments/status",
                                                "replicasets",
                                                "replicasets/scale",
                                                "replicasets/status",
                                                "statefulsets",
                                                "statefulsets/scale",
                                                "statefulsets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "autoscaling"
                                            ],
                                            "resources": [
                                                "horizontalpodautoscalers",
                                                "horizontalpodautoscalers/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "cronjobs",
                                                "cronjobs/status",
                                                "jobs",
                                                "jobs/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "extensions"
                                            ],
                                            "resources": [
                                                "daemonsets",
                                                "daemonsets/status",
                                                "deployments",
                                                "deployments/scale",
                                                "deployments/status",
                                                "ingresses",
                                                "ingresses/status",
                                                "networkpolicies",
                                                "replicasets",
                                                "replicasets/scale",
                                                "replicasets/status",
                                                "replicationcontrollers/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "policy"
                                            ],
                                            "resources": [
                                                "poddisruptionbudgets",
                                                "poddisruptionbudgets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses",
                                                "ingresses/status",
                                                "networkpolicies"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "localsubjectaccessreviews"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "rbac.authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "rolebindings",
                                                "roles"
                                            ]
                                        }
                                    ],
                                    "aggregationRule": {
                                        "clusterRoleSelectors": [
                                            {
                                                "matchLabels": {
                                                    "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                                                }
                                            }
                                        ]
                                    }
                                },
                                "name": "admin",
                                "id": "admin",
                                "meta": {
                                    "name": "admin",
                                    "uid": "7dddd977-2919-489b-93ac-3566e0cbf891",
                                    "resourceVersion": "1173",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::admin",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "admin"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-cainjector",
                                        "uid": "c6173894-9084-43f1-8f45-2644e85dfa4e",
                                        "resourceVersion": "1144",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cainjector",
                                            "app.kubernetes.io/component": "cainjector",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cainjector"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-cainjector",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "create",
                                                "update",
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "admissionregistration.k8s.io"
                                            ],
                                            "resources": [
                                                "validatingwebhookconfigurations",
                                                "mutatingwebhookconfigurations"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apiregistration.k8s.io"
                                            ],
                                            "resources": [
                                                "apiservices"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apiextensions.k8s.io"
                                            ],
                                            "resources": [
                                                "customresourcedefinitions"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "auditregistration.k8s.io"
                                            ],
                                            "resources": [
                                                "auditsinks"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-cainjector",
                                "id": "cert-manager-cainjector",
                                "meta": {
                                    "name": "cert-manager-cainjector",
                                    "uid": "c6173894-9084-43f1-8f45-2644e85dfa4e",
                                    "resourceVersion": "1144",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cainjector",
                                        "app.kubernetes.io/component": "cainjector",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cainjector"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-cainjector",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cert-manager-cainjector",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-cainjector"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-approve:cert-manager-io",
                                        "uid": "0de904a6-f1f0-49fb-b3d9-593d73ebf572",
                                        "resourceVersion": "1134",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "cert-manager",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-approve:cert-manager-io",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "approve"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "signers"
                                            ],
                                            "resourceNames": [
                                                "issuers.cert-manager.io/*",
                                                "clusterissuers.cert-manager.io/*"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-controller-approve:cert-manager-io",
                                "id": "cert-manager-controller-approve:cert-manager-io",
                                "meta": {
                                    "name": "cert-manager-controller-approve:cert-manager-io",
                                    "uid": "0de904a6-f1f0-49fb-b3d9-593d73ebf572",
                                    "resourceVersion": "1134",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "cert-manager",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-approve:cert-manager-io",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cert-manager-controller-approve:cert-manager-io",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-approve:cert-manager-io"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-certificates",
                                        "uid": "cb664018-ee22-425d-b955-6af9a02b5268",
                                        "resourceVersion": "1141",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-certificates",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates",
                                                "certificates/status",
                                                "certificaterequests",
                                                "certificaterequests/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates",
                                                "certificaterequests",
                                                "clusterissuers",
                                                "issuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates/finalizers",
                                                "certificaterequests/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "orders"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch",
                                                "create",
                                                "update",
                                                "delete"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-controller-certificates",
                                "id": "cert-manager-controller-certificates",
                                "meta": {
                                    "name": "cert-manager-controller-certificates",
                                    "uid": "cb664018-ee22-425d-b955-6af9a02b5268",
                                    "resourceVersion": "1141",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-certificates",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cert-manager-controller-certificates",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-certificates"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-challenges",
                                        "uid": "3a5811b1-47c6-407d-9ffe-c5590336735e",
                                        "resourceVersion": "1145",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-challenges",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "challenges",
                                                "challenges/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "challenges"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "issuers",
                                                "clusterissuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch",
                                                "create",
                                                "delete"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods",
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch",
                                                "create",
                                                "delete",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "route.openshift.io"
                                            ],
                                            "resources": [
                                                "routes/custom-host"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "challenges/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-controller-challenges",
                                "id": "cert-manager-controller-challenges",
                                "meta": {
                                    "name": "cert-manager-controller-challenges",
                                    "uid": "3a5811b1-47c6-407d-9ffe-c5590336735e",
                                    "resourceVersion": "1145",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-challenges",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cert-manager-controller-challenges",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-challenges"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-clusterissuers",
                                        "uid": "5eef6eca-85ee-4b74-b6b7-be0d876aa737",
                                        "resourceVersion": "1147",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-clusterissuers",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "clusterissuers",
                                                "clusterissuers/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "clusterissuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch",
                                                "create",
                                                "update",
                                                "delete"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-controller-clusterissuers",
                                "id": "cert-manager-controller-clusterissuers",
                                "meta": {
                                    "name": "cert-manager-controller-clusterissuers",
                                    "uid": "5eef6eca-85ee-4b74-b6b7-be0d876aa737",
                                    "resourceVersion": "1147",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-clusterissuers",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cert-manager-controller-clusterissuers",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-clusterissuers"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-ingress-shim",
                                        "uid": "b6979754-471e-4e2b-964d-1907494d4871",
                                        "resourceVersion": "1138",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-ingress-shim",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create",
                                                "update",
                                                "delete"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates",
                                                "certificaterequests"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates",
                                                "certificaterequests",
                                                "issuers",
                                                "clusterissuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-controller-ingress-shim",
                                "id": "cert-manager-controller-ingress-shim",
                                "meta": {
                                    "name": "cert-manager-controller-ingress-shim",
                                    "uid": "b6979754-471e-4e2b-964d-1907494d4871",
                                    "resourceVersion": "1138",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-ingress-shim",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cert-manager-controller-ingress-shim",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-ingress-shim"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-issuers",
                                        "uid": "bcdb2e7e-44f8-4a90-b240-5a95fd4159de",
                                        "resourceVersion": "1146",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-issuers",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "issuers",
                                                "issuers/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "issuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch",
                                                "create",
                                                "update",
                                                "delete"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-controller-issuers",
                                "id": "cert-manager-controller-issuers",
                                "meta": {
                                    "name": "cert-manager-controller-issuers",
                                    "uid": "bcdb2e7e-44f8-4a90-b240-5a95fd4159de",
                                    "resourceVersion": "1146",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-issuers",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cert-manager-controller-issuers",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-issuers"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-orders",
                                        "uid": "0dd8ff93-867f-4562-9f16-b2b1bfb8a680",
                                        "resourceVersion": "1143",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-orders",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "orders",
                                                "orders/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "orders",
                                                "challenges"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "clusterissuers",
                                                "issuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "challenges"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "orders/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-controller-orders",
                                "id": "cert-manager-controller-orders",
                                "meta": {
                                    "name": "cert-manager-controller-orders",
                                    "uid": "0dd8ff93-867f-4562-9f16-b2b1bfb8a680",
                                    "resourceVersion": "1143",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-orders",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cert-manager-controller-orders",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-orders"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-edit",
                                        "uid": "4ba0b4eb-0a6b-4e13-95b1-3d10e85f7398",
                                        "resourceVersion": "1142",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager",
                                            "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                                            "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-edit",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates",
                                                "certificaterequests",
                                                "issuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "challenges",
                                                "orders"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-edit",
                                "id": "cert-manager-edit",
                                "meta": {
                                    "name": "cert-manager-edit",
                                    "uid": "4ba0b4eb-0a6b-4e13-95b1-3d10e85f7398",
                                    "resourceVersion": "1142",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager",
                                        "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                                        "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-edit",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cert-manager-edit",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-edit"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-view",
                                        "uid": "741b19ea-7deb-49d0-8ccb-d07dafdafa33",
                                        "resourceVersion": "1140",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager",
                                            "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                                            "rbac.authorization.k8s.io/aggregate-to-edit": "true",
                                            "rbac.authorization.k8s.io/aggregate-to-view": "true"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-view",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates",
                                                "certificaterequests",
                                                "issuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "challenges",
                                                "orders"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-view",
                                "id": "cert-manager-view",
                                "meta": {
                                    "name": "cert-manager-view",
                                    "uid": "741b19ea-7deb-49d0-8ccb-d07dafdafa33",
                                    "resourceVersion": "1140",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager",
                                        "rbac.authorization.k8s.io/aggregate-to-admin": "true",
                                        "rbac.authorization.k8s.io/aggregate-to-edit": "true",
                                        "rbac.authorization.k8s.io/aggregate-to-view": "true"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-view",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cert-manager-view",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-view"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-webhook:subjectaccessreviews",
                                        "uid": "3911d13e-ae8c-4fdf-9559-016ecf3cabe7",
                                        "resourceVersion": "1133",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "webhook",
                                            "app.kubernetes.io/component": "webhook",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "webhook"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-webhook:subjectaccessreviews",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "subjectaccessreviews"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-webhook:subjectaccessreviews",
                                "id": "cert-manager-webhook:subjectaccessreviews",
                                "meta": {
                                    "name": "cert-manager-webhook:subjectaccessreviews",
                                    "uid": "3911d13e-ae8c-4fdf-9559-016ecf3cabe7",
                                    "resourceVersion": "1133",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "webhook",
                                        "app.kubernetes.io/component": "webhook",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "webhook"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-webhook:subjectaccessreviews",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cert-manager-webhook:subjectaccessreviews",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-webhook:subjectaccessreviews"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cluster-admin",
                                        "uid": "c4cbdbb3-7fa8-47c8-9b36-dcfd4af7b2e7",
                                        "resourceVersion": "87",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "*"
                                            ],
                                            "apiGroups": [
                                                "*"
                                            ],
                                            "resources": [
                                                "*"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "*"
                                            ],
                                            "nonResourceURLs": [
                                                "*"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cluster-admin",
                                "id": "cluster-admin",
                                "meta": {
                                    "name": "cluster-admin",
                                    "uid": "c4cbdbb3-7fa8-47c8-9b36-dcfd4af7b2e7",
                                    "resourceVersion": "87",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::cluster-admin",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "cluster-admin"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "edit",
                                        "uid": "d600b3bc-56c9-4238-bb44-3e99c0c6449e",
                                        "resourceVersion": "1175",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults",
                                            "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates",
                                                "certificaterequests",
                                                "issuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "challenges",
                                                "orders"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates",
                                                "certificaterequests",
                                                "issuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "challenges",
                                                "orders"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods/attach",
                                                "pods/exec",
                                                "pods/portforward",
                                                "pods/proxy",
                                                "secrets",
                                                "services/proxy"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "impersonate"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "serviceaccounts"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods",
                                                "pods/attach",
                                                "pods/exec",
                                                "pods/portforward",
                                                "pods/proxy"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps",
                                                "endpoints",
                                                "persistentvolumeclaims",
                                                "replicationcontrollers",
                                                "replicationcontrollers/scale",
                                                "secrets",
                                                "serviceaccounts",
                                                "services",
                                                "services/proxy"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "daemonsets",
                                                "deployments",
                                                "deployments/rollback",
                                                "deployments/scale",
                                                "replicasets",
                                                "replicasets/scale",
                                                "statefulsets",
                                                "statefulsets/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "autoscaling"
                                            ],
                                            "resources": [
                                                "horizontalpodautoscalers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "cronjobs",
                                                "jobs"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "extensions"
                                            ],
                                            "resources": [
                                                "daemonsets",
                                                "deployments",
                                                "deployments/rollback",
                                                "deployments/scale",
                                                "ingresses",
                                                "networkpolicies",
                                                "replicasets",
                                                "replicasets/scale",
                                                "replicationcontrollers/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "policy"
                                            ],
                                            "resources": [
                                                "poddisruptionbudgets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses",
                                                "networkpolicies"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps",
                                                "endpoints",
                                                "persistentvolumeclaims",
                                                "persistentvolumeclaims/status",
                                                "pods",
                                                "replicationcontrollers",
                                                "replicationcontrollers/scale",
                                                "serviceaccounts",
                                                "services",
                                                "services/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "bindings",
                                                "events",
                                                "limitranges",
                                                "namespaces/status",
                                                "pods/log",
                                                "pods/status",
                                                "replicationcontrollers/status",
                                                "resourcequotas",
                                                "resourcequotas/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "namespaces"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "controllerrevisions",
                                                "daemonsets",
                                                "daemonsets/status",
                                                "deployments",
                                                "deployments/scale",
                                                "deployments/status",
                                                "replicasets",
                                                "replicasets/scale",
                                                "replicasets/status",
                                                "statefulsets",
                                                "statefulsets/scale",
                                                "statefulsets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "autoscaling"
                                            ],
                                            "resources": [
                                                "horizontalpodautoscalers",
                                                "horizontalpodautoscalers/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "cronjobs",
                                                "cronjobs/status",
                                                "jobs",
                                                "jobs/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "extensions"
                                            ],
                                            "resources": [
                                                "daemonsets",
                                                "daemonsets/status",
                                                "deployments",
                                                "deployments/scale",
                                                "deployments/status",
                                                "ingresses",
                                                "ingresses/status",
                                                "networkpolicies",
                                                "replicasets",
                                                "replicasets/scale",
                                                "replicasets/status",
                                                "replicationcontrollers/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "policy"
                                            ],
                                            "resources": [
                                                "poddisruptionbudgets",
                                                "poddisruptionbudgets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses",
                                                "ingresses/status",
                                                "networkpolicies"
                                            ]
                                        }
                                    ],
                                    "aggregationRule": {
                                        "clusterRoleSelectors": [
                                            {
                                                "matchLabels": {
                                                    "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                                                }
                                            }
                                        ]
                                    }
                                },
                                "name": "edit",
                                "id": "edit",
                                "meta": {
                                    "name": "edit",
                                    "uid": "d600b3bc-56c9-4238-bb44-3e99c0c6449e",
                                    "resourceVersion": "1175",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults",
                                        "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::edit",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "edit"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx",
                                        "uid": "a118e017-cd49-48ff-8b4d-f0ae933bfe17",
                                        "resourceVersion": "299",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\",\"endpoints\",\"nodes\",\"pods\",\"secrets\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"extensions\",\"networking.k8s.io\"],\"resources\":[\"ingresses/status\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingressclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps",
                                                "endpoints",
                                                "nodes",
                                                "pods",
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "extensions",
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "extensions",
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingressclasses"
                                            ]
                                        }
                                    ]
                                },
                                "name": "ingress-nginx",
                                "id": "ingress-nginx",
                                "meta": {
                                    "name": "ingress-nginx",
                                    "uid": "a118e017-cd49-48ff-8b4d-f0ae933bfe17",
                                    "resourceVersion": "299",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\",\"endpoints\",\"nodes\",\"pods\",\"secrets\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"extensions\",\"networking.k8s.io\"],\"resources\":[\"ingresses/status\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingressclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::ingress-nginx",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-admission",
                                        "uid": "073ee114-474d-4240-994d-6a45111c68b5",
                                        "resourceVersion": "306",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "admission-webhook",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\"},\"rules\":[{\"apiGroups\":[\"admissionregistration.k8s.io\"],\"resources\":[\"validatingwebhookconfigurations\"],\"verbs\":[\"get\",\"update\"]}]}\n"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "admissionregistration.k8s.io"
                                            ],
                                            "resources": [
                                                "validatingwebhookconfigurations"
                                            ]
                                        }
                                    ]
                                },
                                "name": "ingress-nginx-admission",
                                "id": "ingress-nginx-admission",
                                "meta": {
                                    "name": "ingress-nginx-admission",
                                    "uid": "073ee114-474d-4240-994d-6a45111c68b5",
                                    "resourceVersion": "306",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "admission-webhook",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\"},\"rules\":[{\"apiGroups\":[\"admissionregistration.k8s.io\"],\"resources\":[\"validatingwebhookconfigurations\"],\"verbs\":[\"get\",\"update\"]}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::ingress-nginx-admission",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx-admission"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:get-nodes",
                                        "uid": "5950580b-6cb8-401f-b0e6-35cca4978803",
                                        "resourceVersion": "240",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        }
                                    ]
                                },
                                "name": "kubeadm:get-nodes",
                                "id": "kubeadm:get-nodes",
                                "meta": {
                                    "name": "kubeadm:get-nodes",
                                    "uid": "5950580b-6cb8-401f-b0e6-35cca4978803",
                                    "resourceVersion": "240",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::kubeadm:get-nodes",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kubeadm:get-nodes"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:aggregate-to-admin",
                                        "uid": "d4539897-9a54-491d-a1dd-42cf96efe39a",
                                        "resourceVersion": "95",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults",
                                            "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "localsubjectaccessreviews"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "rbac.authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "rolebindings",
                                                "roles"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:aggregate-to-admin",
                                "id": "system:aggregate-to-admin",
                                "meta": {
                                    "name": "system:aggregate-to-admin",
                                    "uid": "d4539897-9a54-491d-a1dd-42cf96efe39a",
                                    "resourceVersion": "95",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults",
                                        "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:aggregate-to-admin",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:aggregate-to-admin"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:aggregate-to-edit",
                                        "uid": "18cb5956-af2a-487c-addc-44917ecb6384",
                                        "resourceVersion": "96",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults",
                                            "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods/attach",
                                                "pods/exec",
                                                "pods/portforward",
                                                "pods/proxy",
                                                "secrets",
                                                "services/proxy"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "impersonate"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "serviceaccounts"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods",
                                                "pods/attach",
                                                "pods/exec",
                                                "pods/portforward",
                                                "pods/proxy"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps",
                                                "endpoints",
                                                "persistentvolumeclaims",
                                                "replicationcontrollers",
                                                "replicationcontrollers/scale",
                                                "secrets",
                                                "serviceaccounts",
                                                "services",
                                                "services/proxy"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "daemonsets",
                                                "deployments",
                                                "deployments/rollback",
                                                "deployments/scale",
                                                "replicasets",
                                                "replicasets/scale",
                                                "statefulsets",
                                                "statefulsets/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "autoscaling"
                                            ],
                                            "resources": [
                                                "horizontalpodautoscalers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "cronjobs",
                                                "jobs"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "extensions"
                                            ],
                                            "resources": [
                                                "daemonsets",
                                                "deployments",
                                                "deployments/rollback",
                                                "deployments/scale",
                                                "ingresses",
                                                "networkpolicies",
                                                "replicasets",
                                                "replicasets/scale",
                                                "replicationcontrollers/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "policy"
                                            ],
                                            "resources": [
                                                "poddisruptionbudgets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "deletecollection",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses",
                                                "networkpolicies"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:aggregate-to-edit",
                                "id": "system:aggregate-to-edit",
                                "meta": {
                                    "name": "system:aggregate-to-edit",
                                    "uid": "18cb5956-af2a-487c-addc-44917ecb6384",
                                    "resourceVersion": "96",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults",
                                        "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:aggregate-to-edit",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:aggregate-to-edit"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:aggregate-to-view",
                                        "uid": "ceef8e93-3105-40d9-a02b-a2dc0edbada6",
                                        "resourceVersion": "97",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults",
                                            "rbac.authorization.k8s.io/aggregate-to-view": "true"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps",
                                                "endpoints",
                                                "persistentvolumeclaims",
                                                "persistentvolumeclaims/status",
                                                "pods",
                                                "replicationcontrollers",
                                                "replicationcontrollers/scale",
                                                "serviceaccounts",
                                                "services",
                                                "services/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "bindings",
                                                "events",
                                                "limitranges",
                                                "namespaces/status",
                                                "pods/log",
                                                "pods/status",
                                                "replicationcontrollers/status",
                                                "resourcequotas",
                                                "resourcequotas/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "namespaces"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "controllerrevisions",
                                                "daemonsets",
                                                "daemonsets/status",
                                                "deployments",
                                                "deployments/scale",
                                                "deployments/status",
                                                "replicasets",
                                                "replicasets/scale",
                                                "replicasets/status",
                                                "statefulsets",
                                                "statefulsets/scale",
                                                "statefulsets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "autoscaling"
                                            ],
                                            "resources": [
                                                "horizontalpodautoscalers",
                                                "horizontalpodautoscalers/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "cronjobs",
                                                "cronjobs/status",
                                                "jobs",
                                                "jobs/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "extensions"
                                            ],
                                            "resources": [
                                                "daemonsets",
                                                "daemonsets/status",
                                                "deployments",
                                                "deployments/scale",
                                                "deployments/status",
                                                "ingresses",
                                                "ingresses/status",
                                                "networkpolicies",
                                                "replicasets",
                                                "replicasets/scale",
                                                "replicasets/status",
                                                "replicationcontrollers/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "policy"
                                            ],
                                            "resources": [
                                                "poddisruptionbudgets",
                                                "poddisruptionbudgets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses",
                                                "ingresses/status",
                                                "networkpolicies"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:aggregate-to-view",
                                "id": "system:aggregate-to-view",
                                "meta": {
                                    "name": "system:aggregate-to-view",
                                    "uid": "ceef8e93-3105-40d9-a02b-a2dc0edbada6",
                                    "resourceVersion": "97",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults",
                                        "rbac.authorization.k8s.io/aggregate-to-view": "true"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:aggregate-to-view",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:aggregate-to-view"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:auth-delegator",
                                        "uid": "24de5eea-93c3-447a-8374-a89599c42f2b",
                                        "resourceVersion": "103",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authentication.k8s.io"
                                            ],
                                            "resources": [
                                                "tokenreviews"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "subjectaccessreviews"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:auth-delegator",
                                "id": "system:auth-delegator",
                                "meta": {
                                    "name": "system:auth-delegator",
                                    "uid": "24de5eea-93c3-447a-8374-a89599c42f2b",
                                    "resourceVersion": "103",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:auth-delegator",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:auth-delegator"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:basic-user",
                                        "uid": "fd4b8283-d7f8-454a-b09f-719778d5915b",
                                        "resourceVersion": "90",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "selfsubjectaccessreviews",
                                                "selfsubjectrulesreviews"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:basic-user",
                                "id": "system:basic-user",
                                "meta": {
                                    "name": "system:basic-user",
                                    "uid": "fd4b8283-d7f8-454a-b09f-719778d5915b",
                                    "resourceVersion": "90",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:basic-user",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:basic-user"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                                        "uid": "af53b036-9dbe-4072-a375-5853bc6f04bb",
                                        "resourceVersion": "108",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "certificatesigningrequests/nodeclient"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                                "id": "system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                                "meta": {
                                    "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                                    "uid": "af53b036-9dbe-4072-a375-5853bc6f04bb",
                                    "resourceVersion": "108",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:certificates.k8s.io:certificatesigningrequests:nodeclient"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                                        "uid": "9844d663-d0b6-4e52-a4a5-91bc0680c2b4",
                                        "resourceVersion": "109",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "certificatesigningrequests/selfnodeclient"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                                "id": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                                "meta": {
                                    "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                                    "uid": "9844d663-d0b6-4e52-a4a5-91bc0680c2b4",
                                    "resourceVersion": "109",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:certificates.k8s.io:kube-apiserver-client-approver",
                                        "uid": "b0e8b39a-a4a0-433c-9ebf-bbec18be9c05",
                                        "resourceVersion": "113",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "approve"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "signers"
                                            ],
                                            "resourceNames": [
                                                "kubernetes.io/kube-apiserver-client"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:certificates.k8s.io:kube-apiserver-client-approver",
                                "id": "system:certificates.k8s.io:kube-apiserver-client-approver",
                                "meta": {
                                    "name": "system:certificates.k8s.io:kube-apiserver-client-approver",
                                    "uid": "b0e8b39a-a4a0-433c-9ebf-bbec18be9c05",
                                    "resourceVersion": "113",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:certificates.k8s.io:kube-apiserver-client-approver",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:certificates.k8s.io:kube-apiserver-client-approver"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:certificates.k8s.io:kube-apiserver-client-kubelet-approver",
                                        "uid": "48463536-28ac-4c9e-90d2-d6d91f2e4fcc",
                                        "resourceVersion": "114",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "approve"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "signers"
                                            ],
                                            "resourceNames": [
                                                "kubernetes.io/kube-apiserver-client-kubelet"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:certificates.k8s.io:kube-apiserver-client-kubelet-approver",
                                "id": "system:certificates.k8s.io:kube-apiserver-client-kubelet-approver",
                                "meta": {
                                    "name": "system:certificates.k8s.io:kube-apiserver-client-kubelet-approver",
                                    "uid": "48463536-28ac-4c9e-90d2-d6d91f2e4fcc",
                                    "resourceVersion": "114",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:certificates.k8s.io:kube-apiserver-client-kubelet-approver",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:certificates.k8s.io:kube-apiserver-client-kubelet-approver"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:certificates.k8s.io:kubelet-serving-approver",
                                        "uid": "4dc2b770-9527-4bdc-80cd-2ed001f69fc3",
                                        "resourceVersion": "112",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "approve"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "signers"
                                            ],
                                            "resourceNames": [
                                                "kubernetes.io/kubelet-serving"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:certificates.k8s.io:kubelet-serving-approver",
                                "id": "system:certificates.k8s.io:kubelet-serving-approver",
                                "meta": {
                                    "name": "system:certificates.k8s.io:kubelet-serving-approver",
                                    "uid": "4dc2b770-9527-4bdc-80cd-2ed001f69fc3",
                                    "resourceVersion": "112",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:certificates.k8s.io:kubelet-serving-approver",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:certificates.k8s.io:kubelet-serving-approver"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:certificates.k8s.io:legacy-unknown-approver",
                                        "uid": "156238b2-429e-416d-91cd-2ae318e915d4",
                                        "resourceVersion": "111",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "approve"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "signers"
                                            ],
                                            "resourceNames": [
                                                "kubernetes.io/legacy-unknown"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:certificates.k8s.io:legacy-unknown-approver",
                                "id": "system:certificates.k8s.io:legacy-unknown-approver",
                                "meta": {
                                    "name": "system:certificates.k8s.io:legacy-unknown-approver",
                                    "uid": "156238b2-429e-416d-91cd-2ae318e915d4",
                                    "resourceVersion": "111",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:certificates.k8s.io:legacy-unknown-approver",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:certificates.k8s.io:legacy-unknown-approver"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:attachdetach-controller",
                                        "uid": "27a46fb1-adcc-4a42-be55-733814fa3f00",
                                        "resourceVersion": "118",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims",
                                                "persistentvolumes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "volumeattachments"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "csidrivers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "csinodes"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:attachdetach-controller",
                                "id": "system:controller:attachdetach-controller",
                                "meta": {
                                    "name": "system:controller:attachdetach-controller",
                                    "uid": "27a46fb1-adcc-4a42-be55-733814fa3f00",
                                    "resourceVersion": "118",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:attachdetach-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:attachdetach-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:certificate-controller",
                                        "uid": "f67d0a90-d119-4b87-9de0-a1129902ce81",
                                        "resourceVersion": "144",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "delete",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "certificatesigningrequests"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "certificatesigningrequests/approval",
                                                "certificatesigningrequests/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "approve"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "signers"
                                            ],
                                            "resourceNames": [
                                                "kubernetes.io/kube-apiserver-client-kubelet"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "sign"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "signers"
                                            ],
                                            "resourceNames": [
                                                "kubernetes.io/kube-apiserver-client",
                                                "kubernetes.io/kube-apiserver-client-kubelet",
                                                "kubernetes.io/kubelet-serving",
                                                "kubernetes.io/legacy-unknown"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "subjectaccessreviews"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:certificate-controller",
                                "id": "system:controller:certificate-controller",
                                "meta": {
                                    "name": "system:controller:certificate-controller",
                                    "uid": "f67d0a90-d119-4b87-9de0-a1129902ce81",
                                    "resourceVersion": "144",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:certificate-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:certificate-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:clusterrole-aggregation-controller",
                                        "uid": "b58bac41-0bd1-4209-8b31-dc26b7cc6480",
                                        "resourceVersion": "119",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "escalate",
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "rbac.authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "clusterroles"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:clusterrole-aggregation-controller",
                                "id": "system:controller:clusterrole-aggregation-controller",
                                "meta": {
                                    "name": "system:controller:clusterrole-aggregation-controller",
                                    "uid": "b58bac41-0bd1-4209-8b31-dc26b7cc6480",
                                    "resourceVersion": "119",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:clusterrole-aggregation-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:clusterrole-aggregation-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:cronjob-controller",
                                        "uid": "e2f90786-93df-4876-9261-966e989aee0f",
                                        "resourceVersion": "120",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "cronjobs"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "jobs"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "cronjobs/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "cronjobs/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "delete",
                                                "list"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:cronjob-controller",
                                "id": "system:controller:cronjob-controller",
                                "meta": {
                                    "name": "system:controller:cronjob-controller",
                                    "uid": "e2f90786-93df-4876-9261-966e989aee0f",
                                    "resourceVersion": "120",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:cronjob-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:cronjob-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:daemon-set-controller",
                                        "uid": "86f282f5-7ccb-4e84-b75d-ee4b76a2a326",
                                        "resourceVersion": "121",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "daemonsets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "daemonsets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "daemonsets/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "list",
                                                "patch",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods/binding"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "controllerrevisions"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:daemon-set-controller",
                                "id": "system:controller:daemon-set-controller",
                                "meta": {
                                    "name": "system:controller:daemon-set-controller",
                                    "uid": "86f282f5-7ccb-4e84-b75d-ee4b76a2a326",
                                    "resourceVersion": "121",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:daemon-set-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:daemon-set-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:deployment-controller",
                                        "uid": "022c2fc7-a022-4385-b0cc-4d15758e04fe",
                                        "resourceVersion": "122",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "deployments"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "deployments/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "deployments/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "replicasets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:deployment-controller",
                                "id": "system:controller:deployment-controller",
                                "meta": {
                                    "name": "system:controller:deployment-controller",
                                    "uid": "022c2fc7-a022-4385-b0cc-4d15758e04fe",
                                    "resourceVersion": "122",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:deployment-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:deployment-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:disruption-controller",
                                        "uid": "6c7eaa48-9393-483f-bc66-28b540cbf5b3",
                                        "resourceVersion": "123",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "deployments"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "replicasets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "replicationcontrollers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "policy"
                                            ],
                                            "resources": [
                                                "poddisruptionbudgets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "statefulsets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "policy"
                                            ],
                                            "resources": [
                                                "poddisruptionbudgets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                "*"
                                            ],
                                            "resources": [
                                                "*/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:disruption-controller",
                                "id": "system:controller:disruption-controller",
                                "meta": {
                                    "name": "system:controller:disruption-controller",
                                    "uid": "6c7eaa48-9393-483f-bc66-28b540cbf5b3",
                                    "resourceVersion": "123",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:disruption-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:disruption-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:endpoint-controller",
                                        "uid": "f4f1e4f5-28fa-4482-9c0e-7f345b041287",
                                        "resourceVersion": "124",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods",
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints/restricted"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:endpoint-controller",
                                "id": "system:controller:endpoint-controller",
                                "meta": {
                                    "name": "system:controller:endpoint-controller",
                                    "uid": "f4f1e4f5-28fa-4482-9c0e-7f345b041287",
                                    "resourceVersion": "124",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:endpoint-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:endpoint-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:endpointslice-controller",
                                        "uid": "e1d12cfe-e228-4052-9a8b-6e42654e63a6",
                                        "resourceVersion": "125",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes",
                                                "pods",
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "services/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "discovery.k8s.io"
                                            ],
                                            "resources": [
                                                "endpointslices"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:endpointslice-controller",
                                "id": "system:controller:endpointslice-controller",
                                "meta": {
                                    "name": "system:controller:endpointslice-controller",
                                    "uid": "e1d12cfe-e228-4052-9a8b-6e42654e63a6",
                                    "resourceVersion": "125",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:endpointslice-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:endpointslice-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:endpointslicemirroring-controller",
                                        "uid": "3bc9c82f-3457-49c8-ab1a-fe8c7f36fb81",
                                        "resourceVersion": "126",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints",
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "services/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "discovery.k8s.io"
                                            ],
                                            "resources": [
                                                "endpointslices"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:endpointslicemirroring-controller",
                                "id": "system:controller:endpointslicemirroring-controller",
                                "meta": {
                                    "name": "system:controller:endpointslicemirroring-controller",
                                    "uid": "3bc9c82f-3457-49c8-ab1a-fe8c7f36fb81",
                                    "resourceVersion": "126",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:endpointslicemirroring-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:endpointslicemirroring-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:ephemeral-volume-controller",
                                        "uid": "4fe0985a-d3a4-4ce0-8d4c-5952bffc090f",
                                        "resourceVersion": "128",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:ephemeral-volume-controller",
                                "id": "system:controller:ephemeral-volume-controller",
                                "meta": {
                                    "name": "system:controller:ephemeral-volume-controller",
                                    "uid": "4fe0985a-d3a4-4ce0-8d4c-5952bffc090f",
                                    "resourceVersion": "128",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:ephemeral-volume-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:ephemeral-volume-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:expand-controller",
                                        "uid": "b35de367-a3fe-4911-b2f7-065a867d55ef",
                                        "resourceVersion": "127",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "storageclasses"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints",
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:expand-controller",
                                "id": "system:controller:expand-controller",
                                "meta": {
                                    "name": "system:controller:expand-controller",
                                    "uid": "b35de367-a3fe-4911-b2f7-065a867d55ef",
                                    "resourceVersion": "127",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:expand-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:expand-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:generic-garbage-collector",
                                        "uid": "9a34499a-6aa1-4cc7-b52d-354069b1415d",
                                        "resourceVersion": "129",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "delete",
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "*"
                                            ],
                                            "resources": [
                                                "*"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:generic-garbage-collector",
                                "id": "system:controller:generic-garbage-collector",
                                "meta": {
                                    "name": "system:controller:generic-garbage-collector",
                                    "uid": "9a34499a-6aa1-4cc7-b52d-354069b1415d",
                                    "resourceVersion": "129",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:generic-garbage-collector",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:generic-garbage-collector"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:horizontal-pod-autoscaler",
                                        "uid": "4a844b3b-88f9-477c-838b-dbb0e2d053a7",
                                        "resourceVersion": "130",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "autoscaling"
                                            ],
                                            "resources": [
                                                "horizontalpodautoscalers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "autoscaling"
                                            ],
                                            "resources": [
                                                "horizontalpodautoscalers/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "*"
                                            ],
                                            "resources": [
                                                "*/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "list"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "services/proxy"
                                            ],
                                            "resourceNames": [
                                                "http:heapster:",
                                                "https:heapster:"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "list"
                                            ],
                                            "apiGroups": [
                                                "metrics.k8s.io"
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list"
                                            ],
                                            "apiGroups": [
                                                "custom.metrics.k8s.io"
                                            ],
                                            "resources": [
                                                "*"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:horizontal-pod-autoscaler",
                                "id": "system:controller:horizontal-pod-autoscaler",
                                "meta": {
                                    "name": "system:controller:horizontal-pod-autoscaler",
                                    "uid": "4a844b3b-88f9-477c-838b-dbb0e2d053a7",
                                    "resourceVersion": "130",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:horizontal-pod-autoscaler",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:horizontal-pod-autoscaler"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:job-controller",
                                        "uid": "514fa1db-4979-49d0-8c17-ced5c6b70a4c",
                                        "resourceVersion": "131",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "jobs"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "jobs/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "jobs/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "list",
                                                "patch",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:job-controller",
                                "id": "system:controller:job-controller",
                                "meta": {
                                    "name": "system:controller:job-controller",
                                    "uid": "514fa1db-4979-49d0-8c17-ced5c6b70a4c",
                                    "resourceVersion": "131",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:job-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:job-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:namespace-controller",
                                        "uid": "d39f9089-3c48-4a3e-82e9-c3d14f7ecdd4",
                                        "resourceVersion": "132",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "delete",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "namespaces"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "namespaces/finalize",
                                                "namespaces/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "delete",
                                                "deletecollection",
                                                "get",
                                                "list"
                                            ],
                                            "apiGroups": [
                                                "*"
                                            ],
                                            "resources": [
                                                "*"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:namespace-controller",
                                "id": "system:controller:namespace-controller",
                                "meta": {
                                    "name": "system:controller:namespace-controller",
                                    "uid": "d39f9089-3c48-4a3e-82e9-c3d14f7ecdd4",
                                    "resourceVersion": "132",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:namespace-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:namespace-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:node-controller",
                                        "uid": "a19638bd-5f04-4757-bfc3-74c73f7efb0f",
                                        "resourceVersion": "133",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "delete",
                                                "get",
                                                "list",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "delete",
                                                "list"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:node-controller",
                                "id": "system:controller:node-controller",
                                "meta": {
                                    "name": "system:controller:node-controller",
                                    "uid": "a19638bd-5f04-4757-bfc3-74c73f7efb0f",
                                    "resourceVersion": "133",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:node-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:node-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:persistent-volume-binder",
                                        "uid": "0b477416-b29b-4493-a4f1-a6de0f0c55e0",
                                        "resourceVersion": "134",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumes/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "storageclasses"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:persistent-volume-binder",
                                "id": "system:controller:persistent-volume-binder",
                                "meta": {
                                    "name": "system:controller:persistent-volume-binder",
                                    "uid": "0b477416-b29b-4493-a4f1-a6de0f0c55e0",
                                    "resourceVersion": "134",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:persistent-volume-binder",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:persistent-volume-binder"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:pod-garbage-collector",
                                        "uid": "d305d60c-a8bd-4d30-886c-e15dcfe29448",
                                        "resourceVersion": "135",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "delete",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:pod-garbage-collector",
                                "id": "system:controller:pod-garbage-collector",
                                "meta": {
                                    "name": "system:controller:pod-garbage-collector",
                                    "uid": "d305d60c-a8bd-4d30-886c-e15dcfe29448",
                                    "resourceVersion": "135",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:pod-garbage-collector",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:pod-garbage-collector"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:pv-protection-controller",
                                        "uid": "50589ab3-8962-4cc5-9cb3-75fd758d4a29",
                                        "resourceVersion": "146",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:pv-protection-controller",
                                "id": "system:controller:pv-protection-controller",
                                "meta": {
                                    "name": "system:controller:pv-protection-controller",
                                    "uid": "50589ab3-8962-4cc5-9cb3-75fd758d4a29",
                                    "resourceVersion": "146",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:pv-protection-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:pv-protection-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:pvc-protection-controller",
                                        "uid": "ae075614-3a9f-4828-8b8b-0546c6c1eccc",
                                        "resourceVersion": "145",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:pvc-protection-controller",
                                "id": "system:controller:pvc-protection-controller",
                                "meta": {
                                    "name": "system:controller:pvc-protection-controller",
                                    "uid": "ae075614-3a9f-4828-8b8b-0546c6c1eccc",
                                    "resourceVersion": "145",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:pvc-protection-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:pvc-protection-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:replicaset-controller",
                                        "uid": "f49675de-fb8d-4d89-9d03-4ede8ee1625c",
                                        "resourceVersion": "136",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "replicasets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "replicasets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "replicasets/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "list",
                                                "patch",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:replicaset-controller",
                                "id": "system:controller:replicaset-controller",
                                "meta": {
                                    "name": "system:controller:replicaset-controller",
                                    "uid": "f49675de-fb8d-4d89-9d03-4ede8ee1625c",
                                    "resourceVersion": "136",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:replicaset-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:replicaset-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:replication-controller",
                                        "uid": "7fad4faa-5102-4f65-8640-23c49dcf2030",
                                        "resourceVersion": "137",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "replicationcontrollers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "replicationcontrollers/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "replicationcontrollers/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "list",
                                                "patch",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:replication-controller",
                                "id": "system:controller:replication-controller",
                                "meta": {
                                    "name": "system:controller:replication-controller",
                                    "uid": "7fad4faa-5102-4f65-8640-23c49dcf2030",
                                    "resourceVersion": "137",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:replication-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:replication-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:resourcequota-controller",
                                        "uid": "21ac4ae5-29a8-456c-9857-19a14afa7fad",
                                        "resourceVersion": "138",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "*"
                                            ],
                                            "resources": [
                                                "*"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "resourcequotas/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:resourcequota-controller",
                                "id": "system:controller:resourcequota-controller",
                                "meta": {
                                    "name": "system:controller:resourcequota-controller",
                                    "uid": "21ac4ae5-29a8-456c-9857-19a14afa7fad",
                                    "resourceVersion": "138",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:resourcequota-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:resourcequota-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:root-ca-cert-publisher",
                                        "uid": "e3b5248e-b326-4685-885f-cf1f29478fad",
                                        "resourceVersion": "148",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:root-ca-cert-publisher",
                                "id": "system:controller:root-ca-cert-publisher",
                                "meta": {
                                    "name": "system:controller:root-ca-cert-publisher",
                                    "uid": "e3b5248e-b326-4685-885f-cf1f29478fad",
                                    "resourceVersion": "148",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:root-ca-cert-publisher",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:root-ca-cert-publisher"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:route-controller",
                                        "uid": "b6be1bd8-efb5-4c74-afcd-35c74c496ba2",
                                        "resourceVersion": "139",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:route-controller",
                                "id": "system:controller:route-controller",
                                "meta": {
                                    "name": "system:controller:route-controller",
                                    "uid": "b6be1bd8-efb5-4c74-afcd-35c74c496ba2",
                                    "resourceVersion": "139",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:route-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:route-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:service-account-controller",
                                        "uid": "adbb0c11-8529-4f81-aa84-e52641fa54b2",
                                        "resourceVersion": "140",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "serviceaccounts"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:service-account-controller",
                                "id": "system:controller:service-account-controller",
                                "meta": {
                                    "name": "system:controller:service-account-controller",
                                    "uid": "adbb0c11-8529-4f81-aa84-e52641fa54b2",
                                    "resourceVersion": "140",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:service-account-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:service-account-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:service-controller",
                                        "uid": "a91c7c2b-c42e-42ff-9ea7-09d7ce1cdc62",
                                        "resourceVersion": "141",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "services/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:service-controller",
                                "id": "system:controller:service-controller",
                                "meta": {
                                    "name": "system:controller:service-controller",
                                    "uid": "a91c7c2b-c42e-42ff-9ea7-09d7ce1cdc62",
                                    "resourceVersion": "141",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:service-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:service-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:statefulset-controller",
                                        "uid": "dbbc9ea1-bc99-40c7-9b48-f015eb1bcd36",
                                        "resourceVersion": "142",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "statefulsets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "statefulsets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "statefulsets/finalizers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "controllerrevisions"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:statefulset-controller",
                                "id": "system:controller:statefulset-controller",
                                "meta": {
                                    "name": "system:controller:statefulset-controller",
                                    "uid": "dbbc9ea1-bc99-40c7-9b48-f015eb1bcd36",
                                    "resourceVersion": "142",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:statefulset-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:statefulset-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:ttl-after-finished-controller",
                                        "uid": "b36d0ece-61c2-4c3d-a730-7037fe117580",
                                        "resourceVersion": "147",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "delete",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "jobs"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:ttl-after-finished-controller",
                                "id": "system:controller:ttl-after-finished-controller",
                                "meta": {
                                    "name": "system:controller:ttl-after-finished-controller",
                                    "uid": "b36d0ece-61c2-4c3d-a730-7037fe117580",
                                    "resourceVersion": "147",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:ttl-after-finished-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:ttl-after-finished-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:ttl-controller",
                                        "uid": "d774e987-15b6-415a-8193-0d73b9b163d9",
                                        "resourceVersion": "143",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:ttl-controller",
                                "id": "system:controller:ttl-controller",
                                "meta": {
                                    "name": "system:controller:ttl-controller",
                                    "uid": "d774e987-15b6-415a-8193-0d73b9b163d9",
                                    "resourceVersion": "143",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:controller:ttl-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:ttl-controller"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:coredns",
                                        "uid": "56985559-034e-4d6d-88f6-f12842d5a4ea",
                                        "resourceVersion": "252",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints",
                                                "services",
                                                "pods",
                                                "namespaces"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:coredns",
                                "id": "system:coredns",
                                "meta": {
                                    "name": "system:coredns",
                                    "uid": "56985559-034e-4d6d-88f6-f12842d5a4ea",
                                    "resourceVersion": "252",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:coredns",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:coredns"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:discovery",
                                        "uid": "f6cd6d44-8c62-44ed-a1a3-e33d56b3e78e",
                                        "resourceVersion": "88",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "nonResourceURLs": [
                                                "/api",
                                                "/api/*",
                                                "/apis",
                                                "/apis/*",
                                                "/healthz",
                                                "/livez",
                                                "/openapi",
                                                "/openapi/*",
                                                "/readyz",
                                                "/version",
                                                "/version/"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:discovery",
                                "id": "system:discovery",
                                "meta": {
                                    "name": "system:discovery",
                                    "uid": "f6cd6d44-8c62-44ed-a1a3-e33d56b3e78e",
                                    "resourceVersion": "88",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:discovery",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:discovery"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:heapster",
                                        "uid": "4aa4842f-7f67-48a1-a8e6-3918f6e97471",
                                        "resourceVersion": "98",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events",
                                                "namespaces",
                                                "nodes",
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "extensions"
                                            ],
                                            "resources": [
                                                "deployments"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:heapster",
                                "id": "system:heapster",
                                "meta": {
                                    "name": "system:heapster",
                                    "uid": "4aa4842f-7f67-48a1-a8e6-3918f6e97471",
                                    "resourceVersion": "98",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:heapster",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:heapster"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:kube-aggregator",
                                        "uid": "42e8b0ed-a20c-4fd5-b6bf-8574a49808b4",
                                        "resourceVersion": "104",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints",
                                                "services"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:kube-aggregator",
                                "id": "system:kube-aggregator",
                                "meta": {
                                    "name": "system:kube-aggregator",
                                    "uid": "42e8b0ed-a20c-4fd5-b6bf-8574a49808b4",
                                    "resourceVersion": "104",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:kube-aggregator",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:kube-aggregator"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:kube-controller-manager",
                                        "uid": "0b4d2080-2456-4c60-ac09-64ad4c09c17f",
                                        "resourceVersion": "105",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "coordination.k8s.io"
                                            ],
                                            "resources": [
                                                "leases"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "coordination.k8s.io"
                                            ],
                                            "resources": [
                                                "leases"
                                            ],
                                            "resourceNames": [
                                                "kube-controller-manager"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints"
                                            ],
                                            "resourceNames": [
                                                "kube-controller-manager"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets",
                                                "serviceaccounts"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "delete"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps",
                                                "namespaces",
                                                "secrets",
                                                "serviceaccounts"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets",
                                                "serviceaccounts"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authentication.k8s.io"
                                            ],
                                            "resources": [
                                                "tokenreviews"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "subjectaccessreviews"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "*"
                                            ],
                                            "resources": [
                                                "*"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "serviceaccounts/token"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:kube-controller-manager",
                                "id": "system:kube-controller-manager",
                                "meta": {
                                    "name": "system:kube-controller-manager",
                                    "uid": "0b4d2080-2456-4c60-ac09-64ad4c09c17f",
                                    "resourceVersion": "105",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:kube-controller-manager",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:kube-controller-manager"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:kube-dns",
                                        "uid": "1c5b1543-f70f-4941-8bd8-f31393a6d937",
                                        "resourceVersion": "106",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints",
                                                "services"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:kube-dns",
                                "id": "system:kube-dns",
                                "meta": {
                                    "name": "system:kube-dns",
                                    "uid": "1c5b1543-f70f-4941-8bd8-f31393a6d937",
                                    "resourceVersion": "106",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:kube-dns",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:kube-dns"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:kube-scheduler",
                                        "uid": "9d462319-f7c6-4f29-b7af-3ef4cd8b1e21",
                                        "resourceVersion": "117",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "coordination.k8s.io"
                                            ],
                                            "resources": [
                                                "leases"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "coordination.k8s.io"
                                            ],
                                            "resources": [
                                                "leases"
                                            ],
                                            "resourceNames": [
                                                "kube-scheduler"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints"
                                            ],
                                            "resourceNames": [
                                                "kube-scheduler"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "delete",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "bindings",
                                                "pods/binding"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "replicationcontrollers",
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps",
                                                "extensions"
                                            ],
                                            "resources": [
                                                "replicasets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "statefulsets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "policy"
                                            ],
                                            "resources": [
                                                "poddisruptionbudgets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims",
                                                "persistentvolumes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authentication.k8s.io"
                                            ],
                                            "resources": [
                                                "tokenreviews"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "subjectaccessreviews"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "csinodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "namespaces"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "csidrivers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "csistoragecapacities"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:kube-scheduler",
                                "id": "system:kube-scheduler",
                                "meta": {
                                    "name": "system:kube-scheduler",
                                    "uid": "9d462319-f7c6-4f29-b7af-3ef4cd8b1e21",
                                    "resourceVersion": "117",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:kube-scheduler",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:kube-scheduler"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:kubelet-api-admin",
                                        "uid": "46122d51-01ea-4c22-8c0d-b5b657175c53",
                                        "resourceVersion": "101",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "proxy"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "*"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes/log",
                                                "nodes/metrics",
                                                "nodes/proxy",
                                                "nodes/spec",
                                                "nodes/stats"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:kubelet-api-admin",
                                "id": "system:kubelet-api-admin",
                                "meta": {
                                    "name": "system:kubelet-api-admin",
                                    "uid": "46122d51-01ea-4c22-8c0d-b5b657175c53",
                                    "resourceVersion": "101",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:kubelet-api-admin",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:kubelet-api-admin"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:monitoring",
                                        "uid": "8d46c6d1-29f0-4b21-8f81-e208fb5e5069",
                                        "resourceVersion": "89",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "nonResourceURLs": [
                                                "/healthz",
                                                "/healthz/*",
                                                "/livez",
                                                "/livez/*",
                                                "/metrics",
                                                "/readyz",
                                                "/readyz/*"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:monitoring",
                                "id": "system:monitoring",
                                "meta": {
                                    "name": "system:monitoring",
                                    "uid": "8d46c6d1-29f0-4b21-8f81-e208fb5e5069",
                                    "resourceVersion": "89",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:monitoring",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:monitoring"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:node",
                                        "uid": "08a61fad-9062-4a88-a0b7-8badb6d2cca1",
                                        "resourceVersion": "99",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authentication.k8s.io"
                                            ],
                                            "resources": [
                                                "tokenreviews"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                "authorization.k8s.io"
                                            ],
                                            "resources": [
                                                "localsubjectaccessreviews",
                                                "subjectaccessreviews"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "pods/eviction"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps",
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims",
                                                "persistentvolumes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "certificatesigningrequests"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "coordination.k8s.io"
                                            ],
                                            "resources": [
                                                "leases"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "volumeattachments"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "serviceaccounts/token"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "csidrivers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "csinodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "node.k8s.io"
                                            ],
                                            "resources": [
                                                "runtimeclasses"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:node",
                                "id": "system:node",
                                "meta": {
                                    "name": "system:node",
                                    "uid": "08a61fad-9062-4a88-a0b7-8badb6d2cca1",
                                    "resourceVersion": "99",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:node",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:node"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:node-bootstrapper",
                                        "uid": "bc10e9b1-45bd-437a-9a9f-72efd46b2113",
                                        "resourceVersion": "102",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "certificates.k8s.io"
                                            ],
                                            "resources": [
                                                "certificatesigningrequests"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:node-bootstrapper",
                                "id": "system:node-bootstrapper",
                                "meta": {
                                    "name": "system:node-bootstrapper",
                                    "uid": "bc10e9b1-45bd-437a-9a9f-72efd46b2113",
                                    "resourceVersion": "102",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:node-bootstrapper",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:node-bootstrapper"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:node-problem-detector",
                                        "uid": "f4a08382-348f-4cfc-8cf5-13ac457669e2",
                                        "resourceVersion": "100",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:node-problem-detector",
                                "id": "system:node-problem-detector",
                                "meta": {
                                    "name": "system:node-problem-detector",
                                    "uid": "f4a08382-348f-4cfc-8cf5-13ac457669e2",
                                    "resourceVersion": "100",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:node-problem-detector",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:node-problem-detector"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:node-proxier",
                                        "uid": "70358914-819e-4c10-b9e1-4918fe5777a9",
                                        "resourceVersion": "116",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints",
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "nodes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "discovery.k8s.io"
                                            ],
                                            "resources": [
                                                "endpointslices"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:node-proxier",
                                "id": "system:node-proxier",
                                "meta": {
                                    "name": "system:node-proxier",
                                    "uid": "70358914-819e-4c10-b9e1-4918fe5777a9",
                                    "resourceVersion": "116",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:node-proxier",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:node-proxier"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:persistent-volume-provisioner",
                                        "uid": "8c488655-9178-41a7-a178-3ab0ddb080ec",
                                        "resourceVersion": "107",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create",
                                                "delete",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "storageclasses"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:persistent-volume-provisioner",
                                "id": "system:persistent-volume-provisioner",
                                "meta": {
                                    "name": "system:persistent-volume-provisioner",
                                    "uid": "8c488655-9178-41a7-a178-3ab0ddb080ec",
                                    "resourceVersion": "107",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:persistent-volume-provisioner",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:persistent-volume-provisioner"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:public-info-viewer",
                                        "uid": "02514615-079a-4c5d-968a-9a51d39f07ac",
                                        "resourceVersion": "91",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "nonResourceURLs": [
                                                "/healthz",
                                                "/livez",
                                                "/readyz",
                                                "/version",
                                                "/version/"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:public-info-viewer",
                                "id": "system:public-info-viewer",
                                "meta": {
                                    "name": "system:public-info-viewer",
                                    "uid": "02514615-079a-4c5d-968a-9a51d39f07ac",
                                    "resourceVersion": "91",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:public-info-viewer",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:public-info-viewer"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:service-account-issuer-discovery",
                                        "uid": "974afb87-2cd3-41b5-b049-e990c9c6d6c3",
                                        "resourceVersion": "115",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "nonResourceURLs": [
                                                "/.well-known/openid-configuration",
                                                "/openid/v1/jwks"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:service-account-issuer-discovery",
                                "id": "system:service-account-issuer-discovery",
                                "meta": {
                                    "name": "system:service-account-issuer-discovery",
                                    "uid": "974afb87-2cd3-41b5-b049-e990c9c6d6c3",
                                    "resourceVersion": "115",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:service-account-issuer-discovery",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:service-account-issuer-discovery"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:volume-scheduler",
                                        "uid": "0d9cef4c-4bc6-44d1-8e7c-8ed4d2f6a779",
                                        "resourceVersion": "110",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumes"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "storage.k8s.io"
                                            ],
                                            "resources": [
                                                "storageclasses"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "patch",
                                                "update",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "persistentvolumeclaims"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:volume-scheduler",
                                "id": "system:volume-scheduler",
                                "meta": {
                                    "name": "system:volume-scheduler",
                                    "uid": "0d9cef4c-4bc6-44d1-8e7c-8ed4d2f6a779",
                                    "resourceVersion": "110",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::system:volume-scheduler",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:volume-scheduler"
                            },
                            {
                                "groupType": "::ClusterRole",
                                "group": "",
                                "type": "ClusterRole",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "view",
                                        "uid": "6f935970-3a34-4fbc-b0ea-cd7ce130596c",
                                        "resourceVersion": "1159",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults",
                                            "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "cert-manager.io"
                                            ],
                                            "resources": [
                                                "certificates",
                                                "certificaterequests",
                                                "issuers"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "acme.cert-manager.io"
                                            ],
                                            "resources": [
                                                "challenges",
                                                "orders"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps",
                                                "endpoints",
                                                "persistentvolumeclaims",
                                                "persistentvolumeclaims/status",
                                                "pods",
                                                "replicationcontrollers",
                                                "replicationcontrollers/scale",
                                                "serviceaccounts",
                                                "services",
                                                "services/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "bindings",
                                                "events",
                                                "limitranges",
                                                "namespaces/status",
                                                "pods/log",
                                                "pods/status",
                                                "replicationcontrollers/status",
                                                "resourcequotas",
                                                "resourcequotas/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "namespaces"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "apps"
                                            ],
                                            "resources": [
                                                "controllerrevisions",
                                                "daemonsets",
                                                "daemonsets/status",
                                                "deployments",
                                                "deployments/scale",
                                                "deployments/status",
                                                "replicasets",
                                                "replicasets/scale",
                                                "replicasets/status",
                                                "statefulsets",
                                                "statefulsets/scale",
                                                "statefulsets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "autoscaling"
                                            ],
                                            "resources": [
                                                "horizontalpodautoscalers",
                                                "horizontalpodautoscalers/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "batch"
                                            ],
                                            "resources": [
                                                "cronjobs",
                                                "cronjobs/status",
                                                "jobs",
                                                "jobs/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "extensions"
                                            ],
                                            "resources": [
                                                "daemonsets",
                                                "daemonsets/status",
                                                "deployments",
                                                "deployments/scale",
                                                "deployments/status",
                                                "ingresses",
                                                "ingresses/status",
                                                "networkpolicies",
                                                "replicasets",
                                                "replicasets/scale",
                                                "replicasets/status",
                                                "replicationcontrollers/scale"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "policy"
                                            ],
                                            "resources": [
                                                "poddisruptionbudgets",
                                                "poddisruptionbudgets/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses",
                                                "ingresses/status",
                                                "networkpolicies"
                                            ]
                                        }
                                    ],
                                    "aggregationRule": {
                                        "clusterRoleSelectors": [
                                            {
                                                "matchLabels": {
                                                    "rbac.authorization.k8s.io/aggregate-to-view": "true"
                                                }
                                            }
                                        ]
                                    }
                                },
                                "name": "view",
                                "id": "view",
                                "meta": {
                                    "name": "view",
                                    "uid": "6f935970-3a34-4fbc-b0ea-cd7ce130596c",
                                    "resourceVersion": "1159",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults",
                                        "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ClusterRole::view",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "view"
                            }
                        ],
                        "groupType": "::ClusterRole",
                        "type": "ClusterRole",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-cainjector",
                                        "uid": "c28fa6ac-52ab-42ef-aae0-71c55f78c149",
                                        "resourceVersion": "1135",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cainjector",
                                            "app.kubernetes.io/component": "cainjector",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cainjector"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-cainjector",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager-cainjector",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "cert-manager-cainjector"
                                    }
                                },
                                "name": "cert-manager-cainjector",
                                "id": "cert-manager-cainjector",
                                "meta": {
                                    "name": "cert-manager-cainjector",
                                    "uid": "c28fa6ac-52ab-42ef-aae0-71c55f78c149",
                                    "resourceVersion": "1135",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cainjector",
                                        "app.kubernetes.io/component": "cainjector",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cainjector"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-cainjector",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "cert-manager-cainjector",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "cert-manager-cainjector",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::cert-manager-cainjector",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-cainjector"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-approve:cert-manager-io",
                                        "uid": "2cc6ab33-b6f2-49f7-9009-5934e57169fd",
                                        "resourceVersion": "1127",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "cert-manager",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-approve:cert-manager-io",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "cert-manager-controller-approve:cert-manager-io"
                                    }
                                },
                                "name": "cert-manager-controller-approve:cert-manager-io",
                                "id": "cert-manager-controller-approve:cert-manager-io",
                                "meta": {
                                    "name": "cert-manager-controller-approve:cert-manager-io",
                                    "uid": "2cc6ab33-b6f2-49f7-9009-5934e57169fd",
                                    "resourceVersion": "1127",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "cert-manager",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-approve:cert-manager-io",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "cert-manager-controller-approve:cert-manager-io",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "cert-manager",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::cert-manager-controller-approve:cert-manager-io",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-approve:cert-manager-io"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-certificates",
                                        "uid": "1ddc84eb-401a-49c1-beb4-66c0b4954bfe",
                                        "resourceVersion": "1132",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-certificates",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "cert-manager-controller-certificates"
                                    }
                                },
                                "name": "cert-manager-controller-certificates",
                                "id": "cert-manager-controller-certificates",
                                "meta": {
                                    "name": "cert-manager-controller-certificates",
                                    "uid": "1ddc84eb-401a-49c1-beb4-66c0b4954bfe",
                                    "resourceVersion": "1132",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-certificates",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "cert-manager-controller-certificates",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "cert-manager",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::cert-manager-controller-certificates",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-certificates"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-challenges",
                                        "uid": "ec647628-5e05-4a76-af28-115a04ef68ca",
                                        "resourceVersion": "1129",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-challenges",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "cert-manager-controller-challenges"
                                    }
                                },
                                "name": "cert-manager-controller-challenges",
                                "id": "cert-manager-controller-challenges",
                                "meta": {
                                    "name": "cert-manager-controller-challenges",
                                    "uid": "ec647628-5e05-4a76-af28-115a04ef68ca",
                                    "resourceVersion": "1129",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-challenges",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "cert-manager-controller-challenges",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "cert-manager",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::cert-manager-controller-challenges",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-challenges"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-clusterissuers",
                                        "uid": "a4302ae8-b703-4bbb-8b5c-3f1bbbf44c6f",
                                        "resourceVersion": "1131",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-clusterissuers",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "cert-manager-controller-clusterissuers"
                                    }
                                },
                                "name": "cert-manager-controller-clusterissuers",
                                "id": "cert-manager-controller-clusterissuers",
                                "meta": {
                                    "name": "cert-manager-controller-clusterissuers",
                                    "uid": "a4302ae8-b703-4bbb-8b5c-3f1bbbf44c6f",
                                    "resourceVersion": "1131",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-clusterissuers",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "cert-manager-controller-clusterissuers",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "cert-manager",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::cert-manager-controller-clusterissuers",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-clusterissuers"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-ingress-shim",
                                        "uid": "0d093bb6-0735-4216-bdfb-f8bad5518587",
                                        "resourceVersion": "1126",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-ingress-shim",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "cert-manager-controller-ingress-shim"
                                    }
                                },
                                "name": "cert-manager-controller-ingress-shim",
                                "id": "cert-manager-controller-ingress-shim",
                                "meta": {
                                    "name": "cert-manager-controller-ingress-shim",
                                    "uid": "0d093bb6-0735-4216-bdfb-f8bad5518587",
                                    "resourceVersion": "1126",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-ingress-shim",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "cert-manager-controller-ingress-shim",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "cert-manager",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::cert-manager-controller-ingress-shim",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-ingress-shim"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-issuers",
                                        "uid": "1e9b5f84-70f9-4fa5-a322-eb28cdf96ed4",
                                        "resourceVersion": "1136",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-issuers",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "cert-manager-controller-issuers"
                                    }
                                },
                                "name": "cert-manager-controller-issuers",
                                "id": "cert-manager-controller-issuers",
                                "meta": {
                                    "name": "cert-manager-controller-issuers",
                                    "uid": "1e9b5f84-70f9-4fa5-a322-eb28cdf96ed4",
                                    "resourceVersion": "1136",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-issuers",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "cert-manager-controller-issuers",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "cert-manager",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::cert-manager-controller-issuers",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-issuers"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-controller-orders",
                                        "uid": "e7b3ee09-32d2-4ffb-8dd3-6ad4e5482f02",
                                        "resourceVersion": "1130",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-controller-orders",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "cert-manager-controller-orders"
                                    }
                                },
                                "name": "cert-manager-controller-orders",
                                "id": "cert-manager-controller-orders",
                                "meta": {
                                    "name": "cert-manager-controller-orders",
                                    "uid": "e7b3ee09-32d2-4ffb-8dd3-6ad4e5482f02",
                                    "resourceVersion": "1130",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-controller-orders",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "cert-manager-controller-orders",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "cert-manager",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::cert-manager-controller-orders",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-controller-orders"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-webhook:subjectaccessreviews",
                                        "uid": "a4550117-44a4-466e-be99-1ef0f2e885d2",
                                        "resourceVersion": "1125",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "webhook",
                                            "app.kubernetes.io/component": "webhook",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "webhook"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-webhook:subjectaccessreviews",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager-webhook",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "cert-manager-webhook:subjectaccessreviews"
                                    }
                                },
                                "name": "cert-manager-webhook:subjectaccessreviews",
                                "id": "cert-manager-webhook:subjectaccessreviews",
                                "meta": {
                                    "name": "cert-manager-webhook:subjectaccessreviews",
                                    "uid": "a4550117-44a4-466e-be99-1ef0f2e885d2",
                                    "resourceVersion": "1125",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "webhook",
                                        "app.kubernetes.io/component": "webhook",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "webhook"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-webhook:subjectaccessreviews",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "cert-manager-webhook:subjectaccessreviews",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "cert-manager-webhook",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::cert-manager-webhook:subjectaccessreviews",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-webhook:subjectaccessreviews"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cluster-admin",
                                        "uid": "9bf8eb02-36ac-4314-a8f7-70415f2766fb",
                                        "resourceVersion": "149",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:masters"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "cluster-admin"
                                    }
                                },
                                "name": "cluster-admin",
                                "id": "cluster-admin",
                                "meta": {
                                    "name": "cluster-admin",
                                    "uid": "9bf8eb02-36ac-4314-a8f7-70415f2766fb",
                                    "resourceVersion": "149",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "cluster-admin",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::cluster-admin",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "cluster-admin"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx",
                                        "uid": "2f5c207b-93ef-4522-a7e3-6ab46b8f8260",
                                        "resourceVersion": "302",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"ingress-nginx\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"ingress-nginx\",\"namespace\":\"ingress-nginx\"}]}\n"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "ingress-nginx",
                                            "namespace": "ingress-nginx"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "ingress-nginx"
                                    }
                                },
                                "name": "ingress-nginx",
                                "id": "ingress-nginx",
                                "meta": {
                                    "name": "ingress-nginx",
                                    "uid": "2f5c207b-93ef-4522-a7e3-6ab46b8f8260",
                                    "resourceVersion": "302",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"ingress-nginx\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"ingress-nginx\",\"namespace\":\"ingress-nginx\"}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "ingress-nginx",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "ingress-nginx",
                                                "namespace": "ingress-nginx"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::ingress-nginx",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-admission",
                                        "uid": "2eae8f9c-8ed1-477a-8785-01a24e9878d5",
                                        "resourceVersion": "309",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "admission-webhook",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"ingress-nginx-admission\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"ingress-nginx-admission\",\"namespace\":\"ingress-nginx\"}]}\n"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "ingress-nginx-admission",
                                            "namespace": "ingress-nginx"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "ingress-nginx-admission"
                                    }
                                },
                                "name": "ingress-nginx-admission",
                                "id": "ingress-nginx-admission",
                                "meta": {
                                    "name": "ingress-nginx-admission",
                                    "uid": "2eae8f9c-8ed1-477a-8785-01a24e9878d5",
                                    "resourceVersion": "309",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "admission-webhook",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"ingress-nginx-admission\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"ingress-nginx-admission\",\"namespace\":\"ingress-nginx\"}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "ingress-nginx-admission",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "ingress-nginx-admission",
                                                "namespace": "ingress-nginx"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::ingress-nginx-admission",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx-admission"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:get-nodes",
                                        "uid": "012c5e3f-42b6-44a8-8465-dac60dc8cbbd",
                                        "resourceVersion": "243",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:bootstrappers:kubeadm:default-node-token"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "kubeadm:get-nodes"
                                    }
                                },
                                "name": "kubeadm:get-nodes",
                                "id": "kubeadm:get-nodes",
                                "meta": {
                                    "name": "kubeadm:get-nodes",
                                    "uid": "012c5e3f-42b6-44a8-8465-dac60dc8cbbd",
                                    "resourceVersion": "243",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "kubeadm:get-nodes",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::kubeadm:get-nodes",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kubeadm:get-nodes"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:kubelet-bootstrap",
                                        "uid": "e6af39be-0f8f-413b-b592-6f5179a5a832",
                                        "resourceVersion": "244",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:bootstrappers:kubeadm:default-node-token"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:node-bootstrapper"
                                    }
                                },
                                "name": "kubeadm:kubelet-bootstrap",
                                "id": "kubeadm:kubelet-bootstrap",
                                "meta": {
                                    "name": "kubeadm:kubelet-bootstrap",
                                    "uid": "e6af39be-0f8f-413b-b592-6f5179a5a832",
                                    "resourceVersion": "244",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:node-bootstrapper",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::kubeadm:kubelet-bootstrap",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kubeadm:kubelet-bootstrap"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:node-autoapprove-bootstrap",
                                        "uid": "412ffb8b-ef47-41bb-b5d7-5461b53357f1",
                                        "resourceVersion": "245",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:bootstrappers:kubeadm:default-node-token"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient"
                                    }
                                },
                                "name": "kubeadm:node-autoapprove-bootstrap",
                                "id": "kubeadm:node-autoapprove-bootstrap",
                                "meta": {
                                    "name": "kubeadm:node-autoapprove-bootstrap",
                                    "uid": "412ffb8b-ef47-41bb-b5d7-5461b53357f1",
                                    "resourceVersion": "245",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::kubeadm:node-autoapprove-bootstrap",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kubeadm:node-autoapprove-bootstrap"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:node-autoapprove-certificate-rotation",
                                        "uid": "8e529a04-2119-42eb-8c53-66905b531030",
                                        "resourceVersion": "246",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:nodes"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient"
                                    }
                                },
                                "name": "kubeadm:node-autoapprove-certificate-rotation",
                                "id": "kubeadm:node-autoapprove-certificate-rotation",
                                "meta": {
                                    "name": "kubeadm:node-autoapprove-certificate-rotation",
                                    "uid": "8e529a04-2119-42eb-8c53-66905b531030",
                                    "resourceVersion": "246",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::kubeadm:node-autoapprove-certificate-rotation",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kubeadm:node-autoapprove-certificate-rotation"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:node-proxier",
                                        "uid": "e87a0694-56c7-4c12-9e05-9e4e7fa3c754",
                                        "resourceVersion": "265",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "kube-proxy",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:node-proxier"
                                    }
                                },
                                "name": "kubeadm:node-proxier",
                                "id": "kubeadm:node-proxier",
                                "meta": {
                                    "name": "kubeadm:node-proxier",
                                    "uid": "e87a0694-56c7-4c12-9e05-9e4e7fa3c754",
                                    "resourceVersion": "265",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:node-proxier",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "kube-proxy",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::kubeadm:node-proxier",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kubeadm:node-proxier"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "minikube-rbac",
                                        "uid": "d6beba6c-69de-4152-bf1d-5c77772e881b",
                                        "resourceVersion": "268",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "default",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "cluster-admin"
                                    }
                                },
                                "name": "minikube-rbac",
                                "id": "minikube-rbac",
                                "meta": {
                                    "name": "minikube-rbac",
                                    "uid": "d6beba6c-69de-4152-bf1d-5c77772e881b",
                                    "resourceVersion": "268",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "cluster-admin",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "default",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::minikube-rbac",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "minikube-rbac"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "storage-provisioner",
                                        "uid": "950a24c4-d596-48e4-a366-11dc18411ca6",
                                        "resourceVersion": "285",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "EnsureExists"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"EnsureExists\"},\"name\":\"storage-provisioner\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:persistent-volume-provisioner\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"storage-provisioner\",\"namespace\":\"kube-system\"}]}\n"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "storage-provisioner",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:persistent-volume-provisioner"
                                    }
                                },
                                "name": "storage-provisioner",
                                "id": "storage-provisioner",
                                "meta": {
                                    "name": "storage-provisioner",
                                    "uid": "950a24c4-d596-48e4-a366-11dc18411ca6",
                                    "resourceVersion": "285",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "EnsureExists"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"EnsureExists\"},\"name\":\"storage-provisioner\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:persistent-volume-provisioner\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"storage-provisioner\",\"namespace\":\"kube-system\"}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:persistent-volume-provisioner",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "storage-provisioner",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::storage-provisioner",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "storage-provisioner"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:basic-user",
                                        "uid": "97fcfc47-7b8e-4414-963a-29c998fd4a1a",
                                        "resourceVersion": "152",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:authenticated"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:basic-user"
                                    }
                                },
                                "name": "system:basic-user",
                                "id": "system:basic-user",
                                "meta": {
                                    "name": "system:basic-user",
                                    "uid": "97fcfc47-7b8e-4414-963a-29c998fd4a1a",
                                    "resourceVersion": "152",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:basic-user",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:basic-user",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:basic-user"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:attachdetach-controller",
                                        "uid": "b7be48fb-f055-4c50-9033-3a4b6fb14bac",
                                        "resourceVersion": "161",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "attachdetach-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:attachdetach-controller"
                                    }
                                },
                                "name": "system:controller:attachdetach-controller",
                                "id": "system:controller:attachdetach-controller",
                                "meta": {
                                    "name": "system:controller:attachdetach-controller",
                                    "uid": "b7be48fb-f055-4c50-9033-3a4b6fb14bac",
                                    "resourceVersion": "161",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:attachdetach-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "attachdetach-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:attachdetach-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:attachdetach-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:certificate-controller",
                                        "uid": "c9531600-62cb-4a92-942a-fd1cb1031747",
                                        "resourceVersion": "187",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "certificate-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:certificate-controller"
                                    }
                                },
                                "name": "system:controller:certificate-controller",
                                "id": "system:controller:certificate-controller",
                                "meta": {
                                    "name": "system:controller:certificate-controller",
                                    "uid": "c9531600-62cb-4a92-942a-fd1cb1031747",
                                    "resourceVersion": "187",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:certificate-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "certificate-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:certificate-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:certificate-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:clusterrole-aggregation-controller",
                                        "uid": "28040020-8212-4337-8e41-39418703f7ab",
                                        "resourceVersion": "162",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "clusterrole-aggregation-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:clusterrole-aggregation-controller"
                                    }
                                },
                                "name": "system:controller:clusterrole-aggregation-controller",
                                "id": "system:controller:clusterrole-aggregation-controller",
                                "meta": {
                                    "name": "system:controller:clusterrole-aggregation-controller",
                                    "uid": "28040020-8212-4337-8e41-39418703f7ab",
                                    "resourceVersion": "162",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:clusterrole-aggregation-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "clusterrole-aggregation-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:clusterrole-aggregation-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:clusterrole-aggregation-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:cronjob-controller",
                                        "uid": "9bad4dcf-13f1-41cf-9dc4-755a13800b3a",
                                        "resourceVersion": "163",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cronjob-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:cronjob-controller"
                                    }
                                },
                                "name": "system:controller:cronjob-controller",
                                "id": "system:controller:cronjob-controller",
                                "meta": {
                                    "name": "system:controller:cronjob-controller",
                                    "uid": "9bad4dcf-13f1-41cf-9dc4-755a13800b3a",
                                    "resourceVersion": "163",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:cronjob-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "cronjob-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:cronjob-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:cronjob-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:daemon-set-controller",
                                        "uid": "45a4f39e-2a99-42fa-830a-a97d2ba3b2f9",
                                        "resourceVersion": "164",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "daemon-set-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:daemon-set-controller"
                                    }
                                },
                                "name": "system:controller:daemon-set-controller",
                                "id": "system:controller:daemon-set-controller",
                                "meta": {
                                    "name": "system:controller:daemon-set-controller",
                                    "uid": "45a4f39e-2a99-42fa-830a-a97d2ba3b2f9",
                                    "resourceVersion": "164",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:daemon-set-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "daemon-set-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:daemon-set-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:daemon-set-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:deployment-controller",
                                        "uid": "1ad7d0a1-bd7b-42e5-a742-acc8535cd41d",
                                        "resourceVersion": "165",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "deployment-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:deployment-controller"
                                    }
                                },
                                "name": "system:controller:deployment-controller",
                                "id": "system:controller:deployment-controller",
                                "meta": {
                                    "name": "system:controller:deployment-controller",
                                    "uid": "1ad7d0a1-bd7b-42e5-a742-acc8535cd41d",
                                    "resourceVersion": "165",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:deployment-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "deployment-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:deployment-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:deployment-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:disruption-controller",
                                        "uid": "e494e322-ebff-49a7-b789-f0ec3fe73f06",
                                        "resourceVersion": "166",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "disruption-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:disruption-controller"
                                    }
                                },
                                "name": "system:controller:disruption-controller",
                                "id": "system:controller:disruption-controller",
                                "meta": {
                                    "name": "system:controller:disruption-controller",
                                    "uid": "e494e322-ebff-49a7-b789-f0ec3fe73f06",
                                    "resourceVersion": "166",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:disruption-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "disruption-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:disruption-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:disruption-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:endpoint-controller",
                                        "uid": "e3ae4ccf-8a78-4d1a-80c0-383c2d743c83",
                                        "resourceVersion": "167",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "endpoint-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:endpoint-controller"
                                    }
                                },
                                "name": "system:controller:endpoint-controller",
                                "id": "system:controller:endpoint-controller",
                                "meta": {
                                    "name": "system:controller:endpoint-controller",
                                    "uid": "e3ae4ccf-8a78-4d1a-80c0-383c2d743c83",
                                    "resourceVersion": "167",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:endpoint-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "endpoint-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:endpoint-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:endpoint-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:endpointslice-controller",
                                        "uid": "9849aee3-2047-467e-8fce-b2532601b2e3",
                                        "resourceVersion": "168",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "endpointslice-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:endpointslice-controller"
                                    }
                                },
                                "name": "system:controller:endpointslice-controller",
                                "id": "system:controller:endpointslice-controller",
                                "meta": {
                                    "name": "system:controller:endpointslice-controller",
                                    "uid": "9849aee3-2047-467e-8fce-b2532601b2e3",
                                    "resourceVersion": "168",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:endpointslice-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "endpointslice-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:endpointslice-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:endpointslice-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:endpointslicemirroring-controller",
                                        "uid": "9cb6e785-4e86-40b1-872c-035283591c42",
                                        "resourceVersion": "169",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "endpointslicemirroring-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:endpointslicemirroring-controller"
                                    }
                                },
                                "name": "system:controller:endpointslicemirroring-controller",
                                "id": "system:controller:endpointslicemirroring-controller",
                                "meta": {
                                    "name": "system:controller:endpointslicemirroring-controller",
                                    "uid": "9cb6e785-4e86-40b1-872c-035283591c42",
                                    "resourceVersion": "169",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:endpointslicemirroring-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "endpointslicemirroring-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:endpointslicemirroring-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:endpointslicemirroring-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:ephemeral-volume-controller",
                                        "uid": "6b57655d-fee0-4a51-90b6-6023a85b0ca1",
                                        "resourceVersion": "171",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "ephemeral-volume-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:ephemeral-volume-controller"
                                    }
                                },
                                "name": "system:controller:ephemeral-volume-controller",
                                "id": "system:controller:ephemeral-volume-controller",
                                "meta": {
                                    "name": "system:controller:ephemeral-volume-controller",
                                    "uid": "6b57655d-fee0-4a51-90b6-6023a85b0ca1",
                                    "resourceVersion": "171",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:ephemeral-volume-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "ephemeral-volume-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:ephemeral-volume-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:ephemeral-volume-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:expand-controller",
                                        "uid": "7f0e0b0c-4c0f-4a7f-ac18-3b1298742bdb",
                                        "resourceVersion": "170",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "expand-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:expand-controller"
                                    }
                                },
                                "name": "system:controller:expand-controller",
                                "id": "system:controller:expand-controller",
                                "meta": {
                                    "name": "system:controller:expand-controller",
                                    "uid": "7f0e0b0c-4c0f-4a7f-ac18-3b1298742bdb",
                                    "resourceVersion": "170",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:expand-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "expand-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:expand-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:expand-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:generic-garbage-collector",
                                        "uid": "fb173c30-936c-4062-8384-1437675c1a78",
                                        "resourceVersion": "172",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "generic-garbage-collector",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:generic-garbage-collector"
                                    }
                                },
                                "name": "system:controller:generic-garbage-collector",
                                "id": "system:controller:generic-garbage-collector",
                                "meta": {
                                    "name": "system:controller:generic-garbage-collector",
                                    "uid": "fb173c30-936c-4062-8384-1437675c1a78",
                                    "resourceVersion": "172",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:generic-garbage-collector",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "generic-garbage-collector",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:generic-garbage-collector",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:generic-garbage-collector"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:horizontal-pod-autoscaler",
                                        "uid": "773cf169-e499-4b5b-af26-1e282fae8a00",
                                        "resourceVersion": "173",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "horizontal-pod-autoscaler",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:horizontal-pod-autoscaler"
                                    }
                                },
                                "name": "system:controller:horizontal-pod-autoscaler",
                                "id": "system:controller:horizontal-pod-autoscaler",
                                "meta": {
                                    "name": "system:controller:horizontal-pod-autoscaler",
                                    "uid": "773cf169-e499-4b5b-af26-1e282fae8a00",
                                    "resourceVersion": "173",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:horizontal-pod-autoscaler",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "horizontal-pod-autoscaler",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:horizontal-pod-autoscaler",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:horizontal-pod-autoscaler"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:job-controller",
                                        "uid": "9301e4d3-ff02-45f7-93c9-90fa9c22cbf8",
                                        "resourceVersion": "174",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "job-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:job-controller"
                                    }
                                },
                                "name": "system:controller:job-controller",
                                "id": "system:controller:job-controller",
                                "meta": {
                                    "name": "system:controller:job-controller",
                                    "uid": "9301e4d3-ff02-45f7-93c9-90fa9c22cbf8",
                                    "resourceVersion": "174",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:job-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "job-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:job-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:job-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:namespace-controller",
                                        "uid": "e0aec3ba-7a85-4db1-bee9-52094b94f5f8",
                                        "resourceVersion": "175",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "namespace-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:namespace-controller"
                                    }
                                },
                                "name": "system:controller:namespace-controller",
                                "id": "system:controller:namespace-controller",
                                "meta": {
                                    "name": "system:controller:namespace-controller",
                                    "uid": "e0aec3ba-7a85-4db1-bee9-52094b94f5f8",
                                    "resourceVersion": "175",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:namespace-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "namespace-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:namespace-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:namespace-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:node-controller",
                                        "uid": "905446f7-e401-4ea4-b653-7f304059e891",
                                        "resourceVersion": "176",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "node-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:node-controller"
                                    }
                                },
                                "name": "system:controller:node-controller",
                                "id": "system:controller:node-controller",
                                "meta": {
                                    "name": "system:controller:node-controller",
                                    "uid": "905446f7-e401-4ea4-b653-7f304059e891",
                                    "resourceVersion": "176",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:node-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "node-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:node-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:node-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:persistent-volume-binder",
                                        "uid": "8c11c96f-2f69-4228-b3d0-f5efd79e3aa1",
                                        "resourceVersion": "177",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "persistent-volume-binder",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:persistent-volume-binder"
                                    }
                                },
                                "name": "system:controller:persistent-volume-binder",
                                "id": "system:controller:persistent-volume-binder",
                                "meta": {
                                    "name": "system:controller:persistent-volume-binder",
                                    "uid": "8c11c96f-2f69-4228-b3d0-f5efd79e3aa1",
                                    "resourceVersion": "177",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:persistent-volume-binder",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "persistent-volume-binder",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:persistent-volume-binder",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:persistent-volume-binder"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:pod-garbage-collector",
                                        "uid": "eedbfa17-9db2-4d37-8d13-a2b29cf39b84",
                                        "resourceVersion": "178",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "pod-garbage-collector",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:pod-garbage-collector"
                                    }
                                },
                                "name": "system:controller:pod-garbage-collector",
                                "id": "system:controller:pod-garbage-collector",
                                "meta": {
                                    "name": "system:controller:pod-garbage-collector",
                                    "uid": "eedbfa17-9db2-4d37-8d13-a2b29cf39b84",
                                    "resourceVersion": "178",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:pod-garbage-collector",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "pod-garbage-collector",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:pod-garbage-collector",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:pod-garbage-collector"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:pv-protection-controller",
                                        "uid": "e76c29a9-5aa3-4eb2-9df8-33a425510429",
                                        "resourceVersion": "189",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "pv-protection-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:pv-protection-controller"
                                    }
                                },
                                "name": "system:controller:pv-protection-controller",
                                "id": "system:controller:pv-protection-controller",
                                "meta": {
                                    "name": "system:controller:pv-protection-controller",
                                    "uid": "e76c29a9-5aa3-4eb2-9df8-33a425510429",
                                    "resourceVersion": "189",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:pv-protection-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "pv-protection-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:pv-protection-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:pv-protection-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:pvc-protection-controller",
                                        "uid": "3a646d95-4020-4646-9fd5-6fc6bb76ab0c",
                                        "resourceVersion": "188",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "pvc-protection-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:pvc-protection-controller"
                                    }
                                },
                                "name": "system:controller:pvc-protection-controller",
                                "id": "system:controller:pvc-protection-controller",
                                "meta": {
                                    "name": "system:controller:pvc-protection-controller",
                                    "uid": "3a646d95-4020-4646-9fd5-6fc6bb76ab0c",
                                    "resourceVersion": "188",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:pvc-protection-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "pvc-protection-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:pvc-protection-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:pvc-protection-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:replicaset-controller",
                                        "uid": "8cac2970-eab7-4a72-82bf-5b645ec2d9d7",
                                        "resourceVersion": "179",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "replicaset-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:replicaset-controller"
                                    }
                                },
                                "name": "system:controller:replicaset-controller",
                                "id": "system:controller:replicaset-controller",
                                "meta": {
                                    "name": "system:controller:replicaset-controller",
                                    "uid": "8cac2970-eab7-4a72-82bf-5b645ec2d9d7",
                                    "resourceVersion": "179",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:replicaset-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "replicaset-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:replicaset-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:replicaset-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:replication-controller",
                                        "uid": "8c8ccd6d-f245-4eb3-b5b6-91e086b4eee3",
                                        "resourceVersion": "180",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "replication-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:replication-controller"
                                    }
                                },
                                "name": "system:controller:replication-controller",
                                "id": "system:controller:replication-controller",
                                "meta": {
                                    "name": "system:controller:replication-controller",
                                    "uid": "8c8ccd6d-f245-4eb3-b5b6-91e086b4eee3",
                                    "resourceVersion": "180",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:replication-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "replication-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:replication-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:replication-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:resourcequota-controller",
                                        "uid": "272e8907-6326-4df2-a7e2-851733d9c60d",
                                        "resourceVersion": "181",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "resourcequota-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:resourcequota-controller"
                                    }
                                },
                                "name": "system:controller:resourcequota-controller",
                                "id": "system:controller:resourcequota-controller",
                                "meta": {
                                    "name": "system:controller:resourcequota-controller",
                                    "uid": "272e8907-6326-4df2-a7e2-851733d9c60d",
                                    "resourceVersion": "181",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:resourcequota-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "resourcequota-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:resourcequota-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:resourcequota-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:root-ca-cert-publisher",
                                        "uid": "bbe00eca-71a3-4bb9-aab5-3eb275119642",
                                        "resourceVersion": "191",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "root-ca-cert-publisher",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:root-ca-cert-publisher"
                                    }
                                },
                                "name": "system:controller:root-ca-cert-publisher",
                                "id": "system:controller:root-ca-cert-publisher",
                                "meta": {
                                    "name": "system:controller:root-ca-cert-publisher",
                                    "uid": "bbe00eca-71a3-4bb9-aab5-3eb275119642",
                                    "resourceVersion": "191",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:root-ca-cert-publisher",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "root-ca-cert-publisher",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:root-ca-cert-publisher",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:root-ca-cert-publisher"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:route-controller",
                                        "uid": "1ddfe480-3a57-43fc-a86c-8f3f8080c486",
                                        "resourceVersion": "182",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "route-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:route-controller"
                                    }
                                },
                                "name": "system:controller:route-controller",
                                "id": "system:controller:route-controller",
                                "meta": {
                                    "name": "system:controller:route-controller",
                                    "uid": "1ddfe480-3a57-43fc-a86c-8f3f8080c486",
                                    "resourceVersion": "182",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:route-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "route-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:route-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:route-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:service-account-controller",
                                        "uid": "25bac751-6907-4088-87c4-40726d573d19",
                                        "resourceVersion": "183",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "service-account-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:service-account-controller"
                                    }
                                },
                                "name": "system:controller:service-account-controller",
                                "id": "system:controller:service-account-controller",
                                "meta": {
                                    "name": "system:controller:service-account-controller",
                                    "uid": "25bac751-6907-4088-87c4-40726d573d19",
                                    "resourceVersion": "183",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:service-account-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "service-account-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:service-account-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:service-account-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:service-controller",
                                        "uid": "1341b8fd-e425-4bfb-beba-a58e0bdebcb2",
                                        "resourceVersion": "184",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "service-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:service-controller"
                                    }
                                },
                                "name": "system:controller:service-controller",
                                "id": "system:controller:service-controller",
                                "meta": {
                                    "name": "system:controller:service-controller",
                                    "uid": "1341b8fd-e425-4bfb-beba-a58e0bdebcb2",
                                    "resourceVersion": "184",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:service-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "service-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:service-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:service-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:statefulset-controller",
                                        "uid": "94f49f73-3b2a-486e-aeef-71c4eef44b23",
                                        "resourceVersion": "185",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "statefulset-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:statefulset-controller"
                                    }
                                },
                                "name": "system:controller:statefulset-controller",
                                "id": "system:controller:statefulset-controller",
                                "meta": {
                                    "name": "system:controller:statefulset-controller",
                                    "uid": "94f49f73-3b2a-486e-aeef-71c4eef44b23",
                                    "resourceVersion": "185",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:statefulset-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "statefulset-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:statefulset-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:statefulset-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:ttl-after-finished-controller",
                                        "uid": "fbed3ddb-3355-4fbe-9be1-657e66d83eff",
                                        "resourceVersion": "190",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "ttl-after-finished-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:ttl-after-finished-controller"
                                    }
                                },
                                "name": "system:controller:ttl-after-finished-controller",
                                "id": "system:controller:ttl-after-finished-controller",
                                "meta": {
                                    "name": "system:controller:ttl-after-finished-controller",
                                    "uid": "fbed3ddb-3355-4fbe-9be1-657e66d83eff",
                                    "resourceVersion": "190",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:ttl-after-finished-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "ttl-after-finished-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:ttl-after-finished-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:ttl-after-finished-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:ttl-controller",
                                        "uid": "e901dac8-1f31-4c32-b0e5-b910b9fd4436",
                                        "resourceVersion": "186",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "ttl-controller",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:controller:ttl-controller"
                                    }
                                },
                                "name": "system:controller:ttl-controller",
                                "id": "system:controller:ttl-controller",
                                "meta": {
                                    "name": "system:controller:ttl-controller",
                                    "uid": "e901dac8-1f31-4c32-b0e5-b910b9fd4436",
                                    "resourceVersion": "186",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:controller:ttl-controller",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "ttl-controller",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:controller:ttl-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:controller:ttl-controller"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:coredns",
                                        "uid": "38943349-517f-4c7f-9319-989947e506d9",
                                        "resourceVersion": "253",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "coredns",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:coredns"
                                    }
                                },
                                "name": "system:coredns",
                                "id": "system:coredns",
                                "meta": {
                                    "name": "system:coredns",
                                    "uid": "38943349-517f-4c7f-9319-989947e506d9",
                                    "resourceVersion": "253",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:coredns",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "coredns",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:coredns",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:coredns"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:discovery",
                                        "uid": "961e7be7-e223-42db-850b-5f42c00f4164",
                                        "resourceVersion": "151",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:authenticated"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:discovery"
                                    }
                                },
                                "name": "system:discovery",
                                "id": "system:discovery",
                                "meta": {
                                    "name": "system:discovery",
                                    "uid": "961e7be7-e223-42db-850b-5f42c00f4164",
                                    "resourceVersion": "151",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:discovery",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:discovery",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:discovery"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:kube-controller-manager",
                                        "uid": "e3a251c3-ddb8-485b-85a9-abb8270f0b37",
                                        "resourceVersion": "155",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "User",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:kube-controller-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:kube-controller-manager"
                                    }
                                },
                                "name": "system:kube-controller-manager",
                                "id": "system:kube-controller-manager",
                                "meta": {
                                    "name": "system:kube-controller-manager",
                                    "uid": "e3a251c3-ddb8-485b-85a9-abb8270f0b37",
                                    "resourceVersion": "155",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:kube-controller-manager",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:kube-controller-manager",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:kube-controller-manager"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:kube-dns",
                                        "uid": "c8e95a1c-1adf-499c-b24b-cc88989b4477",
                                        "resourceVersion": "156",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "kube-dns",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:kube-dns"
                                    }
                                },
                                "name": "system:kube-dns",
                                "id": "system:kube-dns",
                                "meta": {
                                    "name": "system:kube-dns",
                                    "uid": "c8e95a1c-1adf-499c-b24b-cc88989b4477",
                                    "resourceVersion": "156",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:kube-dns",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    },
                                    {
                                        "type": "ServiceAccount",
                                        "ids": [
                                            {
                                                "kind": "ServiceAccount",
                                                "name": "kube-dns",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ServiceAccount"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:kube-dns",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:kube-dns"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:kube-scheduler",
                                        "uid": "cdfb53b3-4044-42c5-9937-68026134fbc1",
                                        "resourceVersion": "157",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "User",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:kube-scheduler"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:kube-scheduler"
                                    }
                                },
                                "name": "system:kube-scheduler",
                                "id": "system:kube-scheduler",
                                "meta": {
                                    "name": "system:kube-scheduler",
                                    "uid": "cdfb53b3-4044-42c5-9937-68026134fbc1",
                                    "resourceVersion": "157",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:kube-scheduler",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:kube-scheduler",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:kube-scheduler"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:monitoring",
                                        "uid": "b73e98b1-8e7a-4c75-9479-7c2dbf8bdc59",
                                        "resourceVersion": "150",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:monitoring"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:monitoring"
                                    }
                                },
                                "name": "system:monitoring",
                                "id": "system:monitoring",
                                "meta": {
                                    "name": "system:monitoring",
                                    "uid": "b73e98b1-8e7a-4c75-9479-7c2dbf8bdc59",
                                    "resourceVersion": "150",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:monitoring",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:monitoring",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:monitoring"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:node",
                                        "uid": "76080198-5f00-43ef-99ab-8a943695ec45",
                                        "resourceVersion": "159",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:node"
                                    }
                                },
                                "name": "system:node",
                                "id": "system:node",
                                "meta": {
                                    "name": "system:node",
                                    "uid": "76080198-5f00-43ef-99ab-8a943695ec45",
                                    "resourceVersion": "159",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:node",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:node",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:node"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:node-proxier",
                                        "uid": "dfa75adf-9746-4c33-afd1-250acfb3d0db",
                                        "resourceVersion": "154",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "User",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:kube-proxy"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:node-proxier"
                                    }
                                },
                                "name": "system:node-proxier",
                                "id": "system:node-proxier",
                                "meta": {
                                    "name": "system:node-proxier",
                                    "uid": "dfa75adf-9746-4c33-afd1-250acfb3d0db",
                                    "resourceVersion": "154",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:node-proxier",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:node-proxier",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:node-proxier"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:public-info-viewer",
                                        "uid": "30d32583-a927-4acb-8477-033f00ca309f",
                                        "resourceVersion": "153",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:authenticated"
                                        },
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:unauthenticated"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:public-info-viewer"
                                    }
                                },
                                "name": "system:public-info-viewer",
                                "id": "system:public-info-viewer",
                                "meta": {
                                    "name": "system:public-info-viewer",
                                    "uid": "30d32583-a927-4acb-8477-033f00ca309f",
                                    "resourceVersion": "153",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:public-info-viewer",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:public-info-viewer",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:public-info-viewer"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:service-account-issuer-discovery",
                                        "uid": "47fa051e-61f7-4572-b4ba-f6aa89699cf7",
                                        "resourceVersion": "160",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:serviceaccounts"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:service-account-issuer-discovery"
                                    }
                                },
                                "name": "system:service-account-issuer-discovery",
                                "id": "system:service-account-issuer-discovery",
                                "meta": {
                                    "name": "system:service-account-issuer-discovery",
                                    "uid": "47fa051e-61f7-4572-b4ba-f6aa89699cf7",
                                    "resourceVersion": "160",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:service-account-issuer-discovery",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:service-account-issuer-discovery",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:service-account-issuer-discovery"
                            },
                            {
                                "groupType": "::ClusterRoleBinding",
                                "group": "",
                                "type": "ClusterRoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:volume-scheduler",
                                        "uid": "e3dc59a0-6052-4287-a4f9-09f123b777ea",
                                        "resourceVersion": "158",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "User",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:kube-scheduler"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "ClusterRole",
                                        "name": "system:volume-scheduler"
                                    }
                                },
                                "name": "system:volume-scheduler",
                                "id": "system:volume-scheduler",
                                "meta": {
                                    "name": "system:volume-scheduler",
                                    "uid": "e3dc59a0-6052-4287-a4f9-09f123b777ea",
                                    "resourceVersion": "158",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "ClusterRole",
                                        "ids": [
                                            {
                                                "name": "system:volume-scheduler",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::ClusterRole"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ClusterRoleBinding::system:volume-scheduler",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "system:volume-scheduler"
                            }
                        ],
                        "groupType": "::ClusterRoleBinding",
                        "type": "ClusterRoleBinding",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::CustomResourceDefinition",
                                "group": "",
                                "type": "CustomResourceDefinition",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "certificaterequests.cert-manager.io",
                                        "uid": "0bfaed0f-e973-4be4-bb1a-f656f68573a9",
                                        "resourceVersion": "1311",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "certificaterequests.cert-manager.io",
                                            "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "group": "cert-manager.io",
                                        "names": {
                                            "plural": "certificaterequests",
                                            "singular": "certificaterequest",
                                            "shortNames": [
                                                "cr",
                                                "crs"
                                            ],
                                            "kind": "CertificateRequest",
                                            "listKind": "CertificateRequestList",
                                            "categories": [
                                                "cert-manager"
                                            ]
                                        },
                                        "scope": "Namespaced",
                                        "versions": [
                                            {
                                                "name": "v1alpha2",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A CertificateRequest is used to request a signed certificate from one of the configured issuers. \n All fields within the CertificateRequest's `spec` are immutable after creation. A CertificateRequest will either succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest is a one-shot resource, meaning it represents a single point in time request for a certificate and cannot be re-used.",
                                                        "type": "object",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the CertificateRequest resource.",
                                                                "type": "object",
                                                                "required": [
                                                                    "csr",
                                                                    "issuerRef"
                                                                ],
                                                                "properties": {
                                                                    "csr": {
                                                                        "description": "The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "duration": {
                                                                        "description": "The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.",
                                                                        "type": "string"
                                                                    },
                                                                    "extra": {
                                                                        "description": "Extra contains extra attributes of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "object",
                                                                        "additionalProperties": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "groups": {
                                                                        "description": "Groups contains group membership of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "isCA": {
                                                                        "description": "IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef is a reference to the issuer for this CertificateRequest.  If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to `cert-manager.io` if empty.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "uid": {
                                                                        "description": "UID contains the uid of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "string"
                                                                    },
                                                                    "usages": {
                                                                        "description": "Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "signing",
                                                                                "digital signature",
                                                                                "content commitment",
                                                                                "key encipherment",
                                                                                "key agreement",
                                                                                "data encipherment",
                                                                                "cert sign",
                                                                                "crl sign",
                                                                                "encipher only",
                                                                                "decipher only",
                                                                                "any",
                                                                                "server auth",
                                                                                "client auth",
                                                                                "code signing",
                                                                                "email protection",
                                                                                "s/mime",
                                                                                "ipsec end system",
                                                                                "ipsec tunnel",
                                                                                "ipsec user",
                                                                                "timestamping",
                                                                                "ocsp signing",
                                                                                "microsoft sgc",
                                                                                "netscape sgc"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "username": {
                                                                        "description": "Username contains the name of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the CertificateRequest. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "ca": {
                                                                        "description": "The PEM encoded x509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "certificate": {
                                                                        "description": "The PEM encoded x509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "CertificateRequestCondition contains condition information for a CertificateRequest.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`, `InvalidRequest`, `Approved`, `Denied`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "failureTime": {
                                                                        "description": "FailureTime stores the time that this CertificateRequest failed. This is used to influence garbage collection and back-off.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Approved",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Approved\")].status"
                                                    },
                                                    {
                                                        "name": "Denied",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Denied\")].status"
                                                    },
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Requestor",
                                                        "type": "string",
                                                        "jsonPath": ".spec.username"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1alpha3",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A CertificateRequest is used to request a signed certificate from one of the configured issuers. \n All fields within the CertificateRequest's `spec` are immutable after creation. A CertificateRequest will either succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest is a one-shot resource, meaning it represents a single point in time request for a certificate and cannot be re-used.",
                                                        "type": "object",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the CertificateRequest resource.",
                                                                "type": "object",
                                                                "required": [
                                                                    "csr",
                                                                    "issuerRef"
                                                                ],
                                                                "properties": {
                                                                    "csr": {
                                                                        "description": "The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "duration": {
                                                                        "description": "The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.",
                                                                        "type": "string"
                                                                    },
                                                                    "extra": {
                                                                        "description": "Extra contains extra attributes of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "object",
                                                                        "additionalProperties": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "groups": {
                                                                        "description": "Groups contains group membership of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "isCA": {
                                                                        "description": "IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef is a reference to the issuer for this CertificateRequest.  If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to `cert-manager.io` if empty.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "uid": {
                                                                        "description": "UID contains the uid of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "string"
                                                                    },
                                                                    "usages": {
                                                                        "description": "Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "signing",
                                                                                "digital signature",
                                                                                "content commitment",
                                                                                "key encipherment",
                                                                                "key agreement",
                                                                                "data encipherment",
                                                                                "cert sign",
                                                                                "crl sign",
                                                                                "encipher only",
                                                                                "decipher only",
                                                                                "any",
                                                                                "server auth",
                                                                                "client auth",
                                                                                "code signing",
                                                                                "email protection",
                                                                                "s/mime",
                                                                                "ipsec end system",
                                                                                "ipsec tunnel",
                                                                                "ipsec user",
                                                                                "timestamping",
                                                                                "ocsp signing",
                                                                                "microsoft sgc",
                                                                                "netscape sgc"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "username": {
                                                                        "description": "Username contains the name of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the CertificateRequest. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "ca": {
                                                                        "description": "The PEM encoded x509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "certificate": {
                                                                        "description": "The PEM encoded x509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "CertificateRequestCondition contains condition information for a CertificateRequest.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`, `InvalidRequest`, `Approved`, `Denied`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "failureTime": {
                                                                        "description": "FailureTime stores the time that this CertificateRequest failed. This is used to influence garbage collection and back-off.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Approved",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Approved\")].status"
                                                    },
                                                    {
                                                        "name": "Denied",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Denied\")].status"
                                                    },
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Requestor",
                                                        "type": "string",
                                                        "jsonPath": ".spec.username"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1beta1",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A CertificateRequest is used to request a signed certificate from one of the configured issuers. \n All fields within the CertificateRequest's `spec` are immutable after creation. A CertificateRequest will either succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest is a one-shot resource, meaning it represents a single point in time request for a certificate and cannot be re-used.",
                                                        "type": "object",
                                                        "required": [
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the CertificateRequest resource.",
                                                                "type": "object",
                                                                "required": [
                                                                    "issuerRef",
                                                                    "request"
                                                                ],
                                                                "properties": {
                                                                    "duration": {
                                                                        "description": "The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.",
                                                                        "type": "string"
                                                                    },
                                                                    "extra": {
                                                                        "description": "Extra contains extra attributes of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "object",
                                                                        "additionalProperties": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "groups": {
                                                                        "description": "Groups contains group membership of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "isCA": {
                                                                        "description": "IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef is a reference to the issuer for this CertificateRequest.  If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to `cert-manager.io` if empty.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "request": {
                                                                        "description": "The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "uid": {
                                                                        "description": "UID contains the uid of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "string"
                                                                    },
                                                                    "usages": {
                                                                        "description": "Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "signing",
                                                                                "digital signature",
                                                                                "content commitment",
                                                                                "key encipherment",
                                                                                "key agreement",
                                                                                "data encipherment",
                                                                                "cert sign",
                                                                                "crl sign",
                                                                                "encipher only",
                                                                                "decipher only",
                                                                                "any",
                                                                                "server auth",
                                                                                "client auth",
                                                                                "code signing",
                                                                                "email protection",
                                                                                "s/mime",
                                                                                "ipsec end system",
                                                                                "ipsec tunnel",
                                                                                "ipsec user",
                                                                                "timestamping",
                                                                                "ocsp signing",
                                                                                "microsoft sgc",
                                                                                "netscape sgc"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "username": {
                                                                        "description": "Username contains the name of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the CertificateRequest. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "ca": {
                                                                        "description": "The PEM encoded x509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "certificate": {
                                                                        "description": "The PEM encoded x509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "CertificateRequestCondition contains condition information for a CertificateRequest.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`, `InvalidRequest`, `Approved`, `Denied`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "failureTime": {
                                                                        "description": "FailureTime stores the time that this CertificateRequest failed. This is used to influence garbage collection and back-off.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Approved",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Approved\")].status"
                                                    },
                                                    {
                                                        "name": "Denied",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Denied\")].status"
                                                    },
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Requestor",
                                                        "type": "string",
                                                        "jsonPath": ".spec.username"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1",
                                                "served": true,
                                                "storage": true,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A CertificateRequest is used to request a signed certificate from one of the configured issuers. \n All fields within the CertificateRequest's `spec` are immutable after creation. A CertificateRequest will either succeed or fail, as denoted by its `status.state` field. \n A CertificateRequest is a one-shot resource, meaning it represents a single point in time request for a certificate and cannot be re-used.",
                                                        "type": "object",
                                                        "required": [
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the CertificateRequest resource.",
                                                                "type": "object",
                                                                "required": [
                                                                    "issuerRef",
                                                                    "request"
                                                                ],
                                                                "properties": {
                                                                    "duration": {
                                                                        "description": "The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types.",
                                                                        "type": "string"
                                                                    },
                                                                    "extra": {
                                                                        "description": "Extra contains extra attributes of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "object",
                                                                        "additionalProperties": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "groups": {
                                                                        "description": "Groups contains group membership of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "x-kubernetes-list-type": "atomic"
                                                                    },
                                                                    "isCA": {
                                                                        "description": "IsCA will request to mark the certificate as valid for certificate signing when submitting to the issuer. This will automatically add the `cert sign` usage to the list of `usages`.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef is a reference to the issuer for this CertificateRequest.  If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the CertificateRequest will be used.  If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times. The group field refers to the API group of the issuer which defaults to `cert-manager.io` if empty.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "request": {
                                                                        "description": "The PEM-encoded x509 certificate signing request to be submitted to the CA for signing.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "uid": {
                                                                        "description": "UID contains the uid of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "string"
                                                                    },
                                                                    "usages": {
                                                                        "description": "Usages is the set of x509 usages that are requested for the certificate. If usages are set they SHOULD be encoded inside the CSR spec Defaults to `digital signature` and `key encipherment` if not specified.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "signing",
                                                                                "digital signature",
                                                                                "content commitment",
                                                                                "key encipherment",
                                                                                "key agreement",
                                                                                "data encipherment",
                                                                                "cert sign",
                                                                                "crl sign",
                                                                                "encipher only",
                                                                                "decipher only",
                                                                                "any",
                                                                                "server auth",
                                                                                "client auth",
                                                                                "code signing",
                                                                                "email protection",
                                                                                "s/mime",
                                                                                "ipsec end system",
                                                                                "ipsec tunnel",
                                                                                "ipsec user",
                                                                                "timestamping",
                                                                                "ocsp signing",
                                                                                "microsoft sgc",
                                                                                "netscape sgc"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "username": {
                                                                        "description": "Username contains the name of the user that created the CertificateRequest. Populated by the cert-manager webhook on creation and immutable.",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the CertificateRequest. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "ca": {
                                                                        "description": "The PEM encoded x509 certificate of the signer, also known as the CA (Certificate Authority). This is set on a best-effort basis by different issuers. If not set, the CA is assumed to be unknown/not available.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "certificate": {
                                                                        "description": "The PEM encoded x509 certificate resulting from the certificate signing request. If not set, the CertificateRequest has either not been completed or has failed. More information on failure can be found by checking the `conditions` field.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready` and `InvalidRequest`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "CertificateRequestCondition contains condition information for a CertificateRequest.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`, `InvalidRequest`, `Approved`, `Denied`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "failureTime": {
                                                                        "description": "FailureTime stores the time that this CertificateRequest failed. This is used to influence garbage collection and back-off.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Approved",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Approved\")].status"
                                                    },
                                                    {
                                                        "name": "Denied",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Denied\")].status"
                                                    },
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Requestor",
                                                        "type": "string",
                                                        "jsonPath": ".spec.username"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            }
                                        ],
                                        "conversion": {
                                            "strategy": "Webhook",
                                            "webhook": {
                                                "clientConfig": {
                                                    "service": {
                                                        "namespace": "cert-manager",
                                                        "name": "cert-manager-webhook",
                                                        "path": "/convert",
                                                        "port": 443
                                                    },
                                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQU1WaXFjcXFEVVJlcTBIYjdGSXBIREl3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFd09ESXpNVE15TXpFMApXaGNOTWpJd09ESXpNVE15TXpFMFdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJJY2ZEL3ovc1Yvd09SM1V1MzNxR3NUYk9SS3gKYjVQdXJiVXM5dy91d3RibVJwVlJuMVp4dVFXSGsrRUltbVNmdEQzbTE0ZnZtLzJSN1F2bXEycHI1UURSRHRrcgo3Uy95ZTdHbXFhaGZqQnpqbEZSV0E5SU9sYTVSWDZBd2JPRVpLNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHSUJoQ3paSyswanljRU5GbFpVZGh1K0tlN0sKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFERkxBcURPQnpRYkp5WjYzWlFVQktJcGh5Mm9qbnVpQVA2NFgreAo4aElMNTMvOFBJbDI5MDg0REVqSTU4cUp1NUlDTVFDNGRmVm1XOXN3bGtVVTRlU0JKdVgyZ1k4WjFNR1VweEhCCmM4cmNLZEFkVHkrbUVCVnpqQUxqc0Z4dUxTSmZkS2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                                                },
                                                "conversionReviewVersions": [
                                                    "v1",
                                                    "v1beta1"
                                                ]
                                            }
                                        }
                                    },
                                    "status": {
                                        "conditions": [
                                            {
                                                "type": "NamesAccepted",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:44Z",
                                                "reason": "NoConflicts",
                                                "message": "no conflicts found"
                                            },
                                            {
                                                "type": "Established",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:44Z",
                                                "reason": "InitialNamesAccepted",
                                                "message": "the initial names have been accepted"
                                            }
                                        ],
                                        "acceptedNames": {
                                            "plural": "certificaterequests",
                                            "singular": "certificaterequest",
                                            "shortNames": [
                                                "cr",
                                                "crs"
                                            ],
                                            "kind": "CertificateRequest",
                                            "listKind": "CertificateRequestList",
                                            "categories": [
                                                "cert-manager"
                                            ]
                                        },
                                        "storedVersions": [
                                            "v1"
                                        ]
                                    }
                                },
                                "name": "certificaterequests.cert-manager.io",
                                "id": "certificaterequests.cert-manager.io",
                                "meta": {
                                    "name": "certificaterequests.cert-manager.io",
                                    "uid": "0bfaed0f-e973-4be4-bb1a-f656f68573a9",
                                    "resourceVersion": "1311",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "certificaterequests.cert-manager.io",
                                        "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::CustomResourceDefinition::certificaterequests.cert-manager.io",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "certificaterequests.cert-manager.io"
                            },
                            {
                                "groupType": "::CustomResourceDefinition",
                                "group": "",
                                "type": "CustomResourceDefinition",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "certificates.cert-manager.io",
                                        "uid": "322cbe82-9ae0-43dc-9762-5ac2f386dd71",
                                        "resourceVersion": "1312",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "certificates.cert-manager.io",
                                            "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "group": "cert-manager.io",
                                        "names": {
                                            "plural": "certificates",
                                            "singular": "certificate",
                                            "shortNames": [
                                                "cert",
                                                "certs"
                                            ],
                                            "kind": "Certificate",
                                            "listKind": "CertificateList",
                                            "categories": [
                                                "cert-manager"
                                            ]
                                        },
                                        "scope": "Namespaced",
                                        "versions": [
                                            {
                                                "name": "v1alpha2",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A Certificate resource should be created to ensure an up to date and signed x509 certificate is stored in the Kubernetes Secret resource named in `spec.secretName`. \n The stored certificate will be renewed before it expires (as configured by `spec.renewBefore`).",
                                                        "type": "object",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the Certificate resource.",
                                                                "type": "object",
                                                                "required": [
                                                                    "issuerRef",
                                                                    "secretName"
                                                                ],
                                                                "properties": {
                                                                    "commonName": {
                                                                        "description": "CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4",
                                                                        "type": "string"
                                                                    },
                                                                    "dnsNames": {
                                                                        "description": "DNSNames is a list of DNS subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "duration": {
                                                                        "description": "The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types. If overridden and `renewBefore` is greater than the actual certificate duration, the certificate will be automatically renewed 2/3rds of the way through the certificate's duration.",
                                                                        "type": "string"
                                                                    },
                                                                    "emailSANs": {
                                                                        "description": "EmailSANs is a list of email subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "encodeUsagesInRequest": {
                                                                        "description": "EncodeUsagesInRequest controls whether key usages should be present in the CertificateRequest",
                                                                        "type": "boolean"
                                                                    },
                                                                    "ipAddresses": {
                                                                        "description": "IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "isCA": {
                                                                        "description": "IsCA will mark this Certificate as valid for certificate signing. This will automatically add the `cert sign` usage to the list of `usages`.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef is a reference to the issuer for this certificate. If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the Certificate will be used. If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "keyAlgorithm": {
                                                                        "description": "KeyAlgorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either `rsa` or `ecdsa` If `keyAlgorithm` is specified and `keySize` is not provided, key size of 256 will be used for `ecdsa` key algorithm and key size of 2048 will be used for `rsa` key algorithm.",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "rsa",
                                                                            "ecdsa"
                                                                        ]
                                                                    },
                                                                    "keyEncoding": {
                                                                        "description": "KeyEncoding is the private key cryptography standards (PKCS) for this certificate's private key to be encoded in. If provided, allowed values are `pkcs1` and `pkcs8` standing for PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified, then `pkcs1` will be used by default.",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "pkcs1",
                                                                            "pkcs8"
                                                                        ]
                                                                    },
                                                                    "keySize": {
                                                                        "description": "KeySize is the key bit size of the corresponding private key for this certificate. If `keyAlgorithm` is set to `rsa`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `keyAlgorithm` is set to `ecdsa`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. No other values are allowed.",
                                                                        "type": "integer"
                                                                    },
                                                                    "keystores": {
                                                                        "description": "Keystores configures additional keystore output formats stored in the `secretName` Secret resource.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "jks": {
                                                                                "description": "JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "create",
                                                                                    "passwordSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "create": {
                                                                                        "description": "Create enables JKS keystore creation for the Certificate. If true, a file named `keystore.jks` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "passwordSecretRef": {
                                                                                        "description": "PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "pkcs12": {
                                                                                "description": "PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "create",
                                                                                    "passwordSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "create": {
                                                                                        "description": "Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "passwordSecretRef": {
                                                                                        "description": "PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "organization": {
                                                                        "description": "Organization is a list of organizations to be used on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "privateKey": {
                                                                        "description": "Options to control private keys used for the Certificate.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "rotationPolicy": {
                                                                                "description": "RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. If set to Never, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to Always, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is 'Never' for backward compatibility.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "renewBefore": {
                                                                        "description": "The amount of time before the currently issued certificate's `notAfter` time that cert-manager will begin to attempt to renew the certificate. If this value is greater than the total duration of the certificate (i.e. notAfter - notBefore), it will be automatically renewed 2/3rds of the way through the certificate's duration.",
                                                                        "type": "string"
                                                                    },
                                                                    "revisionHistoryLimit": {
                                                                        "description": "revisionHistoryLimit is the maximum number of CertificateRequest revisions that are maintained in the Certificate's history. Each revision represents a single `CertificateRequest` created by this Certificate, either when it was created, renewed, or Spec was changed. Revisions will be removed by oldest first if the number of revisions exceeds this number. If set, revisionHistoryLimit must be a value of `1` or greater. If unset (`nil`), revisions will not be garbage collected. Default value is `nil`.",
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "SecretName is the name of the secret resource that will be automatically created and managed by this Certificate resource. It will be populated with a private key and certificate, signed by the denoted issuer.",
                                                                        "type": "string"
                                                                    },
                                                                    "subject": {
                                                                        "description": "Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "countries": {
                                                                                "description": "Countries to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "localities": {
                                                                                "description": "Cities to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "organizationalUnits": {
                                                                                "description": "Organizational Units to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "postalCodes": {
                                                                                "description": "Postal codes to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "provinces": {
                                                                                "description": "State/Provinces to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "serialNumber": {
                                                                                "description": "Serial number to be used on the Certificate.",
                                                                                "type": "string"
                                                                            },
                                                                            "streetAddresses": {
                                                                                "description": "Street addresses to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "uriSANs": {
                                                                        "description": "URISANs is a list of URI subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "usages": {
                                                                        "description": "Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "signing",
                                                                                "digital signature",
                                                                                "content commitment",
                                                                                "key encipherment",
                                                                                "key agreement",
                                                                                "data encipherment",
                                                                                "cert sign",
                                                                                "crl sign",
                                                                                "encipher only",
                                                                                "decipher only",
                                                                                "any",
                                                                                "server auth",
                                                                                "client auth",
                                                                                "code signing",
                                                                                "email protection",
                                                                                "s/mime",
                                                                                "ipsec end system",
                                                                                "ipsec tunnel",
                                                                                "ipsec user",
                                                                                "timestamping",
                                                                                "ocsp signing",
                                                                                "microsoft sgc",
                                                                                "netscape sgc"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the Certificate. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of certificates. Known condition types are `Ready` and `Issuing`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "CertificateCondition contains condition information for an Certificate.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Certificate.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`, `Issuing`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "lastFailureTime": {
                                                                        "description": "LastFailureTime is the time as recorded by the Certificate controller of the most recent failure to complete a CertificateRequest for this Certificate resource. If set, cert-manager will not re-request another Certificate until 1 hour has elapsed from this time.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "nextPrivateKeySecretName": {
                                                                        "description": "The name of the Secret resource containing the private key to be used for the next certificate iteration. The keymanager controller will automatically set this field if the `Issuing` condition is set to `True`. It will automatically unset this field when the Issuing condition is not set or False.",
                                                                        "type": "string"
                                                                    },
                                                                    "notAfter": {
                                                                        "description": "The expiration time of the certificate stored in the secret named by this resource in `spec.secretName`.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "notBefore": {
                                                                        "description": "The time after which the certificate stored in the secret named by this resource in spec.secretName is valid.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "renewalTime": {
                                                                        "description": "RenewalTime is the time at which the certificate will be next renewed. If not set, no upcoming renewal is scheduled.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "revision": {
                                                                        "description": "The current 'revision' of the certificate as issued. \n When a CertificateRequest resource is created, it will have the `cert-manager.io/certificate-revision` set to one greater than the current value of this field. \n Upon issuance, this field will be set to the value of the annotation on the CertificateRequest resource used to issue the certificate. \n Persisting the value on the CertificateRequest resource allows the certificates controller to know whether a request is part of an old issuance or if it is part of the ongoing revision's issuance by checking if the revision value in the annotation is greater than this field.",
                                                                        "type": "integer"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Secret",
                                                        "type": "string",
                                                        "jsonPath": ".spec.secretName"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1alpha3",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A Certificate resource should be created to ensure an up to date and signed x509 certificate is stored in the Kubernetes Secret resource named in `spec.secretName`. \n The stored certificate will be renewed before it expires (as configured by `spec.renewBefore`).",
                                                        "type": "object",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the Certificate resource.",
                                                                "type": "object",
                                                                "required": [
                                                                    "issuerRef",
                                                                    "secretName"
                                                                ],
                                                                "properties": {
                                                                    "commonName": {
                                                                        "description": "CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4",
                                                                        "type": "string"
                                                                    },
                                                                    "dnsNames": {
                                                                        "description": "DNSNames is a list of DNS subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "duration": {
                                                                        "description": "The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types. If overridden and `renewBefore` is greater than the actual certificate duration, the certificate will be automatically renewed 2/3rds of the way through the certificate's duration.",
                                                                        "type": "string"
                                                                    },
                                                                    "emailSANs": {
                                                                        "description": "EmailSANs is a list of email subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "encodeUsagesInRequest": {
                                                                        "description": "EncodeUsagesInRequest controls whether key usages should be present in the CertificateRequest",
                                                                        "type": "boolean"
                                                                    },
                                                                    "ipAddresses": {
                                                                        "description": "IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "isCA": {
                                                                        "description": "IsCA will mark this Certificate as valid for certificate signing. This will automatically add the `cert sign` usage to the list of `usages`.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef is a reference to the issuer for this certificate. If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the Certificate will be used. If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "keyAlgorithm": {
                                                                        "description": "KeyAlgorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either `rsa` or `ecdsa` If `keyAlgorithm` is specified and `keySize` is not provided, key size of 256 will be used for `ecdsa` key algorithm and key size of 2048 will be used for `rsa` key algorithm.",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "rsa",
                                                                            "ecdsa"
                                                                        ]
                                                                    },
                                                                    "keyEncoding": {
                                                                        "description": "KeyEncoding is the private key cryptography standards (PKCS) for this certificate's private key to be encoded in. If provided, allowed values are `pkcs1` and `pkcs8` standing for PKCS#1 and PKCS#8, respectively. If KeyEncoding is not specified, then `pkcs1` will be used by default.",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "pkcs1",
                                                                            "pkcs8"
                                                                        ]
                                                                    },
                                                                    "keySize": {
                                                                        "description": "KeySize is the key bit size of the corresponding private key for this certificate. If `keyAlgorithm` is set to `rsa`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `keyAlgorithm` is set to `ecdsa`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. No other values are allowed.",
                                                                        "type": "integer"
                                                                    },
                                                                    "keystores": {
                                                                        "description": "Keystores configures additional keystore output formats stored in the `secretName` Secret resource.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "jks": {
                                                                                "description": "JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "create",
                                                                                    "passwordSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "create": {
                                                                                        "description": "Create enables JKS keystore creation for the Certificate. If true, a file named `keystore.jks` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance. A file named `truststore.jks` will also be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef` containing the issuing Certificate Authority.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "passwordSecretRef": {
                                                                                        "description": "PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "pkcs12": {
                                                                                "description": "PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "create",
                                                                                    "passwordSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "create": {
                                                                                        "description": "Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance. A file named `truststore.p12` will also be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef` containing the issuing Certificate Authority.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "passwordSecretRef": {
                                                                                        "description": "PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "privateKey": {
                                                                        "description": "Options to control private keys used for the Certificate.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "rotationPolicy": {
                                                                                "description": "RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. If set to Never, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to Always, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is 'Never' for backward compatibility.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "renewBefore": {
                                                                        "description": "The amount of time before the currently issued certificate's `notAfter` time that cert-manager will begin to attempt to renew the certificate. If this value is greater than the total duration of the certificate (i.e. notAfter - notBefore), it will be automatically renewed 2/3rds of the way through the certificate's duration.",
                                                                        "type": "string"
                                                                    },
                                                                    "revisionHistoryLimit": {
                                                                        "description": "revisionHistoryLimit is the maximum number of CertificateRequest revisions that are maintained in the Certificate's history. Each revision represents a single `CertificateRequest` created by this Certificate, either when it was created, renewed, or Spec was changed. Revisions will be removed by oldest first if the number of revisions exceeds this number. If set, revisionHistoryLimit must be a value of `1` or greater. If unset (`nil`), revisions will not be garbage collected. Default value is `nil`.",
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "SecretName is the name of the secret resource that will be automatically created and managed by this Certificate resource. It will be populated with a private key and certificate, signed by the denoted issuer.",
                                                                        "type": "string"
                                                                    },
                                                                    "subject": {
                                                                        "description": "Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "countries": {
                                                                                "description": "Countries to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "localities": {
                                                                                "description": "Cities to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "organizationalUnits": {
                                                                                "description": "Organizational Units to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "organizations": {
                                                                                "description": "Organizations to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "postalCodes": {
                                                                                "description": "Postal codes to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "provinces": {
                                                                                "description": "State/Provinces to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "serialNumber": {
                                                                                "description": "Serial number to be used on the Certificate.",
                                                                                "type": "string"
                                                                            },
                                                                            "streetAddresses": {
                                                                                "description": "Street addresses to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "uriSANs": {
                                                                        "description": "URISANs is a list of URI subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "usages": {
                                                                        "description": "Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "signing",
                                                                                "digital signature",
                                                                                "content commitment",
                                                                                "key encipherment",
                                                                                "key agreement",
                                                                                "data encipherment",
                                                                                "cert sign",
                                                                                "crl sign",
                                                                                "encipher only",
                                                                                "decipher only",
                                                                                "any",
                                                                                "server auth",
                                                                                "client auth",
                                                                                "code signing",
                                                                                "email protection",
                                                                                "s/mime",
                                                                                "ipsec end system",
                                                                                "ipsec tunnel",
                                                                                "ipsec user",
                                                                                "timestamping",
                                                                                "ocsp signing",
                                                                                "microsoft sgc",
                                                                                "netscape sgc"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the Certificate. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of certificates. Known condition types are `Ready` and `Issuing`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "CertificateCondition contains condition information for an Certificate.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Certificate.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`, `Issuing`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "lastFailureTime": {
                                                                        "description": "LastFailureTime is the time as recorded by the Certificate controller of the most recent failure to complete a CertificateRequest for this Certificate resource. If set, cert-manager will not re-request another Certificate until 1 hour has elapsed from this time.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "nextPrivateKeySecretName": {
                                                                        "description": "The name of the Secret resource containing the private key to be used for the next certificate iteration. The keymanager controller will automatically set this field if the `Issuing` condition is set to `True`. It will automatically unset this field when the Issuing condition is not set or False.",
                                                                        "type": "string"
                                                                    },
                                                                    "notAfter": {
                                                                        "description": "The expiration time of the certificate stored in the secret named by this resource in `spec.secretName`.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "notBefore": {
                                                                        "description": "The time after which the certificate stored in the secret named by this resource in spec.secretName is valid.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "renewalTime": {
                                                                        "description": "RenewalTime is the time at which the certificate will be next renewed. If not set, no upcoming renewal is scheduled.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "revision": {
                                                                        "description": "The current 'revision' of the certificate as issued. \n When a CertificateRequest resource is created, it will have the `cert-manager.io/certificate-revision` set to one greater than the current value of this field. \n Upon issuance, this field will be set to the value of the annotation on the CertificateRequest resource used to issue the certificate. \n Persisting the value on the CertificateRequest resource allows the certificates controller to know whether a request is part of an old issuance or if it is part of the ongoing revision's issuance by checking if the revision value in the annotation is greater than this field.",
                                                                        "type": "integer"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Secret",
                                                        "type": "string",
                                                        "jsonPath": ".spec.secretName"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1beta1",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A Certificate resource should be created to ensure an up to date and signed x509 certificate is stored in the Kubernetes Secret resource named in `spec.secretName`. \n The stored certificate will be renewed before it expires (as configured by `spec.renewBefore`).",
                                                        "type": "object",
                                                        "required": [
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the Certificate resource.",
                                                                "type": "object",
                                                                "required": [
                                                                    "issuerRef",
                                                                    "secretName"
                                                                ],
                                                                "properties": {
                                                                    "commonName": {
                                                                        "description": "CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4",
                                                                        "type": "string"
                                                                    },
                                                                    "dnsNames": {
                                                                        "description": "DNSNames is a list of DNS subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "duration": {
                                                                        "description": "The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types. If overridden and `renewBefore` is greater than the actual certificate duration, the certificate will be automatically renewed 2/3rds of the way through the certificate's duration.",
                                                                        "type": "string"
                                                                    },
                                                                    "emailSANs": {
                                                                        "description": "EmailSANs is a list of email subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "encodeUsagesInRequest": {
                                                                        "description": "EncodeUsagesInRequest controls whether key usages should be present in the CertificateRequest",
                                                                        "type": "boolean"
                                                                    },
                                                                    "ipAddresses": {
                                                                        "description": "IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "isCA": {
                                                                        "description": "IsCA will mark this Certificate as valid for certificate signing. This will automatically add the `cert sign` usage to the list of `usages`.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef is a reference to the issuer for this certificate. If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the Certificate will be used. If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "keystores": {
                                                                        "description": "Keystores configures additional keystore output formats stored in the `secretName` Secret resource.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "jks": {
                                                                                "description": "JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "create",
                                                                                    "passwordSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "create": {
                                                                                        "description": "Create enables JKS keystore creation for the Certificate. If true, a file named `keystore.jks` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "passwordSecretRef": {
                                                                                        "description": "PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "pkcs12": {
                                                                                "description": "PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "create",
                                                                                    "passwordSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "create": {
                                                                                        "description": "Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "passwordSecretRef": {
                                                                                        "description": "PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "privateKey": {
                                                                        "description": "Options to control private keys used for the Certificate.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "algorithm": {
                                                                                "description": "Algorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either `RSA` or `ECDSA` If `algorithm` is specified and `size` is not provided, key size of 256 will be used for `ECDSA` key algorithm and key size of 2048 will be used for `RSA` key algorithm.",
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "RSA",
                                                                                    "ECDSA"
                                                                                ]
                                                                            },
                                                                            "encoding": {
                                                                                "description": "The private key cryptography standards (PKCS) encoding for this certificate's private key to be encoded in. If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1 and PKCS#8, respectively. Defaults to `PKCS1` if not specified.",
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "PKCS1",
                                                                                    "PKCS8"
                                                                                ]
                                                                            },
                                                                            "rotationPolicy": {
                                                                                "description": "RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. If set to Never, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to Always, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is 'Never' for backward compatibility.",
                                                                                "type": "string"
                                                                            },
                                                                            "size": {
                                                                                "description": "Size is the key bit size of the corresponding private key for this certificate. If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. No other values are allowed.",
                                                                                "type": "integer"
                                                                            }
                                                                        }
                                                                    },
                                                                    "renewBefore": {
                                                                        "description": "The amount of time before the currently issued certificate's `notAfter` time that cert-manager will begin to attempt to renew the certificate. If this value is greater than the total duration of the certificate (i.e. notAfter - notBefore), it will be automatically renewed 2/3rds of the way through the certificate's duration.",
                                                                        "type": "string"
                                                                    },
                                                                    "revisionHistoryLimit": {
                                                                        "description": "revisionHistoryLimit is the maximum number of CertificateRequest revisions that are maintained in the Certificate's history. Each revision represents a single `CertificateRequest` created by this Certificate, either when it was created, renewed, or Spec was changed. Revisions will be removed by oldest first if the number of revisions exceeds this number. If set, revisionHistoryLimit must be a value of `1` or greater. If unset (`nil`), revisions will not be garbage collected. Default value is `nil`.",
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "SecretName is the name of the secret resource that will be automatically created and managed by this Certificate resource. It will be populated with a private key and certificate, signed by the denoted issuer.",
                                                                        "type": "string"
                                                                    },
                                                                    "subject": {
                                                                        "description": "Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "countries": {
                                                                                "description": "Countries to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "localities": {
                                                                                "description": "Cities to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "organizationalUnits": {
                                                                                "description": "Organizational Units to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "organizations": {
                                                                                "description": "Organizations to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "postalCodes": {
                                                                                "description": "Postal codes to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "provinces": {
                                                                                "description": "State/Provinces to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "serialNumber": {
                                                                                "description": "Serial number to be used on the Certificate.",
                                                                                "type": "string"
                                                                            },
                                                                            "streetAddresses": {
                                                                                "description": "Street addresses to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "uriSANs": {
                                                                        "description": "URISANs is a list of URI subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "usages": {
                                                                        "description": "Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "signing",
                                                                                "digital signature",
                                                                                "content commitment",
                                                                                "key encipherment",
                                                                                "key agreement",
                                                                                "data encipherment",
                                                                                "cert sign",
                                                                                "crl sign",
                                                                                "encipher only",
                                                                                "decipher only",
                                                                                "any",
                                                                                "server auth",
                                                                                "client auth",
                                                                                "code signing",
                                                                                "email protection",
                                                                                "s/mime",
                                                                                "ipsec end system",
                                                                                "ipsec tunnel",
                                                                                "ipsec user",
                                                                                "timestamping",
                                                                                "ocsp signing",
                                                                                "microsoft sgc",
                                                                                "netscape sgc"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the Certificate. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of certificates. Known condition types are `Ready` and `Issuing`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "CertificateCondition contains condition information for an Certificate.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Certificate.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`, `Issuing`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "lastFailureTime": {
                                                                        "description": "LastFailureTime is the time as recorded by the Certificate controller of the most recent failure to complete a CertificateRequest for this Certificate resource. If set, cert-manager will not re-request another Certificate until 1 hour has elapsed from this time.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "nextPrivateKeySecretName": {
                                                                        "description": "The name of the Secret resource containing the private key to be used for the next certificate iteration. The keymanager controller will automatically set this field if the `Issuing` condition is set to `True`. It will automatically unset this field when the Issuing condition is not set or False.",
                                                                        "type": "string"
                                                                    },
                                                                    "notAfter": {
                                                                        "description": "The expiration time of the certificate stored in the secret named by this resource in `spec.secretName`.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "notBefore": {
                                                                        "description": "The time after which the certificate stored in the secret named by this resource in spec.secretName is valid.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "renewalTime": {
                                                                        "description": "RenewalTime is the time at which the certificate will be next renewed. If not set, no upcoming renewal is scheduled.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "revision": {
                                                                        "description": "The current 'revision' of the certificate as issued. \n When a CertificateRequest resource is created, it will have the `cert-manager.io/certificate-revision` set to one greater than the current value of this field. \n Upon issuance, this field will be set to the value of the annotation on the CertificateRequest resource used to issue the certificate. \n Persisting the value on the CertificateRequest resource allows the certificates controller to know whether a request is part of an old issuance or if it is part of the ongoing revision's issuance by checking if the revision value in the annotation is greater than this field.",
                                                                        "type": "integer"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Secret",
                                                        "type": "string",
                                                        "jsonPath": ".spec.secretName"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1",
                                                "served": true,
                                                "storage": true,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A Certificate resource should be created to ensure an up to date and signed x509 certificate is stored in the Kubernetes Secret resource named in `spec.secretName`. \n The stored certificate will be renewed before it expires (as configured by `spec.renewBefore`).",
                                                        "type": "object",
                                                        "required": [
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the Certificate resource.",
                                                                "type": "object",
                                                                "required": [
                                                                    "issuerRef",
                                                                    "secretName"
                                                                ],
                                                                "properties": {
                                                                    "commonName": {
                                                                        "description": "CommonName is a common name to be used on the Certificate. The CommonName should have a length of 64 characters or fewer to avoid generating invalid CSRs. This value is ignored by TLS clients when any subject alt name is set. This is x509 behaviour: https://tools.ietf.org/html/rfc6125#section-6.4.4",
                                                                        "type": "string"
                                                                    },
                                                                    "dnsNames": {
                                                                        "description": "DNSNames is a list of DNS subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "duration": {
                                                                        "description": "The requested 'duration' (i.e. lifetime) of the Certificate. This option may be ignored/overridden by some issuer types. If unset this defaults to 90 days. If overridden and `renewBefore` is greater than the actual certificate duration, the certificate will be automatically renewed 2/3rds of the way through the certificate's duration.",
                                                                        "type": "string"
                                                                    },
                                                                    "emailAddresses": {
                                                                        "description": "EmailAddresses is a list of email subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "encodeUsagesInRequest": {
                                                                        "description": "EncodeUsagesInRequest controls whether key usages should be present in the CertificateRequest",
                                                                        "type": "boolean"
                                                                    },
                                                                    "ipAddresses": {
                                                                        "description": "IPAddresses is a list of IP address subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "isCA": {
                                                                        "description": "IsCA will mark this Certificate as valid for certificate signing. This will automatically add the `cert sign` usage to the list of `usages`.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef is a reference to the issuer for this certificate. If the `kind` field is not set, or set to `Issuer`, an Issuer resource with the given name in the same namespace as the Certificate will be used. If the `kind` field is set to `ClusterIssuer`, a ClusterIssuer with the provided name will be used. The `name` field in this stanza is required at all times.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "keystores": {
                                                                        "description": "Keystores configures additional keystore output formats stored in the `secretName` Secret resource.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "jks": {
                                                                                "description": "JKS configures options for storing a JKS keystore in the `spec.secretName` Secret resource.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "create",
                                                                                    "passwordSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "create": {
                                                                                        "description": "Create enables JKS keystore creation for the Certificate. If true, a file named `keystore.jks` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance. A file named `truststore.jks` will also be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef` containing the issuing Certificate Authority",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "passwordSecretRef": {
                                                                                        "description": "PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the JKS keystore.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "pkcs12": {
                                                                                "description": "PKCS12 configures options for storing a PKCS12 keystore in the `spec.secretName` Secret resource.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "create",
                                                                                    "passwordSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "create": {
                                                                                        "description": "Create enables PKCS12 keystore creation for the Certificate. If true, a file named `keystore.p12` will be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef`. The keystore file will only be updated upon re-issuance. A file named `truststore.p12` will also be created in the target Secret resource, encrypted using the password stored in `passwordSecretRef` containing the issuing Certificate Authority",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "passwordSecretRef": {
                                                                                        "description": "PasswordSecretRef is a reference to a key in a Secret resource containing the password used to encrypt the PKCS12 keystore.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "privateKey": {
                                                                        "description": "Options to control private keys used for the Certificate.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "algorithm": {
                                                                                "description": "Algorithm is the private key algorithm of the corresponding private key for this certificate. If provided, allowed values are either `RSA` or `ECDSA` If `algorithm` is specified and `size` is not provided, key size of 256 will be used for `ECDSA` key algorithm and key size of 2048 will be used for `RSA` key algorithm.",
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "RSA",
                                                                                    "ECDSA"
                                                                                ]
                                                                            },
                                                                            "encoding": {
                                                                                "description": "The private key cryptography standards (PKCS) encoding for this certificate's private key to be encoded in. If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1 and PKCS#8, respectively. Defaults to `PKCS1` if not specified.",
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "PKCS1",
                                                                                    "PKCS8"
                                                                                ]
                                                                            },
                                                                            "rotationPolicy": {
                                                                                "description": "RotationPolicy controls how private keys should be regenerated when a re-issuance is being processed. If set to Never, a private key will only be generated if one does not already exist in the target `spec.secretName`. If one does exists but it does not have the correct algorithm or size, a warning will be raised to await user intervention. If set to Always, a private key matching the specified requirements will be generated whenever a re-issuance occurs. Default is 'Never' for backward compatibility.",
                                                                                "type": "string"
                                                                            },
                                                                            "size": {
                                                                                "description": "Size is the key bit size of the corresponding private key for this certificate. If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`, and will default to `2048` if not specified. If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`, and will default to `256` if not specified. No other values are allowed.",
                                                                                "type": "integer"
                                                                            }
                                                                        }
                                                                    },
                                                                    "renewBefore": {
                                                                        "description": "The amount of time before the currently issued certificate's `notAfter` time that cert-manager will begin to attempt to renew the certificate. If unset this defaults to 30 days. If this value is greater than the total duration of the certificate (i.e. notAfter - notBefore), it will be automatically renewed 2/3rds of the way through the certificate's duration.",
                                                                        "type": "string"
                                                                    },
                                                                    "revisionHistoryLimit": {
                                                                        "description": "revisionHistoryLimit is the maximum number of CertificateRequest revisions that are maintained in the Certificate's history. Each revision represents a single `CertificateRequest` created by this Certificate, either when it was created, renewed, or Spec was changed. Revisions will be removed by oldest first if the number of revisions exceeds this number. If set, revisionHistoryLimit must be a value of `1` or greater. If unset (`nil`), revisions will not be garbage collected. Default value is `nil`.",
                                                                        "type": "integer",
                                                                        "format": "int32"
                                                                    },
                                                                    "secretName": {
                                                                        "description": "SecretName is the name of the secret resource that will be automatically created and managed by this Certificate resource. It will be populated with a private key and certificate, signed by the denoted issuer.",
                                                                        "type": "string"
                                                                    },
                                                                    "subject": {
                                                                        "description": "Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "countries": {
                                                                                "description": "Countries to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "localities": {
                                                                                "description": "Cities to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "organizationalUnits": {
                                                                                "description": "Organizational Units to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "organizations": {
                                                                                "description": "Organizations to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "postalCodes": {
                                                                                "description": "Postal codes to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "provinces": {
                                                                                "description": "State/Provinces to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "serialNumber": {
                                                                                "description": "Serial number to be used on the Certificate.",
                                                                                "type": "string"
                                                                            },
                                                                            "streetAddresses": {
                                                                                "description": "Street addresses to be used on the Certificate.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "uris": {
                                                                        "description": "URIs is a list of URI subjectAltNames to be set on the Certificate.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "usages": {
                                                                        "description": "Usages is the set of x509 usages that are requested for the certificate. Defaults to `digital signature` and `key encipherment` if not specified.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "KeyUsage specifies valid usage contexts for keys. See: https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12 Valid KeyUsage values are as follows: \"signing\", \"digital signature\", \"content commitment\", \"key encipherment\", \"key agreement\", \"data encipherment\", \"cert sign\", \"crl sign\", \"encipher only\", \"decipher only\", \"any\", \"server auth\", \"client auth\", \"code signing\", \"email protection\", \"s/mime\", \"ipsec end system\", \"ipsec tunnel\", \"ipsec user\", \"timestamping\", \"ocsp signing\", \"microsoft sgc\", \"netscape sgc\"",
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "signing",
                                                                                "digital signature",
                                                                                "content commitment",
                                                                                "key encipherment",
                                                                                "key agreement",
                                                                                "data encipherment",
                                                                                "cert sign",
                                                                                "crl sign",
                                                                                "encipher only",
                                                                                "decipher only",
                                                                                "any",
                                                                                "server auth",
                                                                                "client auth",
                                                                                "code signing",
                                                                                "email protection",
                                                                                "s/mime",
                                                                                "ipsec end system",
                                                                                "ipsec tunnel",
                                                                                "ipsec user",
                                                                                "timestamping",
                                                                                "ocsp signing",
                                                                                "microsoft sgc",
                                                                                "netscape sgc"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the Certificate. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of certificates. Known condition types are `Ready` and `Issuing`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "CertificateCondition contains condition information for an Certificate.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Certificate.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`, `Issuing`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "lastFailureTime": {
                                                                        "description": "LastFailureTime is the time as recorded by the Certificate controller of the most recent failure to complete a CertificateRequest for this Certificate resource. If set, cert-manager will not re-request another Certificate until 1 hour has elapsed from this time.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "nextPrivateKeySecretName": {
                                                                        "description": "The name of the Secret resource containing the private key to be used for the next certificate iteration. The keymanager controller will automatically set this field if the `Issuing` condition is set to `True`. It will automatically unset this field when the Issuing condition is not set or False.",
                                                                        "type": "string"
                                                                    },
                                                                    "notAfter": {
                                                                        "description": "The expiration time of the certificate stored in the secret named by this resource in `spec.secretName`.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "notBefore": {
                                                                        "description": "The time after which the certificate stored in the secret named by this resource in spec.secretName is valid.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "renewalTime": {
                                                                        "description": "RenewalTime is the time at which the certificate will be next renewed. If not set, no upcoming renewal is scheduled.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "revision": {
                                                                        "description": "The current 'revision' of the certificate as issued. \n When a CertificateRequest resource is created, it will have the `cert-manager.io/certificate-revision` set to one greater than the current value of this field. \n Upon issuance, this field will be set to the value of the annotation on the CertificateRequest resource used to issue the certificate. \n Persisting the value on the CertificateRequest resource allows the certificates controller to know whether a request is part of an old issuance or if it is part of the ongoing revision's issuance by checking if the revision value in the annotation is greater than this field.",
                                                                        "type": "integer"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Secret",
                                                        "type": "string",
                                                        "jsonPath": ".spec.secretName"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            }
                                        ],
                                        "conversion": {
                                            "strategy": "Webhook",
                                            "webhook": {
                                                "clientConfig": {
                                                    "service": {
                                                        "namespace": "cert-manager",
                                                        "name": "cert-manager-webhook",
                                                        "path": "/convert",
                                                        "port": 443
                                                    },
                                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQU1WaXFjcXFEVVJlcTBIYjdGSXBIREl3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFd09ESXpNVE15TXpFMApXaGNOTWpJd09ESXpNVE15TXpFMFdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJJY2ZEL3ovc1Yvd09SM1V1MzNxR3NUYk9SS3gKYjVQdXJiVXM5dy91d3RibVJwVlJuMVp4dVFXSGsrRUltbVNmdEQzbTE0ZnZtLzJSN1F2bXEycHI1UURSRHRrcgo3Uy95ZTdHbXFhaGZqQnpqbEZSV0E5SU9sYTVSWDZBd2JPRVpLNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHSUJoQ3paSyswanljRU5GbFpVZGh1K0tlN0sKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFERkxBcURPQnpRYkp5WjYzWlFVQktJcGh5Mm9qbnVpQVA2NFgreAo4aElMNTMvOFBJbDI5MDg0REVqSTU4cUp1NUlDTVFDNGRmVm1XOXN3bGtVVTRlU0JKdVgyZ1k4WjFNR1VweEhCCmM4cmNLZEFkVHkrbUVCVnpqQUxqc0Z4dUxTSmZkS2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                                                },
                                                "conversionReviewVersions": [
                                                    "v1",
                                                    "v1beta1"
                                                ]
                                            }
                                        }
                                    },
                                    "status": {
                                        "conditions": [
                                            {
                                                "type": "NamesAccepted",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:44Z",
                                                "reason": "NoConflicts",
                                                "message": "no conflicts found"
                                            },
                                            {
                                                "type": "Established",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:44Z",
                                                "reason": "InitialNamesAccepted",
                                                "message": "the initial names have been accepted"
                                            }
                                        ],
                                        "acceptedNames": {
                                            "plural": "certificates",
                                            "singular": "certificate",
                                            "shortNames": [
                                                "cert",
                                                "certs"
                                            ],
                                            "kind": "Certificate",
                                            "listKind": "CertificateList",
                                            "categories": [
                                                "cert-manager"
                                            ]
                                        },
                                        "storedVersions": [
                                            "v1"
                                        ]
                                    }
                                },
                                "name": "certificates.cert-manager.io",
                                "id": "certificates.cert-manager.io",
                                "meta": {
                                    "name": "certificates.cert-manager.io",
                                    "uid": "322cbe82-9ae0-43dc-9762-5ac2f386dd71",
                                    "resourceVersion": "1312",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "certificates.cert-manager.io",
                                        "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::CustomResourceDefinition::certificates.cert-manager.io",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "certificates.cert-manager.io"
                            },
                            {
                                "groupType": "::CustomResourceDefinition",
                                "group": "",
                                "type": "CustomResourceDefinition",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "challenges.acme.cert-manager.io",
                                        "uid": "2b20d0b5-0942-44d2-9034-28021b389ff5",
                                        "resourceVersion": "1304",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "challenges.acme.cert-manager.io",
                                            "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "group": "acme.cert-manager.io",
                                        "names": {
                                            "plural": "challenges",
                                            "singular": "challenge",
                                            "kind": "Challenge",
                                            "listKind": "ChallengeList",
                                            "categories": [
                                                "cert-manager",
                                                "cert-manager-acme"
                                            ]
                                        },
                                        "scope": "Namespaced",
                                        "versions": [
                                            {
                                                "name": "v1alpha2",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "Challenge is a type to represent a Challenge request with an ACME server",
                                                        "type": "object",
                                                        "required": [
                                                            "metadata"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "type": "object",
                                                                "required": [
                                                                    "authzURL",
                                                                    "dnsName",
                                                                    "issuerRef",
                                                                    "key",
                                                                    "solver",
                                                                    "token",
                                                                    "type",
                                                                    "url"
                                                                ],
                                                                "properties": {
                                                                    "authzURL": {
                                                                        "description": "AuthzURL is the URL to the ACME Authorization resource that this challenge is a part of.",
                                                                        "type": "string"
                                                                    },
                                                                    "dnsName": {
                                                                        "description": "DNSName is the identifier that this challenge is for, e.g. example.com. If the requested DNSName is a 'wildcard', this field MUST be set to the non-wildcard domain, e.g. for `*.example.com`, it must be `example.com`.",
                                                                        "type": "string"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef references a properly configured ACME-type Issuer which should be used to create this Challenge. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Challenge will be marked as failed.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "key": {
                                                                        "description": "Key is the ACME challenge key for this challenge For HTTP01 challenges, this is the value that must be responded with to complete the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key from acme server for challenge>`. For DNS01 challenges, this is the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key from acme server for challenge>` text that must be set as the TXT record content.",
                                                                        "type": "string"
                                                                    },
                                                                    "solver": {
                                                                        "description": "Solver contains the domain solving configuration that should be used to solve this challenge resource.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "dns01": {
                                                                                "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "acmedns": {
                                                                                        "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "accountSecretRef",
                                                                                            "host"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accountSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "host": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "akamai": {
                                                                                        "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "accessTokenSecretRef",
                                                                                            "clientSecretSecretRef",
                                                                                            "clientTokenSecretRef",
                                                                                            "serviceConsumerDomain"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accessTokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "clientSecretSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "clientTokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "serviceConsumerDomain": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "azuredns": {
                                                                                        "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "resourceGroupName",
                                                                                            "subscriptionID"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "clientID": {
                                                                                                "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "clientSecretSecretRef": {
                                                                                                "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "environment": {
                                                                                                "type": "string",
                                                                                                "enum": [
                                                                                                    "AzurePublicCloud",
                                                                                                    "AzureChinaCloud",
                                                                                                    "AzureGermanCloud",
                                                                                                    "AzureUSGovernmentCloud"
                                                                                                ]
                                                                                            },
                                                                                            "hostedZoneName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "resourceGroupName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "subscriptionID": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tenantID": {
                                                                                                "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "clouddns": {
                                                                                        "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "project"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "hostedZoneName": {
                                                                                                "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "project": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "serviceAccountSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "cloudflare": {
                                                                                        "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "apiKeySecretRef": {
                                                                                                "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "apiTokenSecretRef": {
                                                                                                "description": "API token used to authenticate with Cloudflare.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "email": {
                                                                                                "description": "Email of the account, only required when using API key based authentication.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "cnameStrategy": {
                                                                                        "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "None",
                                                                                            "Follow"
                                                                                        ]
                                                                                    },
                                                                                    "digitalocean": {
                                                                                        "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "tokenSecretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "tokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "rfc2136": {
                                                                                        "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "nameserver"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "nameserver": {
                                                                                                "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigAlgorithm": {
                                                                                                "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigKeyName": {
                                                                                                "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigSecretSecretRef": {
                                                                                                "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "route53": {
                                                                                        "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "region"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accessKeyID": {
                                                                                                "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "hostedZoneID": {
                                                                                                "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "region": {
                                                                                                "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretAccessKeySecretRef": {
                                                                                                "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "webhook": {
                                                                                        "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "groupName",
                                                                                            "solverName"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "config": {
                                                                                                "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                "x-kubernetes-preserve-unknown-fields": true
                                                                                            },
                                                                                            "groupName": {
                                                                                                "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "solverName": {
                                                                                                "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "http01": {
                                                                                "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "ingress": {
                                                                                        "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "class": {
                                                                                                "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "ingressTemplate": {
                                                                                                "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "metadata": {
                                                                                                        "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "annotations": {
                                                                                                                "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "labels": {
                                                                                                                "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "podTemplate": {
                                                                                                "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "metadata": {
                                                                                                        "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "annotations": {
                                                                                                                "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "labels": {
                                                                                                                "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "spec": {
                                                                                                        "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "affinity": {
                                                                                                                "description": "If specified, the pod's scheduling constraints",
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "nodeAffinity": {
                                                                                                                        "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "preference",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "preference": {
                                                                                                                                            "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchFields": {
                                                                                                                                                    "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                "type": "object",
                                                                                                                                "required": [
                                                                                                                                    "nodeSelectorTerms"
                                                                                                                                ],
                                                                                                                                "properties": {
                                                                                                                                    "nodeSelectorTerms": {
                                                                                                                                        "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                        "type": "array",
                                                                                                                                        "items": {
                                                                                                                                            "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchFields": {
                                                                                                                                                    "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "podAffinity": {
                                                                                                                        "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "podAffinityTerm",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "podAffinityTerm": {
                                                                                                                                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "topologyKey"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "labelSelector": {
                                                                                                                                                    "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "properties": {
                                                                                                                                                        "matchExpressions": {
                                                                                                                                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                            "type": "array",
                                                                                                                                                            "items": {
                                                                                                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "required": [
                                                                                                                                                                    "key",
                                                                                                                                                                    "operator"
                                                                                                                                                                ],
                                                                                                                                                                "properties": {
                                                                                                                                                                    "key": {
                                                                                                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "operator": {
                                                                                                                                                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "values": {
                                                                                                                                                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "matchLabels": {
                                                                                                                                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "namespaces": {
                                                                                                                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "topologyKey": {
                                                                                                                                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                    "type": "string"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "topologyKey"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "labelSelector": {
                                                                                                                                            "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "key is the label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchLabels": {
                                                                                                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "additionalProperties": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "namespaces": {
                                                                                                                                            "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "topologyKey": {
                                                                                                                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "podAntiAffinity": {
                                                                                                                        "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "podAffinityTerm",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "podAffinityTerm": {
                                                                                                                                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "topologyKey"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "labelSelector": {
                                                                                                                                                    "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "properties": {
                                                                                                                                                        "matchExpressions": {
                                                                                                                                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                            "type": "array",
                                                                                                                                                            "items": {
                                                                                                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "required": [
                                                                                                                                                                    "key",
                                                                                                                                                                    "operator"
                                                                                                                                                                ],
                                                                                                                                                                "properties": {
                                                                                                                                                                    "key": {
                                                                                                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "operator": {
                                                                                                                                                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "values": {
                                                                                                                                                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "matchLabels": {
                                                                                                                                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "namespaces": {
                                                                                                                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "topologyKey": {
                                                                                                                                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                    "type": "string"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "topologyKey"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "labelSelector": {
                                                                                                                                            "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "key is the label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchLabels": {
                                                                                                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "additionalProperties": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "namespaces": {
                                                                                                                                            "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "topologyKey": {
                                                                                                                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "nodeSelector": {
                                                                                                                "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "priorityClassName": {
                                                                                                                "description": "If specified, the pod's priorityClassName.",
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "serviceAccountName": {
                                                                                                                "description": "If specified, the pod's service account",
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "tolerations": {
                                                                                                                "description": "If specified, the pod's tolerations.",
                                                                                                                "type": "array",
                                                                                                                "items": {
                                                                                                                    "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "effect": {
                                                                                                                            "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "key": {
                                                                                                                            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "operator": {
                                                                                                                            "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerationSeconds": {
                                                                                                                            "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                            "type": "integer",
                                                                                                                            "format": "int64"
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "serviceType": {
                                                                                                "description": "Optional service type for Kubernetes solver service",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "selector": {
                                                                                "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "dnsNames": {
                                                                                        "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "dnsZones": {
                                                                                        "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "matchLabels": {
                                                                                        "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "token": {
                                                                        "description": "Token is the ACME challenge token for this challenge. This is the raw value returned from the ACME server.",
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "Type is the type of ACME challenge this resource represents. One of \"http-01\" or \"dns-01\".",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "http-01",
                                                                            "dns-01"
                                                                        ]
                                                                    },
                                                                    "url": {
                                                                        "description": "URL is the URL of the ACME Challenge resource for this challenge. This can be used to lookup details about the status of this challenge.",
                                                                        "type": "string"
                                                                    },
                                                                    "wildcard": {
                                                                        "description": "Wildcard will be true if this challenge is for a wildcard identifier, for example '*.example.com'.",
                                                                        "type": "boolean"
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "presented": {
                                                                        "description": "Presented will be set to true if the challenge values for this challenge are currently 'presented'. This *does not* imply the self check is passing. Only that the values have been 'submitted' for the appropriate challenge mechanism (i.e. the DNS01 TXT record has been presented, or the HTTP01 configuration has been configured).",
                                                                        "type": "boolean"
                                                                    },
                                                                    "processing": {
                                                                        "description": "Processing is used to denote whether this challenge should be processed or not. This field will only be set to true by the 'scheduling' component. It will only be set to false by the 'challenges' controller, after the challenge has reached a final state or timed out. If this field is set to false, the challenge controller will not take any more action.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "reason": {
                                                                        "description": "Reason contains human readable information on why the Challenge is in the current state.",
                                                                        "type": "string"
                                                                    },
                                                                    "state": {
                                                                        "description": "State contains the current 'state' of the challenge. If not set, the state of the challenge is unknown.",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "valid",
                                                                            "ready",
                                                                            "pending",
                                                                            "processing",
                                                                            "invalid",
                                                                            "expired",
                                                                            "errored"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "State",
                                                        "type": "string",
                                                        "jsonPath": ".status.state"
                                                    },
                                                    {
                                                        "name": "Domain",
                                                        "type": "string",
                                                        "jsonPath": ".spec.dnsName"
                                                    },
                                                    {
                                                        "name": "Reason",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.reason"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1alpha3",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "Challenge is a type to represent a Challenge request with an ACME server",
                                                        "type": "object",
                                                        "required": [
                                                            "metadata"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "type": "object",
                                                                "required": [
                                                                    "authzURL",
                                                                    "dnsName",
                                                                    "issuerRef",
                                                                    "key",
                                                                    "solver",
                                                                    "token",
                                                                    "type",
                                                                    "url"
                                                                ],
                                                                "properties": {
                                                                    "authzURL": {
                                                                        "description": "AuthzURL is the URL to the ACME Authorization resource that this challenge is a part of.",
                                                                        "type": "string"
                                                                    },
                                                                    "dnsName": {
                                                                        "description": "DNSName is the identifier that this challenge is for, e.g. example.com. If the requested DNSName is a 'wildcard', this field MUST be set to the non-wildcard domain, e.g. for `*.example.com`, it must be `example.com`.",
                                                                        "type": "string"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef references a properly configured ACME-type Issuer which should be used to create this Challenge. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Challenge will be marked as failed.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "key": {
                                                                        "description": "Key is the ACME challenge key for this challenge For HTTP01 challenges, this is the value that must be responded with to complete the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key from acme server for challenge>`. For DNS01 challenges, this is the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key from acme server for challenge>` text that must be set as the TXT record content.",
                                                                        "type": "string"
                                                                    },
                                                                    "solver": {
                                                                        "description": "Solver contains the domain solving configuration that should be used to solve this challenge resource.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "dns01": {
                                                                                "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "acmedns": {
                                                                                        "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "accountSecretRef",
                                                                                            "host"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accountSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "host": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "akamai": {
                                                                                        "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "accessTokenSecretRef",
                                                                                            "clientSecretSecretRef",
                                                                                            "clientTokenSecretRef",
                                                                                            "serviceConsumerDomain"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accessTokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "clientSecretSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "clientTokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "serviceConsumerDomain": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "azuredns": {
                                                                                        "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "resourceGroupName",
                                                                                            "subscriptionID"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "clientID": {
                                                                                                "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "clientSecretSecretRef": {
                                                                                                "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "environment": {
                                                                                                "type": "string",
                                                                                                "enum": [
                                                                                                    "AzurePublicCloud",
                                                                                                    "AzureChinaCloud",
                                                                                                    "AzureGermanCloud",
                                                                                                    "AzureUSGovernmentCloud"
                                                                                                ]
                                                                                            },
                                                                                            "hostedZoneName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "resourceGroupName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "subscriptionID": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tenantID": {
                                                                                                "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "clouddns": {
                                                                                        "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "project"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "hostedZoneName": {
                                                                                                "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "project": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "serviceAccountSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "cloudflare": {
                                                                                        "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "apiKeySecretRef": {
                                                                                                "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "apiTokenSecretRef": {
                                                                                                "description": "API token used to authenticate with Cloudflare.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "email": {
                                                                                                "description": "Email of the account, only required when using API key based authentication.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "cnameStrategy": {
                                                                                        "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "None",
                                                                                            "Follow"
                                                                                        ]
                                                                                    },
                                                                                    "digitalocean": {
                                                                                        "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "tokenSecretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "tokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "rfc2136": {
                                                                                        "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "nameserver"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "nameserver": {
                                                                                                "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigAlgorithm": {
                                                                                                "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigKeyName": {
                                                                                                "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigSecretSecretRef": {
                                                                                                "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "route53": {
                                                                                        "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "region"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accessKeyID": {
                                                                                                "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "hostedZoneID": {
                                                                                                "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "region": {
                                                                                                "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretAccessKeySecretRef": {
                                                                                                "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "webhook": {
                                                                                        "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "groupName",
                                                                                            "solverName"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "config": {
                                                                                                "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                "x-kubernetes-preserve-unknown-fields": true
                                                                                            },
                                                                                            "groupName": {
                                                                                                "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "solverName": {
                                                                                                "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "http01": {
                                                                                "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "ingress": {
                                                                                        "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "class": {
                                                                                                "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "ingressTemplate": {
                                                                                                "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "metadata": {
                                                                                                        "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "annotations": {
                                                                                                                "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "labels": {
                                                                                                                "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "podTemplate": {
                                                                                                "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "metadata": {
                                                                                                        "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "annotations": {
                                                                                                                "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "labels": {
                                                                                                                "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "spec": {
                                                                                                        "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "affinity": {
                                                                                                                "description": "If specified, the pod's scheduling constraints",
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "nodeAffinity": {
                                                                                                                        "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "preference",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "preference": {
                                                                                                                                            "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchFields": {
                                                                                                                                                    "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                "type": "object",
                                                                                                                                "required": [
                                                                                                                                    "nodeSelectorTerms"
                                                                                                                                ],
                                                                                                                                "properties": {
                                                                                                                                    "nodeSelectorTerms": {
                                                                                                                                        "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                        "type": "array",
                                                                                                                                        "items": {
                                                                                                                                            "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchFields": {
                                                                                                                                                    "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "podAffinity": {
                                                                                                                        "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "podAffinityTerm",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "podAffinityTerm": {
                                                                                                                                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "topologyKey"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "labelSelector": {
                                                                                                                                                    "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "properties": {
                                                                                                                                                        "matchExpressions": {
                                                                                                                                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                            "type": "array",
                                                                                                                                                            "items": {
                                                                                                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "required": [
                                                                                                                                                                    "key",
                                                                                                                                                                    "operator"
                                                                                                                                                                ],
                                                                                                                                                                "properties": {
                                                                                                                                                                    "key": {
                                                                                                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "operator": {
                                                                                                                                                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "values": {
                                                                                                                                                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "matchLabels": {
                                                                                                                                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "namespaces": {
                                                                                                                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "topologyKey": {
                                                                                                                                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                    "type": "string"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "topologyKey"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "labelSelector": {
                                                                                                                                            "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "key is the label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchLabels": {
                                                                                                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "additionalProperties": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "namespaces": {
                                                                                                                                            "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "topologyKey": {
                                                                                                                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "podAntiAffinity": {
                                                                                                                        "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "podAffinityTerm",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "podAffinityTerm": {
                                                                                                                                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "topologyKey"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "labelSelector": {
                                                                                                                                                    "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "properties": {
                                                                                                                                                        "matchExpressions": {
                                                                                                                                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                            "type": "array",
                                                                                                                                                            "items": {
                                                                                                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "required": [
                                                                                                                                                                    "key",
                                                                                                                                                                    "operator"
                                                                                                                                                                ],
                                                                                                                                                                "properties": {
                                                                                                                                                                    "key": {
                                                                                                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "operator": {
                                                                                                                                                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "values": {
                                                                                                                                                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "matchLabels": {
                                                                                                                                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "namespaces": {
                                                                                                                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "topologyKey": {
                                                                                                                                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                    "type": "string"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "topologyKey"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "labelSelector": {
                                                                                                                                            "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "key is the label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchLabels": {
                                                                                                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "additionalProperties": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "namespaces": {
                                                                                                                                            "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "topologyKey": {
                                                                                                                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "nodeSelector": {
                                                                                                                "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "priorityClassName": {
                                                                                                                "description": "If specified, the pod's priorityClassName.",
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "serviceAccountName": {
                                                                                                                "description": "If specified, the pod's service account",
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "tolerations": {
                                                                                                                "description": "If specified, the pod's tolerations.",
                                                                                                                "type": "array",
                                                                                                                "items": {
                                                                                                                    "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "effect": {
                                                                                                                            "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "key": {
                                                                                                                            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "operator": {
                                                                                                                            "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerationSeconds": {
                                                                                                                            "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                            "type": "integer",
                                                                                                                            "format": "int64"
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "serviceType": {
                                                                                                "description": "Optional service type for Kubernetes solver service",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "selector": {
                                                                                "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "dnsNames": {
                                                                                        "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "dnsZones": {
                                                                                        "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "matchLabels": {
                                                                                        "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "token": {
                                                                        "description": "Token is the ACME challenge token for this challenge. This is the raw value returned from the ACME server.",
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "Type is the type of ACME challenge this resource represents. One of \"http-01\" or \"dns-01\".",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "http-01",
                                                                            "dns-01"
                                                                        ]
                                                                    },
                                                                    "url": {
                                                                        "description": "URL is the URL of the ACME Challenge resource for this challenge. This can be used to lookup details about the status of this challenge.",
                                                                        "type": "string"
                                                                    },
                                                                    "wildcard": {
                                                                        "description": "Wildcard will be true if this challenge is for a wildcard identifier, for example '*.example.com'.",
                                                                        "type": "boolean"
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "presented": {
                                                                        "description": "Presented will be set to true if the challenge values for this challenge are currently 'presented'. This *does not* imply the self check is passing. Only that the values have been 'submitted' for the appropriate challenge mechanism (i.e. the DNS01 TXT record has been presented, or the HTTP01 configuration has been configured).",
                                                                        "type": "boolean"
                                                                    },
                                                                    "processing": {
                                                                        "description": "Processing is used to denote whether this challenge should be processed or not. This field will only be set to true by the 'scheduling' component. It will only be set to false by the 'challenges' controller, after the challenge has reached a final state or timed out. If this field is set to false, the challenge controller will not take any more action.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "reason": {
                                                                        "description": "Reason contains human readable information on why the Challenge is in the current state.",
                                                                        "type": "string"
                                                                    },
                                                                    "state": {
                                                                        "description": "State contains the current 'state' of the challenge. If not set, the state of the challenge is unknown.",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "valid",
                                                                            "ready",
                                                                            "pending",
                                                                            "processing",
                                                                            "invalid",
                                                                            "expired",
                                                                            "errored"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "State",
                                                        "type": "string",
                                                        "jsonPath": ".status.state"
                                                    },
                                                    {
                                                        "name": "Domain",
                                                        "type": "string",
                                                        "jsonPath": ".spec.dnsName"
                                                    },
                                                    {
                                                        "name": "Reason",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.reason"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1beta1",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "Challenge is a type to represent a Challenge request with an ACME server",
                                                        "type": "object",
                                                        "required": [
                                                            "metadata",
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "type": "object",
                                                                "required": [
                                                                    "authorizationURL",
                                                                    "dnsName",
                                                                    "issuerRef",
                                                                    "key",
                                                                    "solver",
                                                                    "token",
                                                                    "type",
                                                                    "url"
                                                                ],
                                                                "properties": {
                                                                    "authorizationURL": {
                                                                        "description": "The URL to the ACME Authorization resource that this challenge is a part of.",
                                                                        "type": "string"
                                                                    },
                                                                    "dnsName": {
                                                                        "description": "dnsName is the identifier that this challenge is for, e.g. example.com. If the requested DNSName is a 'wildcard', this field MUST be set to the non-wildcard domain, e.g. for `*.example.com`, it must be `example.com`.",
                                                                        "type": "string"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "References a properly configured ACME-type Issuer which should be used to create this Challenge. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Challenge will be marked as failed.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "key": {
                                                                        "description": "The ACME challenge key for this challenge For HTTP01 challenges, this is the value that must be responded with to complete the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key from acme server for challenge>`. For DNS01 challenges, this is the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key from acme server for challenge>` text that must be set as the TXT record content.",
                                                                        "type": "string"
                                                                    },
                                                                    "solver": {
                                                                        "description": "Contains the domain solving configuration that should be used to solve this challenge resource.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "dns01": {
                                                                                "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "acmeDNS": {
                                                                                        "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "accountSecretRef",
                                                                                            "host"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accountSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "host": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "akamai": {
                                                                                        "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "accessTokenSecretRef",
                                                                                            "clientSecretSecretRef",
                                                                                            "clientTokenSecretRef",
                                                                                            "serviceConsumerDomain"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accessTokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "clientSecretSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "clientTokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "serviceConsumerDomain": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "azureDNS": {
                                                                                        "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "resourceGroupName",
                                                                                            "subscriptionID"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "clientID": {
                                                                                                "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "clientSecretSecretRef": {
                                                                                                "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "environment": {
                                                                                                "type": "string",
                                                                                                "enum": [
                                                                                                    "AzurePublicCloud",
                                                                                                    "AzureChinaCloud",
                                                                                                    "AzureGermanCloud",
                                                                                                    "AzureUSGovernmentCloud"
                                                                                                ]
                                                                                            },
                                                                                            "hostedZoneName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "resourceGroupName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "subscriptionID": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tenantID": {
                                                                                                "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "cloudDNS": {
                                                                                        "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "project"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "hostedZoneName": {
                                                                                                "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "project": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "serviceAccountSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "cloudflare": {
                                                                                        "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "apiKeySecretRef": {
                                                                                                "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "apiTokenSecretRef": {
                                                                                                "description": "API token used to authenticate with Cloudflare.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "email": {
                                                                                                "description": "Email of the account, only required when using API key based authentication.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "cnameStrategy": {
                                                                                        "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "None",
                                                                                            "Follow"
                                                                                        ]
                                                                                    },
                                                                                    "digitalocean": {
                                                                                        "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "tokenSecretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "tokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "rfc2136": {
                                                                                        "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "nameserver"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "nameserver": {
                                                                                                "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigAlgorithm": {
                                                                                                "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigKeyName": {
                                                                                                "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigSecretSecretRef": {
                                                                                                "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "route53": {
                                                                                        "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "region"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accessKeyID": {
                                                                                                "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "hostedZoneID": {
                                                                                                "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "region": {
                                                                                                "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretAccessKeySecretRef": {
                                                                                                "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "webhook": {
                                                                                        "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "groupName",
                                                                                            "solverName"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "config": {
                                                                                                "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                "x-kubernetes-preserve-unknown-fields": true
                                                                                            },
                                                                                            "groupName": {
                                                                                                "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "solverName": {
                                                                                                "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "http01": {
                                                                                "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "ingress": {
                                                                                        "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "class": {
                                                                                                "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "ingressTemplate": {
                                                                                                "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "metadata": {
                                                                                                        "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "annotations": {
                                                                                                                "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "labels": {
                                                                                                                "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "podTemplate": {
                                                                                                "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "metadata": {
                                                                                                        "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "annotations": {
                                                                                                                "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "labels": {
                                                                                                                "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "spec": {
                                                                                                        "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "affinity": {
                                                                                                                "description": "If specified, the pod's scheduling constraints",
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "nodeAffinity": {
                                                                                                                        "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "preference",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "preference": {
                                                                                                                                            "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchFields": {
                                                                                                                                                    "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                "type": "object",
                                                                                                                                "required": [
                                                                                                                                    "nodeSelectorTerms"
                                                                                                                                ],
                                                                                                                                "properties": {
                                                                                                                                    "nodeSelectorTerms": {
                                                                                                                                        "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                        "type": "array",
                                                                                                                                        "items": {
                                                                                                                                            "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchFields": {
                                                                                                                                                    "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "podAffinity": {
                                                                                                                        "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "podAffinityTerm",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "podAffinityTerm": {
                                                                                                                                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "topologyKey"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "labelSelector": {
                                                                                                                                                    "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "properties": {
                                                                                                                                                        "matchExpressions": {
                                                                                                                                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                            "type": "array",
                                                                                                                                                            "items": {
                                                                                                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "required": [
                                                                                                                                                                    "key",
                                                                                                                                                                    "operator"
                                                                                                                                                                ],
                                                                                                                                                                "properties": {
                                                                                                                                                                    "key": {
                                                                                                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "operator": {
                                                                                                                                                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "values": {
                                                                                                                                                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "matchLabels": {
                                                                                                                                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "namespaces": {
                                                                                                                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "topologyKey": {
                                                                                                                                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                    "type": "string"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "topologyKey"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "labelSelector": {
                                                                                                                                            "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "key is the label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchLabels": {
                                                                                                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "additionalProperties": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "namespaces": {
                                                                                                                                            "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "topologyKey": {
                                                                                                                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "podAntiAffinity": {
                                                                                                                        "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "podAffinityTerm",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "podAffinityTerm": {
                                                                                                                                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "topologyKey"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "labelSelector": {
                                                                                                                                                    "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "properties": {
                                                                                                                                                        "matchExpressions": {
                                                                                                                                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                            "type": "array",
                                                                                                                                                            "items": {
                                                                                                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "required": [
                                                                                                                                                                    "key",
                                                                                                                                                                    "operator"
                                                                                                                                                                ],
                                                                                                                                                                "properties": {
                                                                                                                                                                    "key": {
                                                                                                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "operator": {
                                                                                                                                                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "values": {
                                                                                                                                                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "matchLabels": {
                                                                                                                                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "namespaces": {
                                                                                                                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "topologyKey": {
                                                                                                                                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                    "type": "string"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "topologyKey"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "labelSelector": {
                                                                                                                                            "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "key is the label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchLabels": {
                                                                                                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "additionalProperties": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "namespaces": {
                                                                                                                                            "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "topologyKey": {
                                                                                                                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "nodeSelector": {
                                                                                                                "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "priorityClassName": {
                                                                                                                "description": "If specified, the pod's priorityClassName.",
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "serviceAccountName": {
                                                                                                                "description": "If specified, the pod's service account",
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "tolerations": {
                                                                                                                "description": "If specified, the pod's tolerations.",
                                                                                                                "type": "array",
                                                                                                                "items": {
                                                                                                                    "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "effect": {
                                                                                                                            "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "key": {
                                                                                                                            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "operator": {
                                                                                                                            "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerationSeconds": {
                                                                                                                            "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                            "type": "integer",
                                                                                                                            "format": "int64"
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "serviceType": {
                                                                                                "description": "Optional service type for Kubernetes solver service",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "selector": {
                                                                                "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "dnsNames": {
                                                                                        "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "dnsZones": {
                                                                                        "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "matchLabels": {
                                                                                        "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "token": {
                                                                        "description": "The ACME challenge token for this challenge. This is the raw value returned from the ACME server.",
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "The type of ACME challenge this resource represents. One of \"HTTP-01\" or \"DNS-01\".",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "HTTP-01",
                                                                            "DNS-01"
                                                                        ]
                                                                    },
                                                                    "url": {
                                                                        "description": "The URL of the ACME Challenge resource for this challenge. This can be used to lookup details about the status of this challenge.",
                                                                        "type": "string"
                                                                    },
                                                                    "wildcard": {
                                                                        "description": "wildcard will be true if this challenge is for a wildcard identifier, for example '*.example.com'.",
                                                                        "type": "boolean"
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "presented": {
                                                                        "description": "presented will be set to true if the challenge values for this challenge are currently 'presented'. This *does not* imply the self check is passing. Only that the values have been 'submitted' for the appropriate challenge mechanism (i.e. the DNS01 TXT record has been presented, or the HTTP01 configuration has been configured).",
                                                                        "type": "boolean"
                                                                    },
                                                                    "processing": {
                                                                        "description": "Used to denote whether this challenge should be processed or not. This field will only be set to true by the 'scheduling' component. It will only be set to false by the 'challenges' controller, after the challenge has reached a final state or timed out. If this field is set to false, the challenge controller will not take any more action.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "reason": {
                                                                        "description": "Contains human readable information on why the Challenge is in the current state.",
                                                                        "type": "string"
                                                                    },
                                                                    "state": {
                                                                        "description": "Contains the current 'state' of the challenge. If not set, the state of the challenge is unknown.",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "valid",
                                                                            "ready",
                                                                            "pending",
                                                                            "processing",
                                                                            "invalid",
                                                                            "expired",
                                                                            "errored"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "State",
                                                        "type": "string",
                                                        "jsonPath": ".status.state"
                                                    },
                                                    {
                                                        "name": "Domain",
                                                        "type": "string",
                                                        "jsonPath": ".spec.dnsName"
                                                    },
                                                    {
                                                        "name": "Reason",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.reason"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1",
                                                "served": true,
                                                "storage": true,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "Challenge is a type to represent a Challenge request with an ACME server",
                                                        "type": "object",
                                                        "required": [
                                                            "metadata",
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "type": "object",
                                                                "required": [
                                                                    "authorizationURL",
                                                                    "dnsName",
                                                                    "issuerRef",
                                                                    "key",
                                                                    "solver",
                                                                    "token",
                                                                    "type",
                                                                    "url"
                                                                ],
                                                                "properties": {
                                                                    "authorizationURL": {
                                                                        "description": "The URL to the ACME Authorization resource that this challenge is a part of.",
                                                                        "type": "string"
                                                                    },
                                                                    "dnsName": {
                                                                        "description": "dnsName is the identifier that this challenge is for, e.g. example.com. If the requested DNSName is a 'wildcard', this field MUST be set to the non-wildcard domain, e.g. for `*.example.com`, it must be `example.com`.",
                                                                        "type": "string"
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "References a properly configured ACME-type Issuer which should be used to create this Challenge. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Challenge will be marked as failed.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "key": {
                                                                        "description": "The ACME challenge key for this challenge For HTTP01 challenges, this is the value that must be responded with to complete the HTTP01 challenge in the format: `<private key JWK thumbprint>.<key from acme server for challenge>`. For DNS01 challenges, this is the base64 encoded SHA256 sum of the `<private key JWK thumbprint>.<key from acme server for challenge>` text that must be set as the TXT record content.",
                                                                        "type": "string"
                                                                    },
                                                                    "solver": {
                                                                        "description": "Contains the domain solving configuration that should be used to solve this challenge resource.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "dns01": {
                                                                                "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "acmeDNS": {
                                                                                        "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "accountSecretRef",
                                                                                            "host"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accountSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "host": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "akamai": {
                                                                                        "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "accessTokenSecretRef",
                                                                                            "clientSecretSecretRef",
                                                                                            "clientTokenSecretRef",
                                                                                            "serviceConsumerDomain"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accessTokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "clientSecretSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "clientTokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "serviceConsumerDomain": {
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "azureDNS": {
                                                                                        "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "resourceGroupName",
                                                                                            "subscriptionID"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "clientID": {
                                                                                                "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "clientSecretSecretRef": {
                                                                                                "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "environment": {
                                                                                                "type": "string",
                                                                                                "enum": [
                                                                                                    "AzurePublicCloud",
                                                                                                    "AzureChinaCloud",
                                                                                                    "AzureGermanCloud",
                                                                                                    "AzureUSGovernmentCloud"
                                                                                                ]
                                                                                            },
                                                                                            "hostedZoneName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "resourceGroupName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "subscriptionID": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tenantID": {
                                                                                                "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "cloudDNS": {
                                                                                        "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "project"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "hostedZoneName": {
                                                                                                "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "project": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "serviceAccountSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "cloudflare": {
                                                                                        "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "apiKeySecretRef": {
                                                                                                "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "apiTokenSecretRef": {
                                                                                                "description": "API token used to authenticate with Cloudflare.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "email": {
                                                                                                "description": "Email of the account, only required when using API key based authentication.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "cnameStrategy": {
                                                                                        "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "None",
                                                                                            "Follow"
                                                                                        ]
                                                                                    },
                                                                                    "digitalocean": {
                                                                                        "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "tokenSecretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "tokenSecretRef": {
                                                                                                "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "rfc2136": {
                                                                                        "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "nameserver"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "nameserver": {
                                                                                                "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigAlgorithm": {
                                                                                                "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigKeyName": {
                                                                                                "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "tsigSecretSecretRef": {
                                                                                                "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "route53": {
                                                                                        "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "region"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "accessKeyID": {
                                                                                                "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "hostedZoneID": {
                                                                                                "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "region": {
                                                                                                "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretAccessKeySecretRef": {
                                                                                                "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "webhook": {
                                                                                        "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "groupName",
                                                                                            "solverName"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "config": {
                                                                                                "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                "x-kubernetes-preserve-unknown-fields": true
                                                                                            },
                                                                                            "groupName": {
                                                                                                "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "solverName": {
                                                                                                "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "http01": {
                                                                                "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "ingress": {
                                                                                        "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "class": {
                                                                                                "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "ingressTemplate": {
                                                                                                "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "metadata": {
                                                                                                        "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "annotations": {
                                                                                                                "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "labels": {
                                                                                                                "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "podTemplate": {
                                                                                                "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "metadata": {
                                                                                                        "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "annotations": {
                                                                                                                "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "labels": {
                                                                                                                "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "spec": {
                                                                                                        "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "affinity": {
                                                                                                                "description": "If specified, the pod's scheduling constraints",
                                                                                                                "type": "object",
                                                                                                                "properties": {
                                                                                                                    "nodeAffinity": {
                                                                                                                        "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "preference",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "preference": {
                                                                                                                                            "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchFields": {
                                                                                                                                                    "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                "type": "object",
                                                                                                                                "required": [
                                                                                                                                    "nodeSelectorTerms"
                                                                                                                                ],
                                                                                                                                "properties": {
                                                                                                                                    "nodeSelectorTerms": {
                                                                                                                                        "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                        "type": "array",
                                                                                                                                        "items": {
                                                                                                                                            "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchFields": {
                                                                                                                                                    "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "The label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "podAffinity": {
                                                                                                                        "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "podAffinityTerm",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "podAffinityTerm": {
                                                                                                                                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "topologyKey"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "labelSelector": {
                                                                                                                                                    "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "properties": {
                                                                                                                                                        "matchExpressions": {
                                                                                                                                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                            "type": "array",
                                                                                                                                                            "items": {
                                                                                                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "required": [
                                                                                                                                                                    "key",
                                                                                                                                                                    "operator"
                                                                                                                                                                ],
                                                                                                                                                                "properties": {
                                                                                                                                                                    "key": {
                                                                                                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "operator": {
                                                                                                                                                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "values": {
                                                                                                                                                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "matchLabels": {
                                                                                                                                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "namespaces": {
                                                                                                                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "topologyKey": {
                                                                                                                                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                    "type": "string"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "topologyKey"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "labelSelector": {
                                                                                                                                            "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "key is the label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchLabels": {
                                                                                                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "additionalProperties": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "namespaces": {
                                                                                                                                            "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "topologyKey": {
                                                                                                                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "podAntiAffinity": {
                                                                                                                        "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                        "type": "object",
                                                                                                                        "properties": {
                                                                                                                            "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "podAffinityTerm",
                                                                                                                                        "weight"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "podAffinityTerm": {
                                                                                                                                            "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "topologyKey"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "labelSelector": {
                                                                                                                                                    "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "properties": {
                                                                                                                                                        "matchExpressions": {
                                                                                                                                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                            "type": "array",
                                                                                                                                                            "items": {
                                                                                                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "required": [
                                                                                                                                                                    "key",
                                                                                                                                                                    "operator"
                                                                                                                                                                ],
                                                                                                                                                                "properties": {
                                                                                                                                                                    "key": {
                                                                                                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "operator": {
                                                                                                                                                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                        "type": "string"
                                                                                                                                                                    },
                                                                                                                                                                    "values": {
                                                                                                                                                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "matchLabels": {
                                                                                                                                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                            "type": "object",
                                                                                                                                                            "additionalProperties": {
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "namespaces": {
                                                                                                                                                    "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "topologyKey": {
                                                                                                                                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                    "type": "string"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "weight": {
                                                                                                                                            "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                            "type": "integer",
                                                                                                                                            "format": "int32"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                "type": "array",
                                                                                                                                "items": {
                                                                                                                                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                    "type": "object",
                                                                                                                                    "required": [
                                                                                                                                        "topologyKey"
                                                                                                                                    ],
                                                                                                                                    "properties": {
                                                                                                                                        "labelSelector": {
                                                                                                                                            "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                            "type": "object",
                                                                                                                                            "properties": {
                                                                                                                                                "matchExpressions": {
                                                                                                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "key",
                                                                                                                                                            "operator"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "key": {
                                                                                                                                                                "description": "key is the label key that the selector applies to.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "operator": {
                                                                                                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            },
                                                                                                                                                            "values": {
                                                                                                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "matchLabels": {
                                                                                                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                    "type": "object",
                                                                                                                                                    "additionalProperties": {
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "namespaces": {
                                                                                                                                            "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "type": "string"
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "topologyKey": {
                                                                                                                                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                            "type": "string"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "nodeSelector": {
                                                                                                                "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                "type": "object",
                                                                                                                "additionalProperties": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "priorityClassName": {
                                                                                                                "description": "If specified, the pod's priorityClassName.",
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "serviceAccountName": {
                                                                                                                "description": "If specified, the pod's service account",
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "tolerations": {
                                                                                                                "description": "If specified, the pod's tolerations.",
                                                                                                                "type": "array",
                                                                                                                "items": {
                                                                                                                    "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "effect": {
                                                                                                                            "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "key": {
                                                                                                                            "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "operator": {
                                                                                                                            "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerationSeconds": {
                                                                                                                            "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                            "type": "integer",
                                                                                                                            "format": "int64"
                                                                                                                        },
                                                                                                                        "value": {
                                                                                                                            "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                            "type": "string"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "serviceType": {
                                                                                                "description": "Optional service type for Kubernetes solver service",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "selector": {
                                                                                "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "dnsNames": {
                                                                                        "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "dnsZones": {
                                                                                        "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "matchLabels": {
                                                                                        "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                        "type": "object",
                                                                                        "additionalProperties": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "token": {
                                                                        "description": "The ACME challenge token for this challenge. This is the raw value returned from the ACME server.",
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "description": "The type of ACME challenge this resource represents. One of \"HTTP-01\" or \"DNS-01\".",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "HTTP-01",
                                                                            "DNS-01"
                                                                        ]
                                                                    },
                                                                    "url": {
                                                                        "description": "The URL of the ACME Challenge resource for this challenge. This can be used to lookup details about the status of this challenge.",
                                                                        "type": "string"
                                                                    },
                                                                    "wildcard": {
                                                                        "description": "wildcard will be true if this challenge is for a wildcard identifier, for example '*.example.com'.",
                                                                        "type": "boolean"
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "presented": {
                                                                        "description": "presented will be set to true if the challenge values for this challenge are currently 'presented'. This *does not* imply the self check is passing. Only that the values have been 'submitted' for the appropriate challenge mechanism (i.e. the DNS01 TXT record has been presented, or the HTTP01 configuration has been configured).",
                                                                        "type": "boolean"
                                                                    },
                                                                    "processing": {
                                                                        "description": "Used to denote whether this challenge should be processed or not. This field will only be set to true by the 'scheduling' component. It will only be set to false by the 'challenges' controller, after the challenge has reached a final state or timed out. If this field is set to false, the challenge controller will not take any more action.",
                                                                        "type": "boolean"
                                                                    },
                                                                    "reason": {
                                                                        "description": "Contains human readable information on why the Challenge is in the current state.",
                                                                        "type": "string"
                                                                    },
                                                                    "state": {
                                                                        "description": "Contains the current 'state' of the challenge. If not set, the state of the challenge is unknown.",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "valid",
                                                                            "ready",
                                                                            "pending",
                                                                            "processing",
                                                                            "invalid",
                                                                            "expired",
                                                                            "errored"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "State",
                                                        "type": "string",
                                                        "jsonPath": ".status.state"
                                                    },
                                                    {
                                                        "name": "Domain",
                                                        "type": "string",
                                                        "jsonPath": ".spec.dnsName"
                                                    },
                                                    {
                                                        "name": "Reason",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.reason"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            }
                                        ],
                                        "conversion": {
                                            "strategy": "Webhook",
                                            "webhook": {
                                                "clientConfig": {
                                                    "service": {
                                                        "namespace": "cert-manager",
                                                        "name": "cert-manager-webhook",
                                                        "path": "/convert",
                                                        "port": 443
                                                    },
                                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQU1WaXFjcXFEVVJlcTBIYjdGSXBIREl3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFd09ESXpNVE15TXpFMApXaGNOTWpJd09ESXpNVE15TXpFMFdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJJY2ZEL3ovc1Yvd09SM1V1MzNxR3NUYk9SS3gKYjVQdXJiVXM5dy91d3RibVJwVlJuMVp4dVFXSGsrRUltbVNmdEQzbTE0ZnZtLzJSN1F2bXEycHI1UURSRHRrcgo3Uy95ZTdHbXFhaGZqQnpqbEZSV0E5SU9sYTVSWDZBd2JPRVpLNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHSUJoQ3paSyswanljRU5GbFpVZGh1K0tlN0sKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFERkxBcURPQnpRYkp5WjYzWlFVQktJcGh5Mm9qbnVpQVA2NFgreAo4aElMNTMvOFBJbDI5MDg0REVqSTU4cUp1NUlDTVFDNGRmVm1XOXN3bGtVVTRlU0JKdVgyZ1k4WjFNR1VweEhCCmM4cmNLZEFkVHkrbUVCVnpqQUxqc0Z4dUxTSmZkS2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                                                },
                                                "conversionReviewVersions": [
                                                    "v1",
                                                    "v1beta1"
                                                ]
                                            }
                                        }
                                    },
                                    "status": {
                                        "conditions": [
                                            {
                                                "type": "NamesAccepted",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:44Z",
                                                "reason": "NoConflicts",
                                                "message": "no conflicts found"
                                            },
                                            {
                                                "type": "Established",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:45Z",
                                                "reason": "InitialNamesAccepted",
                                                "message": "the initial names have been accepted"
                                            }
                                        ],
                                        "acceptedNames": {
                                            "plural": "challenges",
                                            "singular": "challenge",
                                            "kind": "Challenge",
                                            "listKind": "ChallengeList",
                                            "categories": [
                                                "cert-manager",
                                                "cert-manager-acme"
                                            ]
                                        },
                                        "storedVersions": [
                                            "v1"
                                        ]
                                    }
                                },
                                "name": "challenges.acme.cert-manager.io",
                                "id": "challenges.acme.cert-manager.io",
                                "meta": {
                                    "name": "challenges.acme.cert-manager.io",
                                    "uid": "2b20d0b5-0942-44d2-9034-28021b389ff5",
                                    "resourceVersion": "1304",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "challenges.acme.cert-manager.io",
                                        "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::CustomResourceDefinition::challenges.acme.cert-manager.io",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "challenges.acme.cert-manager.io"
                            },
                            {
                                "groupType": "::CustomResourceDefinition",
                                "group": "",
                                "type": "CustomResourceDefinition",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "clusterissuers.cert-manager.io",
                                        "uid": "77ddb21b-3f9c-46f6-91c4-78f4ee560017",
                                        "resourceVersion": "1308",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "clusterissuers.cert-manager.io",
                                            "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "group": "cert-manager.io",
                                        "names": {
                                            "plural": "clusterissuers",
                                            "singular": "clusterissuer",
                                            "kind": "ClusterIssuer",
                                            "listKind": "ClusterIssuerList",
                                            "categories": [
                                                "cert-manager"
                                            ]
                                        },
                                        "scope": "Cluster",
                                        "versions": [
                                            {
                                                "name": "v1alpha2",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.",
                                                        "type": "object",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the ClusterIssuer resource.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "privateKeySecretRef",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "disableAccountKeyGeneration": {
                                                                                "description": "Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "email": {
                                                                                "description": "Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.",
                                                                                "type": "string"
                                                                            },
                                                                            "enableDurationFeature": {
                                                                                "description": "Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "externalAccountBinding": {
                                                                                "description": "ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "keyAlgorithm",
                                                                                    "keyID",
                                                                                    "keySecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "keyAlgorithm": {
                                                                                        "description": "keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "HS256",
                                                                                            "HS384",
                                                                                            "HS512"
                                                                                        ]
                                                                                    },
                                                                                    "keyID": {
                                                                                        "description": "keyID is the ID of the CA key that the External Account is bound to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "keySecretRef": {
                                                                                        "description": "keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "preferredChain": {
                                                                                "description": "PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: \"DST Root CA X3\" or \"ISRG Root X1\" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN",
                                                                                "type": "string",
                                                                                "maxLength": 64
                                                                            },
                                                                            "privateKeySecretRef": {
                                                                                "description": "PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "name"
                                                                                ],
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\". Only ACME v2 endpoints (i.e. RFC 8555) are supported.",
                                                                                "type": "string"
                                                                            },
                                                                            "skipTLSVerify": {
                                                                                "description": "Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "solvers": {
                                                                                "description": "Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "description": "Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.",
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "dns01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "acmedns": {
                                                                                                    "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accountSecretRef",
                                                                                                        "host"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "host": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "akamai": {
                                                                                                    "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accessTokenSecretRef",
                                                                                                        "clientSecretSecretRef",
                                                                                                        "clientTokenSecretRef",
                                                                                                        "serviceConsumerDomain"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceConsumerDomain": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "azuredns": {
                                                                                                    "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "resourceGroupName",
                                                                                                        "subscriptionID"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "clientID": {
                                                                                                            "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "environment": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "AzurePublicCloud",
                                                                                                                "AzureChinaCloud",
                                                                                                                "AzureGermanCloud",
                                                                                                                "AzureUSGovernmentCloud"
                                                                                                            ]
                                                                                                        },
                                                                                                        "hostedZoneName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "resourceGroupName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "subscriptionID": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tenantID": {
                                                                                                            "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "clouddns": {
                                                                                                    "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "project"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "hostedZoneName": {
                                                                                                            "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "project": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "serviceAccountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudflare": {
                                                                                                    "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "apiKeySecretRef": {
                                                                                                            "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "apiTokenSecretRef": {
                                                                                                            "description": "API token used to authenticate with Cloudflare.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "email": {
                                                                                                            "description": "Email of the account, only required when using API key based authentication.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cnameStrategy": {
                                                                                                    "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "None",
                                                                                                        "Follow"
                                                                                                    ]
                                                                                                },
                                                                                                "digitalocean": {
                                                                                                    "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "tokenSecretRef"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "tokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "rfc2136": {
                                                                                                    "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "nameserver"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "nameserver": {
                                                                                                            "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigAlgorithm": {
                                                                                                            "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigKeyName": {
                                                                                                            "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigSecretSecretRef": {
                                                                                                            "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "route53": {
                                                                                                    "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "region"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessKeyID": {
                                                                                                            "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "hostedZoneID": {
                                                                                                            "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "region": {
                                                                                                            "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "role": {
                                                                                                            "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "secretAccessKeySecretRef": {
                                                                                                            "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "webhook": {
                                                                                                    "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "groupName",
                                                                                                        "solverName"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "config": {
                                                                                                            "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                            "x-kubernetes-preserve-unknown-fields": true
                                                                                                        },
                                                                                                        "groupName": {
                                                                                                            "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "solverName": {
                                                                                                            "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "http01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "ingress": {
                                                                                                    "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "class": {
                                                                                                            "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "ingressTemplate": {
                                                                                                            "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "name": {
                                                                                                            "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "podTemplate": {
                                                                                                            "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "spec": {
                                                                                                                    "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "affinity": {
                                                                                                                            "description": "If specified, the pod's scheduling constraints",
                                                                                                                            "type": "object",
                                                                                                                            "properties": {
                                                                                                                                "nodeAffinity": {
                                                                                                                                    "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "preference",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "preference": {
                                                                                                                                                        "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "nodeSelectorTerms"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "nodeSelectorTerms": {
                                                                                                                                                    "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAffinity": {
                                                                                                                                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAntiAffinity": {
                                                                                                                                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "nodeSelector": {
                                                                                                                            "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "priorityClassName": {
                                                                                                                            "description": "If specified, the pod's priorityClassName.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "serviceAccountName": {
                                                                                                                            "description": "If specified, the pod's service account",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerations": {
                                                                                                                            "description": "If specified, the pod's tolerations.",
                                                                                                                            "type": "array",
                                                                                                                            "items": {
                                                                                                                                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "effect": {
                                                                                                                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "key": {
                                                                                                                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "operator": {
                                                                                                                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "tolerationSeconds": {
                                                                                                                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                                        "type": "integer",
                                                                                                                                        "format": "int64"
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                                        "type": "string"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceType": {
                                                                                                            "description": "Optional service type for Kubernetes solver service",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "selector": {
                                                                                            "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "dnsNames": {
                                                                                                    "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "dnsZones": {
                                                                                                    "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                                    "type": "object",
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "ca": {
                                                                        "description": "CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "secretName"
                                                                        ],
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "ocspServers": {
                                                                                "description": "The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be \"http://ocsp.int-x3.letsencrypt.org\".",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "secretName": {
                                                                                "description": "SecretName is the name of the secret used to sign Certificates issued by this Issuer.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "selfSigned": {
                                                                        "description": "SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "vault": {
                                                                        "description": "Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "auth",
                                                                            "path",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "auth": {
                                                                                "description": "Auth configures how cert-manager authenticates with the Vault server.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "appRole": {
                                                                                        "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "path",
                                                                                            "roleId",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "path": {
                                                                                                "description": "Path where the App Role authentication backend is mounted in Vault, e.g: \"approle\"",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "roleId": {
                                                                                                "description": "RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "kubernetes": {
                                                                                        "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "role",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mountPath": {
                                                                                                "description": "The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "tokenSecretRef": {
                                                                                        "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "caBundle": {
                                                                                "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.",
                                                                                "type": "string",
                                                                                "format": "byte"
                                                                            },
                                                                            "namespace": {
                                                                                "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                                                                                "type": "string"
                                                                            },
                                                                            "path": {
                                                                                "description": "Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".",
                                                                                "type": "string"
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "venafi": {
                                                                        "description": "Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "zone"
                                                                        ],
                                                                        "properties": {
                                                                            "cloud": {
                                                                                "description": "Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "apiTokenSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "apiTokenSecretRef": {
                                                                                        "description": "APITokenSecretRef is a secret key selector for the Venafi Cloud API token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for Venafi Cloud. Defaults to \"https://api.venafi.cloud/v1\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "tpp": {
                                                                                "description": "TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "credentialsRef",
                                                                                    "url"
                                                                                ],
                                                                                "properties": {
                                                                                    "caBundle": {
                                                                                        "description": "CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "credentialsRef": {
                                                                                        "description": "CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "zone": {
                                                                                "description": "Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the ClusterIssuer. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "lastRegisteredEmail": {
                                                                                "description": "LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer",
                                                                                "type": "string"
                                                                            },
                                                                            "uri": {
                                                                                "description": "URI is the unique account identifier, which can also be used to retrieve account details from the CA",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "IssuerCondition contains condition information for an Issuer.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1alpha3",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.",
                                                        "type": "object",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the ClusterIssuer resource.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "privateKeySecretRef",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "disableAccountKeyGeneration": {
                                                                                "description": "Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "email": {
                                                                                "description": "Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.",
                                                                                "type": "string"
                                                                            },
                                                                            "enableDurationFeature": {
                                                                                "description": "Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "externalAccountBinding": {
                                                                                "description": "ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "keyAlgorithm",
                                                                                    "keyID",
                                                                                    "keySecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "keyAlgorithm": {
                                                                                        "description": "keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "HS256",
                                                                                            "HS384",
                                                                                            "HS512"
                                                                                        ]
                                                                                    },
                                                                                    "keyID": {
                                                                                        "description": "keyID is the ID of the CA key that the External Account is bound to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "keySecretRef": {
                                                                                        "description": "keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "preferredChain": {
                                                                                "description": "PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: \"DST Root CA X3\" or \"ISRG Root X1\" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN",
                                                                                "type": "string",
                                                                                "maxLength": 64
                                                                            },
                                                                            "privateKeySecretRef": {
                                                                                "description": "PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "name"
                                                                                ],
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\". Only ACME v2 endpoints (i.e. RFC 8555) are supported.",
                                                                                "type": "string"
                                                                            },
                                                                            "skipTLSVerify": {
                                                                                "description": "Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "solvers": {
                                                                                "description": "Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "description": "Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.",
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "dns01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "acmedns": {
                                                                                                    "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accountSecretRef",
                                                                                                        "host"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "host": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "akamai": {
                                                                                                    "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accessTokenSecretRef",
                                                                                                        "clientSecretSecretRef",
                                                                                                        "clientTokenSecretRef",
                                                                                                        "serviceConsumerDomain"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceConsumerDomain": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "azuredns": {
                                                                                                    "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "resourceGroupName",
                                                                                                        "subscriptionID"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "clientID": {
                                                                                                            "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "environment": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "AzurePublicCloud",
                                                                                                                "AzureChinaCloud",
                                                                                                                "AzureGermanCloud",
                                                                                                                "AzureUSGovernmentCloud"
                                                                                                            ]
                                                                                                        },
                                                                                                        "hostedZoneName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "resourceGroupName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "subscriptionID": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tenantID": {
                                                                                                            "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "clouddns": {
                                                                                                    "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "project"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "hostedZoneName": {
                                                                                                            "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "project": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "serviceAccountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudflare": {
                                                                                                    "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "apiKeySecretRef": {
                                                                                                            "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "apiTokenSecretRef": {
                                                                                                            "description": "API token used to authenticate with Cloudflare.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "email": {
                                                                                                            "description": "Email of the account, only required when using API key based authentication.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cnameStrategy": {
                                                                                                    "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "None",
                                                                                                        "Follow"
                                                                                                    ]
                                                                                                },
                                                                                                "digitalocean": {
                                                                                                    "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "tokenSecretRef"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "tokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "rfc2136": {
                                                                                                    "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "nameserver"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "nameserver": {
                                                                                                            "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigAlgorithm": {
                                                                                                            "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigKeyName": {
                                                                                                            "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigSecretSecretRef": {
                                                                                                            "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "route53": {
                                                                                                    "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "region"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessKeyID": {
                                                                                                            "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "hostedZoneID": {
                                                                                                            "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "region": {
                                                                                                            "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "role": {
                                                                                                            "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "secretAccessKeySecretRef": {
                                                                                                            "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "webhook": {
                                                                                                    "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "groupName",
                                                                                                        "solverName"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "config": {
                                                                                                            "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                            "x-kubernetes-preserve-unknown-fields": true
                                                                                                        },
                                                                                                        "groupName": {
                                                                                                            "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "solverName": {
                                                                                                            "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "http01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "ingress": {
                                                                                                    "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "class": {
                                                                                                            "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "ingressTemplate": {
                                                                                                            "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "name": {
                                                                                                            "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "podTemplate": {
                                                                                                            "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "spec": {
                                                                                                                    "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "affinity": {
                                                                                                                            "description": "If specified, the pod's scheduling constraints",
                                                                                                                            "type": "object",
                                                                                                                            "properties": {
                                                                                                                                "nodeAffinity": {
                                                                                                                                    "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "preference",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "preference": {
                                                                                                                                                        "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "nodeSelectorTerms"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "nodeSelectorTerms": {
                                                                                                                                                    "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAffinity": {
                                                                                                                                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAntiAffinity": {
                                                                                                                                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "nodeSelector": {
                                                                                                                            "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "priorityClassName": {
                                                                                                                            "description": "If specified, the pod's priorityClassName.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "serviceAccountName": {
                                                                                                                            "description": "If specified, the pod's service account",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerations": {
                                                                                                                            "description": "If specified, the pod's tolerations.",
                                                                                                                            "type": "array",
                                                                                                                            "items": {
                                                                                                                                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "effect": {
                                                                                                                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "key": {
                                                                                                                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "operator": {
                                                                                                                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "tolerationSeconds": {
                                                                                                                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                                        "type": "integer",
                                                                                                                                        "format": "int64"
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                                        "type": "string"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceType": {
                                                                                                            "description": "Optional service type for Kubernetes solver service",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "selector": {
                                                                                            "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "dnsNames": {
                                                                                                    "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "dnsZones": {
                                                                                                    "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                                    "type": "object",
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "ca": {
                                                                        "description": "CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "secretName"
                                                                        ],
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "ocspServers": {
                                                                                "description": "The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be \"http://ocsp.int-x3.letsencrypt.org\".",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "secretName": {
                                                                                "description": "SecretName is the name of the secret used to sign Certificates issued by this Issuer.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "selfSigned": {
                                                                        "description": "SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "vault": {
                                                                        "description": "Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "auth",
                                                                            "path",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "auth": {
                                                                                "description": "Auth configures how cert-manager authenticates with the Vault server.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "appRole": {
                                                                                        "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "path",
                                                                                            "roleId",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "path": {
                                                                                                "description": "Path where the App Role authentication backend is mounted in Vault, e.g: \"approle\"",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "roleId": {
                                                                                                "description": "RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "kubernetes": {
                                                                                        "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "role",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mountPath": {
                                                                                                "description": "The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "tokenSecretRef": {
                                                                                        "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "caBundle": {
                                                                                "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.",
                                                                                "type": "string",
                                                                                "format": "byte"
                                                                            },
                                                                            "namespace": {
                                                                                "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                                                                                "type": "string"
                                                                            },
                                                                            "path": {
                                                                                "description": "Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".",
                                                                                "type": "string"
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "venafi": {
                                                                        "description": "Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "zone"
                                                                        ],
                                                                        "properties": {
                                                                            "cloud": {
                                                                                "description": "Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "apiTokenSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "apiTokenSecretRef": {
                                                                                        "description": "APITokenSecretRef is a secret key selector for the Venafi Cloud API token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for Venafi Cloud. Defaults to \"https://api.venafi.cloud/v1\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "tpp": {
                                                                                "description": "TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "credentialsRef",
                                                                                    "url"
                                                                                ],
                                                                                "properties": {
                                                                                    "caBundle": {
                                                                                        "description": "CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "credentialsRef": {
                                                                                        "description": "CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "zone": {
                                                                                "description": "Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the ClusterIssuer. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "lastRegisteredEmail": {
                                                                                "description": "LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer",
                                                                                "type": "string"
                                                                            },
                                                                            "uri": {
                                                                                "description": "URI is the unique account identifier, which can also be used to retrieve account details from the CA",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "IssuerCondition contains condition information for an Issuer.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1beta1",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.",
                                                        "type": "object",
                                                        "required": [
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the ClusterIssuer resource.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "privateKeySecretRef",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "disableAccountKeyGeneration": {
                                                                                "description": "Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "email": {
                                                                                "description": "Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.",
                                                                                "type": "string"
                                                                            },
                                                                            "enableDurationFeature": {
                                                                                "description": "Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "externalAccountBinding": {
                                                                                "description": "ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "keyAlgorithm",
                                                                                    "keyID",
                                                                                    "keySecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "keyAlgorithm": {
                                                                                        "description": "keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "HS256",
                                                                                            "HS384",
                                                                                            "HS512"
                                                                                        ]
                                                                                    },
                                                                                    "keyID": {
                                                                                        "description": "keyID is the ID of the CA key that the External Account is bound to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "keySecretRef": {
                                                                                        "description": "keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "preferredChain": {
                                                                                "description": "PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: \"DST Root CA X3\" or \"ISRG Root X1\" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN",
                                                                                "type": "string",
                                                                                "maxLength": 64
                                                                            },
                                                                            "privateKeySecretRef": {
                                                                                "description": "PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "name"
                                                                                ],
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\". Only ACME v2 endpoints (i.e. RFC 8555) are supported.",
                                                                                "type": "string"
                                                                            },
                                                                            "skipTLSVerify": {
                                                                                "description": "Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "solvers": {
                                                                                "description": "Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "description": "Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.",
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "dns01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "acmeDNS": {
                                                                                                    "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accountSecretRef",
                                                                                                        "host"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "host": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "akamai": {
                                                                                                    "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accessTokenSecretRef",
                                                                                                        "clientSecretSecretRef",
                                                                                                        "clientTokenSecretRef",
                                                                                                        "serviceConsumerDomain"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceConsumerDomain": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "azureDNS": {
                                                                                                    "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "resourceGroupName",
                                                                                                        "subscriptionID"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "clientID": {
                                                                                                            "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "environment": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "AzurePublicCloud",
                                                                                                                "AzureChinaCloud",
                                                                                                                "AzureGermanCloud",
                                                                                                                "AzureUSGovernmentCloud"
                                                                                                            ]
                                                                                                        },
                                                                                                        "hostedZoneName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "resourceGroupName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "subscriptionID": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tenantID": {
                                                                                                            "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudDNS": {
                                                                                                    "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "project"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "hostedZoneName": {
                                                                                                            "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "project": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "serviceAccountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudflare": {
                                                                                                    "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "apiKeySecretRef": {
                                                                                                            "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "apiTokenSecretRef": {
                                                                                                            "description": "API token used to authenticate with Cloudflare.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "email": {
                                                                                                            "description": "Email of the account, only required when using API key based authentication.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cnameStrategy": {
                                                                                                    "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "None",
                                                                                                        "Follow"
                                                                                                    ]
                                                                                                },
                                                                                                "digitalocean": {
                                                                                                    "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "tokenSecretRef"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "tokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "rfc2136": {
                                                                                                    "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "nameserver"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "nameserver": {
                                                                                                            "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigAlgorithm": {
                                                                                                            "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigKeyName": {
                                                                                                            "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigSecretSecretRef": {
                                                                                                            "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "route53": {
                                                                                                    "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "region"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessKeyID": {
                                                                                                            "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "hostedZoneID": {
                                                                                                            "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "region": {
                                                                                                            "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "role": {
                                                                                                            "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "secretAccessKeySecretRef": {
                                                                                                            "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "webhook": {
                                                                                                    "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "groupName",
                                                                                                        "solverName"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "config": {
                                                                                                            "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                            "x-kubernetes-preserve-unknown-fields": true
                                                                                                        },
                                                                                                        "groupName": {
                                                                                                            "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "solverName": {
                                                                                                            "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "http01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "ingress": {
                                                                                                    "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "class": {
                                                                                                            "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "ingressTemplate": {
                                                                                                            "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "name": {
                                                                                                            "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "podTemplate": {
                                                                                                            "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "spec": {
                                                                                                                    "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "affinity": {
                                                                                                                            "description": "If specified, the pod's scheduling constraints",
                                                                                                                            "type": "object",
                                                                                                                            "properties": {
                                                                                                                                "nodeAffinity": {
                                                                                                                                    "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "preference",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "preference": {
                                                                                                                                                        "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "nodeSelectorTerms"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "nodeSelectorTerms": {
                                                                                                                                                    "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAffinity": {
                                                                                                                                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAntiAffinity": {
                                                                                                                                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "nodeSelector": {
                                                                                                                            "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "priorityClassName": {
                                                                                                                            "description": "If specified, the pod's priorityClassName.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "serviceAccountName": {
                                                                                                                            "description": "If specified, the pod's service account",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerations": {
                                                                                                                            "description": "If specified, the pod's tolerations.",
                                                                                                                            "type": "array",
                                                                                                                            "items": {
                                                                                                                                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "effect": {
                                                                                                                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "key": {
                                                                                                                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "operator": {
                                                                                                                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "tolerationSeconds": {
                                                                                                                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                                        "type": "integer",
                                                                                                                                        "format": "int64"
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                                        "type": "string"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceType": {
                                                                                                            "description": "Optional service type for Kubernetes solver service",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "selector": {
                                                                                            "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "dnsNames": {
                                                                                                    "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "dnsZones": {
                                                                                                    "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                                    "type": "object",
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "ca": {
                                                                        "description": "CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "secretName"
                                                                        ],
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "ocspServers": {
                                                                                "description": "The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be \"http://ocsp.int-x3.letsencrypt.org\".",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "secretName": {
                                                                                "description": "SecretName is the name of the secret used to sign Certificates issued by this Issuer.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "selfSigned": {
                                                                        "description": "SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "vault": {
                                                                        "description": "Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "auth",
                                                                            "path",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "auth": {
                                                                                "description": "Auth configures how cert-manager authenticates with the Vault server.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "appRole": {
                                                                                        "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "path",
                                                                                            "roleId",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "path": {
                                                                                                "description": "Path where the App Role authentication backend is mounted in Vault, e.g: \"approle\"",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "roleId": {
                                                                                                "description": "RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "kubernetes": {
                                                                                        "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "role",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mountPath": {
                                                                                                "description": "The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "tokenSecretRef": {
                                                                                        "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "caBundle": {
                                                                                "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.",
                                                                                "type": "string",
                                                                                "format": "byte"
                                                                            },
                                                                            "namespace": {
                                                                                "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                                                                                "type": "string"
                                                                            },
                                                                            "path": {
                                                                                "description": "Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".",
                                                                                "type": "string"
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "venafi": {
                                                                        "description": "Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "zone"
                                                                        ],
                                                                        "properties": {
                                                                            "cloud": {
                                                                                "description": "Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "apiTokenSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "apiTokenSecretRef": {
                                                                                        "description": "APITokenSecretRef is a secret key selector for the Venafi Cloud API token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for Venafi Cloud. Defaults to \"https://api.venafi.cloud/v1\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "tpp": {
                                                                                "description": "TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "credentialsRef",
                                                                                    "url"
                                                                                ],
                                                                                "properties": {
                                                                                    "caBundle": {
                                                                                        "description": "CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "credentialsRef": {
                                                                                        "description": "CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "zone": {
                                                                                "description": "Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the ClusterIssuer. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "lastRegisteredEmail": {
                                                                                "description": "LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer",
                                                                                "type": "string"
                                                                            },
                                                                            "uri": {
                                                                                "description": "URI is the unique account identifier, which can also be used to retrieve account details from the CA",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "IssuerCondition contains condition information for an Issuer.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1",
                                                "served": true,
                                                "storage": true,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "A ClusterIssuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is similar to an Issuer, however it is cluster-scoped and therefore can be referenced by resources that exist in *any* namespace, not just the same namespace as the referent.",
                                                        "type": "object",
                                                        "required": [
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the ClusterIssuer resource.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "privateKeySecretRef",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "disableAccountKeyGeneration": {
                                                                                "description": "Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "email": {
                                                                                "description": "Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.",
                                                                                "type": "string"
                                                                            },
                                                                            "enableDurationFeature": {
                                                                                "description": "Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "externalAccountBinding": {
                                                                                "description": "ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "keyAlgorithm",
                                                                                    "keyID",
                                                                                    "keySecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "keyAlgorithm": {
                                                                                        "description": "keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "HS256",
                                                                                            "HS384",
                                                                                            "HS512"
                                                                                        ]
                                                                                    },
                                                                                    "keyID": {
                                                                                        "description": "keyID is the ID of the CA key that the External Account is bound to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "keySecretRef": {
                                                                                        "description": "keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "preferredChain": {
                                                                                "description": "PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: \"DST Root CA X3\" or \"ISRG Root X1\" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN",
                                                                                "type": "string",
                                                                                "maxLength": 64
                                                                            },
                                                                            "privateKeySecretRef": {
                                                                                "description": "PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "name"
                                                                                ],
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\". Only ACME v2 endpoints (i.e. RFC 8555) are supported.",
                                                                                "type": "string"
                                                                            },
                                                                            "skipTLSVerify": {
                                                                                "description": "Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "solvers": {
                                                                                "description": "Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "description": "Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.",
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "dns01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "acmeDNS": {
                                                                                                    "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accountSecretRef",
                                                                                                        "host"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "host": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "akamai": {
                                                                                                    "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accessTokenSecretRef",
                                                                                                        "clientSecretSecretRef",
                                                                                                        "clientTokenSecretRef",
                                                                                                        "serviceConsumerDomain"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceConsumerDomain": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "azureDNS": {
                                                                                                    "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "resourceGroupName",
                                                                                                        "subscriptionID"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "clientID": {
                                                                                                            "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "environment": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "AzurePublicCloud",
                                                                                                                "AzureChinaCloud",
                                                                                                                "AzureGermanCloud",
                                                                                                                "AzureUSGovernmentCloud"
                                                                                                            ]
                                                                                                        },
                                                                                                        "hostedZoneName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "resourceGroupName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "subscriptionID": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tenantID": {
                                                                                                            "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudDNS": {
                                                                                                    "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "project"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "hostedZoneName": {
                                                                                                            "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "project": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "serviceAccountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudflare": {
                                                                                                    "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "apiKeySecretRef": {
                                                                                                            "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "apiTokenSecretRef": {
                                                                                                            "description": "API token used to authenticate with Cloudflare.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "email": {
                                                                                                            "description": "Email of the account, only required when using API key based authentication.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cnameStrategy": {
                                                                                                    "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "None",
                                                                                                        "Follow"
                                                                                                    ]
                                                                                                },
                                                                                                "digitalocean": {
                                                                                                    "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "tokenSecretRef"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "tokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "rfc2136": {
                                                                                                    "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "nameserver"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "nameserver": {
                                                                                                            "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigAlgorithm": {
                                                                                                            "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigKeyName": {
                                                                                                            "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigSecretSecretRef": {
                                                                                                            "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "route53": {
                                                                                                    "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "region"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessKeyID": {
                                                                                                            "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "hostedZoneID": {
                                                                                                            "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "region": {
                                                                                                            "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "role": {
                                                                                                            "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "secretAccessKeySecretRef": {
                                                                                                            "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "webhook": {
                                                                                                    "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "groupName",
                                                                                                        "solverName"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "config": {
                                                                                                            "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                            "x-kubernetes-preserve-unknown-fields": true
                                                                                                        },
                                                                                                        "groupName": {
                                                                                                            "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "solverName": {
                                                                                                            "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "http01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "ingress": {
                                                                                                    "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "class": {
                                                                                                            "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "ingressTemplate": {
                                                                                                            "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "name": {
                                                                                                            "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "podTemplate": {
                                                                                                            "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "spec": {
                                                                                                                    "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "affinity": {
                                                                                                                            "description": "If specified, the pod's scheduling constraints",
                                                                                                                            "type": "object",
                                                                                                                            "properties": {
                                                                                                                                "nodeAffinity": {
                                                                                                                                    "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "preference",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "preference": {
                                                                                                                                                        "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "nodeSelectorTerms"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "nodeSelectorTerms": {
                                                                                                                                                    "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAffinity": {
                                                                                                                                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAntiAffinity": {
                                                                                                                                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "nodeSelector": {
                                                                                                                            "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "priorityClassName": {
                                                                                                                            "description": "If specified, the pod's priorityClassName.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "serviceAccountName": {
                                                                                                                            "description": "If specified, the pod's service account",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerations": {
                                                                                                                            "description": "If specified, the pod's tolerations.",
                                                                                                                            "type": "array",
                                                                                                                            "items": {
                                                                                                                                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "effect": {
                                                                                                                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "key": {
                                                                                                                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "operator": {
                                                                                                                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "tolerationSeconds": {
                                                                                                                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                                        "type": "integer",
                                                                                                                                        "format": "int64"
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                                        "type": "string"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceType": {
                                                                                                            "description": "Optional service type for Kubernetes solver service",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "selector": {
                                                                                            "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "dnsNames": {
                                                                                                    "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "dnsZones": {
                                                                                                    "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                                    "type": "object",
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "ca": {
                                                                        "description": "CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "secretName"
                                                                        ],
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "ocspServers": {
                                                                                "description": "The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be \"http://ocsp.int-x3.letsencrypt.org\".",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "secretName": {
                                                                                "description": "SecretName is the name of the secret used to sign Certificates issued by this Issuer.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "selfSigned": {
                                                                        "description": "SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "vault": {
                                                                        "description": "Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "auth",
                                                                            "path",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "auth": {
                                                                                "description": "Auth configures how cert-manager authenticates with the Vault server.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "appRole": {
                                                                                        "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "path",
                                                                                            "roleId",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "path": {
                                                                                                "description": "Path where the App Role authentication backend is mounted in Vault, e.g: \"approle\"",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "roleId": {
                                                                                                "description": "RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "kubernetes": {
                                                                                        "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "role",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mountPath": {
                                                                                                "description": "The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "tokenSecretRef": {
                                                                                        "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "caBundle": {
                                                                                "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.",
                                                                                "type": "string",
                                                                                "format": "byte"
                                                                            },
                                                                            "namespace": {
                                                                                "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                                                                                "type": "string"
                                                                            },
                                                                            "path": {
                                                                                "description": "Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".",
                                                                                "type": "string"
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "venafi": {
                                                                        "description": "Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "zone"
                                                                        ],
                                                                        "properties": {
                                                                            "cloud": {
                                                                                "description": "Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "apiTokenSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "apiTokenSecretRef": {
                                                                                        "description": "APITokenSecretRef is a secret key selector for the Venafi Cloud API token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for Venafi Cloud. Defaults to \"https://api.venafi.cloud/v1\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "tpp": {
                                                                                "description": "TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "credentialsRef",
                                                                                    "url"
                                                                                ],
                                                                                "properties": {
                                                                                    "caBundle": {
                                                                                        "description": "CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "credentialsRef": {
                                                                                        "description": "CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "zone": {
                                                                                "description": "Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the ClusterIssuer. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "lastRegisteredEmail": {
                                                                                "description": "LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer",
                                                                                "type": "string"
                                                                            },
                                                                            "uri": {
                                                                                "description": "URI is the unique account identifier, which can also be used to retrieve account details from the CA",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "IssuerCondition contains condition information for an Issuer.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            }
                                        ],
                                        "conversion": {
                                            "strategy": "Webhook",
                                            "webhook": {
                                                "clientConfig": {
                                                    "service": {
                                                        "namespace": "cert-manager",
                                                        "name": "cert-manager-webhook",
                                                        "path": "/convert",
                                                        "port": 443
                                                    },
                                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQU1WaXFjcXFEVVJlcTBIYjdGSXBIREl3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFd09ESXpNVE15TXpFMApXaGNOTWpJd09ESXpNVE15TXpFMFdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJJY2ZEL3ovc1Yvd09SM1V1MzNxR3NUYk9SS3gKYjVQdXJiVXM5dy91d3RibVJwVlJuMVp4dVFXSGsrRUltbVNmdEQzbTE0ZnZtLzJSN1F2bXEycHI1UURSRHRrcgo3Uy95ZTdHbXFhaGZqQnpqbEZSV0E5SU9sYTVSWDZBd2JPRVpLNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHSUJoQ3paSyswanljRU5GbFpVZGh1K0tlN0sKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFERkxBcURPQnpRYkp5WjYzWlFVQktJcGh5Mm9qbnVpQVA2NFgreAo4aElMNTMvOFBJbDI5MDg0REVqSTU4cUp1NUlDTVFDNGRmVm1XOXN3bGtVVTRlU0JKdVgyZ1k4WjFNR1VweEhCCmM4cmNLZEFkVHkrbUVCVnpqQUxqc0Z4dUxTSmZkS2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                                                },
                                                "conversionReviewVersions": [
                                                    "v1",
                                                    "v1beta1"
                                                ]
                                            }
                                        }
                                    },
                                    "status": {
                                        "conditions": [
                                            {
                                                "type": "NamesAccepted",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:45Z",
                                                "reason": "NoConflicts",
                                                "message": "no conflicts found"
                                            },
                                            {
                                                "type": "Established",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:45Z",
                                                "reason": "InitialNamesAccepted",
                                                "message": "the initial names have been accepted"
                                            }
                                        ],
                                        "acceptedNames": {
                                            "plural": "clusterissuers",
                                            "singular": "clusterissuer",
                                            "kind": "ClusterIssuer",
                                            "listKind": "ClusterIssuerList",
                                            "categories": [
                                                "cert-manager"
                                            ]
                                        },
                                        "storedVersions": [
                                            "v1"
                                        ]
                                    }
                                },
                                "name": "clusterissuers.cert-manager.io",
                                "id": "clusterissuers.cert-manager.io",
                                "meta": {
                                    "name": "clusterissuers.cert-manager.io",
                                    "uid": "77ddb21b-3f9c-46f6-91c4-78f4ee560017",
                                    "resourceVersion": "1308",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "clusterissuers.cert-manager.io",
                                        "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::CustomResourceDefinition::clusterissuers.cert-manager.io",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "clusterissuers.cert-manager.io"
                            },
                            {
                                "groupType": "::CustomResourceDefinition",
                                "group": "",
                                "type": "CustomResourceDefinition",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "issuers.cert-manager.io",
                                        "uid": "7c2b1a4a-bd1a-44a6-a809-9d0ebd340dce",
                                        "resourceVersion": "1310",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "issuers.cert-manager.io",
                                            "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "group": "cert-manager.io",
                                        "names": {
                                            "plural": "issuers",
                                            "singular": "issuer",
                                            "kind": "Issuer",
                                            "listKind": "IssuerList",
                                            "categories": [
                                                "cert-manager"
                                            ]
                                        },
                                        "scope": "Namespaced",
                                        "versions": [
                                            {
                                                "name": "v1alpha2",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.",
                                                        "type": "object",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the Issuer resource.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "privateKeySecretRef",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "disableAccountKeyGeneration": {
                                                                                "description": "Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "email": {
                                                                                "description": "Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.",
                                                                                "type": "string"
                                                                            },
                                                                            "enableDurationFeature": {
                                                                                "description": "Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "externalAccountBinding": {
                                                                                "description": "ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "keyAlgorithm",
                                                                                    "keyID",
                                                                                    "keySecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "keyAlgorithm": {
                                                                                        "description": "keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "HS256",
                                                                                            "HS384",
                                                                                            "HS512"
                                                                                        ]
                                                                                    },
                                                                                    "keyID": {
                                                                                        "description": "keyID is the ID of the CA key that the External Account is bound to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "keySecretRef": {
                                                                                        "description": "keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "preferredChain": {
                                                                                "description": "PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: \"DST Root CA X3\" or \"ISRG Root X1\" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN",
                                                                                "type": "string",
                                                                                "maxLength": 64
                                                                            },
                                                                            "privateKeySecretRef": {
                                                                                "description": "PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "name"
                                                                                ],
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\". Only ACME v2 endpoints (i.e. RFC 8555) are supported.",
                                                                                "type": "string"
                                                                            },
                                                                            "skipTLSVerify": {
                                                                                "description": "Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "solvers": {
                                                                                "description": "Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "description": "Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.",
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "dns01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "acmedns": {
                                                                                                    "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accountSecretRef",
                                                                                                        "host"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "host": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "akamai": {
                                                                                                    "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accessTokenSecretRef",
                                                                                                        "clientSecretSecretRef",
                                                                                                        "clientTokenSecretRef",
                                                                                                        "serviceConsumerDomain"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceConsumerDomain": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "azuredns": {
                                                                                                    "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "resourceGroupName",
                                                                                                        "subscriptionID"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "clientID": {
                                                                                                            "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "environment": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "AzurePublicCloud",
                                                                                                                "AzureChinaCloud",
                                                                                                                "AzureGermanCloud",
                                                                                                                "AzureUSGovernmentCloud"
                                                                                                            ]
                                                                                                        },
                                                                                                        "hostedZoneName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "resourceGroupName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "subscriptionID": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tenantID": {
                                                                                                            "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "clouddns": {
                                                                                                    "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "project"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "hostedZoneName": {
                                                                                                            "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "project": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "serviceAccountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudflare": {
                                                                                                    "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "apiKeySecretRef": {
                                                                                                            "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "apiTokenSecretRef": {
                                                                                                            "description": "API token used to authenticate with Cloudflare.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "email": {
                                                                                                            "description": "Email of the account, only required when using API key based authentication.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cnameStrategy": {
                                                                                                    "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "None",
                                                                                                        "Follow"
                                                                                                    ]
                                                                                                },
                                                                                                "digitalocean": {
                                                                                                    "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "tokenSecretRef"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "tokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "rfc2136": {
                                                                                                    "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "nameserver"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "nameserver": {
                                                                                                            "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigAlgorithm": {
                                                                                                            "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigKeyName": {
                                                                                                            "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigSecretSecretRef": {
                                                                                                            "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "route53": {
                                                                                                    "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "region"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessKeyID": {
                                                                                                            "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "hostedZoneID": {
                                                                                                            "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "region": {
                                                                                                            "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "role": {
                                                                                                            "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "secretAccessKeySecretRef": {
                                                                                                            "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "webhook": {
                                                                                                    "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "groupName",
                                                                                                        "solverName"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "config": {
                                                                                                            "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                            "x-kubernetes-preserve-unknown-fields": true
                                                                                                        },
                                                                                                        "groupName": {
                                                                                                            "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "solverName": {
                                                                                                            "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "http01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "ingress": {
                                                                                                    "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "class": {
                                                                                                            "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "ingressTemplate": {
                                                                                                            "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "name": {
                                                                                                            "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "podTemplate": {
                                                                                                            "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "spec": {
                                                                                                                    "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "affinity": {
                                                                                                                            "description": "If specified, the pod's scheduling constraints",
                                                                                                                            "type": "object",
                                                                                                                            "properties": {
                                                                                                                                "nodeAffinity": {
                                                                                                                                    "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "preference",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "preference": {
                                                                                                                                                        "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "nodeSelectorTerms"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "nodeSelectorTerms": {
                                                                                                                                                    "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAffinity": {
                                                                                                                                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAntiAffinity": {
                                                                                                                                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "nodeSelector": {
                                                                                                                            "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "priorityClassName": {
                                                                                                                            "description": "If specified, the pod's priorityClassName.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "serviceAccountName": {
                                                                                                                            "description": "If specified, the pod's service account",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerations": {
                                                                                                                            "description": "If specified, the pod's tolerations.",
                                                                                                                            "type": "array",
                                                                                                                            "items": {
                                                                                                                                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "effect": {
                                                                                                                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "key": {
                                                                                                                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "operator": {
                                                                                                                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "tolerationSeconds": {
                                                                                                                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                                        "type": "integer",
                                                                                                                                        "format": "int64"
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                                        "type": "string"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceType": {
                                                                                                            "description": "Optional service type for Kubernetes solver service",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "selector": {
                                                                                            "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "dnsNames": {
                                                                                                    "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "dnsZones": {
                                                                                                    "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                                    "type": "object",
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "ca": {
                                                                        "description": "CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "secretName"
                                                                        ],
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "ocspServers": {
                                                                                "description": "The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be \"http://ocsp.int-x3.letsencrypt.org\".",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "secretName": {
                                                                                "description": "SecretName is the name of the secret used to sign Certificates issued by this Issuer.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "selfSigned": {
                                                                        "description": "SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "vault": {
                                                                        "description": "Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "auth",
                                                                            "path",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "auth": {
                                                                                "description": "Auth configures how cert-manager authenticates with the Vault server.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "appRole": {
                                                                                        "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "path",
                                                                                            "roleId",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "path": {
                                                                                                "description": "Path where the App Role authentication backend is mounted in Vault, e.g: \"approle\"",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "roleId": {
                                                                                                "description": "RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "kubernetes": {
                                                                                        "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "role",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mountPath": {
                                                                                                "description": "The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "tokenSecretRef": {
                                                                                        "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "caBundle": {
                                                                                "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.",
                                                                                "type": "string",
                                                                                "format": "byte"
                                                                            },
                                                                            "namespace": {
                                                                                "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                                                                                "type": "string"
                                                                            },
                                                                            "path": {
                                                                                "description": "Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".",
                                                                                "type": "string"
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "venafi": {
                                                                        "description": "Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "zone"
                                                                        ],
                                                                        "properties": {
                                                                            "cloud": {
                                                                                "description": "Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "apiTokenSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "apiTokenSecretRef": {
                                                                                        "description": "APITokenSecretRef is a secret key selector for the Venafi Cloud API token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for Venafi Cloud. Defaults to \"https://api.venafi.cloud/v1\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "tpp": {
                                                                                "description": "TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "credentialsRef",
                                                                                    "url"
                                                                                ],
                                                                                "properties": {
                                                                                    "caBundle": {
                                                                                        "description": "CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "credentialsRef": {
                                                                                        "description": "CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "zone": {
                                                                                "description": "Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the Issuer. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "lastRegisteredEmail": {
                                                                                "description": "LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer",
                                                                                "type": "string"
                                                                            },
                                                                            "uri": {
                                                                                "description": "URI is the unique account identifier, which can also be used to retrieve account details from the CA",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "IssuerCondition contains condition information for an Issuer.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1alpha3",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.",
                                                        "type": "object",
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the Issuer resource.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "privateKeySecretRef",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "disableAccountKeyGeneration": {
                                                                                "description": "Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "email": {
                                                                                "description": "Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.",
                                                                                "type": "string"
                                                                            },
                                                                            "enableDurationFeature": {
                                                                                "description": "Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "externalAccountBinding": {
                                                                                "description": "ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "keyAlgorithm",
                                                                                    "keyID",
                                                                                    "keySecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "keyAlgorithm": {
                                                                                        "description": "keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "HS256",
                                                                                            "HS384",
                                                                                            "HS512"
                                                                                        ]
                                                                                    },
                                                                                    "keyID": {
                                                                                        "description": "keyID is the ID of the CA key that the External Account is bound to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "keySecretRef": {
                                                                                        "description": "keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "preferredChain": {
                                                                                "description": "PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: \"DST Root CA X3\" or \"ISRG Root X1\" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN",
                                                                                "type": "string",
                                                                                "maxLength": 64
                                                                            },
                                                                            "privateKeySecretRef": {
                                                                                "description": "PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "name"
                                                                                ],
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\". Only ACME v2 endpoints (i.e. RFC 8555) are supported.",
                                                                                "type": "string"
                                                                            },
                                                                            "skipTLSVerify": {
                                                                                "description": "Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "solvers": {
                                                                                "description": "Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "description": "Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.",
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "dns01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "acmedns": {
                                                                                                    "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accountSecretRef",
                                                                                                        "host"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "host": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "akamai": {
                                                                                                    "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accessTokenSecretRef",
                                                                                                        "clientSecretSecretRef",
                                                                                                        "clientTokenSecretRef",
                                                                                                        "serviceConsumerDomain"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceConsumerDomain": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "azuredns": {
                                                                                                    "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "resourceGroupName",
                                                                                                        "subscriptionID"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "clientID": {
                                                                                                            "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "environment": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "AzurePublicCloud",
                                                                                                                "AzureChinaCloud",
                                                                                                                "AzureGermanCloud",
                                                                                                                "AzureUSGovernmentCloud"
                                                                                                            ]
                                                                                                        },
                                                                                                        "hostedZoneName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "resourceGroupName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "subscriptionID": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tenantID": {
                                                                                                            "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "clouddns": {
                                                                                                    "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "project"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "hostedZoneName": {
                                                                                                            "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "project": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "serviceAccountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudflare": {
                                                                                                    "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "apiKeySecretRef": {
                                                                                                            "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "apiTokenSecretRef": {
                                                                                                            "description": "API token used to authenticate with Cloudflare.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "email": {
                                                                                                            "description": "Email of the account, only required when using API key based authentication.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cnameStrategy": {
                                                                                                    "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "None",
                                                                                                        "Follow"
                                                                                                    ]
                                                                                                },
                                                                                                "digitalocean": {
                                                                                                    "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "tokenSecretRef"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "tokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "rfc2136": {
                                                                                                    "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "nameserver"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "nameserver": {
                                                                                                            "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigAlgorithm": {
                                                                                                            "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigKeyName": {
                                                                                                            "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigSecretSecretRef": {
                                                                                                            "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "route53": {
                                                                                                    "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "region"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessKeyID": {
                                                                                                            "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "hostedZoneID": {
                                                                                                            "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "region": {
                                                                                                            "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "role": {
                                                                                                            "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "secretAccessKeySecretRef": {
                                                                                                            "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "webhook": {
                                                                                                    "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "groupName",
                                                                                                        "solverName"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "config": {
                                                                                                            "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                            "x-kubernetes-preserve-unknown-fields": true
                                                                                                        },
                                                                                                        "groupName": {
                                                                                                            "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "solverName": {
                                                                                                            "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "http01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "ingress": {
                                                                                                    "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "class": {
                                                                                                            "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "ingressTemplate": {
                                                                                                            "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "name": {
                                                                                                            "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "podTemplate": {
                                                                                                            "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "spec": {
                                                                                                                    "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "affinity": {
                                                                                                                            "description": "If specified, the pod's scheduling constraints",
                                                                                                                            "type": "object",
                                                                                                                            "properties": {
                                                                                                                                "nodeAffinity": {
                                                                                                                                    "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "preference",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "preference": {
                                                                                                                                                        "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "nodeSelectorTerms"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "nodeSelectorTerms": {
                                                                                                                                                    "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAffinity": {
                                                                                                                                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAntiAffinity": {
                                                                                                                                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "nodeSelector": {
                                                                                                                            "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "priorityClassName": {
                                                                                                                            "description": "If specified, the pod's priorityClassName.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "serviceAccountName": {
                                                                                                                            "description": "If specified, the pod's service account",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerations": {
                                                                                                                            "description": "If specified, the pod's tolerations.",
                                                                                                                            "type": "array",
                                                                                                                            "items": {
                                                                                                                                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "effect": {
                                                                                                                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "key": {
                                                                                                                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "operator": {
                                                                                                                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "tolerationSeconds": {
                                                                                                                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                                        "type": "integer",
                                                                                                                                        "format": "int64"
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                                        "type": "string"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceType": {
                                                                                                            "description": "Optional service type for Kubernetes solver service",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "selector": {
                                                                                            "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "dnsNames": {
                                                                                                    "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "dnsZones": {
                                                                                                    "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                                    "type": "object",
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "ca": {
                                                                        "description": "CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "secretName"
                                                                        ],
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "ocspServers": {
                                                                                "description": "The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be \"http://ocsp.int-x3.letsencrypt.org\".",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "secretName": {
                                                                                "description": "SecretName is the name of the secret used to sign Certificates issued by this Issuer.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "selfSigned": {
                                                                        "description": "SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "vault": {
                                                                        "description": "Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "auth",
                                                                            "path",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "auth": {
                                                                                "description": "Auth configures how cert-manager authenticates with the Vault server.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "appRole": {
                                                                                        "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "path",
                                                                                            "roleId",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "path": {
                                                                                                "description": "Path where the App Role authentication backend is mounted in Vault, e.g: \"approle\"",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "roleId": {
                                                                                                "description": "RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "kubernetes": {
                                                                                        "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "role",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mountPath": {
                                                                                                "description": "The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "tokenSecretRef": {
                                                                                        "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "caBundle": {
                                                                                "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.",
                                                                                "type": "string",
                                                                                "format": "byte"
                                                                            },
                                                                            "namespace": {
                                                                                "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                                                                                "type": "string"
                                                                            },
                                                                            "path": {
                                                                                "description": "Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".",
                                                                                "type": "string"
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "venafi": {
                                                                        "description": "Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "zone"
                                                                        ],
                                                                        "properties": {
                                                                            "cloud": {
                                                                                "description": "Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "apiTokenSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "apiTokenSecretRef": {
                                                                                        "description": "APITokenSecretRef is a secret key selector for the Venafi Cloud API token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for Venafi Cloud. Defaults to \"https://api.venafi.cloud/v1\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "tpp": {
                                                                                "description": "TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "credentialsRef",
                                                                                    "url"
                                                                                ],
                                                                                "properties": {
                                                                                    "caBundle": {
                                                                                        "description": "CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "credentialsRef": {
                                                                                        "description": "CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "zone": {
                                                                                "description": "Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the Issuer. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "lastRegisteredEmail": {
                                                                                "description": "LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer",
                                                                                "type": "string"
                                                                            },
                                                                            "uri": {
                                                                                "description": "URI is the unique account identifier, which can also be used to retrieve account details from the CA",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "IssuerCondition contains condition information for an Issuer.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1beta1",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.",
                                                        "type": "object",
                                                        "required": [
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the Issuer resource.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "privateKeySecretRef",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "disableAccountKeyGeneration": {
                                                                                "description": "Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "email": {
                                                                                "description": "Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.",
                                                                                "type": "string"
                                                                            },
                                                                            "enableDurationFeature": {
                                                                                "description": "Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "externalAccountBinding": {
                                                                                "description": "ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "keyAlgorithm",
                                                                                    "keyID",
                                                                                    "keySecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "keyAlgorithm": {
                                                                                        "description": "keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "HS256",
                                                                                            "HS384",
                                                                                            "HS512"
                                                                                        ]
                                                                                    },
                                                                                    "keyID": {
                                                                                        "description": "keyID is the ID of the CA key that the External Account is bound to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "keySecretRef": {
                                                                                        "description": "keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "preferredChain": {
                                                                                "description": "PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: \"DST Root CA X3\" or \"ISRG Root X1\" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN",
                                                                                "type": "string",
                                                                                "maxLength": 64
                                                                            },
                                                                            "privateKeySecretRef": {
                                                                                "description": "PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "name"
                                                                                ],
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\". Only ACME v2 endpoints (i.e. RFC 8555) are supported.",
                                                                                "type": "string"
                                                                            },
                                                                            "skipTLSVerify": {
                                                                                "description": "Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "solvers": {
                                                                                "description": "Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "description": "Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.",
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "dns01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "acmeDNS": {
                                                                                                    "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accountSecretRef",
                                                                                                        "host"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "host": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "akamai": {
                                                                                                    "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accessTokenSecretRef",
                                                                                                        "clientSecretSecretRef",
                                                                                                        "clientTokenSecretRef",
                                                                                                        "serviceConsumerDomain"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceConsumerDomain": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "azureDNS": {
                                                                                                    "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "resourceGroupName",
                                                                                                        "subscriptionID"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "clientID": {
                                                                                                            "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "environment": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "AzurePublicCloud",
                                                                                                                "AzureChinaCloud",
                                                                                                                "AzureGermanCloud",
                                                                                                                "AzureUSGovernmentCloud"
                                                                                                            ]
                                                                                                        },
                                                                                                        "hostedZoneName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "resourceGroupName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "subscriptionID": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tenantID": {
                                                                                                            "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudDNS": {
                                                                                                    "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "project"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "hostedZoneName": {
                                                                                                            "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "project": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "serviceAccountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudflare": {
                                                                                                    "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "apiKeySecretRef": {
                                                                                                            "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "apiTokenSecretRef": {
                                                                                                            "description": "API token used to authenticate with Cloudflare.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "email": {
                                                                                                            "description": "Email of the account, only required when using API key based authentication.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cnameStrategy": {
                                                                                                    "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "None",
                                                                                                        "Follow"
                                                                                                    ]
                                                                                                },
                                                                                                "digitalocean": {
                                                                                                    "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "tokenSecretRef"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "tokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "rfc2136": {
                                                                                                    "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "nameserver"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "nameserver": {
                                                                                                            "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigAlgorithm": {
                                                                                                            "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigKeyName": {
                                                                                                            "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigSecretSecretRef": {
                                                                                                            "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "route53": {
                                                                                                    "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "region"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessKeyID": {
                                                                                                            "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "hostedZoneID": {
                                                                                                            "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "region": {
                                                                                                            "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "role": {
                                                                                                            "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "secretAccessKeySecretRef": {
                                                                                                            "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "webhook": {
                                                                                                    "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "groupName",
                                                                                                        "solverName"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "config": {
                                                                                                            "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                            "x-kubernetes-preserve-unknown-fields": true
                                                                                                        },
                                                                                                        "groupName": {
                                                                                                            "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "solverName": {
                                                                                                            "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "http01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "ingress": {
                                                                                                    "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "class": {
                                                                                                            "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "ingressTemplate": {
                                                                                                            "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "name": {
                                                                                                            "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "podTemplate": {
                                                                                                            "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "spec": {
                                                                                                                    "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "affinity": {
                                                                                                                            "description": "If specified, the pod's scheduling constraints",
                                                                                                                            "type": "object",
                                                                                                                            "properties": {
                                                                                                                                "nodeAffinity": {
                                                                                                                                    "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "preference",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "preference": {
                                                                                                                                                        "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "nodeSelectorTerms"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "nodeSelectorTerms": {
                                                                                                                                                    "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAffinity": {
                                                                                                                                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAntiAffinity": {
                                                                                                                                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "nodeSelector": {
                                                                                                                            "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "priorityClassName": {
                                                                                                                            "description": "If specified, the pod's priorityClassName.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "serviceAccountName": {
                                                                                                                            "description": "If specified, the pod's service account",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerations": {
                                                                                                                            "description": "If specified, the pod's tolerations.",
                                                                                                                            "type": "array",
                                                                                                                            "items": {
                                                                                                                                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "effect": {
                                                                                                                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "key": {
                                                                                                                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "operator": {
                                                                                                                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "tolerationSeconds": {
                                                                                                                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                                        "type": "integer",
                                                                                                                                        "format": "int64"
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                                        "type": "string"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceType": {
                                                                                                            "description": "Optional service type for Kubernetes solver service",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "selector": {
                                                                                            "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "dnsNames": {
                                                                                                    "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "dnsZones": {
                                                                                                    "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                                    "type": "object",
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "ca": {
                                                                        "description": "CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "secretName"
                                                                        ],
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "ocspServers": {
                                                                                "description": "The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be \"http://ocsp.int-x3.letsencrypt.org\".",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "secretName": {
                                                                                "description": "SecretName is the name of the secret used to sign Certificates issued by this Issuer.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "selfSigned": {
                                                                        "description": "SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "vault": {
                                                                        "description": "Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "auth",
                                                                            "path",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "auth": {
                                                                                "description": "Auth configures how cert-manager authenticates with the Vault server.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "appRole": {
                                                                                        "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "path",
                                                                                            "roleId",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "path": {
                                                                                                "description": "Path where the App Role authentication backend is mounted in Vault, e.g: \"approle\"",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "roleId": {
                                                                                                "description": "RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "kubernetes": {
                                                                                        "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "role",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mountPath": {
                                                                                                "description": "The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "tokenSecretRef": {
                                                                                        "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "caBundle": {
                                                                                "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.",
                                                                                "type": "string",
                                                                                "format": "byte"
                                                                            },
                                                                            "namespace": {
                                                                                "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                                                                                "type": "string"
                                                                            },
                                                                            "path": {
                                                                                "description": "Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".",
                                                                                "type": "string"
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "venafi": {
                                                                        "description": "Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "zone"
                                                                        ],
                                                                        "properties": {
                                                                            "cloud": {
                                                                                "description": "Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "apiTokenSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "apiTokenSecretRef": {
                                                                                        "description": "APITokenSecretRef is a secret key selector for the Venafi Cloud API token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for Venafi Cloud. Defaults to \"https://api.venafi.cloud/v1\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "tpp": {
                                                                                "description": "TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "credentialsRef",
                                                                                    "url"
                                                                                ],
                                                                                "properties": {
                                                                                    "caBundle": {
                                                                                        "description": "CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "credentialsRef": {
                                                                                        "description": "CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "zone": {
                                                                                "description": "Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the Issuer. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "lastRegisteredEmail": {
                                                                                "description": "LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer",
                                                                                "type": "string"
                                                                            },
                                                                            "uri": {
                                                                                "description": "URI is the unique account identifier, which can also be used to retrieve account details from the CA",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "IssuerCondition contains condition information for an Issuer.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1",
                                                "served": true,
                                                "storage": true,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "An Issuer represents a certificate issuing authority which can be referenced as part of `issuerRef` fields. It is scoped to a single namespace and can therefore only be referenced by resources within the same namespace.",
                                                        "type": "object",
                                                        "required": [
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "description": "Desired state of the Issuer resource.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME configures this issuer to communicate with a RFC8555 (ACME) server to obtain signed x509 certificates.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "privateKeySecretRef",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "disableAccountKeyGeneration": {
                                                                                "description": "Enables or disables generating a new ACME account key. If true, the Issuer resource will *not* request a new account but will expect the account key to be supplied via an existing secret. If false, the cert-manager system will generate a new ACME account key for the Issuer. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "email": {
                                                                                "description": "Email is the email address to be associated with the ACME account. This field is optional, but it is strongly recommended to be set. It will be used to contact you in case of issues with your account or certificates, including expiry notification emails. This field may be updated after the account is initially registered.",
                                                                                "type": "string"
                                                                            },
                                                                            "enableDurationFeature": {
                                                                                "description": "Enables requesting a Not After date on certificates that matches the duration of the certificate. This is not supported by all ACME servers like Let's Encrypt. If set to true when the ACME server does not support it it will create an error on the Order. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "externalAccountBinding": {
                                                                                "description": "ExternalAccountBinding is a reference to a CA external account of the ACME server. If set, upon registration cert-manager will attempt to associate the given external account credentials with the registered ACME account.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "keyAlgorithm",
                                                                                    "keyID",
                                                                                    "keySecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "keyAlgorithm": {
                                                                                        "description": "keyAlgorithm is the MAC key algorithm that the key is used for. Valid values are \"HS256\", \"HS384\" and \"HS512\".",
                                                                                        "type": "string",
                                                                                        "enum": [
                                                                                            "HS256",
                                                                                            "HS384",
                                                                                            "HS512"
                                                                                        ]
                                                                                    },
                                                                                    "keyID": {
                                                                                        "description": "keyID is the ID of the CA key that the External Account is bound to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "keySecretRef": {
                                                                                        "description": "keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes Secret which holds the symmetric MAC key of the External Account Binding. The `key` is the index string that is paired with the key data in the Secret and should not be confused with the key data itself, or indeed with the External Account Binding keyID above. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "preferredChain": {
                                                                                "description": "PreferredChain is the chain to use if the ACME server outputs multiple. PreferredChain is no guarantee that this one gets delivered by the ACME endpoint. For example, for Let's Encrypt's DST crosssign you would use: \"DST Root CA X3\" or \"ISRG Root X1\" for the newer Let's Encrypt root CA. This value picks the first certificate bundle in the ACME alternative chains that has a certificate with this value as its issuer's CN",
                                                                                "type": "string",
                                                                                "maxLength": 64
                                                                            },
                                                                            "privateKeySecretRef": {
                                                                                "description": "PrivateKey is the name of a Kubernetes Secret resource that will be used to store the automatically generated ACME account private key. Optionally, a `key` may be specified to select a specific entry within the named Secret resource. If `key` is not specified, a default of `tls.key` will be used.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "name"
                                                                                ],
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "name": {
                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the URL used to access the ACME server's 'directory' endpoint. For example, for Let's Encrypt's staging endpoint, you would use: \"https://acme-staging-v02.api.letsencrypt.org/directory\". Only ACME v2 endpoints (i.e. RFC 8555) are supported.",
                                                                                "type": "string"
                                                                            },
                                                                            "skipTLSVerify": {
                                                                                "description": "Enables or disables validation of the ACME server TLS certificate. If true, requests to the ACME server will not have their TLS certificate validated (i.e. insecure connections will be allowed). Only enable this option in development environments. The cert-manager system installed roots will be used to verify connections to the ACME server if this is false. Defaults to false.",
                                                                                "type": "boolean"
                                                                            },
                                                                            "solvers": {
                                                                                "description": "Solvers is a list of challenge solvers that will be used to solve ACME challenges for the matching domains. Solver configurations must be provided in order to obtain certificates from an ACME server. For more information, see: https://cert-manager.io/docs/configuration/acme/",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "description": "Configures an issuer to solve challenges using the specified options. Only one of HTTP01 or DNS01 may be provided.",
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "dns01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the DNS01 challenge flow.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "acmeDNS": {
                                                                                                    "description": "Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accountSecretRef",
                                                                                                        "host"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "host": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "akamai": {
                                                                                                    "description": "Use the Akamai DNS zone management API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "accessTokenSecretRef",
                                                                                                        "clientSecretSecretRef",
                                                                                                        "clientTokenSecretRef",
                                                                                                        "serviceConsumerDomain"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "clientTokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceConsumerDomain": {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "azureDNS": {
                                                                                                    "description": "Use the Microsoft Azure DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "resourceGroupName",
                                                                                                        "subscriptionID"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "clientID": {
                                                                                                            "description": "if both this and ClientSecret are left unset MSI will be used",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "clientSecretSecretRef": {
                                                                                                            "description": "if both this and ClientID are left unset MSI will be used",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "environment": {
                                                                                                            "type": "string",
                                                                                                            "enum": [
                                                                                                                "AzurePublicCloud",
                                                                                                                "AzureChinaCloud",
                                                                                                                "AzureGermanCloud",
                                                                                                                "AzureUSGovernmentCloud"
                                                                                                            ]
                                                                                                        },
                                                                                                        "hostedZoneName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "resourceGroupName": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "subscriptionID": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tenantID": {
                                                                                                            "description": "when specifying ClientID and ClientSecret then this field is also needed",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudDNS": {
                                                                                                    "description": "Use the Google Cloud DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "project"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "hostedZoneName": {
                                                                                                            "description": "HostedZoneName is an optional field that tells cert-manager in which Cloud DNS zone the challenge record has to be created. If left empty cert-manager will automatically choose a zone.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "project": {
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "serviceAccountSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cloudflare": {
                                                                                                    "description": "Use the Cloudflare API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "apiKeySecretRef": {
                                                                                                            "description": "API key to use to authenticate with Cloudflare. Note: using an API token to authenticate is now the recommended method as it allows greater control of permissions.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "apiTokenSecretRef": {
                                                                                                            "description": "API token used to authenticate with Cloudflare.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "email": {
                                                                                                            "description": "Email of the account, only required when using API key based authentication.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "cnameStrategy": {
                                                                                                    "description": "CNAMEStrategy configures how the DNS01 provider should handle CNAME records when found in DNS zones.",
                                                                                                    "type": "string",
                                                                                                    "enum": [
                                                                                                        "None",
                                                                                                        "Follow"
                                                                                                    ]
                                                                                                },
                                                                                                "digitalocean": {
                                                                                                    "description": "Use the DigitalOcean DNS API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "tokenSecretRef"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "tokenSecretRef": {
                                                                                                            "description": "A reference to a specific 'key' within a Secret resource. In some instances, `key` is a required field.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "rfc2136": {
                                                                                                    "description": "Use RFC2136 (\"Dynamic Updates in the Domain Name System\") (https://datatracker.ietf.org/doc/rfc2136/) to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "nameserver"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "nameserver": {
                                                                                                            "description": "The IP address or hostname of an authoritative DNS server supporting RFC2136 in the form host:port. If the host is an IPv6 address it must be enclosed in square brackets (e.g [2001:db8::1]) ; port is optional. This field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigAlgorithm": {
                                                                                                            "description": "The TSIG Algorithm configured in the DNS supporting RFC2136. Used only when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined. Supported values are (case-insensitive): ``HMACMD5`` (default), ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigKeyName": {
                                                                                                            "description": "The TSIG Key name configured in the DNS. If ``tsigSecretSecretRef`` is defined, this field is required.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "tsigSecretSecretRef": {
                                                                                                            "description": "The name of the secret containing the TSIG value. If ``tsigKeyName`` is defined, this field is required.",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "route53": {
                                                                                                    "description": "Use the AWS Route53 API to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "region"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "accessKeyID": {
                                                                                                            "description": "The AccessKeyID is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "hostedZoneID": {
                                                                                                            "description": "If set, the provider will manage only this zone in Route53 and will not do an lookup using the route53:ListHostedZonesByName api call.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "region": {
                                                                                                            "description": "Always set the region when using AccessKeyID and SecretAccessKey",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "role": {
                                                                                                            "description": "Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "secretAccessKeySecretRef": {
                                                                                                            "description": "The SecretAccessKey is used for authentication. If not set we fall-back to using env vars, shared credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials",
                                                                                                            "type": "object",
                                                                                                            "required": [
                                                                                                                "name"
                                                                                                            ],
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "name": {
                                                                                                                    "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                },
                                                                                                "webhook": {
                                                                                                    "description": "Configure an external webhook based DNS01 challenge solver to manage DNS01 challenge records.",
                                                                                                    "type": "object",
                                                                                                    "required": [
                                                                                                        "groupName",
                                                                                                        "solverName"
                                                                                                    ],
                                                                                                    "properties": {
                                                                                                        "config": {
                                                                                                            "description": "Additional configuration that should be passed to the webhook apiserver when challenges are processed. This can contain arbitrary JSON data. Secret values should not be specified in this stanza. If secret values are needed (e.g. credentials for a DNS service), you should use a SecretKeySelector to reference a Secret resource. For details on the schema of this field, consult the webhook provider implementation's documentation.",
                                                                                                            "x-kubernetes-preserve-unknown-fields": true
                                                                                                        },
                                                                                                        "groupName": {
                                                                                                            "description": "The API group name that should be used when POSTing ChallengePayload resources to the webhook apiserver. This should be the same as the GroupName specified in the webhook provider implementation.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "solverName": {
                                                                                                            "description": "The name of the solver to use, as defined in the webhook provider implementation. This will typically be the name of the provider, e.g. 'cloudflare'.",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "http01": {
                                                                                            "description": "Configures cert-manager to attempt to complete authorizations by performing the HTTP01 challenge flow. It is not possible to obtain certificates for wildcard domain names (e.g. `*.example.com`) using the HTTP01 challenge mechanism.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "ingress": {
                                                                                                    "description": "The ingress based HTTP01 challenge solver will solve challenges by creating or modifying Ingress resources in order to route requests for '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are provisioned by cert-manager for each Challenge to be completed.",
                                                                                                    "type": "object",
                                                                                                    "properties": {
                                                                                                        "class": {
                                                                                                            "description": "The ingress class to use when creating Ingress resources to solve ACME challenges that use this challenge solver. Only one of 'class' or 'name' may be specified.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "ingressTemplate": {
                                                                                                            "description": "Optional ingress template used to configure the ACME challenge solver ingress used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the ingress used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver ingress.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "name": {
                                                                                                            "description": "The name of the ingress resource that should have ACME challenge solving routes inserted into it in order to solve HTTP01 challenges. This is typically used in conjunction with ingress controllers like ingress-gce, which maintains a 1:1 mapping between external IPs and ingress resources.",
                                                                                                            "type": "string"
                                                                                                        },
                                                                                                        "podTemplate": {
                                                                                                            "description": "Optional pod template used to configure the ACME challenge solver pods used for HTTP01 challenges",
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "metadata": {
                                                                                                                    "description": "ObjectMeta overrides for the pod used to solve HTTP01 challenges. Only the 'labels' and 'annotations' fields may be set. If labels or annotations overlap with in-built values, the values here will override the in-built values.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "annotations": {
                                                                                                                            "description": "Annotations that should be added to the create ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "labels": {
                                                                                                                            "description": "Labels that should be added to the created ACME HTTP01 solver pods.",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                },
                                                                                                                "spec": {
                                                                                                                    "description": "PodSpec defines overrides for the HTTP01 challenge solver pod. Only the 'priorityClassName', 'nodeSelector', 'affinity', 'serviceAccountName' and 'tolerations' fields are supported currently. All other fields will be ignored.",
                                                                                                                    "type": "object",
                                                                                                                    "properties": {
                                                                                                                        "affinity": {
                                                                                                                            "description": "If specified, the pod's scheduling constraints",
                                                                                                                            "type": "object",
                                                                                                                            "properties": {
                                                                                                                                "nodeAffinity": {
                                                                                                                                    "description": "Describes node affinity scheduling rules for the pod.",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "preference",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "preference": {
                                                                                                                                                        "description": "A node selector term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                                                                                                                                            "type": "object",
                                                                                                                                            "required": [
                                                                                                                                                "nodeSelectorTerms"
                                                                                                                                            ],
                                                                                                                                            "properties": {
                                                                                                                                                "nodeSelectorTerms": {
                                                                                                                                                    "description": "Required. A list of node selector terms. The terms are ORed.",
                                                                                                                                                    "type": "array",
                                                                                                                                                    "items": {
                                                                                                                                                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "A list of node selector requirements by node's labels.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchFields": {
                                                                                                                                                                "description": "A list of node selector requirements by node's fields.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "The label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAffinity": {
                                                                                                                                    "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "podAntiAffinity": {
                                                                                                                                    "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                                                                                                                    "type": "object",
                                                                                                                                    "properties": {
                                                                                                                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "podAffinityTerm",
                                                                                                                                                    "weight"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "podAffinityTerm": {
                                                                                                                                                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "required": [
                                                                                                                                                            "topologyKey"
                                                                                                                                                        ],
                                                                                                                                                        "properties": {
                                                                                                                                                            "labelSelector": {
                                                                                                                                                                "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "matchExpressions": {
                                                                                                                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                        "type": "array",
                                                                                                                                                                        "items": {
                                                                                                                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                            "type": "object",
                                                                                                                                                                            "required": [
                                                                                                                                                                                "key",
                                                                                                                                                                                "operator"
                                                                                                                                                                            ],
                                                                                                                                                                            "properties": {
                                                                                                                                                                                "key": {
                                                                                                                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "operator": {
                                                                                                                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                                    "type": "string"
                                                                                                                                                                                },
                                                                                                                                                                                "values": {
                                                                                                                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                                    "type": "array",
                                                                                                                                                                                    "items": {
                                                                                                                                                                                        "type": "string"
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "matchLabels": {
                                                                                                                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                        "type": "object",
                                                                                                                                                                        "additionalProperties": {
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "namespaces": {
                                                                                                                                                                "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "topologyKey": {
                                                                                                                                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                                "type": "string"
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "weight": {
                                                                                                                                                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                                                                                                                                                        "type": "integer",
                                                                                                                                                        "format": "int32"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                                                                                                                            "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                                                                                                                            "type": "array",
                                                                                                                                            "items": {
                                                                                                                                                "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                                                                                                                                                "type": "object",
                                                                                                                                                "required": [
                                                                                                                                                    "topologyKey"
                                                                                                                                                ],
                                                                                                                                                "properties": {
                                                                                                                                                    "labelSelector": {
                                                                                                                                                        "description": "A label query over a set of resources, in this case pods.",
                                                                                                                                                        "type": "object",
                                                                                                                                                        "properties": {
                                                                                                                                                            "matchExpressions": {
                                                                                                                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                                                                                                                "type": "array",
                                                                                                                                                                "items": {
                                                                                                                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                                                                                                    "type": "object",
                                                                                                                                                                    "required": [
                                                                                                                                                                        "key",
                                                                                                                                                                        "operator"
                                                                                                                                                                    ],
                                                                                                                                                                    "properties": {
                                                                                                                                                                        "key": {
                                                                                                                                                                            "description": "key is the label key that the selector applies to.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "operator": {
                                                                                                                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                                                                                                            "type": "string"
                                                                                                                                                                        },
                                                                                                                                                                        "values": {
                                                                                                                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                                                                                                            "type": "array",
                                                                                                                                                                            "items": {
                                                                                                                                                                                "type": "string"
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "matchLabels": {
                                                                                                                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                                                                                                                "type": "object",
                                                                                                                                                                "additionalProperties": {
                                                                                                                                                                    "type": "string"
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "namespaces": {
                                                                                                                                                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                                                                                                                                                        "type": "array",
                                                                                                                                                        "items": {
                                                                                                                                                            "type": "string"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "topologyKey": {
                                                                                                                                                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                                                                                                                                                        "type": "string"
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "nodeSelector": {
                                                                                                                            "description": "NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                                                                                                            "type": "object",
                                                                                                                            "additionalProperties": {
                                                                                                                                "type": "string"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "priorityClassName": {
                                                                                                                            "description": "If specified, the pod's priorityClassName.",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "serviceAccountName": {
                                                                                                                            "description": "If specified, the pod's service account",
                                                                                                                            "type": "string"
                                                                                                                        },
                                                                                                                        "tolerations": {
                                                                                                                            "description": "If specified, the pod's tolerations.",
                                                                                                                            "type": "array",
                                                                                                                            "items": {
                                                                                                                                "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
                                                                                                                                "type": "object",
                                                                                                                                "properties": {
                                                                                                                                    "effect": {
                                                                                                                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "key": {
                                                                                                                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "operator": {
                                                                                                                                        "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                                                                                                                                        "type": "string"
                                                                                                                                    },
                                                                                                                                    "tolerationSeconds": {
                                                                                                                                        "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                                                                                                                                        "type": "integer",
                                                                                                                                        "format": "int64"
                                                                                                                                    },
                                                                                                                                    "value": {
                                                                                                                                        "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                                                                                                                                        "type": "string"
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        },
                                                                                                        "serviceType": {
                                                                                                            "description": "Optional service type for Kubernetes solver service",
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        "selector": {
                                                                                            "description": "Selector selects a set of DNSNames on the Certificate resource that should be solved using this challenge solver. If not specified, the solver will be treated as the 'default' solver with the lowest priority, i.e. if any other solver has a more specific match, it will be used instead.",
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "dnsNames": {
                                                                                                    "description": "List of DNSNames that this solver will be used to solve. If specified and a match is found, a dnsNames selector will take precedence over a dnsZones selector. If multiple solvers match with the same dnsNames value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "dnsZones": {
                                                                                                    "description": "List of DNSZones that this solver will be used to solve. The most specific DNS zone match specified here will take precedence over other DNS zone matches, so a solver specifying sys.example.com will be selected over one specifying example.com for the domain www.sys.example.com. If multiple solvers match with the same dnsZones value, the solver with the most matching labels in matchLabels will be selected. If neither has more matches, the solver defined earlier in the list will be selected.",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "matchLabels": {
                                                                                                    "description": "A label selector that is used to refine the set of certificate's that this challenge solver will apply to.",
                                                                                                    "type": "object",
                                                                                                    "additionalProperties": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "ca": {
                                                                        "description": "CA configures this issuer to sign certificates using a signing CA keypair stored in a Secret resource. This is used to build internal PKIs that are managed by cert-manager.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "secretName"
                                                                        ],
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set, certificates will be issued without distribution points set.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "ocspServers": {
                                                                                "description": "The OCSP server list is an X.509 v3 extension that defines a list of URLs of OCSP responders. The OCSP responders can be queried for the revocation status of an issued certificate. If not set, the certificate will be issued with no OCSP servers set. For example, an OCSP server URL could be \"http://ocsp.int-x3.letsencrypt.org\".",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "secretName": {
                                                                                "description": "SecretName is the name of the secret used to sign Certificates issued by this Issuer.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "selfSigned": {
                                                                        "description": "SelfSigned configures this issuer to 'self sign' certificates using the private key used to create the CertificateRequest object.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "crlDistributionPoints": {
                                                                                "description": "The CRL distribution points is an X.509 v3 certificate extension which identifies the location of the CRL from which the revocation of this certificate can be checked. If not set certificate will be issued without CDP. Values are strings.",
                                                                                "type": "array",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "vault": {
                                                                        "description": "Vault configures this issuer to sign certificates using a HashiCorp Vault PKI backend.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "auth",
                                                                            "path",
                                                                            "server"
                                                                        ],
                                                                        "properties": {
                                                                            "auth": {
                                                                                "description": "Auth configures how cert-manager authenticates with the Vault server.",
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "appRole": {
                                                                                        "description": "AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "path",
                                                                                            "roleId",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "path": {
                                                                                                "description": "Path where the App Role authentication backend is mounted in Vault, e.g: \"approle\"",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "roleId": {
                                                                                                "description": "RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "kubernetes": {
                                                                                        "description": "Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "role",
                                                                                            "secretRef"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "mountPath": {
                                                                                                "description": "The Vault mountPath here is the mount path to use when authenticating with Vault. For example, setting a value to `/v1/auth/foo`, will use the path `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the default value \"/v1/auth/kubernetes\" will be used.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "role": {
                                                                                                "description": "A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "secretRef": {
                                                                                                "description": "The required Secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. Use of 'ambient credentials' is not supported.",
                                                                                                "type": "object",
                                                                                                "required": [
                                                                                                    "name"
                                                                                                ],
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "name": {
                                                                                                        "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "tokenSecretRef": {
                                                                                        "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "caBundle": {
                                                                                "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.",
                                                                                "type": "string",
                                                                                "format": "byte"
                                                                            },
                                                                            "namespace": {
                                                                                "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: \"ns1\" More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                                                                                "type": "string"
                                                                            },
                                                                            "path": {
                                                                                "description": "Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g: \"my_pki_mount/sign/my-role-name\".",
                                                                                "type": "string"
                                                                            },
                                                                            "server": {
                                                                                "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "venafi": {
                                                                        "description": "Venafi configures this issuer to sign certificates using a Venafi TPP or Venafi Cloud policy zone.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "zone"
                                                                        ],
                                                                        "properties": {
                                                                            "cloud": {
                                                                                "description": "Cloud specifies the Venafi cloud configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "apiTokenSecretRef"
                                                                                ],
                                                                                "properties": {
                                                                                    "apiTokenSecretRef": {
                                                                                        "description": "APITokenSecretRef is a secret key selector for the Venafi Cloud API token.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "key": {
                                                                                                "description": "The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for Venafi Cloud. Defaults to \"https://api.venafi.cloud/v1\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "tpp": {
                                                                                "description": "TPP specifies Trust Protection Platform configuration settings. Only one of TPP or Cloud may be specified.",
                                                                                "type": "object",
                                                                                "required": [
                                                                                    "credentialsRef",
                                                                                    "url"
                                                                                ],
                                                                                "properties": {
                                                                                    "caBundle": {
                                                                                        "description": "CABundle is a PEM encoded TLS certificate to use to verify connections to the TPP instance. If specified, system roots will not be used and the issuing CA for the TPP instance must be verifiable using the provided root. If not specified, the connection will be verified using the cert-manager system root certificates.",
                                                                                        "type": "string",
                                                                                        "format": "byte"
                                                                                    },
                                                                                    "credentialsRef": {
                                                                                        "description": "CredentialsRef is a reference to a Secret containing the username and password for the TPP server. The secret must contain two keys, 'username' and 'password'.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "name"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "name": {
                                                                                                "description": "Name of the resource being referred to. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "url": {
                                                                                        "description": "URL is the base URL for the vedsdk endpoint of the Venafi TPP instance, for example: \"https://tpp.example.com/vedsdk\".",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "zone": {
                                                                                "description": "Zone is the Venafi Policy Zone to use for this issuer. All requests made to the Venafi platform will be restricted by the named zone policy. This field is required.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "description": "Status of the Issuer. This is set and managed automatically.",
                                                                "type": "object",
                                                                "properties": {
                                                                    "acme": {
                                                                        "description": "ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.",
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "lastRegisteredEmail": {
                                                                                "description": "LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer",
                                                                                "type": "string"
                                                                            },
                                                                            "uri": {
                                                                                "description": "URI is the unique account identifier, which can also be used to retrieve account details from the CA",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "conditions": {
                                                                        "description": "List of status conditions to indicate the status of a CertificateRequest. Known condition types are `Ready`.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "IssuerCondition contains condition information for an Issuer.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "status",
                                                                                "type"
                                                                            ],
                                                                            "properties": {
                                                                                "lastTransitionTime": {
                                                                                    "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                                                                                    "type": "string",
                                                                                    "format": "date-time"
                                                                                },
                                                                                "message": {
                                                                                    "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                                                                                    "type": "string"
                                                                                },
                                                                                "observedGeneration": {
                                                                                    "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the Issuer.",
                                                                                    "type": "integer",
                                                                                    "format": "int64"
                                                                                },
                                                                                "reason": {
                                                                                    "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                                                                                    "type": "string"
                                                                                },
                                                                                "status": {
                                                                                    "description": "Status of the condition, one of (`True`, `False`, `Unknown`).",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "True",
                                                                                        "False",
                                                                                        "Unknown"
                                                                                    ]
                                                                                },
                                                                                "type": {
                                                                                    "description": "Type of the condition, known values are (`Ready`).",
                                                                                    "type": "string"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "Ready",
                                                        "type": "string",
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].status"
                                                    },
                                                    {
                                                        "name": "Status",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.conditions[?(@.type==\"Ready\")].message"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            }
                                        ],
                                        "conversion": {
                                            "strategy": "Webhook",
                                            "webhook": {
                                                "clientConfig": {
                                                    "service": {
                                                        "namespace": "cert-manager",
                                                        "name": "cert-manager-webhook",
                                                        "path": "/convert",
                                                        "port": 443
                                                    },
                                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQU1WaXFjcXFEVVJlcTBIYjdGSXBIREl3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFd09ESXpNVE15TXpFMApXaGNOTWpJd09ESXpNVE15TXpFMFdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJJY2ZEL3ovc1Yvd09SM1V1MzNxR3NUYk9SS3gKYjVQdXJiVXM5dy91d3RibVJwVlJuMVp4dVFXSGsrRUltbVNmdEQzbTE0ZnZtLzJSN1F2bXEycHI1UURSRHRrcgo3Uy95ZTdHbXFhaGZqQnpqbEZSV0E5SU9sYTVSWDZBd2JPRVpLNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHSUJoQ3paSyswanljRU5GbFpVZGh1K0tlN0sKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFERkxBcURPQnpRYkp5WjYzWlFVQktJcGh5Mm9qbnVpQVA2NFgreAo4aElMNTMvOFBJbDI5MDg0REVqSTU4cUp1NUlDTVFDNGRmVm1XOXN3bGtVVTRlU0JKdVgyZ1k4WjFNR1VweEhCCmM4cmNLZEFkVHkrbUVCVnpqQUxqc0Z4dUxTSmZkS2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                                                },
                                                "conversionReviewVersions": [
                                                    "v1",
                                                    "v1beta1"
                                                ]
                                            }
                                        }
                                    },
                                    "status": {
                                        "conditions": [
                                            {
                                                "type": "NamesAccepted",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:45Z",
                                                "reason": "NoConflicts",
                                                "message": "no conflicts found"
                                            },
                                            {
                                                "type": "Established",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:45Z",
                                                "reason": "InitialNamesAccepted",
                                                "message": "the initial names have been accepted"
                                            }
                                        ],
                                        "acceptedNames": {
                                            "plural": "issuers",
                                            "singular": "issuer",
                                            "kind": "Issuer",
                                            "listKind": "IssuerList",
                                            "categories": [
                                                "cert-manager"
                                            ]
                                        },
                                        "storedVersions": [
                                            "v1"
                                        ]
                                    }
                                },
                                "name": "issuers.cert-manager.io",
                                "id": "issuers.cert-manager.io",
                                "meta": {
                                    "name": "issuers.cert-manager.io",
                                    "uid": "7c2b1a4a-bd1a-44a6-a809-9d0ebd340dce",
                                    "resourceVersion": "1310",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "issuers.cert-manager.io",
                                        "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::CustomResourceDefinition::issuers.cert-manager.io",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "issuers.cert-manager.io"
                            },
                            {
                                "groupType": "::CustomResourceDefinition",
                                "group": "",
                                "type": "CustomResourceDefinition",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "orders.acme.cert-manager.io",
                                        "uid": "2698d5ba-ba6b-4008-9b48-1bf49f41d1ec",
                                        "resourceVersion": "1303",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "orders.acme.cert-manager.io",
                                            "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "group": "acme.cert-manager.io",
                                        "names": {
                                            "plural": "orders",
                                            "singular": "order",
                                            "kind": "Order",
                                            "listKind": "OrderList",
                                            "categories": [
                                                "cert-manager",
                                                "cert-manager-acme"
                                            ]
                                        },
                                        "scope": "Namespaced",
                                        "versions": [
                                            {
                                                "name": "v1alpha2",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "Order is a type to represent an Order with an ACME server",
                                                        "type": "object",
                                                        "required": [
                                                            "metadata"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "type": "object",
                                                                "required": [
                                                                    "csr",
                                                                    "issuerRef"
                                                                ],
                                                                "properties": {
                                                                    "commonName": {
                                                                        "description": "CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "string"
                                                                    },
                                                                    "csr": {
                                                                        "description": "Certificate signing request bytes in DER encoding. This will be used when finalizing the order. This field must be set on the order.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "dnsNames": {
                                                                        "description": "DNSNames is a list of DNS names that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "duration": {
                                                                        "description": "Duration is the duration for the not after date for the requested certificate. this is set on order creation as pe the ACME spec.",
                                                                        "type": "string"
                                                                    },
                                                                    "ipAddresses": {
                                                                        "description": "IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "authorizations": {
                                                                        "description": "Authorizations contains data returned from the ACME server on what authorizations must be completed in order to validate the DNS names specified on the Order.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "ACMEAuthorization contains data returned from the ACME server on an authorization that must be completed in order validate a DNS name on an ACME Order resource.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "url"
                                                                            ],
                                                                            "properties": {
                                                                                "challenges": {
                                                                                    "description": "Challenges specifies the challenge types offered by the ACME server. One of these challenge types will be selected when validating the DNS name and an appropriate Challenge resource will be created to perform the ACME challenge process.",
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "description": "Challenge specifies a challenge offered by the ACME server for an Order. An appropriate Challenge resource can be created to perform the ACME challenge process.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "token",
                                                                                            "type",
                                                                                            "url"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "token": {
                                                                                                "description": "Token is the token that must be presented for this challenge. This is used to compute the 'key' that must also be presented.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                                "description": "Type is the type of challenge being offered, e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is the raw value retrieved from the ACME server. Only 'http-01' and 'dns-01' are supported by cert-manager, other values will be ignored.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "url": {
                                                                                                "description": "URL is the URL of this challenge. It can be used to retrieve additional metadata about the Challenge from the ACME server.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "identifier": {
                                                                                    "description": "Identifier is the DNS name to be validated as part of this authorization",
                                                                                    "type": "string"
                                                                                },
                                                                                "initialState": {
                                                                                    "description": "InitialState is the initial state of the ACME authorization when first fetched from the ACME server. If an Authorization is already 'valid', the Order controller will not create a Challenge resource for the authorization. This will occur when working with an ACME server that enables 'authz reuse' (such as Let's Encrypt's production endpoint). If not set and 'identifier' is set, the state is assumed to be pending and a Challenge will be created.",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "valid",
                                                                                        "ready",
                                                                                        "pending",
                                                                                        "processing",
                                                                                        "invalid",
                                                                                        "expired",
                                                                                        "errored"
                                                                                    ]
                                                                                },
                                                                                "url": {
                                                                                    "description": "URL is the URL of the Authorization that must be completed",
                                                                                    "type": "string"
                                                                                },
                                                                                "wildcard": {
                                                                                    "description": "Wildcard will be true if this authorization is for a wildcard DNS name. If this is true, the identifier will be the *non-wildcard* version of the DNS name. For example, if '*.example.com' is the DNS name being validated, this field will be 'true' and the 'identifier' field will be 'example.com'.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "certificate": {
                                                                        "description": "Certificate is a copy of the PEM encoded certificate for this Order. This field will be populated after the order has been successfully finalized with the ACME server, and the order has transitioned to the 'valid' state.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "failureTime": {
                                                                        "description": "FailureTime stores the time that this order failed. This is used to influence garbage collection and back-off.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "finalizeURL": {
                                                                        "description": "FinalizeURL of the Order. This is used to obtain certificates for this order once it has been completed.",
                                                                        "type": "string"
                                                                    },
                                                                    "reason": {
                                                                        "description": "Reason optionally provides more information about a why the order is in the current state.",
                                                                        "type": "string"
                                                                    },
                                                                    "state": {
                                                                        "description": "State contains the current state of this Order resource. States 'success' and 'expired' are 'final'",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "valid",
                                                                            "ready",
                                                                            "pending",
                                                                            "processing",
                                                                            "invalid",
                                                                            "expired",
                                                                            "errored"
                                                                        ]
                                                                    },
                                                                    "url": {
                                                                        "description": "URL of the Order. This will initially be empty when the resource is first created. The Order controller will populate this field when the Order is first processed. This field will be immutable after it is initially set.",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "State",
                                                        "type": "string",
                                                        "jsonPath": ".status.state"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Reason",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.reason"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1alpha3",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "Order is a type to represent an Order with an ACME server",
                                                        "type": "object",
                                                        "required": [
                                                            "metadata"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "type": "object",
                                                                "required": [
                                                                    "csr",
                                                                    "issuerRef"
                                                                ],
                                                                "properties": {
                                                                    "commonName": {
                                                                        "description": "CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "string"
                                                                    },
                                                                    "csr": {
                                                                        "description": "Certificate signing request bytes in DER encoding. This will be used when finalizing the order. This field must be set on the order.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "dnsNames": {
                                                                        "description": "DNSNames is a list of DNS names that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "duration": {
                                                                        "description": "Duration is the duration for the not after date for the requested certificate. this is set on order creation as pe the ACME spec.",
                                                                        "type": "string"
                                                                    },
                                                                    "ipAddresses": {
                                                                        "description": "IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "authorizations": {
                                                                        "description": "Authorizations contains data returned from the ACME server on what authorizations must be completed in order to validate the DNS names specified on the Order.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "ACMEAuthorization contains data returned from the ACME server on an authorization that must be completed in order validate a DNS name on an ACME Order resource.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "url"
                                                                            ],
                                                                            "properties": {
                                                                                "challenges": {
                                                                                    "description": "Challenges specifies the challenge types offered by the ACME server. One of these challenge types will be selected when validating the DNS name and an appropriate Challenge resource will be created to perform the ACME challenge process.",
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "description": "Challenge specifies a challenge offered by the ACME server for an Order. An appropriate Challenge resource can be created to perform the ACME challenge process.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "token",
                                                                                            "type",
                                                                                            "url"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "token": {
                                                                                                "description": "Token is the token that must be presented for this challenge. This is used to compute the 'key' that must also be presented.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                                "description": "Type is the type of challenge being offered, e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is the raw value retrieved from the ACME server. Only 'http-01' and 'dns-01' are supported by cert-manager, other values will be ignored.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "url": {
                                                                                                "description": "URL is the URL of this challenge. It can be used to retrieve additional metadata about the Challenge from the ACME server.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "identifier": {
                                                                                    "description": "Identifier is the DNS name to be validated as part of this authorization",
                                                                                    "type": "string"
                                                                                },
                                                                                "initialState": {
                                                                                    "description": "InitialState is the initial state of the ACME authorization when first fetched from the ACME server. If an Authorization is already 'valid', the Order controller will not create a Challenge resource for the authorization. This will occur when working with an ACME server that enables 'authz reuse' (such as Let's Encrypt's production endpoint). If not set and 'identifier' is set, the state is assumed to be pending and a Challenge will be created.",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "valid",
                                                                                        "ready",
                                                                                        "pending",
                                                                                        "processing",
                                                                                        "invalid",
                                                                                        "expired",
                                                                                        "errored"
                                                                                    ]
                                                                                },
                                                                                "url": {
                                                                                    "description": "URL is the URL of the Authorization that must be completed",
                                                                                    "type": "string"
                                                                                },
                                                                                "wildcard": {
                                                                                    "description": "Wildcard will be true if this authorization is for a wildcard DNS name. If this is true, the identifier will be the *non-wildcard* version of the DNS name. For example, if '*.example.com' is the DNS name being validated, this field will be 'true' and the 'identifier' field will be 'example.com'.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "certificate": {
                                                                        "description": "Certificate is a copy of the PEM encoded certificate for this Order. This field will be populated after the order has been successfully finalized with the ACME server, and the order has transitioned to the 'valid' state.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "failureTime": {
                                                                        "description": "FailureTime stores the time that this order failed. This is used to influence garbage collection and back-off.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "finalizeURL": {
                                                                        "description": "FinalizeURL of the Order. This is used to obtain certificates for this order once it has been completed.",
                                                                        "type": "string"
                                                                    },
                                                                    "reason": {
                                                                        "description": "Reason optionally provides more information about a why the order is in the current state.",
                                                                        "type": "string"
                                                                    },
                                                                    "state": {
                                                                        "description": "State contains the current state of this Order resource. States 'success' and 'expired' are 'final'",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "valid",
                                                                            "ready",
                                                                            "pending",
                                                                            "processing",
                                                                            "invalid",
                                                                            "expired",
                                                                            "errored"
                                                                        ]
                                                                    },
                                                                    "url": {
                                                                        "description": "URL of the Order. This will initially be empty when the resource is first created. The Order controller will populate this field when the Order is first processed. This field will be immutable after it is initially set.",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "State",
                                                        "type": "string",
                                                        "jsonPath": ".status.state"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Reason",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.reason"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1beta1",
                                                "served": true,
                                                "storage": false,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "Order is a type to represent an Order with an ACME server",
                                                        "type": "object",
                                                        "required": [
                                                            "metadata",
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "type": "object",
                                                                "required": [
                                                                    "issuerRef",
                                                                    "request"
                                                                ],
                                                                "properties": {
                                                                    "commonName": {
                                                                        "description": "CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "string"
                                                                    },
                                                                    "dnsNames": {
                                                                        "description": "DNSNames is a list of DNS names that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "duration": {
                                                                        "description": "Duration is the duration for the not after date for the requested certificate. this is set on order creation as pe the ACME spec.",
                                                                        "type": "string"
                                                                    },
                                                                    "ipAddresses": {
                                                                        "description": "IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "request": {
                                                                        "description": "Certificate signing request bytes in DER encoding. This will be used when finalizing the order. This field must be set on the order.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "authorizations": {
                                                                        "description": "Authorizations contains data returned from the ACME server on what authorizations must be completed in order to validate the DNS names specified on the Order.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "ACMEAuthorization contains data returned from the ACME server on an authorization that must be completed in order validate a DNS name on an ACME Order resource.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "url"
                                                                            ],
                                                                            "properties": {
                                                                                "challenges": {
                                                                                    "description": "Challenges specifies the challenge types offered by the ACME server. One of these challenge types will be selected when validating the DNS name and an appropriate Challenge resource will be created to perform the ACME challenge process.",
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "description": "Challenge specifies a challenge offered by the ACME server for an Order. An appropriate Challenge resource can be created to perform the ACME challenge process.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "token",
                                                                                            "type",
                                                                                            "url"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "token": {
                                                                                                "description": "Token is the token that must be presented for this challenge. This is used to compute the 'key' that must also be presented.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                                "description": "Type is the type of challenge being offered, e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is the raw value retrieved from the ACME server. Only 'http-01' and 'dns-01' are supported by cert-manager, other values will be ignored.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "url": {
                                                                                                "description": "URL is the URL of this challenge. It can be used to retrieve additional metadata about the Challenge from the ACME server.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "identifier": {
                                                                                    "description": "Identifier is the DNS name to be validated as part of this authorization",
                                                                                    "type": "string"
                                                                                },
                                                                                "initialState": {
                                                                                    "description": "InitialState is the initial state of the ACME authorization when first fetched from the ACME server. If an Authorization is already 'valid', the Order controller will not create a Challenge resource for the authorization. This will occur when working with an ACME server that enables 'authz reuse' (such as Let's Encrypt's production endpoint). If not set and 'identifier' is set, the state is assumed to be pending and a Challenge will be created.",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "valid",
                                                                                        "ready",
                                                                                        "pending",
                                                                                        "processing",
                                                                                        "invalid",
                                                                                        "expired",
                                                                                        "errored"
                                                                                    ]
                                                                                },
                                                                                "url": {
                                                                                    "description": "URL is the URL of the Authorization that must be completed",
                                                                                    "type": "string"
                                                                                },
                                                                                "wildcard": {
                                                                                    "description": "Wildcard will be true if this authorization is for a wildcard DNS name. If this is true, the identifier will be the *non-wildcard* version of the DNS name. For example, if '*.example.com' is the DNS name being validated, this field will be 'true' and the 'identifier' field will be 'example.com'.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "certificate": {
                                                                        "description": "Certificate is a copy of the PEM encoded certificate for this Order. This field will be populated after the order has been successfully finalized with the ACME server, and the order has transitioned to the 'valid' state.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "failureTime": {
                                                                        "description": "FailureTime stores the time that this order failed. This is used to influence garbage collection and back-off.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "finalizeURL": {
                                                                        "description": "FinalizeURL of the Order. This is used to obtain certificates for this order once it has been completed.",
                                                                        "type": "string"
                                                                    },
                                                                    "reason": {
                                                                        "description": "Reason optionally provides more information about a why the order is in the current state.",
                                                                        "type": "string"
                                                                    },
                                                                    "state": {
                                                                        "description": "State contains the current state of this Order resource. States 'success' and 'expired' are 'final'",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "valid",
                                                                            "ready",
                                                                            "pending",
                                                                            "processing",
                                                                            "invalid",
                                                                            "expired",
                                                                            "errored"
                                                                        ]
                                                                    },
                                                                    "url": {
                                                                        "description": "URL of the Order. This will initially be empty when the resource is first created. The Order controller will populate this field when the Order is first processed. This field will be immutable after it is initially set.",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "State",
                                                        "type": "string",
                                                        "jsonPath": ".status.state"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Reason",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.reason"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            },
                                            {
                                                "name": "v1",
                                                "served": true,
                                                "storage": true,
                                                "schema": {
                                                    "openAPIV3Schema": {
                                                        "description": "Order is a type to represent an Order with an ACME server",
                                                        "type": "object",
                                                        "required": [
                                                            "metadata",
                                                            "spec"
                                                        ],
                                                        "properties": {
                                                            "apiVersion": {
                                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                                "type": "string"
                                                            },
                                                            "kind": {
                                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                                "type": "string"
                                                            },
                                                            "metadata": {
                                                                "type": "object"
                                                            },
                                                            "spec": {
                                                                "type": "object",
                                                                "required": [
                                                                    "issuerRef",
                                                                    "request"
                                                                ],
                                                                "properties": {
                                                                    "commonName": {
                                                                        "description": "CommonName is the common name as specified on the DER encoded CSR. If specified, this value must also be present in `dnsNames` or `ipAddresses`. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "string"
                                                                    },
                                                                    "dnsNames": {
                                                                        "description": "DNSNames is a list of DNS names that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "duration": {
                                                                        "description": "Duration is the duration for the not after date for the requested certificate. this is set on order creation as pe the ACME spec.",
                                                                        "type": "string"
                                                                    },
                                                                    "ipAddresses": {
                                                                        "description": "IPAddresses is a list of IP addresses that should be included as part of the Order validation process. This field must match the corresponding field on the DER encoded CSR.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "issuerRef": {
                                                                        "description": "IssuerRef references a properly configured ACME-type Issuer which should be used to create this Order. If the Issuer does not exist, processing will be retried. If the Issuer is not an 'ACME' Issuer, an error will be returned and the Order will be marked as failed.",
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name"
                                                                        ],
                                                                        "properties": {
                                                                            "group": {
                                                                                "description": "Group of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "kind": {
                                                                                "description": "Kind of the resource being referred to.",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Name of the resource being referred to.",
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    },
                                                                    "request": {
                                                                        "description": "Certificate signing request bytes in DER encoding. This will be used when finalizing the order. This field must be set on the order.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    }
                                                                }
                                                            },
                                                            "status": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "authorizations": {
                                                                        "description": "Authorizations contains data returned from the ACME server on what authorizations must be completed in order to validate the DNS names specified on the Order.",
                                                                        "type": "array",
                                                                        "items": {
                                                                            "description": "ACMEAuthorization contains data returned from the ACME server on an authorization that must be completed in order validate a DNS name on an ACME Order resource.",
                                                                            "type": "object",
                                                                            "required": [
                                                                                "url"
                                                                            ],
                                                                            "properties": {
                                                                                "challenges": {
                                                                                    "description": "Challenges specifies the challenge types offered by the ACME server. One of these challenge types will be selected when validating the DNS name and an appropriate Challenge resource will be created to perform the ACME challenge process.",
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "description": "Challenge specifies a challenge offered by the ACME server for an Order. An appropriate Challenge resource can be created to perform the ACME challenge process.",
                                                                                        "type": "object",
                                                                                        "required": [
                                                                                            "token",
                                                                                            "type",
                                                                                            "url"
                                                                                        ],
                                                                                        "properties": {
                                                                                            "token": {
                                                                                                "description": "Token is the token that must be presented for this challenge. This is used to compute the 'key' that must also be presented.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "type": {
                                                                                                "description": "Type is the type of challenge being offered, e.g. 'http-01', 'dns-01', 'tls-sni-01', etc. This is the raw value retrieved from the ACME server. Only 'http-01' and 'dns-01' are supported by cert-manager, other values will be ignored.",
                                                                                                "type": "string"
                                                                                            },
                                                                                            "url": {
                                                                                                "description": "URL is the URL of this challenge. It can be used to retrieve additional metadata about the Challenge from the ACME server.",
                                                                                                "type": "string"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "identifier": {
                                                                                    "description": "Identifier is the DNS name to be validated as part of this authorization",
                                                                                    "type": "string"
                                                                                },
                                                                                "initialState": {
                                                                                    "description": "InitialState is the initial state of the ACME authorization when first fetched from the ACME server. If an Authorization is already 'valid', the Order controller will not create a Challenge resource for the authorization. This will occur when working with an ACME server that enables 'authz reuse' (such as Let's Encrypt's production endpoint). If not set and 'identifier' is set, the state is assumed to be pending and a Challenge will be created.",
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "valid",
                                                                                        "ready",
                                                                                        "pending",
                                                                                        "processing",
                                                                                        "invalid",
                                                                                        "expired",
                                                                                        "errored"
                                                                                    ]
                                                                                },
                                                                                "url": {
                                                                                    "description": "URL is the URL of the Authorization that must be completed",
                                                                                    "type": "string"
                                                                                },
                                                                                "wildcard": {
                                                                                    "description": "Wildcard will be true if this authorization is for a wildcard DNS name. If this is true, the identifier will be the *non-wildcard* version of the DNS name. For example, if '*.example.com' is the DNS name being validated, this field will be 'true' and the 'identifier' field will be 'example.com'.",
                                                                                    "type": "boolean"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "certificate": {
                                                                        "description": "Certificate is a copy of the PEM encoded certificate for this Order. This field will be populated after the order has been successfully finalized with the ACME server, and the order has transitioned to the 'valid' state.",
                                                                        "type": "string",
                                                                        "format": "byte"
                                                                    },
                                                                    "failureTime": {
                                                                        "description": "FailureTime stores the time that this order failed. This is used to influence garbage collection and back-off.",
                                                                        "type": "string",
                                                                        "format": "date-time"
                                                                    },
                                                                    "finalizeURL": {
                                                                        "description": "FinalizeURL of the Order. This is used to obtain certificates for this order once it has been completed.",
                                                                        "type": "string"
                                                                    },
                                                                    "reason": {
                                                                        "description": "Reason optionally provides more information about a why the order is in the current state.",
                                                                        "type": "string"
                                                                    },
                                                                    "state": {
                                                                        "description": "State contains the current state of this Order resource. States 'success' and 'expired' are 'final'",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "valid",
                                                                            "ready",
                                                                            "pending",
                                                                            "processing",
                                                                            "invalid",
                                                                            "expired",
                                                                            "errored"
                                                                        ]
                                                                    },
                                                                    "url": {
                                                                        "description": "URL of the Order. This will initially be empty when the resource is first created. The Order controller will populate this field when the Order is first processed. This field will be immutable after it is initially set.",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "subresources": {
                                                    "status": {}
                                                },
                                                "additionalPrinterColumns": [
                                                    {
                                                        "name": "State",
                                                        "type": "string",
                                                        "jsonPath": ".status.state"
                                                    },
                                                    {
                                                        "name": "Issuer",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".spec.issuerRef.name"
                                                    },
                                                    {
                                                        "name": "Reason",
                                                        "type": "string",
                                                        "priority": 1,
                                                        "jsonPath": ".status.reason"
                                                    },
                                                    {
                                                        "name": "Age",
                                                        "type": "date",
                                                        "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.",
                                                        "jsonPath": ".metadata.creationTimestamp"
                                                    }
                                                ]
                                            }
                                        ],
                                        "conversion": {
                                            "strategy": "Webhook",
                                            "webhook": {
                                                "clientConfig": {
                                                    "service": {
                                                        "namespace": "cert-manager",
                                                        "name": "cert-manager-webhook",
                                                        "path": "/convert",
                                                        "port": 443
                                                    },
                                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQU1WaXFjcXFEVVJlcTBIYjdGSXBIREl3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFd09ESXpNVE15TXpFMApXaGNOTWpJd09ESXpNVE15TXpFMFdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJJY2ZEL3ovc1Yvd09SM1V1MzNxR3NUYk9SS3gKYjVQdXJiVXM5dy91d3RibVJwVlJuMVp4dVFXSGsrRUltbVNmdEQzbTE0ZnZtLzJSN1F2bXEycHI1UURSRHRrcgo3Uy95ZTdHbXFhaGZqQnpqbEZSV0E5SU9sYTVSWDZBd2JPRVpLNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHSUJoQ3paSyswanljRU5GbFpVZGh1K0tlN0sKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFERkxBcURPQnpRYkp5WjYzWlFVQktJcGh5Mm9qbnVpQVA2NFgreAo4aElMNTMvOFBJbDI5MDg0REVqSTU4cUp1NUlDTVFDNGRmVm1XOXN3bGtVVTRlU0JKdVgyZ1k4WjFNR1VweEhCCmM4cmNLZEFkVHkrbUVCVnpqQUxqc0Z4dUxTSmZkS2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                                                },
                                                "conversionReviewVersions": [
                                                    "v1",
                                                    "v1beta1"
                                                ]
                                            }
                                        }
                                    },
                                    "status": {
                                        "conditions": [
                                            {
                                                "type": "NamesAccepted",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:44Z",
                                                "reason": "NoConflicts",
                                                "message": "no conflicts found"
                                            },
                                            {
                                                "type": "Established",
                                                "status": "True",
                                                "lastTransitionTime": "2021-08-23T13:22:45Z",
                                                "reason": "InitialNamesAccepted",
                                                "message": "the initial names have been accepted"
                                            }
                                        ],
                                        "acceptedNames": {
                                            "plural": "orders",
                                            "singular": "order",
                                            "kind": "Order",
                                            "listKind": "OrderList",
                                            "categories": [
                                                "cert-manager",
                                                "cert-manager-acme"
                                            ]
                                        },
                                        "storedVersions": [
                                            "v1"
                                        ]
                                    }
                                },
                                "name": "orders.acme.cert-manager.io",
                                "id": "orders.acme.cert-manager.io",
                                "meta": {
                                    "name": "orders.acme.cert-manager.io",
                                    "uid": "2698d5ba-ba6b-4008-9b48-1bf49f41d1ec",
                                    "resourceVersion": "1303",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "orders.acme.cert-manager.io",
                                        "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::CustomResourceDefinition::orders.acme.cert-manager.io",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "orders.acme.cert-manager.io"
                            }
                        ],
                        "groupType": "::CustomResourceDefinition",
                        "type": "CustomResourceDefinition",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::Deployment",
                                "group": "",
                                "type": "Deployment",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager",
                                        "namespace": "cert-manager",
                                        "uid": "aa71e6e4-4606-42cd-a0d7-671400142457",
                                        "resourceVersion": "1342",
                                        "generation": 1,
                                        "creationTimestamp": "2021-08-23T13:22:54Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager",
                                            "deployment.kubernetes.io/revision": "1",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "replicas": 1,
                                        "selector": {
                                            "matchLabels": {
                                                "app.kubernetes.io/component": "controller",
                                                "app.kubernetes.io/instance": "cert-manager",
                                                "app.kubernetes.io/name": "cert-manager"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "creationTimestamp": null,
                                                "labels": {
                                                    "app": "cert-manager",
                                                    "app.kubernetes.io/component": "controller",
                                                    "app.kubernetes.io/instance": "cert-manager",
                                                    "app.kubernetes.io/name": "cert-manager"
                                                },
                                                "annotations": {
                                                    "prometheus.io/path": "/metrics",
                                                    "prometheus.io/port": "9402",
                                                    "prometheus.io/scrape": "true"
                                                }
                                            },
                                            "spec": {
                                                "containers": [
                                                    {
                                                        "name": "cert-manager",
                                                        "image": "quay.io/jetstack/cert-manager-controller:v1.3.1",
                                                        "args": [
                                                            "--v=2",
                                                            "--cluster-resource-namespace=$(POD_NAMESPACE)",
                                                            "--leader-election-namespace=kube-system"
                                                        ],
                                                        "ports": [
                                                            {
                                                                "containerPort": 9402,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "env": [
                                                            {
                                                                "name": "POD_NAMESPACE",
                                                                "valueFrom": {
                                                                    "fieldRef": {
                                                                        "apiVersion": "v1",
                                                                        "fieldPath": "metadata.namespace"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "resources": {},
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "imagePullPolicy": "IfNotPresent"
                                                    }
                                                ],
                                                "restartPolicy": "Always",
                                                "terminationGracePeriodSeconds": 30,
                                                "dnsPolicy": "ClusterFirst",
                                                "serviceAccountName": "cert-manager",
                                                "serviceAccount": "cert-manager",
                                                "securityContext": {},
                                                "schedulerName": "default-scheduler"
                                            }
                                        },
                                        "strategy": {
                                            "type": "RollingUpdate",
                                            "rollingUpdate": {
                                                "maxUnavailable": "25%",
                                                "maxSurge": "25%"
                                            }
                                        },
                                        "revisionHistoryLimit": 10,
                                        "progressDeadlineSeconds": 600
                                    },
                                    "status": {
                                        "observedGeneration": 1,
                                        "replicas": 1,
                                        "updatedReplicas": 1,
                                        "readyReplicas": 1,
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "type": "Available",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-23T13:23:26Z",
                                                "lastTransitionTime": "2021-08-23T13:23:26Z",
                                                "reason": "MinimumReplicasAvailable",
                                                "message": "Deployment has minimum availability."
                                            },
                                            {
                                                "type": "Progressing",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-23T13:23:26Z",
                                                "lastTransitionTime": "2021-08-23T13:22:54Z",
                                                "reason": "NewReplicaSetAvailable",
                                                "message": "ReplicaSet \"cert-manager-7dd5854bb4\" has successfully progressed."
                                            }
                                        ]
                                    }
                                },
                                "name": "cert-manager",
                                "id": "cert-manager",
                                "meta": {
                                    "name": "cert-manager",
                                    "namespace": "cert-manager",
                                    "uid": "aa71e6e4-4606-42cd-a0d7-671400142457",
                                    "resourceVersion": "1342",
                                    "generation": 1,
                                    "creationTimestamp": "2021-08-23T13:22:54Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager",
                                        "deployment.kubernetes.io/revision": "1",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "cert-manager",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Deployment::cert-manager::cert-manager",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager::cert-manager"
                            },
                            {
                                "groupType": "::Deployment",
                                "group": "",
                                "type": "Deployment",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-cainjector",
                                        "namespace": "cert-manager",
                                        "uid": "fae1f874-7449-4b51-a4e1-923e2c1b6684",
                                        "resourceVersion": "1283",
                                        "generation": 1,
                                        "creationTimestamp": "2021-08-23T13:22:54Z",
                                        "labels": {
                                            "app": "cainjector",
                                            "app.kubernetes.io/component": "cainjector",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cainjector"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-cainjector",
                                            "deployment.kubernetes.io/revision": "1",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "replicas": 1,
                                        "selector": {
                                            "matchLabels": {
                                                "app.kubernetes.io/component": "cainjector",
                                                "app.kubernetes.io/instance": "cert-manager",
                                                "app.kubernetes.io/name": "cainjector"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "creationTimestamp": null,
                                                "labels": {
                                                    "app": "cainjector",
                                                    "app.kubernetes.io/component": "cainjector",
                                                    "app.kubernetes.io/instance": "cert-manager",
                                                    "app.kubernetes.io/name": "cainjector"
                                                }
                                            },
                                            "spec": {
                                                "containers": [
                                                    {
                                                        "name": "cert-manager",
                                                        "image": "quay.io/jetstack/cert-manager-cainjector:v1.3.1",
                                                        "args": [
                                                            "--v=2",
                                                            "--leader-election-namespace=kube-system"
                                                        ],
                                                        "env": [
                                                            {
                                                                "name": "POD_NAMESPACE",
                                                                "valueFrom": {
                                                                    "fieldRef": {
                                                                        "apiVersion": "v1",
                                                                        "fieldPath": "metadata.namespace"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "resources": {},
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "imagePullPolicy": "IfNotPresent"
                                                    }
                                                ],
                                                "restartPolicy": "Always",
                                                "terminationGracePeriodSeconds": 30,
                                                "dnsPolicy": "ClusterFirst",
                                                "serviceAccountName": "cert-manager-cainjector",
                                                "serviceAccount": "cert-manager-cainjector",
                                                "securityContext": {},
                                                "schedulerName": "default-scheduler"
                                            }
                                        },
                                        "strategy": {
                                            "type": "RollingUpdate",
                                            "rollingUpdate": {
                                                "maxUnavailable": "25%",
                                                "maxSurge": "25%"
                                            }
                                        },
                                        "revisionHistoryLimit": 10,
                                        "progressDeadlineSeconds": 600
                                    },
                                    "status": {
                                        "observedGeneration": 1,
                                        "replicas": 1,
                                        "updatedReplicas": 1,
                                        "readyReplicas": 1,
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "type": "Available",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-23T13:23:06Z",
                                                "lastTransitionTime": "2021-08-23T13:23:06Z",
                                                "reason": "MinimumReplicasAvailable",
                                                "message": "Deployment has minimum availability."
                                            },
                                            {
                                                "type": "Progressing",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-23T13:23:06Z",
                                                "lastTransitionTime": "2021-08-23T13:22:54Z",
                                                "reason": "NewReplicaSetAvailable",
                                                "message": "ReplicaSet \"cert-manager-cainjector-64c949654c\" has successfully progressed."
                                            }
                                        ]
                                    }
                                },
                                "name": "cert-manager-cainjector",
                                "id": "cert-manager-cainjector",
                                "meta": {
                                    "name": "cert-manager-cainjector",
                                    "namespace": "cert-manager",
                                    "uid": "fae1f874-7449-4b51-a4e1-923e2c1b6684",
                                    "resourceVersion": "1283",
                                    "generation": 1,
                                    "creationTimestamp": "2021-08-23T13:22:54Z",
                                    "labels": {
                                        "app": "cainjector",
                                        "app.kubernetes.io/component": "cainjector",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cainjector"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-cainjector",
                                        "deployment.kubernetes.io/revision": "1",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "cert-manager",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Deployment::cert-manager::cert-manager-cainjector",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager::cert-manager-cainjector"
                            },
                            {
                                "groupType": "::Deployment",
                                "group": "",
                                "type": "Deployment",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-webhook",
                                        "namespace": "cert-manager",
                                        "uid": "9d8c4e09-45c4-454f-94e9-3548f6b274ca",
                                        "resourceVersion": "1322",
                                        "generation": 1,
                                        "creationTimestamp": "2021-08-23T13:22:54Z",
                                        "labels": {
                                            "app": "webhook",
                                            "app.kubernetes.io/component": "webhook",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "webhook"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-webhook",
                                            "deployment.kubernetes.io/revision": "1",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "replicas": 1,
                                        "selector": {
                                            "matchLabels": {
                                                "app.kubernetes.io/component": "webhook",
                                                "app.kubernetes.io/instance": "cert-manager",
                                                "app.kubernetes.io/name": "webhook"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "creationTimestamp": null,
                                                "labels": {
                                                    "app": "webhook",
                                                    "app.kubernetes.io/component": "webhook",
                                                    "app.kubernetes.io/instance": "cert-manager",
                                                    "app.kubernetes.io/name": "webhook"
                                                }
                                            },
                                            "spec": {
                                                "containers": [
                                                    {
                                                        "name": "cert-manager",
                                                        "image": "quay.io/jetstack/cert-manager-webhook:v1.3.1",
                                                        "args": [
                                                            "--v=2",
                                                            "--secure-port=10250",
                                                            "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
                                                            "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca",
                                                            "--dynamic-serving-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc"
                                                        ],
                                                        "ports": [
                                                            {
                                                                "name": "https",
                                                                "containerPort": 10250,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "env": [
                                                            {
                                                                "name": "POD_NAMESPACE",
                                                                "valueFrom": {
                                                                    "fieldRef": {
                                                                        "apiVersion": "v1",
                                                                        "fieldPath": "metadata.namespace"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "resources": {},
                                                        "livenessProbe": {
                                                            "httpGet": {
                                                                "path": "/livez",
                                                                "port": 6080,
                                                                "scheme": "HTTP"
                                                            },
                                                            "initialDelaySeconds": 60,
                                                            "timeoutSeconds": 1,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 3
                                                        },
                                                        "readinessProbe": {
                                                            "httpGet": {
                                                                "path": "/healthz",
                                                                "port": 6080,
                                                                "scheme": "HTTP"
                                                            },
                                                            "initialDelaySeconds": 5,
                                                            "timeoutSeconds": 1,
                                                            "periodSeconds": 5,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 3
                                                        },
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "imagePullPolicy": "IfNotPresent"
                                                    }
                                                ],
                                                "restartPolicy": "Always",
                                                "terminationGracePeriodSeconds": 30,
                                                "dnsPolicy": "ClusterFirst",
                                                "serviceAccountName": "cert-manager-webhook",
                                                "serviceAccount": "cert-manager-webhook",
                                                "securityContext": {},
                                                "schedulerName": "default-scheduler"
                                            }
                                        },
                                        "strategy": {
                                            "type": "RollingUpdate",
                                            "rollingUpdate": {
                                                "maxUnavailable": "25%",
                                                "maxSurge": "25%"
                                            }
                                        },
                                        "revisionHistoryLimit": 10,
                                        "progressDeadlineSeconds": 600
                                    },
                                    "status": {
                                        "observedGeneration": 1,
                                        "replicas": 1,
                                        "updatedReplicas": 1,
                                        "readyReplicas": 1,
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "type": "Available",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-23T13:23:19Z",
                                                "lastTransitionTime": "2021-08-23T13:23:19Z",
                                                "reason": "MinimumReplicasAvailable",
                                                "message": "Deployment has minimum availability."
                                            },
                                            {
                                                "type": "Progressing",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-23T13:23:19Z",
                                                "lastTransitionTime": "2021-08-23T13:22:54Z",
                                                "reason": "NewReplicaSetAvailable",
                                                "message": "ReplicaSet \"cert-manager-webhook-6b57b9b886\" has successfully progressed."
                                            }
                                        ]
                                    }
                                },
                                "name": "cert-manager-webhook",
                                "id": "cert-manager-webhook",
                                "meta": {
                                    "name": "cert-manager-webhook",
                                    "namespace": "cert-manager",
                                    "uid": "9d8c4e09-45c4-454f-94e9-3548f6b274ca",
                                    "resourceVersion": "1322",
                                    "generation": 1,
                                    "creationTimestamp": "2021-08-23T13:22:54Z",
                                    "labels": {
                                        "app": "webhook",
                                        "app.kubernetes.io/component": "webhook",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "webhook"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-webhook",
                                        "deployment.kubernetes.io/revision": "1",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "cert-manager",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Deployment::cert-manager::cert-manager-webhook",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager::cert-manager-webhook"
                            },
                            {
                                "groupType": "::Deployment",
                                "group": "",
                                "type": "Deployment",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "coredns",
                                        "namespace": "kube-system",
                                        "uid": "695c95f6-9d6d-4a2c-8e7f-4fa9544bdba5",
                                        "resourceVersion": "534",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-23T13:15:22Z",
                                        "labels": {
                                            "k8s-app": "kube-dns"
                                        },
                                        "annotations": {
                                            "deployment.kubernetes.io/revision": "1"
                                        }
                                    },
                                    "spec": {
                                        "replicas": 1,
                                        "selector": {
                                            "matchLabels": {
                                                "k8s-app": "kube-dns"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "creationTimestamp": null,
                                                "labels": {
                                                    "k8s-app": "kube-dns"
                                                }
                                            },
                                            "spec": {
                                                "volumes": [
                                                    {
                                                        "name": "config-volume",
                                                        "configMap": {
                                                            "name": "coredns",
                                                            "items": [
                                                                {
                                                                    "key": "Corefile",
                                                                    "path": "Corefile"
                                                                }
                                                            ],
                                                            "defaultMode": 420
                                                        }
                                                    }
                                                ],
                                                "containers": [
                                                    {
                                                        "name": "coredns",
                                                        "image": "k8s.gcr.io/coredns/coredns:v1.8.0",
                                                        "args": [
                                                            "-conf",
                                                            "/etc/coredns/Corefile"
                                                        ],
                                                        "ports": [
                                                            {
                                                                "name": "dns",
                                                                "containerPort": 53,
                                                                "protocol": "UDP"
                                                            },
                                                            {
                                                                "name": "dns-tcp",
                                                                "containerPort": 53,
                                                                "protocol": "TCP"
                                                            },
                                                            {
                                                                "name": "metrics",
                                                                "containerPort": 9153,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "resources": {
                                                            "limits": {
                                                                "memory": "170Mi"
                                                            },
                                                            "requests": {
                                                                "cpu": "100m",
                                                                "memory": "70Mi"
                                                            }
                                                        },
                                                        "volumeMounts": [
                                                            {
                                                                "name": "config-volume",
                                                                "readOnly": true,
                                                                "mountPath": "/etc/coredns"
                                                            }
                                                        ],
                                                        "livenessProbe": {
                                                            "httpGet": {
                                                                "path": "/health",
                                                                "port": 8080,
                                                                "scheme": "HTTP"
                                                            },
                                                            "initialDelaySeconds": 60,
                                                            "timeoutSeconds": 5,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 5
                                                        },
                                                        "readinessProbe": {
                                                            "httpGet": {
                                                                "path": "/ready",
                                                                "port": 8181,
                                                                "scheme": "HTTP"
                                                            },
                                                            "timeoutSeconds": 1,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 3
                                                        },
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "imagePullPolicy": "IfNotPresent",
                                                        "securityContext": {
                                                            "capabilities": {
                                                                "add": [
                                                                    "NET_BIND_SERVICE"
                                                                ],
                                                                "drop": [
                                                                    "all"
                                                                ]
                                                            },
                                                            "readOnlyRootFilesystem": true,
                                                            "allowPrivilegeEscalation": false
                                                        }
                                                    }
                                                ],
                                                "restartPolicy": "Always",
                                                "terminationGracePeriodSeconds": 30,
                                                "dnsPolicy": "Default",
                                                "nodeSelector": {
                                                    "kubernetes.io/os": "linux"
                                                },
                                                "serviceAccountName": "coredns",
                                                "serviceAccount": "coredns",
                                                "securityContext": {},
                                                "schedulerName": "default-scheduler",
                                                "tolerations": [
                                                    {
                                                        "key": "CriticalAddonsOnly",
                                                        "operator": "Exists"
                                                    },
                                                    {
                                                        "key": "node-role.kubernetes.io/master",
                                                        "effect": "NoSchedule"
                                                    },
                                                    {
                                                        "key": "node-role.kubernetes.io/control-plane",
                                                        "effect": "NoSchedule"
                                                    }
                                                ],
                                                "priorityClassName": "system-cluster-critical"
                                            }
                                        },
                                        "strategy": {
                                            "type": "RollingUpdate",
                                            "rollingUpdate": {
                                                "maxUnavailable": 1,
                                                "maxSurge": "25%"
                                            }
                                        },
                                        "revisionHistoryLimit": 10,
                                        "progressDeadlineSeconds": 600
                                    },
                                    "status": {
                                        "observedGeneration": 2,
                                        "replicas": 1,
                                        "updatedReplicas": 1,
                                        "readyReplicas": 1,
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "type": "Available",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-23T13:15:36Z",
                                                "lastTransitionTime": "2021-08-23T13:15:36Z",
                                                "reason": "MinimumReplicasAvailable",
                                                "message": "Deployment has minimum availability."
                                            },
                                            {
                                                "type": "Progressing",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-23T13:15:39Z",
                                                "lastTransitionTime": "2021-08-23T13:15:36Z",
                                                "reason": "NewReplicaSetAvailable",
                                                "message": "ReplicaSet \"coredns-558bd4d5db\" has successfully progressed."
                                            }
                                        ]
                                    }
                                },
                                "name": "coredns",
                                "id": "coredns",
                                "meta": {
                                    "name": "coredns",
                                    "namespace": "kube-system",
                                    "uid": "695c95f6-9d6d-4a2c-8e7f-4fa9544bdba5",
                                    "resourceVersion": "534",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-23T13:15:22Z",
                                    "labels": {
                                        "k8s-app": "kube-dns"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "1"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Deployment::kube-system::coredns",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::coredns"
                            },
                            {
                                "groupType": "::Deployment",
                                "group": "",
                                "type": "Deployment",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-controller",
                                        "namespace": "ingress-nginx",
                                        "uid": "de2b7be0-057f-481b-b040-c6a28e988e8d",
                                        "resourceVersion": "634",
                                        "generation": 1,
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "deployment.kubernetes.io/revision": "1",
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"minReadySeconds\":0,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\",\"gcp-auth-skip-secret\":\"true\"}},\"spec\":{\"containers\":[{\"args\":[\"/nginx-ingress-controller\",\"--ingress-class=nginx\",\"--configmap=$(POD_NAMESPACE)/ingress-nginx-controller\",\"--report-node-internal-ip-address\",\"--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services\",\"--udp-services-configmap=$(POD_NAMESPACE)/udp-services\",\"--validating-webhook=:8443\",\"--validating-webhook-certificate=/usr/local/certificates/cert\",\"--validating-webhook-key=/usr/local/certificates/key\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LD_PRELOAD\",\"value\":\"/usr/local/lib/libmimalloc.so\"}],\"image\":\"k8s.gcr.io/ingress-nginx/controller:v0.44.0@sha256:3dd0fac48073beaca2d67a78c746c7593f9c575168a17139a9955a82c63c4b9a\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/wait-shutdown\"]}}},\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"controller\",\"ports\":[{\"containerPort\":80,\"hostPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":443,\"hostPort\":443,\"name\":\"https\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"webhook\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"runAsUser\":101},\"volumeMounts\":[{\"mountPath\":\"/usr/local/certificates/\",\"name\":\"webhook-cert\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"serviceAccountName\":\"ingress-nginx\",\"volumes\":[{\"name\":\"webhook-cert\",\"secret\":{\"secretName\":\"ingress-nginx-admission\"}}]}}}}\n"
                                        }
                                    },
                                    "spec": {
                                        "replicas": 1,
                                        "selector": {
                                            "matchLabels": {
                                                "addonmanager.kubernetes.io/mode": "Reconcile",
                                                "app.kubernetes.io/component": "controller",
                                                "app.kubernetes.io/instance": "ingress-nginx",
                                                "app.kubernetes.io/name": "ingress-nginx"
                                            }
                                        },
                                        "template": {
                                            "metadata": {
                                                "creationTimestamp": null,
                                                "labels": {
                                                    "addonmanager.kubernetes.io/mode": "Reconcile",
                                                    "app.kubernetes.io/component": "controller",
                                                    "app.kubernetes.io/instance": "ingress-nginx",
                                                    "app.kubernetes.io/name": "ingress-nginx",
                                                    "gcp-auth-skip-secret": "true"
                                                }
                                            },
                                            "spec": {
                                                "volumes": [
                                                    {
                                                        "name": "webhook-cert",
                                                        "secret": {
                                                            "secretName": "ingress-nginx-admission",
                                                            "defaultMode": 420
                                                        }
                                                    }
                                                ],
                                                "containers": [
                                                    {
                                                        "name": "controller",
                                                        "image": "k8s.gcr.io/ingress-nginx/controller:v0.44.0@sha256:3dd0fac48073beaca2d67a78c746c7593f9c575168a17139a9955a82c63c4b9a",
                                                        "args": [
                                                            "/nginx-ingress-controller",
                                                            "--ingress-class=nginx",
                                                            "--configmap=$(POD_NAMESPACE)/ingress-nginx-controller",
                                                            "--report-node-internal-ip-address",
                                                            "--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services",
                                                            "--udp-services-configmap=$(POD_NAMESPACE)/udp-services",
                                                            "--validating-webhook=:8443",
                                                            "--validating-webhook-certificate=/usr/local/certificates/cert",
                                                            "--validating-webhook-key=/usr/local/certificates/key"
                                                        ],
                                                        "ports": [
                                                            {
                                                                "name": "http",
                                                                "hostPort": 80,
                                                                "containerPort": 80,
                                                                "protocol": "TCP"
                                                            },
                                                            {
                                                                "name": "https",
                                                                "hostPort": 443,
                                                                "containerPort": 443,
                                                                "protocol": "TCP"
                                                            },
                                                            {
                                                                "name": "webhook",
                                                                "containerPort": 8443,
                                                                "protocol": "TCP"
                                                            }
                                                        ],
                                                        "env": [
                                                            {
                                                                "name": "POD_NAME",
                                                                "valueFrom": {
                                                                    "fieldRef": {
                                                                        "apiVersion": "v1",
                                                                        "fieldPath": "metadata.name"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "name": "POD_NAMESPACE",
                                                                "valueFrom": {
                                                                    "fieldRef": {
                                                                        "apiVersion": "v1",
                                                                        "fieldPath": "metadata.namespace"
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "name": "LD_PRELOAD",
                                                                "value": "/usr/local/lib/libmimalloc.so"
                                                            }
                                                        ],
                                                        "resources": {
                                                            "requests": {
                                                                "cpu": "100m",
                                                                "memory": "90Mi"
                                                            }
                                                        },
                                                        "volumeMounts": [
                                                            {
                                                                "name": "webhook-cert",
                                                                "readOnly": true,
                                                                "mountPath": "/usr/local/certificates/"
                                                            }
                                                        ],
                                                        "livenessProbe": {
                                                            "httpGet": {
                                                                "path": "/healthz",
                                                                "port": 10254,
                                                                "scheme": "HTTP"
                                                            },
                                                            "initialDelaySeconds": 10,
                                                            "timeoutSeconds": 1,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 5
                                                        },
                                                        "readinessProbe": {
                                                            "httpGet": {
                                                                "path": "/healthz",
                                                                "port": 10254,
                                                                "scheme": "HTTP"
                                                            },
                                                            "initialDelaySeconds": 10,
                                                            "timeoutSeconds": 1,
                                                            "periodSeconds": 10,
                                                            "successThreshold": 1,
                                                            "failureThreshold": 3
                                                        },
                                                        "lifecycle": {
                                                            "preStop": {
                                                                "exec": {
                                                                    "command": [
                                                                        "/wait-shutdown"
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "terminationMessagePath": "/dev/termination-log",
                                                        "terminationMessagePolicy": "File",
                                                        "imagePullPolicy": "IfNotPresent",
                                                        "securityContext": {
                                                            "capabilities": {
                                                                "add": [
                                                                    "NET_BIND_SERVICE"
                                                                ],
                                                                "drop": [
                                                                    "ALL"
                                                                ]
                                                            },
                                                            "runAsUser": 101,
                                                            "allowPrivilegeEscalation": true
                                                        }
                                                    }
                                                ],
                                                "restartPolicy": "Always",
                                                "terminationGracePeriodSeconds": 30,
                                                "dnsPolicy": "ClusterFirst",
                                                "serviceAccountName": "ingress-nginx",
                                                "serviceAccount": "ingress-nginx",
                                                "securityContext": {},
                                                "schedulerName": "default-scheduler"
                                            }
                                        },
                                        "strategy": {
                                            "type": "RollingUpdate",
                                            "rollingUpdate": {
                                                "maxUnavailable": 1,
                                                "maxSurge": "25%"
                                            }
                                        },
                                        "revisionHistoryLimit": 10,
                                        "progressDeadlineSeconds": 600
                                    },
                                    "status": {
                                        "observedGeneration": 1,
                                        "replicas": 1,
                                        "updatedReplicas": 1,
                                        "readyReplicas": 1,
                                        "availableReplicas": 1,
                                        "conditions": [
                                            {
                                                "type": "Available",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-23T13:15:36Z",
                                                "lastTransitionTime": "2021-08-23T13:15:36Z",
                                                "reason": "MinimumReplicasAvailable",
                                                "message": "Deployment has minimum availability."
                                            },
                                            {
                                                "type": "Progressing",
                                                "status": "True",
                                                "lastUpdateTime": "2021-08-23T13:16:46Z",
                                                "lastTransitionTime": "2021-08-23T13:15:36Z",
                                                "reason": "NewReplicaSetAvailable",
                                                "message": "ReplicaSet \"ingress-nginx-controller-59b45fb494\" has successfully progressed."
                                            }
                                        ]
                                    }
                                },
                                "name": "ingress-nginx-controller",
                                "id": "ingress-nginx-controller",
                                "meta": {
                                    "name": "ingress-nginx-controller",
                                    "namespace": "ingress-nginx",
                                    "uid": "de2b7be0-057f-481b-b040-c6a28e988e8d",
                                    "resourceVersion": "634",
                                    "generation": 1,
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "deployment.kubernetes.io/revision": "1",
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"minReadySeconds\":0,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\",\"gcp-auth-skip-secret\":\"true\"}},\"spec\":{\"containers\":[{\"args\":[\"/nginx-ingress-controller\",\"--ingress-class=nginx\",\"--configmap=$(POD_NAMESPACE)/ingress-nginx-controller\",\"--report-node-internal-ip-address\",\"--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services\",\"--udp-services-configmap=$(POD_NAMESPACE)/udp-services\",\"--validating-webhook=:8443\",\"--validating-webhook-certificate=/usr/local/certificates/cert\",\"--validating-webhook-key=/usr/local/certificates/key\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"LD_PRELOAD\",\"value\":\"/usr/local/lib/libmimalloc.so\"}],\"image\":\"k8s.gcr.io/ingress-nginx/controller:v0.44.0@sha256:3dd0fac48073beaca2d67a78c746c7593f9c575168a17139a9955a82c63c4b9a\",\"imagePullPolicy\":\"IfNotPresent\",\"lifecycle\":{\"preStop\":{\"exec\":{\"command\":[\"/wait-shutdown\"]}}},\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"controller\",\"ports\":[{\"containerPort\":80,\"hostPort\":80,\"name\":\"http\",\"protocol\":\"TCP\"},{\"containerPort\":443,\"hostPort\":443,\"name\":\"https\",\"protocol\":\"TCP\"},{\"containerPort\":8443,\"name\":\"webhook\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"90Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":true,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"runAsUser\":101},\"volumeMounts\":[{\"mountPath\":\"/usr/local/certificates/\",\"name\":\"webhook-cert\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"serviceAccountName\":\"ingress-nginx\",\"volumes\":[{\"name\":\"webhook-cert\",\"secret\":{\"secretName\":\"ingress-nginx-admission\"}}]}}}}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Deployment::ingress-nginx::ingress-nginx-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx-controller"
                            }
                        ],
                        "groupType": "::Deployment",
                        "type": "Deployment",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::MutatingWebhookConfiguration",
                                "group": "",
                                "type": "MutatingWebhookConfiguration",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-webhook",
                                        "uid": "d9c93a3d-d717-47fb-b6e5-13c021483b94",
                                        "resourceVersion": "1302",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "webhook",
                                            "app.kubernetes.io/component": "webhook",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "webhook"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-webhook",
                                            "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "webhooks": [
                                        {
                                            "name": "webhook.cert-manager.io",
                                            "clientConfig": {
                                                "service": {
                                                    "namespace": "cert-manager",
                                                    "name": "cert-manager-webhook",
                                                    "path": "/mutate",
                                                    "port": 443
                                                },
                                                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQU1WaXFjcXFEVVJlcTBIYjdGSXBIREl3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFd09ESXpNVE15TXpFMApXaGNOTWpJd09ESXpNVE15TXpFMFdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJJY2ZEL3ovc1Yvd09SM1V1MzNxR3NUYk9SS3gKYjVQdXJiVXM5dy91d3RibVJwVlJuMVp4dVFXSGsrRUltbVNmdEQzbTE0ZnZtLzJSN1F2bXEycHI1UURSRHRrcgo3Uy95ZTdHbXFhaGZqQnpqbEZSV0E5SU9sYTVSWDZBd2JPRVpLNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHSUJoQ3paSyswanljRU5GbFpVZGh1K0tlN0sKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFERkxBcURPQnpRYkp5WjYzWlFVQktJcGh5Mm9qbnVpQVA2NFgreAo4aElMNTMvOFBJbDI5MDg0REVqSTU4cUp1NUlDTVFDNGRmVm1XOXN3bGtVVTRlU0JKdVgyZ1k4WjFNR1VweEhCCmM4cmNLZEFkVHkrbUVCVnpqQUxqc0Z4dUxTSmZkS2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                                            },
                                            "rules": [
                                                {
                                                    "operations": [
                                                        "CREATE",
                                                        "UPDATE"
                                                    ],
                                                    "apiGroups": [
                                                        "cert-manager.io",
                                                        "acme.cert-manager.io"
                                                    ],
                                                    "apiVersions": [
                                                        "*"
                                                    ],
                                                    "resources": [
                                                        "*/*"
                                                    ],
                                                    "scope": "*"
                                                }
                                            ],
                                            "failurePolicy": "Fail",
                                            "matchPolicy": "Equivalent",
                                            "namespaceSelector": {},
                                            "objectSelector": {},
                                            "sideEffects": "None",
                                            "timeoutSeconds": 10,
                                            "admissionReviewVersions": [
                                                "v1",
                                                "v1beta1"
                                            ],
                                            "reinvocationPolicy": "Never"
                                        }
                                    ]
                                },
                                "name": "cert-manager-webhook",
                                "id": "cert-manager-webhook",
                                "meta": {
                                    "name": "cert-manager-webhook",
                                    "uid": "d9c93a3d-d717-47fb-b6e5-13c021483b94",
                                    "resourceVersion": "1302",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "webhook",
                                        "app.kubernetes.io/component": "webhook",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "webhook"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-webhook",
                                        "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::MutatingWebhookConfiguration::cert-manager-webhook",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-webhook"
                            }
                        ],
                        "groupType": "::MutatingWebhookConfiguration",
                        "type": "MutatingWebhookConfiguration",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager",
                                        "uid": "fcb84f98-7fc8-457f-824f-96570df98900",
                                        "resourceVersion": "1165",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "kubernetes.io/metadata.name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "cert-manager",
                                "id": "cert-manager",
                                "meta": {
                                    "name": "cert-manager",
                                    "uid": "fcb84f98-7fc8-457f-824f-96570df98900",
                                    "resourceVersion": "1165",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "kubernetes.io/metadata.name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::cert-manager",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager"
                            },
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "default",
                                        "uid": "6a056b07-1891-4925-a98c-3b0c69ee3643",
                                        "resourceVersion": "206",
                                        "creationTimestamp": "2021-08-23T13:15:21Z",
                                        "labels": {
                                            "kubernetes.io/metadata.name": "default"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "default",
                                "id": "default",
                                "meta": {
                                    "name": "default",
                                    "uid": "6a056b07-1891-4925-a98c-3b0c69ee3643",
                                    "resourceVersion": "206",
                                    "creationTimestamp": "2021-08-23T13:15:21Z",
                                    "labels": {
                                        "kubernetes.io/metadata.name": "default"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::default",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "default"
                            },
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "example",
                                        "uid": "1d2dbe81-5477-49db-9b7e-434b4336d7f3",
                                        "resourceVersion": "1154",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "kubernetes.io/metadata.name": "example"
                                        },
                                        "annotations": {
                                            "Name": "example",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "example",
                                "id": "example",
                                "meta": {
                                    "name": "example",
                                    "uid": "1d2dbe81-5477-49db-9b7e-434b4336d7f3",
                                    "resourceVersion": "1154",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "kubernetes.io/metadata.name": "example"
                                    },
                                    "annotations": {
                                        "Name": "example",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::example",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "example"
                            },
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx",
                                        "uid": "74fd022a-b783-4997-aaa8-759c9055b98e",
                                        "resourceVersion": "294",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx",
                                            "kubernetes.io/metadata.name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\"}}\n"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "ingress-nginx",
                                "id": "ingress-nginx",
                                "meta": {
                                    "name": "ingress-nginx",
                                    "uid": "74fd022a-b783-4997-aaa8-759c9055b98e",
                                    "resourceVersion": "294",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx",
                                        "kubernetes.io/metadata.name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\"}}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::ingress-nginx",
                                "managedByUs": false,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "ingress-nginx"
                            },
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kube-node-lease",
                                        "uid": "2fb7f3b0-9478-4978-84f1-bd3190ba6fc1",
                                        "resourceVersion": "62",
                                        "creationTimestamp": "2021-08-23T13:15:18Z",
                                        "labels": {
                                            "kubernetes.io/metadata.name": "kube-node-lease"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "kube-node-lease",
                                "id": "kube-node-lease",
                                "meta": {
                                    "name": "kube-node-lease",
                                    "uid": "2fb7f3b0-9478-4978-84f1-bd3190ba6fc1",
                                    "resourceVersion": "62",
                                    "creationTimestamp": "2021-08-23T13:15:18Z",
                                    "labels": {
                                        "kubernetes.io/metadata.name": "kube-node-lease"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::kube-node-lease",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-node-lease"
                            },
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kube-public",
                                        "uid": "f6e65e5f-e7b0-4669-b850-1ab25c41c52a",
                                        "resourceVersion": "54",
                                        "creationTimestamp": "2021-08-23T13:15:18Z",
                                        "labels": {
                                            "kubernetes.io/metadata.name": "kube-public"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "kube-public",
                                "id": "kube-public",
                                "meta": {
                                    "name": "kube-public",
                                    "uid": "f6e65e5f-e7b0-4669-b850-1ab25c41c52a",
                                    "resourceVersion": "54",
                                    "creationTimestamp": "2021-08-23T13:15:18Z",
                                    "labels": {
                                        "kubernetes.io/metadata.name": "kube-public"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::kube-public",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-public"
                            },
                            {
                                "groupType": "::Namespace",
                                "group": "",
                                "type": "Namespace",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kube-system",
                                        "uid": "30829f87-a2f9-4551-89c4-c492653326c9",
                                        "resourceVersion": "23",
                                        "creationTimestamp": "2021-08-23T13:15:18Z",
                                        "labels": {
                                            "kubernetes.io/metadata.name": "kube-system"
                                        }
                                    },
                                    "spec": {
                                        "finalizers": [
                                            "kubernetes"
                                        ]
                                    },
                                    "status": {
                                        "phase": "Active"
                                    }
                                },
                                "name": "kube-system",
                                "id": "kube-system",
                                "meta": {
                                    "name": "kube-system",
                                    "uid": "30829f87-a2f9-4551-89c4-c492653326c9",
                                    "resourceVersion": "23",
                                    "creationTimestamp": "2021-08-23T13:15:18Z",
                                    "labels": {
                                        "kubernetes.io/metadata.name": "kube-system"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Namespace::kube-system",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system"
                            }
                        ],
                        "groupType": "::Namespace",
                        "type": "Namespace",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-cainjector:leaderelection",
                                        "namespace": "kube-system",
                                        "uid": "56bbd76b-120b-47f4-aa85-94a6dfd29dce",
                                        "resourceVersion": "1151",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cainjector",
                                            "app.kubernetes.io/component": "cainjector",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cainjector"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-cainjector:leaderelection",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "update",
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ],
                                            "resourceNames": [
                                                "cert-manager-cainjector-leader-election",
                                                "cert-manager-cainjector-leader-election-core"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-cainjector:leaderelection",
                                "id": "cert-manager-cainjector:leaderelection",
                                "meta": {
                                    "name": "cert-manager-cainjector:leaderelection",
                                    "namespace": "kube-system",
                                    "uid": "56bbd76b-120b-47f4-aa85-94a6dfd29dce",
                                    "resourceVersion": "1151",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cainjector",
                                        "app.kubernetes.io/component": "cainjector",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cainjector"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-cainjector:leaderelection",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::cert-manager-cainjector:leaderelection",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "kube-system::cert-manager-cainjector:leaderelection"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-webhook:dynamic-serving",
                                        "namespace": "cert-manager",
                                        "uid": "257fe6a8-5972-48c7-a743-1f1e57e336e0",
                                        "resourceVersion": "1203",
                                        "creationTimestamp": "2021-08-23T13:22:54Z",
                                        "labels": {
                                            "app": "webhook",
                                            "app.kubernetes.io/component": "webhook",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "webhook"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-webhook:dynamic-serving",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ],
                                            "resourceNames": [
                                                "cert-manager-webhook-ca"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-webhook:dynamic-serving",
                                "id": "cert-manager-webhook:dynamic-serving",
                                "meta": {
                                    "name": "cert-manager-webhook:dynamic-serving",
                                    "namespace": "cert-manager",
                                    "uid": "257fe6a8-5972-48c7-a743-1f1e57e336e0",
                                    "resourceVersion": "1203",
                                    "creationTimestamp": "2021-08-23T13:22:54Z",
                                    "labels": {
                                        "app": "webhook",
                                        "app.kubernetes.io/component": "webhook",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "webhook"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-webhook:dynamic-serving",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "cert-manager",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::cert-manager::cert-manager-webhook:dynamic-serving",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager::cert-manager-webhook:dynamic-serving"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager:leaderelection",
                                        "namespace": "kube-system",
                                        "uid": "3e5f32ed-4e39-49bd-a97a-43b29fb5c05b",
                                        "resourceVersion": "1158",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager:leaderelection",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "update",
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ],
                                            "resourceNames": [
                                                "cert-manager-controller"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager:leaderelection",
                                "id": "cert-manager:leaderelection",
                                "meta": {
                                    "name": "cert-manager:leaderelection",
                                    "namespace": "kube-system",
                                    "uid": "3e5f32ed-4e39-49bd-a97a-43b29fb5c05b",
                                    "resourceVersion": "1158",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager:leaderelection",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::cert-manager:leaderelection",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "kube-system::cert-manager:leaderelection"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "extension-apiserver-authentication-reader",
                                        "namespace": "kube-system",
                                        "uid": "3f01d846-259d-4a89-9613-22d73e99f775",
                                        "resourceVersion": "192",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ],
                                            "resourceNames": [
                                                "extension-apiserver-authentication"
                                            ]
                                        }
                                    ]
                                },
                                "name": "extension-apiserver-authentication-reader",
                                "id": "extension-apiserver-authentication-reader",
                                "meta": {
                                    "name": "extension-apiserver-authentication-reader",
                                    "namespace": "kube-system",
                                    "uid": "3f01d846-259d-4a89-9613-22d73e99f775",
                                    "resourceVersion": "192",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::extension-apiserver-authentication-reader",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::extension-apiserver-authentication-reader"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx",
                                        "namespace": "ingress-nginx",
                                        "uid": "4e3a82f4-b099-4d63-a68d-310913d6f2d6",
                                        "resourceVersion": "303",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\",\"namespace\":\"ingress-nginx\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\",\"pods\",\"secrets\",\"endpoints\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"networking.k8s.io\"],\"resources\":[\"ingresses/status\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingressclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"ingress-controller-leader-nginx\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]}]}\n"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "namespaces"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps",
                                                "pods",
                                                "secrets",
                                                "endpoints"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "services"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "extensions",
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "extensions",
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingresses/status"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                "networking.k8s.io"
                                            ],
                                            "resources": [
                                                "ingressclasses"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ],
                                            "resourceNames": [
                                                "ingress-controller-leader-nginx"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "ingress-nginx",
                                "id": "ingress-nginx",
                                "meta": {
                                    "name": "ingress-nginx",
                                    "namespace": "ingress-nginx",
                                    "uid": "4e3a82f4-b099-4d63-a68d-310913d6f2d6",
                                    "resourceVersion": "303",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\",\"namespace\":\"ingress-nginx\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\",\"pods\",\"secrets\",\"endpoints\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"networking.k8s.io\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"networking.k8s.io\"],\"resources\":[\"ingresses/status\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"networking.k8s.io\"],\"resources\":[\"ingressclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"ingress-controller-leader-nginx\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"update\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::ingress-nginx::ingress-nginx",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-admission",
                                        "namespace": "ingress-nginx",
                                        "uid": "2338be75-98af-47cf-b906-b18da84c27fa",
                                        "resourceVersion": "310",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "admission-webhook",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\",\"namespace\":\"ingress-nginx\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"secrets\"],\"verbs\":[\"get\",\"create\"]}]}\n"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        }
                                    ]
                                },
                                "name": "ingress-nginx-admission",
                                "id": "ingress-nginx-admission",
                                "meta": {
                                    "name": "ingress-nginx-admission",
                                    "namespace": "ingress-nginx",
                                    "uid": "2338be75-98af-47cf-b906-b18da84c27fa",
                                    "resourceVersion": "310",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "admission-webhook",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\",\"namespace\":\"ingress-nginx\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"secrets\"],\"verbs\":[\"get\",\"create\"]}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::ingress-nginx::ingress-nginx-admission",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx-admission"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kube-proxy",
                                        "namespace": "kube-system",
                                        "uid": "5c3cb251-e478-4028-8f87-4cf7aaa8ae6f",
                                        "resourceVersion": "266",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ],
                                            "resourceNames": [
                                                "kube-proxy"
                                            ]
                                        }
                                    ]
                                },
                                "name": "kube-proxy",
                                "id": "kube-proxy",
                                "meta": {
                                    "name": "kube-proxy",
                                    "namespace": "kube-system",
                                    "uid": "5c3cb251-e478-4028-8f87-4cf7aaa8ae6f",
                                    "resourceVersion": "266",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::kube-proxy",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::kube-proxy"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:bootstrap-signer-clusterinfo",
                                        "namespace": "kube-public",
                                        "uid": "a2f5df70-23ce-40a2-9986-b04090100df3",
                                        "resourceVersion": "248",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ],
                                            "resourceNames": [
                                                "cluster-info"
                                            ]
                                        }
                                    ]
                                },
                                "name": "kubeadm:bootstrap-signer-clusterinfo",
                                "id": "kubeadm:bootstrap-signer-clusterinfo",
                                "meta": {
                                    "name": "kubeadm:bootstrap-signer-clusterinfo",
                                    "namespace": "kube-public",
                                    "uid": "a2f5df70-23ce-40a2-9986-b04090100df3",
                                    "resourceVersion": "248",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-public",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-public::kubeadm:bootstrap-signer-clusterinfo",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-public::kubeadm:bootstrap-signer-clusterinfo"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:kubelet-config-1.21",
                                        "namespace": "kube-system",
                                        "uid": "bf381802-d201-40a6-84e0-983785a68bb8",
                                        "resourceVersion": "216",
                                        "creationTimestamp": "2021-08-23T13:15:21Z"
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ],
                                            "resourceNames": [
                                                "kubelet-config-1.21"
                                            ]
                                        }
                                    ]
                                },
                                "name": "kubeadm:kubelet-config-1.21",
                                "id": "kubeadm:kubelet-config-1.21",
                                "meta": {
                                    "name": "kubeadm:kubelet-config-1.21",
                                    "namespace": "kube-system",
                                    "uid": "bf381802-d201-40a6-84e0-983785a68bb8",
                                    "resourceVersion": "216",
                                    "creationTimestamp": "2021-08-23T13:15:21Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::kubeadm:kubelet-config-1.21",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::kubeadm:kubelet-config-1.21"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:nodes-kubeadm-config",
                                        "namespace": "kube-system",
                                        "uid": "d7c43cdf-5e39-4463-9eab-f248e10b1e2b",
                                        "resourceVersion": "213",
                                        "creationTimestamp": "2021-08-23T13:15:21Z"
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ],
                                            "resourceNames": [
                                                "kubeadm-config"
                                            ]
                                        }
                                    ]
                                },
                                "name": "kubeadm:nodes-kubeadm-config",
                                "id": "kubeadm:nodes-kubeadm-config",
                                "meta": {
                                    "name": "kubeadm:nodes-kubeadm-config",
                                    "namespace": "kube-system",
                                    "uid": "d7c43cdf-5e39-4463-9eab-f248e10b1e2b",
                                    "resourceVersion": "213",
                                    "creationTimestamp": "2021-08-23T13:15:21Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::kubeadm:nodes-kubeadm-config",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::kubeadm:nodes-kubeadm-config"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system::leader-locking-kube-controller-manager",
                                        "namespace": "kube-system",
                                        "uid": "8c8acd26-ed99-4221-8748-96c258d2807a",
                                        "resourceVersion": "196",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ],
                                            "resourceNames": [
                                                "kube-controller-manager"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system::leader-locking-kube-controller-manager",
                                "id": "system::leader-locking-kube-controller-manager",
                                "meta": {
                                    "name": "system::leader-locking-kube-controller-manager",
                                    "namespace": "kube-system",
                                    "uid": "8c8acd26-ed99-4221-8748-96c258d2807a",
                                    "resourceVersion": "196",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::system::leader-locking-kube-controller-manager",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system::leader-locking-kube-controller-manager"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system::leader-locking-kube-scheduler",
                                        "namespace": "kube-system",
                                        "uid": "005d5c27-33f7-4cea-9d2d-6f4f4f6103e7",
                                        "resourceVersion": "197",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ],
                                            "resourceNames": [
                                                "kube-scheduler"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system::leader-locking-kube-scheduler",
                                "id": "system::leader-locking-kube-scheduler",
                                "meta": {
                                    "name": "system::leader-locking-kube-scheduler",
                                    "namespace": "kube-system",
                                    "uid": "005d5c27-33f7-4cea-9d2d-6f4f4f6103e7",
                                    "resourceVersion": "197",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::system::leader-locking-kube-scheduler",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system::leader-locking-kube-scheduler"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:bootstrap-signer",
                                        "namespace": "kube-public",
                                        "uid": "991c9045-5041-4759-b92b-35ae0f7b57bb",
                                        "resourceVersion": "198",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "update"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ],
                                            "resourceNames": [
                                                "cluster-info"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:bootstrap-signer",
                                "id": "system:controller:bootstrap-signer",
                                "meta": {
                                    "name": "system:controller:bootstrap-signer",
                                    "namespace": "kube-public",
                                    "uid": "991c9045-5041-4759-b92b-35ae0f7b57bb",
                                    "resourceVersion": "198",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-public",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-public::system:controller:bootstrap-signer",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-public::system:controller:bootstrap-signer"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:bootstrap-signer",
                                        "namespace": "kube-system",
                                        "uid": "2707f750-eb03-4e8b-8c4e-8653ab231177",
                                        "resourceVersion": "193",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:bootstrap-signer",
                                "id": "system:controller:bootstrap-signer",
                                "meta": {
                                    "name": "system:controller:bootstrap-signer",
                                    "namespace": "kube-system",
                                    "uid": "2707f750-eb03-4e8b-8c4e-8653ab231177",
                                    "resourceVersion": "193",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::system:controller:bootstrap-signer",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system:controller:bootstrap-signer"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:cloud-provider",
                                        "namespace": "kube-system",
                                        "uid": "ed59fd01-63c0-4eae-8736-ec69884681ea",
                                        "resourceVersion": "194",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "create",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "configmaps"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:cloud-provider",
                                "id": "system:controller:cloud-provider",
                                "meta": {
                                    "name": "system:controller:cloud-provider",
                                    "namespace": "kube-system",
                                    "uid": "ed59fd01-63c0-4eae-8736-ec69884681ea",
                                    "resourceVersion": "194",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::system:controller:cloud-provider",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system:controller:cloud-provider"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:token-cleaner",
                                        "namespace": "kube-system",
                                        "uid": "dd44a1c1-72fa-418a-9f6d-28c64a65af9d",
                                        "resourceVersion": "195",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "delete",
                                                "get",
                                                "list",
                                                "watch"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "secrets"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "create",
                                                "patch",
                                                "update"
                                            ],
                                            "apiGroups": [
                                                "",
                                                "events.k8s.io"
                                            ],
                                            "resources": [
                                                "events"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:controller:token-cleaner",
                                "id": "system:controller:token-cleaner",
                                "meta": {
                                    "name": "system:controller:token-cleaner",
                                    "namespace": "kube-system",
                                    "uid": "dd44a1c1-72fa-418a-9f6d-28c64a65af9d",
                                    "resourceVersion": "195",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::system:controller:token-cleaner",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system:controller:token-cleaner"
                            },
                            {
                                "groupType": "::Role",
                                "group": "",
                                "type": "Role",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:persistent-volume-provisioner",
                                        "namespace": "kube-system",
                                        "uid": "9157f9cf-de97-490d-bf46-a1f56658a60a",
                                        "resourceVersion": "286",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "EnsureExists"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"EnsureExists\"},\"name\":\"system:persistent-volume-provisioner\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"endpoints\"],\"verbs\":[\"watch\",\"create\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"k8s.io-minikube-hostpath\"],\"resources\":[\"endpoints\"],\"verbs\":[\"get\",\"update\",\"create\"]}]}\n"
                                        }
                                    },
                                    "rules": [
                                        {
                                            "verbs": [
                                                "watch",
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints"
                                            ]
                                        },
                                        {
                                            "verbs": [
                                                "get",
                                                "update",
                                                "create"
                                            ],
                                            "apiGroups": [
                                                ""
                                            ],
                                            "resources": [
                                                "endpoints"
                                            ],
                                            "resourceNames": [
                                                "k8s.io-minikube-hostpath"
                                            ]
                                        }
                                    ]
                                },
                                "name": "system:persistent-volume-provisioner",
                                "id": "system:persistent-volume-provisioner",
                                "meta": {
                                    "name": "system:persistent-volume-provisioner",
                                    "namespace": "kube-system",
                                    "uid": "9157f9cf-de97-490d-bf46-a1f56658a60a",
                                    "resourceVersion": "286",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "EnsureExists"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"EnsureExists\"},\"name\":\"system:persistent-volume-provisioner\",\"namespace\":\"kube-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"endpoints\"],\"verbs\":[\"watch\",\"create\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"k8s.io-minikube-hostpath\"],\"resources\":[\"endpoints\"],\"verbs\":[\"get\",\"update\",\"create\"]}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Role::kube-system::system:persistent-volume-provisioner",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system:persistent-volume-provisioner"
                            }
                        ],
                        "groupType": "::Role",
                        "type": "Role",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-cainjector:leaderelection",
                                        "namespace": "kube-system",
                                        "uid": "64ca350f-30d7-4c52-82c7-f0e237437dbe",
                                        "resourceVersion": "1156",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cainjector",
                                            "app.kubernetes.io/component": "cainjector",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cainjector"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-cainjector:leaderelection",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager-cainjector",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "cert-manager-cainjector:leaderelection"
                                    }
                                },
                                "name": "cert-manager-cainjector:leaderelection",
                                "id": "cert-manager-cainjector:leaderelection",
                                "meta": {
                                    "name": "cert-manager-cainjector:leaderelection",
                                    "namespace": "kube-system",
                                    "uid": "64ca350f-30d7-4c52-82c7-f0e237437dbe",
                                    "resourceVersion": "1156",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cainjector",
                                        "app.kubernetes.io/component": "cainjector",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cainjector"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-cainjector:leaderelection",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "cert-manager-cainjector:leaderelection",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::cert-manager-cainjector:leaderelection",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "kube-system::cert-manager-cainjector:leaderelection"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-webhook:dynamic-serving",
                                        "namespace": "cert-manager",
                                        "uid": "d5dc94fe-2853-4835-8d50-ec2a13c9c1b5",
                                        "resourceVersion": "1202",
                                        "creationTimestamp": "2021-08-23T13:22:54Z",
                                        "labels": {
                                            "app": "webhook",
                                            "app.kubernetes.io/component": "webhook",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "webhook"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-webhook:dynamic-serving",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager-webhook",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "cert-manager-webhook:dynamic-serving"
                                    }
                                },
                                "name": "cert-manager-webhook:dynamic-serving",
                                "id": "cert-manager-webhook:dynamic-serving",
                                "meta": {
                                    "name": "cert-manager-webhook:dynamic-serving",
                                    "namespace": "cert-manager",
                                    "uid": "d5dc94fe-2853-4835-8d50-ec2a13c9c1b5",
                                    "resourceVersion": "1202",
                                    "creationTimestamp": "2021-08-23T13:22:54Z",
                                    "labels": {
                                        "app": "webhook",
                                        "app.kubernetes.io/component": "webhook",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "webhook"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-webhook:dynamic-serving",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "cert-manager",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "cert-manager-webhook:dynamic-serving",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::cert-manager::cert-manager-webhook:dynamic-serving",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager::cert-manager-webhook:dynamic-serving"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager:leaderelection",
                                        "namespace": "kube-system",
                                        "uid": "1ec86127-ee35-4bb3-9645-ba84bbf97461",
                                        "resourceVersion": "1157",
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager:leaderelection",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cert-manager",
                                            "namespace": "cert-manager"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "cert-manager:leaderelection"
                                    }
                                },
                                "name": "cert-manager:leaderelection",
                                "id": "cert-manager:leaderelection",
                                "meta": {
                                    "name": "cert-manager:leaderelection",
                                    "namespace": "kube-system",
                                    "uid": "1ec86127-ee35-4bb3-9645-ba84bbf97461",
                                    "resourceVersion": "1157",
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager:leaderelection",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "cert-manager:leaderelection",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::cert-manager:leaderelection",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "kube-system::cert-manager:leaderelection"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx",
                                        "namespace": "ingress-nginx",
                                        "uid": "260c5805-4909-4d45-917e-515bd8d343b4",
                                        "resourceVersion": "304",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\",\"namespace\":\"ingress-nginx\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"ingress-nginx\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"ingress-nginx\",\"namespace\":\"ingress-nginx\"}]}\n"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "ingress-nginx",
                                            "namespace": "ingress-nginx"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "ingress-nginx"
                                    }
                                },
                                "name": "ingress-nginx",
                                "id": "ingress-nginx",
                                "meta": {
                                    "name": "ingress-nginx",
                                    "namespace": "ingress-nginx",
                                    "uid": "260c5805-4909-4d45-917e-515bd8d343b4",
                                    "resourceVersion": "304",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\",\"namespace\":\"ingress-nginx\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"ingress-nginx\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"ingress-nginx\",\"namespace\":\"ingress-nginx\"}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "ingress-nginx",
                                                "namespace": "ingress-nginx"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::ingress-nginx::ingress-nginx",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-admission",
                                        "namespace": "ingress-nginx",
                                        "uid": "ffdec868-dcaa-43a0-9384-3f30b41c0a2a",
                                        "resourceVersion": "311",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "admission-webhook",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\",\"namespace\":\"ingress-nginx\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"ingress-nginx-admission\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"ingress-nginx-admission\",\"namespace\":\"ingress-nginx\"}]}\n"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "ingress-nginx-admission",
                                            "namespace": "ingress-nginx"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "ingress-nginx-admission"
                                    }
                                },
                                "name": "ingress-nginx-admission",
                                "id": "ingress-nginx-admission",
                                "meta": {
                                    "name": "ingress-nginx-admission",
                                    "namespace": "ingress-nginx",
                                    "uid": "ffdec868-dcaa-43a0-9384-3f30b41c0a2a",
                                    "resourceVersion": "311",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "admission-webhook",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\",\"namespace\":\"ingress-nginx\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"ingress-nginx-admission\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"ingress-nginx-admission\",\"namespace\":\"ingress-nginx\"}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "ingress-nginx-admission",
                                                "namespace": "ingress-nginx"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::ingress-nginx::ingress-nginx-admission",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx-admission"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kube-proxy",
                                        "namespace": "kube-system",
                                        "uid": "5d853162-8e1e-40c7-b0e5-d3e04f863e82",
                                        "resourceVersion": "267",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:bootstrappers:kubeadm:default-node-token"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "kube-proxy"
                                    }
                                },
                                "name": "kube-proxy",
                                "id": "kube-proxy",
                                "meta": {
                                    "name": "kube-proxy",
                                    "namespace": "kube-system",
                                    "uid": "5d853162-8e1e-40c7-b0e5-d3e04f863e82",
                                    "resourceVersion": "267",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "kube-proxy",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::kube-proxy",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::kube-proxy"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:bootstrap-signer-clusterinfo",
                                        "namespace": "kube-public",
                                        "uid": "d6b82274-f9ce-45c5-ac57-6ebc96a2cd11",
                                        "resourceVersion": "249",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "User",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:anonymous"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "kubeadm:bootstrap-signer-clusterinfo"
                                    }
                                },
                                "name": "kubeadm:bootstrap-signer-clusterinfo",
                                "id": "kubeadm:bootstrap-signer-clusterinfo",
                                "meta": {
                                    "name": "kubeadm:bootstrap-signer-clusterinfo",
                                    "namespace": "kube-public",
                                    "uid": "d6b82274-f9ce-45c5-ac57-6ebc96a2cd11",
                                    "resourceVersion": "249",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-public",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "kubeadm:bootstrap-signer-clusterinfo",
                                                "namespace": "kube-public"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-public::kubeadm:bootstrap-signer-clusterinfo",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-public::kubeadm:bootstrap-signer-clusterinfo"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:kubelet-config-1.21",
                                        "namespace": "kube-system",
                                        "uid": "60042028-3109-4cdb-b396-d44da7dc635a",
                                        "resourceVersion": "217",
                                        "creationTimestamp": "2021-08-23T13:15:21Z"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:nodes"
                                        },
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:bootstrappers:kubeadm:default-node-token"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "kubeadm:kubelet-config-1.21"
                                    }
                                },
                                "name": "kubeadm:kubelet-config-1.21",
                                "id": "kubeadm:kubelet-config-1.21",
                                "meta": {
                                    "name": "kubeadm:kubelet-config-1.21",
                                    "namespace": "kube-system",
                                    "uid": "60042028-3109-4cdb-b396-d44da7dc635a",
                                    "resourceVersion": "217",
                                    "creationTimestamp": "2021-08-23T13:15:21Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "kubeadm:kubelet-config-1.21",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::kubeadm:kubelet-config-1.21",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::kubeadm:kubelet-config-1.21"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubeadm:nodes-kubeadm-config",
                                        "namespace": "kube-system",
                                        "uid": "825902d9-782d-4656-82ff-09abdada1da0",
                                        "resourceVersion": "214",
                                        "creationTimestamp": "2021-08-23T13:15:21Z"
                                    },
                                    "subjects": [
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:bootstrappers:kubeadm:default-node-token"
                                        },
                                        {
                                            "kind": "Group",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:nodes"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "kubeadm:nodes-kubeadm-config"
                                    }
                                },
                                "name": "kubeadm:nodes-kubeadm-config",
                                "id": "kubeadm:nodes-kubeadm-config",
                                "meta": {
                                    "name": "kubeadm:nodes-kubeadm-config",
                                    "namespace": "kube-system",
                                    "uid": "825902d9-782d-4656-82ff-09abdada1da0",
                                    "resourceVersion": "214",
                                    "creationTimestamp": "2021-08-23T13:15:21Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "kubeadm:nodes-kubeadm-config",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::kubeadm:nodes-kubeadm-config",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::kubeadm:nodes-kubeadm-config"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system::extension-apiserver-authentication-reader",
                                        "namespace": "kube-system",
                                        "uid": "f584fb15-2b59-4155-8afb-9d2e61aa3463",
                                        "resourceVersion": "199",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "User",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:kube-controller-manager"
                                        },
                                        {
                                            "kind": "User",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:kube-scheduler"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "extension-apiserver-authentication-reader"
                                    }
                                },
                                "name": "system::extension-apiserver-authentication-reader",
                                "id": "system::extension-apiserver-authentication-reader",
                                "meta": {
                                    "name": "system::extension-apiserver-authentication-reader",
                                    "namespace": "kube-system",
                                    "uid": "f584fb15-2b59-4155-8afb-9d2e61aa3463",
                                    "resourceVersion": "199",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "extension-apiserver-authentication-reader",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::system::extension-apiserver-authentication-reader",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system::extension-apiserver-authentication-reader"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system::leader-locking-kube-controller-manager",
                                        "namespace": "kube-system",
                                        "uid": "b4bc7771-9c95-45e6-9c0c-a273bb47d6ed",
                                        "resourceVersion": "200",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "User",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:kube-controller-manager"
                                        },
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "kube-controller-manager",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "system::leader-locking-kube-controller-manager"
                                    }
                                },
                                "name": "system::leader-locking-kube-controller-manager",
                                "id": "system::leader-locking-kube-controller-manager",
                                "meta": {
                                    "name": "system::leader-locking-kube-controller-manager",
                                    "namespace": "kube-system",
                                    "uid": "b4bc7771-9c95-45e6-9c0c-a273bb47d6ed",
                                    "resourceVersion": "200",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "system::leader-locking-kube-controller-manager",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::system::leader-locking-kube-controller-manager",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system::leader-locking-kube-controller-manager"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system::leader-locking-kube-scheduler",
                                        "namespace": "kube-system",
                                        "uid": "900a721e-87e7-4796-a157-b9f298a8cb36",
                                        "resourceVersion": "201",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "User",
                                            "apiGroup": "rbac.authorization.k8s.io",
                                            "name": "system:kube-scheduler"
                                        },
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "kube-scheduler",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "system::leader-locking-kube-scheduler"
                                    }
                                },
                                "name": "system::leader-locking-kube-scheduler",
                                "id": "system::leader-locking-kube-scheduler",
                                "meta": {
                                    "name": "system::leader-locking-kube-scheduler",
                                    "namespace": "kube-system",
                                    "uid": "900a721e-87e7-4796-a157-b9f298a8cb36",
                                    "resourceVersion": "201",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "system::leader-locking-kube-scheduler",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::system::leader-locking-kube-scheduler",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system::leader-locking-kube-scheduler"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:bootstrap-signer",
                                        "namespace": "kube-public",
                                        "uid": "a904e618-1428-4650-8078-c6e0ec1a7c0a",
                                        "resourceVersion": "205",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "bootstrap-signer",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "system:controller:bootstrap-signer"
                                    }
                                },
                                "name": "system:controller:bootstrap-signer",
                                "id": "system:controller:bootstrap-signer",
                                "meta": {
                                    "name": "system:controller:bootstrap-signer",
                                    "namespace": "kube-public",
                                    "uid": "a904e618-1428-4650-8078-c6e0ec1a7c0a",
                                    "resourceVersion": "205",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-public",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "system:controller:bootstrap-signer",
                                                "namespace": "kube-public"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-public::system:controller:bootstrap-signer",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-public::system:controller:bootstrap-signer"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:bootstrap-signer",
                                        "namespace": "kube-system",
                                        "uid": "c3c5cbba-ad1c-4a7a-bdfa-f79068d5e2f3",
                                        "resourceVersion": "202",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "bootstrap-signer",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "system:controller:bootstrap-signer"
                                    }
                                },
                                "name": "system:controller:bootstrap-signer",
                                "id": "system:controller:bootstrap-signer",
                                "meta": {
                                    "name": "system:controller:bootstrap-signer",
                                    "namespace": "kube-system",
                                    "uid": "c3c5cbba-ad1c-4a7a-bdfa-f79068d5e2f3",
                                    "resourceVersion": "202",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "system:controller:bootstrap-signer",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::system:controller:bootstrap-signer",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system:controller:bootstrap-signer"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:cloud-provider",
                                        "namespace": "kube-system",
                                        "uid": "ea4837ee-2e79-4d1e-94e3-118fd4db0b86",
                                        "resourceVersion": "203",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "cloud-provider",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "system:controller:cloud-provider"
                                    }
                                },
                                "name": "system:controller:cloud-provider",
                                "id": "system:controller:cloud-provider",
                                "meta": {
                                    "name": "system:controller:cloud-provider",
                                    "namespace": "kube-system",
                                    "uid": "ea4837ee-2e79-4d1e-94e3-118fd4db0b86",
                                    "resourceVersion": "203",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "system:controller:cloud-provider",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::system:controller:cloud-provider",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system:controller:cloud-provider"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:controller:token-cleaner",
                                        "namespace": "kube-system",
                                        "uid": "26b01eff-7963-474d-b4ad-4803c6d3b1ce",
                                        "resourceVersion": "204",
                                        "creationTimestamp": "2021-08-23T13:15:20Z",
                                        "labels": {
                                            "kubernetes.io/bootstrapping": "rbac-defaults"
                                        },
                                        "annotations": {
                                            "rbac.authorization.kubernetes.io/autoupdate": "true"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "token-cleaner",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "system:controller:token-cleaner"
                                    }
                                },
                                "name": "system:controller:token-cleaner",
                                "id": "system:controller:token-cleaner",
                                "meta": {
                                    "name": "system:controller:token-cleaner",
                                    "namespace": "kube-system",
                                    "uid": "26b01eff-7963-474d-b4ad-4803c6d3b1ce",
                                    "resourceVersion": "204",
                                    "creationTimestamp": "2021-08-23T13:15:20Z",
                                    "labels": {
                                        "kubernetes.io/bootstrapping": "rbac-defaults"
                                    },
                                    "annotations": {
                                        "rbac.authorization.kubernetes.io/autoupdate": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "system:controller:token-cleaner",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::system:controller:token-cleaner",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system:controller:token-cleaner"
                            },
                            {
                                "groupType": "::RoleBinding",
                                "group": "",
                                "type": "RoleBinding",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "system:persistent-volume-provisioner",
                                        "namespace": "kube-system",
                                        "uid": "17677d37-68b3-4a9e-96c9-e51b9e34054a",
                                        "resourceVersion": "287",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "EnsureExists"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"EnsureExists\"},\"name\":\"system:persistent-volume-provisioner\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"system:persistent-volume-provisioner\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"storage-provisioner\",\"namespace\":\"kube-system\"}]}\n"
                                        }
                                    },
                                    "subjects": [
                                        {
                                            "kind": "ServiceAccount",
                                            "name": "storage-provisioner",
                                            "namespace": "kube-system"
                                        }
                                    ],
                                    "roleRef": {
                                        "apiGroup": "rbac.authorization.k8s.io",
                                        "kind": "Role",
                                        "name": "system:persistent-volume-provisioner"
                                    }
                                },
                                "name": "system:persistent-volume-provisioner",
                                "id": "system:persistent-volume-provisioner",
                                "meta": {
                                    "name": "system:persistent-volume-provisioner",
                                    "namespace": "kube-system",
                                    "uid": "17677d37-68b3-4a9e-96c9-e51b9e34054a",
                                    "resourceVersion": "287",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "EnsureExists"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"EnsureExists\"},\"name\":\"system:persistent-volume-provisioner\",\"namespace\":\"kube-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"system:persistent-volume-provisioner\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"storage-provisioner\",\"namespace\":\"kube-system\"}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Role",
                                        "ids": [
                                            {
                                                "name": "system:persistent-volume-provisioner",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Role"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::RoleBinding::kube-system::system:persistent-volume-provisioner",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::system:persistent-volume-provisioner"
                            }
                        ],
                        "groupType": "::RoleBinding",
                        "type": "RoleBinding",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager",
                                        "namespace": "cert-manager",
                                        "uid": "4cb13a6b-063b-4403-8752-a7c262f779ef",
                                        "resourceVersion": "1227",
                                        "creationTimestamp": "2021-08-23T13:22:54Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "protocol": "TCP",
                                                "port": 9402,
                                                "targetPort": 9402
                                            }
                                        ],
                                        "selector": {
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "clusterIP": "10.107.213.13",
                                        "clusterIPs": [
                                            "10.107.213.13"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None",
                                        "ipFamilies": [
                                            "IPv4"
                                        ],
                                        "ipFamilyPolicy": "SingleStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "cert-manager",
                                "id": "cert-manager",
                                "meta": {
                                    "name": "cert-manager",
                                    "namespace": "cert-manager",
                                    "uid": "4cb13a6b-063b-4403-8752-a7c262f779ef",
                                    "resourceVersion": "1227",
                                    "creationTimestamp": "2021-08-23T13:22:54Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "cert-manager",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::cert-manager::cert-manager",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager::cert-manager"
                            },
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-webhook",
                                        "namespace": "cert-manager",
                                        "uid": "a9679306-2c54-4d84-8b7c-0b9d2d1d346a",
                                        "resourceVersion": "1248",
                                        "creationTimestamp": "2021-08-23T13:22:54Z",
                                        "labels": {
                                            "app": "webhook",
                                            "app.kubernetes.io/component": "webhook",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "webhook"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-webhook",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "https",
                                                "protocol": "TCP",
                                                "port": 443,
                                                "targetPort": 10250
                                            }
                                        ],
                                        "selector": {
                                            "app.kubernetes.io/component": "webhook",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "webhook"
                                        },
                                        "clusterIP": "10.104.21.97",
                                        "clusterIPs": [
                                            "10.104.21.97"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None",
                                        "ipFamilies": [
                                            "IPv4"
                                        ],
                                        "ipFamilyPolicy": "SingleStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "cert-manager-webhook",
                                "id": "cert-manager-webhook",
                                "meta": {
                                    "name": "cert-manager-webhook",
                                    "namespace": "cert-manager",
                                    "uid": "a9679306-2c54-4d84-8b7c-0b9d2d1d346a",
                                    "resourceVersion": "1248",
                                    "creationTimestamp": "2021-08-23T13:22:54Z",
                                    "labels": {
                                        "app": "webhook",
                                        "app.kubernetes.io/component": "webhook",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "webhook"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-webhook",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "cert-manager",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::cert-manager::cert-manager-webhook",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager::cert-manager-webhook"
                            },
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-controller",
                                        "namespace": "ingress-nginx",
                                        "uid": "131827b3-59b1-4f02-9b3a-ea336c99aad6",
                                        "resourceVersion": "317",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":\"http\"},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"type\":\"NodePort\"}}\n"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "http",
                                                "protocol": "TCP",
                                                "port": 80,
                                                "targetPort": "http",
                                                "nodePort": 32431
                                            },
                                            {
                                                "name": "https",
                                                "protocol": "TCP",
                                                "port": 443,
                                                "targetPort": "https",
                                                "nodePort": 31039
                                            }
                                        ],
                                        "selector": {
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "clusterIP": "10.106.41.103",
                                        "clusterIPs": [
                                            "10.106.41.103"
                                        ],
                                        "type": "NodePort",
                                        "sessionAffinity": "None",
                                        "externalTrafficPolicy": "Cluster",
                                        "ipFamilies": [
                                            "IPv4"
                                        ],
                                        "ipFamilyPolicy": "SingleStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "ingress-nginx-controller",
                                "id": "ingress-nginx-controller",
                                "meta": {
                                    "name": "ingress-nginx-controller",
                                    "namespace": "ingress-nginx",
                                    "uid": "131827b3-59b1-4f02-9b3a-ea336c99aad6",
                                    "resourceVersion": "317",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"ports\":[{\"name\":\"http\",\"port\":80,\"protocol\":\"TCP\",\"targetPort\":\"http\"},{\"name\":\"https\",\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"https\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"type\":\"NodePort\"}}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::ingress-nginx::ingress-nginx-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx-controller"
                            },
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-controller-admission",
                                        "namespace": "ingress-nginx",
                                        "uid": "cfbf30cb-8675-4a94-ac4f-8f780c1cb120",
                                        "resourceVersion": "313",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller-admission\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"ports\":[{\"name\":\"https-webhook\",\"port\":443,\"targetPort\":\"webhook\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"type\":\"ClusterIP\"}}\n"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "https-webhook",
                                                "protocol": "TCP",
                                                "port": 443,
                                                "targetPort": "webhook"
                                            }
                                        ],
                                        "selector": {
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "clusterIP": "10.103.199.120",
                                        "clusterIPs": [
                                            "10.103.199.120"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None",
                                        "ipFamilies": [
                                            "IPv4"
                                        ],
                                        "ipFamilyPolicy": "SingleStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "ingress-nginx-controller-admission",
                                "id": "ingress-nginx-controller-admission",
                                "meta": {
                                    "name": "ingress-nginx-controller-admission",
                                    "namespace": "ingress-nginx",
                                    "uid": "cfbf30cb-8675-4a94-ac4f-8f780c1cb120",
                                    "resourceVersion": "313",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-controller-admission\",\"namespace\":\"ingress-nginx\"},\"spec\":{\"ports\":[{\"name\":\"https-webhook\",\"port\":443,\"targetPort\":\"webhook\"}],\"selector\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"type\":\"ClusterIP\"}}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::ingress-nginx::ingress-nginx-controller-admission",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx-controller-admission"
                            },
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kube-dns",
                                        "namespace": "kube-system",
                                        "uid": "46edf7b1-f7b3-417a-8aa9-c4b2d60472c6",
                                        "resourceVersion": "259",
                                        "creationTimestamp": "2021-08-23T13:15:22Z",
                                        "labels": {
                                            "k8s-app": "kube-dns",
                                            "kubernetes.io/cluster-service": "true",
                                            "kubernetes.io/name": "CoreDNS"
                                        },
                                        "annotations": {
                                            "prometheus.io/port": "9153",
                                            "prometheus.io/scrape": "true"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "dns",
                                                "protocol": "UDP",
                                                "port": 53,
                                                "targetPort": 53
                                            },
                                            {
                                                "name": "dns-tcp",
                                                "protocol": "TCP",
                                                "port": 53,
                                                "targetPort": 53
                                            },
                                            {
                                                "name": "metrics",
                                                "protocol": "TCP",
                                                "port": 9153,
                                                "targetPort": 9153
                                            }
                                        ],
                                        "selector": {
                                            "k8s-app": "kube-dns"
                                        },
                                        "clusterIP": "10.96.0.10",
                                        "clusterIPs": [
                                            "10.96.0.10"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None",
                                        "ipFamilies": [
                                            "IPv4"
                                        ],
                                        "ipFamilyPolicy": "SingleStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "kube-dns",
                                "id": "kube-dns",
                                "meta": {
                                    "name": "kube-dns",
                                    "namespace": "kube-system",
                                    "uid": "46edf7b1-f7b3-417a-8aa9-c4b2d60472c6",
                                    "resourceVersion": "259",
                                    "creationTimestamp": "2021-08-23T13:15:22Z",
                                    "labels": {
                                        "k8s-app": "kube-dns",
                                        "kubernetes.io/cluster-service": "true",
                                        "kubernetes.io/name": "CoreDNS"
                                    },
                                    "annotations": {
                                        "prometheus.io/port": "9153",
                                        "prometheus.io/scrape": "true"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::kube-system::kube-dns",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::kube-dns"
                            },
                            {
                                "groupType": "::Service",
                                "group": "",
                                "type": "Service",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kubernetes",
                                        "namespace": "default",
                                        "uid": "683ac199-addf-4634-a308-f13fe221dd74",
                                        "resourceVersion": "208",
                                        "creationTimestamp": "2021-08-23T13:15:21Z",
                                        "labels": {
                                            "component": "apiserver",
                                            "provider": "kubernetes"
                                        }
                                    },
                                    "spec": {
                                        "ports": [
                                            {
                                                "name": "https",
                                                "protocol": "TCP",
                                                "port": 443,
                                                "targetPort": 8443
                                            }
                                        ],
                                        "clusterIP": "10.96.0.1",
                                        "clusterIPs": [
                                            "10.96.0.1"
                                        ],
                                        "type": "ClusterIP",
                                        "sessionAffinity": "None",
                                        "ipFamilies": [
                                            "IPv4"
                                        ],
                                        "ipFamilyPolicy": "SingleStack"
                                    },
                                    "status": {
                                        "loadBalancer": {}
                                    }
                                },
                                "name": "kubernetes",
                                "id": "kubernetes",
                                "meta": {
                                    "name": "kubernetes",
                                    "namespace": "default",
                                    "uid": "683ac199-addf-4634-a308-f13fe221dd74",
                                    "resourceVersion": "208",
                                    "creationTimestamp": "2021-08-23T13:15:21Z",
                                    "labels": {
                                        "component": "apiserver",
                                        "provider": "kubernetes"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::Service::default::kubernetes",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "default::kubernetes"
                            }
                        ],
                        "groupType": "::Service",
                        "type": "Service",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "attachdetach-controller",
                                        "namespace": "kube-system",
                                        "uid": "dfe9f070-569a-4436-a29b-106e3e1f55cf",
                                        "resourceVersion": "400",
                                        "creationTimestamp": "2021-08-23T13:15:34Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "attachdetach-controller-token-9dqvh"
                                        }
                                    ]
                                },
                                "name": "attachdetach-controller",
                                "id": "attachdetach-controller",
                                "meta": {
                                    "name": "attachdetach-controller",
                                    "namespace": "kube-system",
                                    "uid": "dfe9f070-569a-4436-a29b-106e3e1f55cf",
                                    "resourceVersion": "400",
                                    "creationTimestamp": "2021-08-23T13:15:34Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "attachdetach-controller-token-9dqvh",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::attachdetach-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::attachdetach-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "bootstrap-signer",
                                        "namespace": "kube-system",
                                        "uid": "64274644-4965-4c9d-8288-71341dcc255d",
                                        "resourceVersion": "355",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "bootstrap-signer-token-42fsm"
                                        }
                                    ]
                                },
                                "name": "bootstrap-signer",
                                "id": "bootstrap-signer",
                                "meta": {
                                    "name": "bootstrap-signer",
                                    "namespace": "kube-system",
                                    "uid": "64274644-4965-4c9d-8288-71341dcc255d",
                                    "resourceVersion": "355",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "bootstrap-signer-token-42fsm",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::bootstrap-signer",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::bootstrap-signer"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager",
                                        "namespace": "cert-manager",
                                        "uid": "92eb7a94-95ea-4de4-b80b-07aac37d9378",
                                        "resourceVersion": "1249",
                                        "creationTimestamp": "2021-08-23T13:22:54Z",
                                        "labels": {
                                            "app": "cert-manager",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cert-manager"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "secrets": [
                                        {
                                            "name": "cert-manager-token-n6h6r"
                                        }
                                    ],
                                    "automountServiceAccountToken": true
                                },
                                "name": "cert-manager",
                                "id": "cert-manager",
                                "meta": {
                                    "name": "cert-manager",
                                    "namespace": "cert-manager",
                                    "uid": "92eb7a94-95ea-4de4-b80b-07aac37d9378",
                                    "resourceVersion": "1249",
                                    "creationTimestamp": "2021-08-23T13:22:54Z",
                                    "labels": {
                                        "app": "cert-manager",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cert-manager"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "cert-manager",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "cert-manager-token-n6h6r",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::cert-manager::cert-manager",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager::cert-manager"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-cainjector",
                                        "namespace": "cert-manager",
                                        "uid": "37ba63f4-b5c9-49f8-89e6-a9dedf9ef72b",
                                        "resourceVersion": "1229",
                                        "creationTimestamp": "2021-08-23T13:22:54Z",
                                        "labels": {
                                            "app": "cainjector",
                                            "app.kubernetes.io/component": "cainjector",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "cainjector"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-cainjector",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "secrets": [
                                        {
                                            "name": "cert-manager-cainjector-token-qstpj"
                                        }
                                    ],
                                    "automountServiceAccountToken": true
                                },
                                "name": "cert-manager-cainjector",
                                "id": "cert-manager-cainjector",
                                "meta": {
                                    "name": "cert-manager-cainjector",
                                    "namespace": "cert-manager",
                                    "uid": "37ba63f4-b5c9-49f8-89e6-a9dedf9ef72b",
                                    "resourceVersion": "1229",
                                    "creationTimestamp": "2021-08-23T13:22:54Z",
                                    "labels": {
                                        "app": "cainjector",
                                        "app.kubernetes.io/component": "cainjector",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "cainjector"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-cainjector",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "cert-manager",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "cert-manager-cainjector-token-qstpj",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::cert-manager::cert-manager-cainjector",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager::cert-manager-cainjector"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-webhook",
                                        "namespace": "cert-manager",
                                        "uid": "c30fce40-61e3-4a3a-a7a3-3d682e9d1dca",
                                        "resourceVersion": "1241",
                                        "creationTimestamp": "2021-08-23T13:22:54Z",
                                        "labels": {
                                            "app": "webhook",
                                            "app.kubernetes.io/component": "webhook",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "webhook"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-webhook",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "secrets": [
                                        {
                                            "name": "cert-manager-webhook-token-zbbvs"
                                        }
                                    ],
                                    "automountServiceAccountToken": true
                                },
                                "name": "cert-manager-webhook",
                                "id": "cert-manager-webhook",
                                "meta": {
                                    "name": "cert-manager-webhook",
                                    "namespace": "cert-manager",
                                    "uid": "c30fce40-61e3-4a3a-a7a3-3d682e9d1dca",
                                    "resourceVersion": "1241",
                                    "creationTimestamp": "2021-08-23T13:22:54Z",
                                    "labels": {
                                        "app": "webhook",
                                        "app.kubernetes.io/component": "webhook",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "webhook"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-webhook",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "cert-manager",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "cert-manager-webhook-token-zbbvs",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::cert-manager::cert-manager-webhook",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager::cert-manager-webhook"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "certificate-controller",
                                        "namespace": "kube-system",
                                        "uid": "6c50a99c-5e92-495a-a9a6-da18921c1623",
                                        "resourceVersion": "233",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "certificate-controller-token-wf6bn"
                                        }
                                    ]
                                },
                                "name": "certificate-controller",
                                "id": "certificate-controller",
                                "meta": {
                                    "name": "certificate-controller",
                                    "namespace": "kube-system",
                                    "uid": "6c50a99c-5e92-495a-a9a6-da18921c1623",
                                    "resourceVersion": "233",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "certificate-controller-token-wf6bn",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::certificate-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::certificate-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "clusterrole-aggregation-controller",
                                        "namespace": "kube-system",
                                        "uid": "e0853017-3791-4d0a-a6e7-19b454bfd1d5",
                                        "resourceVersion": "403",
                                        "creationTimestamp": "2021-08-23T13:15:34Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "clusterrole-aggregation-controller-token-9n8f5"
                                        }
                                    ]
                                },
                                "name": "clusterrole-aggregation-controller",
                                "id": "clusterrole-aggregation-controller",
                                "meta": {
                                    "name": "clusterrole-aggregation-controller",
                                    "namespace": "kube-system",
                                    "uid": "e0853017-3791-4d0a-a6e7-19b454bfd1d5",
                                    "resourceVersion": "403",
                                    "creationTimestamp": "2021-08-23T13:15:34Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "clusterrole-aggregation-controller-token-9n8f5",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::clusterrole-aggregation-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::clusterrole-aggregation-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "coredns",
                                        "namespace": "kube-system",
                                        "uid": "f7f8caac-8086-46be-a01f-c56fa8bd3ace",
                                        "resourceVersion": "256",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "coredns-token-n9l7v"
                                        }
                                    ]
                                },
                                "name": "coredns",
                                "id": "coredns",
                                "meta": {
                                    "name": "coredns",
                                    "namespace": "kube-system",
                                    "uid": "f7f8caac-8086-46be-a01f-c56fa8bd3ace",
                                    "resourceVersion": "256",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "coredns-token-n9l7v",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::coredns",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::coredns"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cronjob-controller",
                                        "namespace": "kube-system",
                                        "uid": "ccb7d719-4db1-430f-b382-cc8b856b01ee",
                                        "resourceVersion": "340",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "cronjob-controller-token-hglcp"
                                        }
                                    ]
                                },
                                "name": "cronjob-controller",
                                "id": "cronjob-controller",
                                "meta": {
                                    "name": "cronjob-controller",
                                    "namespace": "kube-system",
                                    "uid": "ccb7d719-4db1-430f-b382-cc8b856b01ee",
                                    "resourceVersion": "340",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "cronjob-controller-token-hglcp",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::cronjob-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::cronjob-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "daemon-set-controller",
                                        "namespace": "kube-system",
                                        "uid": "6e885dc9-69c3-4d4e-8d71-70bf94d4f463",
                                        "resourceVersion": "348",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "daemon-set-controller-token-4l25k"
                                        }
                                    ]
                                },
                                "name": "daemon-set-controller",
                                "id": "daemon-set-controller",
                                "meta": {
                                    "name": "daemon-set-controller",
                                    "namespace": "kube-system",
                                    "uid": "6e885dc9-69c3-4d4e-8d71-70bf94d4f463",
                                    "resourceVersion": "348",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "daemon-set-controller-token-4l25k",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::daemon-set-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::daemon-set-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "default",
                                        "namespace": "cert-manager",
                                        "uid": "f88e5acc-be72-4648-bebc-19dc41713aa5",
                                        "resourceVersion": "1182",
                                        "creationTimestamp": "2021-08-23T13:22:44Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "default-token-lkh7m"
                                        }
                                    ]
                                },
                                "name": "default",
                                "id": "default",
                                "meta": {
                                    "name": "default",
                                    "namespace": "cert-manager",
                                    "uid": "f88e5acc-be72-4648-bebc-19dc41713aa5",
                                    "resourceVersion": "1182",
                                    "creationTimestamp": "2021-08-23T13:22:44Z"
                                },
                                "isDefault": false,
                                "namespace": "cert-manager",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "default-token-lkh7m",
                                                "namespace": "cert-manager"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::cert-manager::default",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "cert-manager::default"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "default",
                                        "namespace": "default",
                                        "uid": "6ac3625d-b43b-459b-bee3-f0c0b28b93d5",
                                        "resourceVersion": "446",
                                        "creationTimestamp": "2021-08-23T13:15:36Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "default-token-mzgjj"
                                        }
                                    ]
                                },
                                "name": "default",
                                "id": "default",
                                "meta": {
                                    "name": "default",
                                    "namespace": "default",
                                    "uid": "6ac3625d-b43b-459b-bee3-f0c0b28b93d5",
                                    "resourceVersion": "446",
                                    "creationTimestamp": "2021-08-23T13:15:36Z"
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "default-token-mzgjj",
                                                "namespace": "default"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::default::default",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "default::default"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "default",
                                        "namespace": "example",
                                        "uid": "094f3d69-7fde-4359-8271-603d5012760c",
                                        "resourceVersion": "1179",
                                        "creationTimestamp": "2021-08-23T13:22:44Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "default-token-zwjqf"
                                        }
                                    ]
                                },
                                "name": "default",
                                "id": "default",
                                "meta": {
                                    "name": "default",
                                    "namespace": "example",
                                    "uid": "094f3d69-7fde-4359-8271-603d5012760c",
                                    "resourceVersion": "1179",
                                    "creationTimestamp": "2021-08-23T13:22:44Z"
                                },
                                "isDefault": false,
                                "namespace": "example",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "default-token-zwjqf",
                                                "namespace": "example"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::example::default",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "example::default"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "default",
                                        "namespace": "ingress-nginx",
                                        "uid": "94344eef-4057-4932-b15d-fef5cc548ceb",
                                        "resourceVersion": "448",
                                        "creationTimestamp": "2021-08-23T13:15:36Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "default-token-nclwm"
                                        }
                                    ]
                                },
                                "name": "default",
                                "id": "default",
                                "meta": {
                                    "name": "default",
                                    "namespace": "ingress-nginx",
                                    "uid": "94344eef-4057-4932-b15d-fef5cc548ceb",
                                    "resourceVersion": "448",
                                    "creationTimestamp": "2021-08-23T13:15:36Z"
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "default-token-nclwm",
                                                "namespace": "ingress-nginx"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::ingress-nginx::default",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::default"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "default",
                                        "namespace": "kube-node-lease",
                                        "uid": "a0492af4-4ad8-40af-b7ea-d71087acc7eb",
                                        "resourceVersion": "444",
                                        "creationTimestamp": "2021-08-23T13:15:36Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "default-token-45mrg"
                                        }
                                    ]
                                },
                                "name": "default",
                                "id": "default",
                                "meta": {
                                    "name": "default",
                                    "namespace": "kube-node-lease",
                                    "uid": "a0492af4-4ad8-40af-b7ea-d71087acc7eb",
                                    "resourceVersion": "444",
                                    "creationTimestamp": "2021-08-23T13:15:36Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-node-lease",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "default-token-45mrg",
                                                "namespace": "kube-node-lease"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-node-lease::default",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-node-lease::default"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "default",
                                        "namespace": "kube-public",
                                        "uid": "e7a95e0d-aeea-4ae0-9dd0-0148640732a3",
                                        "resourceVersion": "443",
                                        "creationTimestamp": "2021-08-23T13:15:36Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "default-token-6r9b5"
                                        }
                                    ]
                                },
                                "name": "default",
                                "id": "default",
                                "meta": {
                                    "name": "default",
                                    "namespace": "kube-public",
                                    "uid": "e7a95e0d-aeea-4ae0-9dd0-0148640732a3",
                                    "resourceVersion": "443",
                                    "creationTimestamp": "2021-08-23T13:15:36Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-public",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "default-token-6r9b5",
                                                "namespace": "kube-public"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-public::default",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-public::default"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "default",
                                        "namespace": "kube-system",
                                        "uid": "f01d7c21-2848-4316-9d5b-b6ce86c2e800",
                                        "resourceVersion": "438",
                                        "creationTimestamp": "2021-08-23T13:15:36Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "default-token-qqbz2"
                                        }
                                    ]
                                },
                                "name": "default",
                                "id": "default",
                                "meta": {
                                    "name": "default",
                                    "namespace": "kube-system",
                                    "uid": "f01d7c21-2848-4316-9d5b-b6ce86c2e800",
                                    "resourceVersion": "438",
                                    "creationTimestamp": "2021-08-23T13:15:36Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "default-token-qqbz2",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::default",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::default"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "deployment-controller",
                                        "namespace": "kube-system",
                                        "uid": "ae5046c6-8c86-41fd-9330-bc0fe26d42b3",
                                        "resourceVersion": "381",
                                        "creationTimestamp": "2021-08-23T13:15:33Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "deployment-controller-token-hgvtk"
                                        }
                                    ]
                                },
                                "name": "deployment-controller",
                                "id": "deployment-controller",
                                "meta": {
                                    "name": "deployment-controller",
                                    "namespace": "kube-system",
                                    "uid": "ae5046c6-8c86-41fd-9330-bc0fe26d42b3",
                                    "resourceVersion": "381",
                                    "creationTimestamp": "2021-08-23T13:15:33Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "deployment-controller-token-hgvtk",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::deployment-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::deployment-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "disruption-controller",
                                        "namespace": "kube-system",
                                        "uid": "77cc31f2-12a0-4edc-8b75-e78d7d9bdca0",
                                        "resourceVersion": "352",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "disruption-controller-token-nfn2x"
                                        }
                                    ]
                                },
                                "name": "disruption-controller",
                                "id": "disruption-controller",
                                "meta": {
                                    "name": "disruption-controller",
                                    "namespace": "kube-system",
                                    "uid": "77cc31f2-12a0-4edc-8b75-e78d7d9bdca0",
                                    "resourceVersion": "352",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "disruption-controller-token-nfn2x",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::disruption-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::disruption-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "endpoint-controller",
                                        "namespace": "kube-system",
                                        "uid": "b27aff08-e856-4cbb-b8fd-7ae63460f2d6",
                                        "resourceVersion": "360",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "endpoint-controller-token-sk48p"
                                        }
                                    ]
                                },
                                "name": "endpoint-controller",
                                "id": "endpoint-controller",
                                "meta": {
                                    "name": "endpoint-controller",
                                    "namespace": "kube-system",
                                    "uid": "b27aff08-e856-4cbb-b8fd-7ae63460f2d6",
                                    "resourceVersion": "360",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "endpoint-controller-token-sk48p",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::endpoint-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::endpoint-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "endpointslice-controller",
                                        "namespace": "kube-system",
                                        "uid": "1f41c4a0-0e74-4a88-9161-9a23947d8ca9",
                                        "resourceVersion": "337",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "endpointslice-controller-token-xtngp"
                                        }
                                    ]
                                },
                                "name": "endpointslice-controller",
                                "id": "endpointslice-controller",
                                "meta": {
                                    "name": "endpointslice-controller",
                                    "namespace": "kube-system",
                                    "uid": "1f41c4a0-0e74-4a88-9161-9a23947d8ca9",
                                    "resourceVersion": "337",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "endpointslice-controller-token-xtngp",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::endpointslice-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::endpointslice-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "endpointslicemirroring-controller",
                                        "namespace": "kube-system",
                                        "uid": "5b381ac8-2db0-493e-a358-a29d23231068",
                                        "resourceVersion": "369",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "endpointslicemirroring-controller-token-2plvq"
                                        }
                                    ]
                                },
                                "name": "endpointslicemirroring-controller",
                                "id": "endpointslicemirroring-controller",
                                "meta": {
                                    "name": "endpointslicemirroring-controller",
                                    "namespace": "kube-system",
                                    "uid": "5b381ac8-2db0-493e-a358-a29d23231068",
                                    "resourceVersion": "369",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "endpointslicemirroring-controller-token-2plvq",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::endpointslicemirroring-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::endpointslicemirroring-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ephemeral-volume-controller",
                                        "namespace": "kube-system",
                                        "uid": "945abda1-b82e-4fed-b632-da5097fded1d",
                                        "resourceVersion": "415",
                                        "creationTimestamp": "2021-08-23T13:15:35Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "ephemeral-volume-controller-token-2x9z4"
                                        }
                                    ]
                                },
                                "name": "ephemeral-volume-controller",
                                "id": "ephemeral-volume-controller",
                                "meta": {
                                    "name": "ephemeral-volume-controller",
                                    "namespace": "kube-system",
                                    "uid": "945abda1-b82e-4fed-b632-da5097fded1d",
                                    "resourceVersion": "415",
                                    "creationTimestamp": "2021-08-23T13:15:35Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "ephemeral-volume-controller-token-2x9z4",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::ephemeral-volume-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::ephemeral-volume-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "expand-controller",
                                        "namespace": "kube-system",
                                        "uid": "94fc21c8-8dfe-41a6-a9c2-ae58e0082c3f",
                                        "resourceVersion": "387",
                                        "creationTimestamp": "2021-08-23T13:15:33Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "expand-controller-token-sz5h6"
                                        }
                                    ]
                                },
                                "name": "expand-controller",
                                "id": "expand-controller",
                                "meta": {
                                    "name": "expand-controller",
                                    "namespace": "kube-system",
                                    "uid": "94fc21c8-8dfe-41a6-a9c2-ae58e0082c3f",
                                    "resourceVersion": "387",
                                    "creationTimestamp": "2021-08-23T13:15:33Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "expand-controller-token-sz5h6",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::expand-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::expand-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "generic-garbage-collector",
                                        "namespace": "kube-system",
                                        "uid": "56d34c0f-5a67-483e-97e3-8c5ae4111220",
                                        "resourceVersion": "409",
                                        "creationTimestamp": "2021-08-23T13:15:34Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "generic-garbage-collector-token-xwcsb"
                                        }
                                    ]
                                },
                                "name": "generic-garbage-collector",
                                "id": "generic-garbage-collector",
                                "meta": {
                                    "name": "generic-garbage-collector",
                                    "namespace": "kube-system",
                                    "uid": "56d34c0f-5a67-483e-97e3-8c5ae4111220",
                                    "resourceVersion": "409",
                                    "creationTimestamp": "2021-08-23T13:15:34Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "generic-garbage-collector-token-xwcsb",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::generic-garbage-collector",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::generic-garbage-collector"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "horizontal-pod-autoscaler",
                                        "namespace": "kube-system",
                                        "uid": "1ead8465-474b-4d66-acce-7b28dafd937e",
                                        "resourceVersion": "372",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "horizontal-pod-autoscaler-token-w4msv"
                                        }
                                    ]
                                },
                                "name": "horizontal-pod-autoscaler",
                                "id": "horizontal-pod-autoscaler",
                                "meta": {
                                    "name": "horizontal-pod-autoscaler",
                                    "namespace": "kube-system",
                                    "uid": "1ead8465-474b-4d66-acce-7b28dafd937e",
                                    "resourceVersion": "372",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "horizontal-pod-autoscaler-token-w4msv",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::horizontal-pod-autoscaler",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::horizontal-pod-autoscaler"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx",
                                        "namespace": "ingress-nginx",
                                        "uid": "dd061b38-3c7b-4a7e-af71-1cab9b0875f1",
                                        "resourceVersion": "301",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "controller",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\",\"namespace\":\"ingress-nginx\"}}\n"
                                        }
                                    },
                                    "secrets": [
                                        {
                                            "name": "ingress-nginx-token-chxmw"
                                        }
                                    ]
                                },
                                "name": "ingress-nginx",
                                "id": "ingress-nginx",
                                "meta": {
                                    "name": "ingress-nginx",
                                    "namespace": "ingress-nginx",
                                    "uid": "dd061b38-3c7b-4a7e-af71-1cab9b0875f1",
                                    "resourceVersion": "301",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "controller",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx\",\"namespace\":\"ingress-nginx\"}}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "ingress-nginx-token-chxmw",
                                                "namespace": "ingress-nginx"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::ingress-nginx::ingress-nginx",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-admission",
                                        "namespace": "ingress-nginx",
                                        "uid": "c77a39dc-aa05-46a2-bcf7-86408bdeb4b3",
                                        "resourceVersion": "308",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "admission-webhook",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\",\"namespace\":\"ingress-nginx\"}}\n"
                                        }
                                    },
                                    "secrets": [
                                        {
                                            "name": "ingress-nginx-admission-token-s2lbk"
                                        }
                                    ]
                                },
                                "name": "ingress-nginx-admission",
                                "id": "ingress-nginx-admission",
                                "meta": {
                                    "name": "ingress-nginx-admission",
                                    "namespace": "ingress-nginx",
                                    "uid": "c77a39dc-aa05-46a2-bcf7-86408bdeb4b3",
                                    "resourceVersion": "308",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "admission-webhook",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\",\"namespace\":\"ingress-nginx\"}}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "ingress-nginx",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "ingress-nginx-admission-token-s2lbk",
                                                "namespace": "ingress-nginx"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::ingress-nginx::ingress-nginx-admission",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx::ingress-nginx-admission"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "job-controller",
                                        "namespace": "kube-system",
                                        "uid": "72c49bd7-ccec-43c2-9155-0c201db7454f",
                                        "resourceVersion": "346",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "job-controller-token-hlbfb"
                                        }
                                    ]
                                },
                                "name": "job-controller",
                                "id": "job-controller",
                                "meta": {
                                    "name": "job-controller",
                                    "namespace": "kube-system",
                                    "uid": "72c49bd7-ccec-43c2-9155-0c201db7454f",
                                    "resourceVersion": "346",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "job-controller-token-hlbfb",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::job-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::job-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "kube-proxy",
                                        "namespace": "kube-system",
                                        "uid": "e131cae0-4eaa-4cd5-91c3-db4918020d60",
                                        "resourceVersion": "262",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "kube-proxy-token-smhcs"
                                        }
                                    ]
                                },
                                "name": "kube-proxy",
                                "id": "kube-proxy",
                                "meta": {
                                    "name": "kube-proxy",
                                    "namespace": "kube-system",
                                    "uid": "e131cae0-4eaa-4cd5-91c3-db4918020d60",
                                    "resourceVersion": "262",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "kube-proxy-token-smhcs",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::kube-proxy",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::kube-proxy"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "namespace-controller",
                                        "namespace": "kube-system",
                                        "uid": "9f02b504-f52a-4366-b219-42f3f675d3b1",
                                        "resourceVersion": "239",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "namespace-controller-token-pktzg"
                                        }
                                    ]
                                },
                                "name": "namespace-controller",
                                "id": "namespace-controller",
                                "meta": {
                                    "name": "namespace-controller",
                                    "namespace": "kube-system",
                                    "uid": "9f02b504-f52a-4366-b219-42f3f675d3b1",
                                    "resourceVersion": "239",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "namespace-controller-token-pktzg",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::namespace-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::namespace-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "node-controller",
                                        "namespace": "kube-system",
                                        "uid": "56311653-dad5-40b3-af8f-12dc5f1b8f2c",
                                        "resourceVersion": "238",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "node-controller-token-tvrw4"
                                        }
                                    ]
                                },
                                "name": "node-controller",
                                "id": "node-controller",
                                "meta": {
                                    "name": "node-controller",
                                    "namespace": "kube-system",
                                    "uid": "56311653-dad5-40b3-af8f-12dc5f1b8f2c",
                                    "resourceVersion": "238",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "node-controller-token-tvrw4",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::node-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::node-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "persistent-volume-binder",
                                        "namespace": "kube-system",
                                        "uid": "eca0e922-38f7-4bd1-839a-db726da9b0f8",
                                        "resourceVersion": "375",
                                        "creationTimestamp": "2021-08-23T13:15:33Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "persistent-volume-binder-token-ffrnl"
                                        }
                                    ]
                                },
                                "name": "persistent-volume-binder",
                                "id": "persistent-volume-binder",
                                "meta": {
                                    "name": "persistent-volume-binder",
                                    "namespace": "kube-system",
                                    "uid": "eca0e922-38f7-4bd1-839a-db726da9b0f8",
                                    "resourceVersion": "375",
                                    "creationTimestamp": "2021-08-23T13:15:33Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "persistent-volume-binder-token-ffrnl",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::persistent-volume-binder",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::persistent-volume-binder"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "pod-garbage-collector",
                                        "namespace": "kube-system",
                                        "uid": "ad149290-b056-4805-9ed7-2ad2fe8ff35f",
                                        "resourceVersion": "242",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "pod-garbage-collector-token-7lddb"
                                        }
                                    ]
                                },
                                "name": "pod-garbage-collector",
                                "id": "pod-garbage-collector",
                                "meta": {
                                    "name": "pod-garbage-collector",
                                    "namespace": "kube-system",
                                    "uid": "ad149290-b056-4805-9ed7-2ad2fe8ff35f",
                                    "resourceVersion": "242",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "pod-garbage-collector-token-7lddb",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::pod-garbage-collector",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::pod-garbage-collector"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "pv-protection-controller",
                                        "namespace": "kube-system",
                                        "uid": "00bb5385-3479-4dad-9522-d8ebb7cab0c9",
                                        "resourceVersion": "412",
                                        "creationTimestamp": "2021-08-23T13:15:35Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "pv-protection-controller-token-6z9qc"
                                        }
                                    ]
                                },
                                "name": "pv-protection-controller",
                                "id": "pv-protection-controller",
                                "meta": {
                                    "name": "pv-protection-controller",
                                    "namespace": "kube-system",
                                    "uid": "00bb5385-3479-4dad-9522-d8ebb7cab0c9",
                                    "resourceVersion": "412",
                                    "creationTimestamp": "2021-08-23T13:15:35Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "pv-protection-controller-token-6z9qc",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::pv-protection-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::pv-protection-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "pvc-protection-controller",
                                        "namespace": "kube-system",
                                        "uid": "d4a2bbf6-b5da-4121-9632-4d7316f22a73",
                                        "resourceVersion": "406",
                                        "creationTimestamp": "2021-08-23T13:15:34Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "pvc-protection-controller-token-8lwh9"
                                        }
                                    ]
                                },
                                "name": "pvc-protection-controller",
                                "id": "pvc-protection-controller",
                                "meta": {
                                    "name": "pvc-protection-controller",
                                    "namespace": "kube-system",
                                    "uid": "d4a2bbf6-b5da-4121-9632-4d7316f22a73",
                                    "resourceVersion": "406",
                                    "creationTimestamp": "2021-08-23T13:15:34Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "pvc-protection-controller-token-8lwh9",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::pvc-protection-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::pvc-protection-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "replicaset-controller",
                                        "namespace": "kube-system",
                                        "uid": "a8deea78-61d5-40bc-aa56-ae940ed4b9c2",
                                        "resourceVersion": "363",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "replicaset-controller-token-2dgxc"
                                        }
                                    ]
                                },
                                "name": "replicaset-controller",
                                "id": "replicaset-controller",
                                "meta": {
                                    "name": "replicaset-controller",
                                    "namespace": "kube-system",
                                    "uid": "a8deea78-61d5-40bc-aa56-ae940ed4b9c2",
                                    "resourceVersion": "363",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "replicaset-controller-token-2dgxc",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::replicaset-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::replicaset-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "replication-controller",
                                        "namespace": "kube-system",
                                        "uid": "181a27a0-3e9f-481a-a3d1-44c33da508bd",
                                        "resourceVersion": "234",
                                        "creationTimestamp": "2021-08-23T13:15:22Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "replication-controller-token-2d8w7"
                                        }
                                    ]
                                },
                                "name": "replication-controller",
                                "id": "replication-controller",
                                "meta": {
                                    "name": "replication-controller",
                                    "namespace": "kube-system",
                                    "uid": "181a27a0-3e9f-481a-a3d1-44c33da508bd",
                                    "resourceVersion": "234",
                                    "creationTimestamp": "2021-08-23T13:15:22Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "replication-controller-token-2d8w7",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::replication-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::replication-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "resourcequota-controller",
                                        "namespace": "kube-system",
                                        "uid": "98837921-2008-435a-bd2d-7162003088b9",
                                        "resourceVersion": "391",
                                        "creationTimestamp": "2021-08-23T13:15:33Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "resourcequota-controller-token-lcshs"
                                        }
                                    ]
                                },
                                "name": "resourcequota-controller",
                                "id": "resourcequota-controller",
                                "meta": {
                                    "name": "resourcequota-controller",
                                    "namespace": "kube-system",
                                    "uid": "98837921-2008-435a-bd2d-7162003088b9",
                                    "resourceVersion": "391",
                                    "creationTimestamp": "2021-08-23T13:15:33Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "resourcequota-controller-token-lcshs",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::resourcequota-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::resourcequota-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "root-ca-cert-publisher",
                                        "namespace": "kube-system",
                                        "uid": "fc211c35-98cd-4e7b-9977-a999aa889529",
                                        "resourceVersion": "358",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "root-ca-cert-publisher-token-2p8gp"
                                        }
                                    ]
                                },
                                "name": "root-ca-cert-publisher",
                                "id": "root-ca-cert-publisher",
                                "meta": {
                                    "name": "root-ca-cert-publisher",
                                    "namespace": "kube-system",
                                    "uid": "fc211c35-98cd-4e7b-9977-a999aa889529",
                                    "resourceVersion": "358",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "root-ca-cert-publisher-token-2p8gp",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::root-ca-cert-publisher",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::root-ca-cert-publisher"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "service-account-controller",
                                        "namespace": "kube-system",
                                        "uid": "0f163256-a42d-4a7c-9c3d-4be3180cda13",
                                        "resourceVersion": "378",
                                        "creationTimestamp": "2021-08-23T13:15:33Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "service-account-controller-token-879vr"
                                        }
                                    ]
                                },
                                "name": "service-account-controller",
                                "id": "service-account-controller",
                                "meta": {
                                    "name": "service-account-controller",
                                    "namespace": "kube-system",
                                    "uid": "0f163256-a42d-4a7c-9c3d-4be3180cda13",
                                    "resourceVersion": "378",
                                    "creationTimestamp": "2021-08-23T13:15:33Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "service-account-controller-token-879vr",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::service-account-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::service-account-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "service-controller",
                                        "namespace": "kube-system",
                                        "uid": "0d537965-4acf-47b3-83ef-7c1f10ab75f0",
                                        "resourceVersion": "343",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "service-controller-token-8ptrg"
                                        }
                                    ]
                                },
                                "name": "service-controller",
                                "id": "service-controller",
                                "meta": {
                                    "name": "service-controller",
                                    "namespace": "kube-system",
                                    "uid": "0d537965-4acf-47b3-83ef-7c1f10ab75f0",
                                    "resourceVersion": "343",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "service-controller-token-8ptrg",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::service-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::service-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "statefulset-controller",
                                        "namespace": "kube-system",
                                        "uid": "f5f35b9d-6a9c-4153-8dde-efeca69bb880",
                                        "resourceVersion": "418",
                                        "creationTimestamp": "2021-08-23T13:15:35Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "statefulset-controller-token-ljxst"
                                        }
                                    ]
                                },
                                "name": "statefulset-controller",
                                "id": "statefulset-controller",
                                "meta": {
                                    "name": "statefulset-controller",
                                    "namespace": "kube-system",
                                    "uid": "f5f35b9d-6a9c-4153-8dde-efeca69bb880",
                                    "resourceVersion": "418",
                                    "creationTimestamp": "2021-08-23T13:15:35Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "statefulset-controller-token-ljxst",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::statefulset-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::statefulset-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "storage-provisioner",
                                        "namespace": "kube-system",
                                        "uid": "0bf20a49-0a31-4961-b65e-8a73f36783e2",
                                        "resourceVersion": "284",
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"storage-provisioner\",\"namespace\":\"kube-system\"}}\n"
                                        }
                                    },
                                    "secrets": [
                                        {
                                            "name": "storage-provisioner-token-pczsj"
                                        }
                                    ]
                                },
                                "name": "storage-provisioner",
                                "id": "storage-provisioner",
                                "meta": {
                                    "name": "storage-provisioner",
                                    "namespace": "kube-system",
                                    "uid": "0bf20a49-0a31-4961-b65e-8a73f36783e2",
                                    "resourceVersion": "284",
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\"},\"name\":\"storage-provisioner\",\"namespace\":\"kube-system\"}}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "storage-provisioner-token-pczsj",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::storage-provisioner",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::storage-provisioner"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "token-cleaner",
                                        "namespace": "kube-system",
                                        "uid": "ba36cd43-ab21-43c1-81ae-4c9352718918",
                                        "resourceVersion": "397",
                                        "creationTimestamp": "2021-08-23T13:15:34Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "token-cleaner-token-624wf"
                                        }
                                    ]
                                },
                                "name": "token-cleaner",
                                "id": "token-cleaner",
                                "meta": {
                                    "name": "token-cleaner",
                                    "namespace": "kube-system",
                                    "uid": "ba36cd43-ab21-43c1-81ae-4c9352718918",
                                    "resourceVersion": "397",
                                    "creationTimestamp": "2021-08-23T13:15:34Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "token-cleaner-token-624wf",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::token-cleaner",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::token-cleaner"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ttl-after-finished-controller",
                                        "namespace": "kube-system",
                                        "uid": "c6751cb4-c943-4b53-9db2-4943dae17979",
                                        "resourceVersion": "366",
                                        "creationTimestamp": "2021-08-23T13:15:32Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "ttl-after-finished-controller-token-qkfxs"
                                        }
                                    ]
                                },
                                "name": "ttl-after-finished-controller",
                                "id": "ttl-after-finished-controller",
                                "meta": {
                                    "name": "ttl-after-finished-controller",
                                    "namespace": "kube-system",
                                    "uid": "c6751cb4-c943-4b53-9db2-4943dae17979",
                                    "resourceVersion": "366",
                                    "creationTimestamp": "2021-08-23T13:15:32Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "ttl-after-finished-controller-token-qkfxs",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::ttl-after-finished-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::ttl-after-finished-controller"
                            },
                            {
                                "groupType": "::ServiceAccount",
                                "group": "",
                                "type": "ServiceAccount",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ttl-controller",
                                        "namespace": "kube-system",
                                        "uid": "41a808a6-aa57-454d-ac24-adf829326878",
                                        "resourceVersion": "394",
                                        "creationTimestamp": "2021-08-23T13:15:34Z"
                                    },
                                    "secrets": [
                                        {
                                            "name": "ttl-controller-token-hwlv8"
                                        }
                                    ]
                                },
                                "name": "ttl-controller",
                                "id": "ttl-controller",
                                "meta": {
                                    "name": "ttl-controller",
                                    "namespace": "kube-system",
                                    "uid": "41a808a6-aa57-454d-ac24-adf829326878",
                                    "resourceVersion": "394",
                                    "creationTimestamp": "2021-08-23T13:15:34Z"
                                },
                                "isDefault": false,
                                "namespace": "kube-system",
                                "dependencies": [
                                    {
                                        "type": "Secret",
                                        "ids": [
                                            {
                                                "name": "ttl-controller-token-hwlv8",
                                                "namespace": "kube-system"
                                            }
                                        ],
                                        "providerName": "k8s",
                                        "groupType": "undefined::Secret"
                                    }
                                ],
                                "show": true,
                                "uri": "k8s::ServiceAccount::kube-system::ttl-controller",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "kube-system::ttl-controller"
                            }
                        ],
                        "groupType": "::ServiceAccount",
                        "type": "ServiceAccount",
                        "group": "",
                        "providerName": "k8s"
                    },
                    {
                        "resources": [
                            {
                                "groupType": "::ValidatingWebhookConfiguration",
                                "group": "",
                                "type": "ValidatingWebhookConfiguration",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "cert-manager-webhook",
                                        "uid": "523f7e65-e20a-427c-b347-74fea75b08b4",
                                        "resourceVersion": "1301",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-23T13:22:44Z",
                                        "labels": {
                                            "app": "webhook",
                                            "app.kubernetes.io/component": "webhook",
                                            "app.kubernetes.io/instance": "cert-manager",
                                            "app.kubernetes.io/name": "webhook"
                                        },
                                        "annotations": {
                                            "Name": "cert-manager-webhook",
                                            "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                            "gc-created-by-provider": "k8s",
                                            "gc-managed-by": "grucloud",
                                            "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                            "gc-stage": "dev"
                                        }
                                    },
                                    "webhooks": [
                                        {
                                            "name": "webhook.cert-manager.io",
                                            "clientConfig": {
                                                "service": {
                                                    "namespace": "cert-manager",
                                                    "name": "cert-manager-webhook",
                                                    "path": "/validate",
                                                    "port": 443
                                                },
                                                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQU1WaXFjcXFEVVJlcTBIYjdGSXBIREl3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpFd09ESXpNVE15TXpFMApXaGNOTWpJd09ESXpNVE15TXpFMFdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJJY2ZEL3ovc1Yvd09SM1V1MzNxR3NUYk9SS3gKYjVQdXJiVXM5dy91d3RibVJwVlJuMVp4dVFXSGsrRUltbVNmdEQzbTE0ZnZtLzJSN1F2bXEycHI1UURSRHRrcgo3Uy95ZTdHbXFhaGZqQnpqbEZSV0E5SU9sYTVSWDZBd2JPRVpLNk5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZHSUJoQ3paSyswanljRU5GbFpVZGh1K0tlN0sKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFERkxBcURPQnpRYkp5WjYzWlFVQktJcGh5Mm9qbnVpQVA2NFgreAo4aElMNTMvOFBJbDI5MDg0REVqSTU4cUp1NUlDTVFDNGRmVm1XOXN3bGtVVTRlU0JKdVgyZ1k4WjFNR1VweEhCCmM4cmNLZEFkVHkrbUVCVnpqQUxqc0Z4dUxTSmZkS2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                                            },
                                            "rules": [
                                                {
                                                    "operations": [
                                                        "CREATE",
                                                        "UPDATE"
                                                    ],
                                                    "apiGroups": [
                                                        "cert-manager.io",
                                                        "acme.cert-manager.io"
                                                    ],
                                                    "apiVersions": [
                                                        "*"
                                                    ],
                                                    "resources": [
                                                        "*/*"
                                                    ],
                                                    "scope": "*"
                                                }
                                            ],
                                            "failurePolicy": "Fail",
                                            "matchPolicy": "Equivalent",
                                            "namespaceSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "cert-manager.io/disable-validation",
                                                        "operator": "NotIn",
                                                        "values": [
                                                            "true"
                                                        ]
                                                    },
                                                    {
                                                        "key": "name",
                                                        "operator": "NotIn",
                                                        "values": [
                                                            "cert-manager"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "objectSelector": {},
                                            "sideEffects": "None",
                                            "timeoutSeconds": 10,
                                            "admissionReviewVersions": [
                                                "v1",
                                                "v1beta1"
                                            ]
                                        }
                                    ]
                                },
                                "name": "cert-manager-webhook",
                                "id": "cert-manager-webhook",
                                "meta": {
                                    "name": "cert-manager-webhook",
                                    "uid": "523f7e65-e20a-427c-b347-74fea75b08b4",
                                    "resourceVersion": "1301",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-23T13:22:44Z",
                                    "labels": {
                                        "app": "webhook",
                                        "app.kubernetes.io/component": "webhook",
                                        "app.kubernetes.io/instance": "cert-manager",
                                        "app.kubernetes.io/name": "webhook"
                                    },
                                    "annotations": {
                                        "Name": "cert-manager-webhook",
                                        "cert-manager.io/inject-ca-from-secret": "cert-manager/cert-manager-webhook-ca",
                                        "gc-created-by-provider": "k8s",
                                        "gc-managed-by": "grucloud",
                                        "gc-project-name": "@grucloud/example-module-k8s-certmanager",
                                        "gc-stage": "dev"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ValidatingWebhookConfiguration::cert-manager-webhook",
                                "managedByUs": true,
                                "cannotBeDeleted": false,
                                "managedByOther": false,
                                "displayName": "cert-manager-webhook"
                            },
                            {
                                "groupType": "::ValidatingWebhookConfiguration",
                                "group": "",
                                "type": "ValidatingWebhookConfiguration",
                                "providerName": "k8s",
                                "live": {
                                    "metadata": {
                                        "name": "ingress-nginx-admission",
                                        "uid": "1cba18e0-c41e-4df9-a16c-10779f78828e",
                                        "resourceVersion": "582",
                                        "generation": 2,
                                        "creationTimestamp": "2021-08-23T13:15:24Z",
                                        "labels": {
                                            "addonmanager.kubernetes.io/mode": "Reconcile",
                                            "app.kubernetes.io/component": "admission-webhook",
                                            "app.kubernetes.io/instance": "ingress-nginx",
                                            "app.kubernetes.io/name": "ingress-nginx"
                                        },
                                        "annotations": {
                                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"admissionregistration.k8s.io/v1\",\"kind\":\"ValidatingWebhookConfiguration\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\"},\"webhooks\":[{\"admissionReviewVersions\":[\"v1\",\"v1beta1\"],\"clientConfig\":{\"service\":{\"name\":\"ingress-nginx-controller-admission\",\"namespace\":\"ingress-nginx\",\"path\":\"/networking/v1beta1/ingresses\"}},\"failurePolicy\":\"Fail\",\"matchPolicy\":\"Equivalent\",\"name\":\"validate.nginx.ingress.kubernetes.io\",\"rules\":[{\"apiGroups\":[\"networking.k8s.io\"],\"apiVersions\":[\"v1beta1\"],\"operations\":[\"CREATE\",\"UPDATE\"],\"resources\":[\"ingresses\"]}],\"sideEffects\":\"None\"}]}\n"
                                        }
                                    },
                                    "webhooks": [
                                        {
                                            "name": "validate.nginx.ingress.kubernetes.io",
                                            "clientConfig": {
                                                "service": {
                                                    "namespace": "ingress-nginx",
                                                    "name": "ingress-nginx-controller-admission",
                                                    "path": "/networking/v1beta1/ingresses",
                                                    "port": 443
                                                },
                                                "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkVENDQVJ1Z0F3SUJBZ0lRUFZRYjBZaStVZUV3bEluVnNIbzZEakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1J1YVd3eE1DQVhEVEl4TURneU16RXpNVEExTVZvWUR6SXhNakV3TnpNd01UTXhNRFV4V2pBUApNUTB3Q3dZRFZRUUtFd1J1YVd3eE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRWtSZzNiV3VvCnlmNElEWXRLeC9VaVgxSUE3bi9zTDNLMXB2MmhmTkdlTjJyc01pZTFMOTFPY2c1cVBmOTJVNjZMZ0w3Wmx6R1kKYnNaOVI0MHB5TFlwVDZOWE1GVXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRgpCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRlBRWWFORFNJVm9INzNEZytHNGpOZjFICkk5OVZNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNxUGJnOHk3K1EvR2xBYis5U2w0M3g4SUY1bC9GMHpCUE8KVzYrV2RHakpqUUlnRWw0SmhLY09sQjdKT01Jc2NnMDN2c0JoZkU4cVZOMC9Dd0p2VWlGMHRkQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                                            },
                                            "rules": [
                                                {
                                                    "operations": [
                                                        "CREATE",
                                                        "UPDATE"
                                                    ],
                                                    "apiGroups": [
                                                        "networking.k8s.io"
                                                    ],
                                                    "apiVersions": [
                                                        "v1beta1"
                                                    ],
                                                    "resources": [
                                                        "ingresses"
                                                    ],
                                                    "scope": "*"
                                                }
                                            ],
                                            "failurePolicy": "Fail",
                                            "matchPolicy": "Equivalent",
                                            "namespaceSelector": {},
                                            "objectSelector": {},
                                            "sideEffects": "None",
                                            "timeoutSeconds": 10,
                                            "admissionReviewVersions": [
                                                "v1",
                                                "v1beta1"
                                            ]
                                        }
                                    ]
                                },
                                "name": "ingress-nginx-admission",
                                "id": "ingress-nginx-admission",
                                "meta": {
                                    "name": "ingress-nginx-admission",
                                    "uid": "1cba18e0-c41e-4df9-a16c-10779f78828e",
                                    "resourceVersion": "582",
                                    "generation": 2,
                                    "creationTimestamp": "2021-08-23T13:15:24Z",
                                    "labels": {
                                        "addonmanager.kubernetes.io/mode": "Reconcile",
                                        "app.kubernetes.io/component": "admission-webhook",
                                        "app.kubernetes.io/instance": "ingress-nginx",
                                        "app.kubernetes.io/name": "ingress-nginx"
                                    },
                                    "annotations": {
                                        "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"admissionregistration.k8s.io/v1\",\"kind\":\"ValidatingWebhookConfiguration\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app.kubernetes.io/component\":\"admission-webhook\",\"app.kubernetes.io/instance\":\"ingress-nginx\",\"app.kubernetes.io/name\":\"ingress-nginx\"},\"name\":\"ingress-nginx-admission\"},\"webhooks\":[{\"admissionReviewVersions\":[\"v1\",\"v1beta1\"],\"clientConfig\":{\"service\":{\"name\":\"ingress-nginx-controller-admission\",\"namespace\":\"ingress-nginx\",\"path\":\"/networking/v1beta1/ingresses\"}},\"failurePolicy\":\"Fail\",\"matchPolicy\":\"Equivalent\",\"name\":\"validate.nginx.ingress.kubernetes.io\",\"rules\":[{\"apiGroups\":[\"networking.k8s.io\"],\"apiVersions\":[\"v1beta1\"],\"operations\":[\"CREATE\",\"UPDATE\"],\"resources\":[\"ingresses\"]}],\"sideEffects\":\"None\"}]}\n"
                                    }
                                },
                                "isDefault": false,
                                "namespace": "default",
                                "dependencies": [],
                                "show": true,
                                "uri": "k8s::ValidatingWebhookConfiguration::ingress-nginx-admission",
                                "managedByUs": false,
                                "cannotBeDeleted": true,
                                "managedByOther": false,
                                "displayName": "ingress-nginx-admission"
                            }
                        ],
                        "groupType": "::ValidatingWebhookConfiguration",
                        "type": "ValidatingWebhookConfiguration",
                        "group": "",
                        "providerName": "k8s"
                    }
                ]
            }
        ],
        "kind": "livesPerProvider"
    }
}